/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,s,a,i={3100:function(e,t,s){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){void 0===a&&(a=s);var i=Object.getOwnPropertyDescriptor(t,s);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,i)}:function(e,t,s,a){void 0===a&&(a=s),e[a]=t[s]});t.__esModule=!0,t.Stats=t.Result=t.Side=t.Field=t.Move=t.Pokemon=t.calculate=void 0,a(t,s(8766),"calculate"),a(t,s(4801),"Pokemon"),a(t,s(5947),"Move");var i=s(8851);a(t,i,"Field"),a(t,i,"Side"),a(t,s(6314),"Result"),a(t,s(7221),"Stats")},8766:(e,t,s)=>{"use strict";t.__esModule=!0,t.calculate=void 0;var a=s(8851),i=s(2816),r=s(6336),o=s(1442),n=s(3573),l=s(9038),f=[function(){},i.calculateRBYGSC,i.calculateRBYGSC,r.calculateADV,o.calculateDPP,n.calculateBWXY,n.calculateBWXY,l.calculateSMSSSV,l.calculateSMSSSV,l.calculateSMSSSV];t.calculate=function(e,t,s,i,r){return f[e.num](e,t.clone(),s.clone(),i.clone(),r?r.clone():new a.Field)}},7650:function(e,t,s){"use strict";var a,i,r,o,n=this&&this.__generator||function(e,t){var s,a,i,r,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function n(n){return function(l){return function(n){if(s)throw new TypeError("Generator is already executing.");for(;r&&(r=0,n[0]&&(o=0)),o;)try{if(s=1,a&&(i=2&n[0]?a.return:n[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,n[1])).done)return i;switch(a=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,a=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],a=0}finally{s=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},l=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,s=t&&e[t],a=0;if(s)return s.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};t.__esModule=!0,t.Abilities=t.ABILITIES=void 0;var f=s(7094),c=["Air Lock","Arena Trap","Battle Armor","Blaze","Chlorophyll","Clear Body","Cloud Nine","Color Change","Compound Eyes","Cute Charm","Drizzle","Damp","Drought","Early Bird","Effect Spore","Flame Body","Flash Fire","Forecast","Guts","Huge Power","Hustle","Hyper Cutter","Illuminate","Immunity","Inner Focus","Insomnia","Intimidate","Keen Eye","Levitate","Lightning Rod","Limber","Liquid Ooze","Magma Armor","Magnet Pull","Marvel Scale","Minus","Natural Cure","Oblivious","Overgrow","Own Tempo","Pickup","Plus","Poison Point","Pressure","Pure Power","Rain Dish","Rock Head","Rough Skin","Run Away","Sand Stream","Sand Veil","Serene Grace","Shadow Tag","Shed Skin","Shell Armor","Shield Dust","Soundproof","Speed Boost","Static","Stench","Sticky Hold","Sturdy","Suction Cups","Swarm","Swift Swim","Synchronize","Thick Fat","Torrent","Trace","Truant","Vital Spirit","Volt Absorb","Water Absorb","Water Veil","White Smoke","Wonder Guard"],u=c.concat(["Adaptability","Aftermath","Anger Point","Anticipation","Bad Dreams","Download","Dry Skin","Filter","Flower Gift","Forewarn","Frisk","Gluttony","Heatproof","Honey Gather","Hydration","Ice Body","Iron Fist","Klutz","Leaf Guard","Magic Guard","Mold Breaker","Motor Drive","Mountaineer","Multitype","No Guard","Normalize","Persistent","Poison Heal","Quick Feet","Rebound","Reckless","Rivalry","Scrappy","Simple","Skill Link","Slow Start","Sniper","Snow Cloak","Snow Warning","Solar Power","Solid Rock","Stall","Steadfast","Storm Drain","Super Luck","Tangled Feet","Technician","Tinted Lens","Unaware","Unburden"]),p=u.concat(["Analytic","Big Pecks","Contrary","Cursed Body","Defeatist","Defiant","Flare Boost","Friend Guard","Harvest","Healer","Heavy Metal","Illusion","Imposter","Infiltrator","Iron Barbs","Light Metal","Justified","Magic Bounce","Moody","Moxie","Multiscale","Mummy","Overcoat","Pickpocket","Poison Touch","Prankster","Rattled","Regenerator","Sand Force","Sand Rush","Sap Sipper","Sheer Force","Telepathy","Teravolt","Toxic Boost","Turboblaze","Unnerve","Victory Star","Weak Armor","Wonder Skin","Zen Mode"]),g=p.concat(["Aerilate","Aura Break","Aroma Veil","Bulletproof","Cheek Pouch","Competitive","Dark Aura","Delta Stream","Desolate Land","Fairy Aura","Flower Veil","Fur Coat","Gale Wings","Gooey","Grass Pelt","Magician","Mega Launcher","Parental Bond","Pixilate","Primordial Sea","Protean","Refrigerate","Stance Change","Strong Jaw","Sweet Veil","Symbiosis","Tough Claws"]),d=g.concat(["Battery","Battle Bond","Beast Boost","Berserk","Comatose","Corrosion","Dancer","Dazzling","Disguise","Electric Surge","Emergency Exit","Fluffy","Full Metal Body","Galvanize","Grassy Surge","Innards Out","Liquid Voice","Long Reach","Merciless","Misty Surge","Neuroforce","Power Construct","Power of Alchemy","Prism Armor","Psychic Surge","Queenly Majesty","RKS System","Receiver","Schooling","Shadow Shield","Shields Down","Slush Rush","Stamina","Stakeout","Steelworker","Soul-Heart","Surge Surfer","Tangling Hair","Triage","Water Bubble","Water Compaction","Wimp Out"]),h=d.concat(["As One (Glastrier)","As One (Spectrier)","Ball Fetch","Chilling Neigh","Cotton Down","Curious Medicine","Dauntless Shield","Dragon's Maw","Gorilla Tactics","Grim Neigh","Gulp Missile","Hunger Switch","Ice Face","Ice Scales","Intrepid Sword","Libero","Mimicry","Mirror Armor","Neutralizing Gas","Pastel Veil","Perish Body","Power Spot","Propeller Tail","Punk Rock","Quick Draw","Ripen","Sand Spit","Screen Cleaner","Stalwart","Steam Engine","Steely Spirit","Transistor","Unseen Fist","Wandering Spirit"]),m=h.concat(["Anger Shell","Armor Tail","Beads of Ruin","Commander","Costar","Cud Chew","Earth Eater","Electromorphosis","Good as Gold","Guard Dog","Hadron Engine","Lingering Aroma","Mycelium Might","Opportunist","Orichalcum Pulse","Protosynthesis","Purifying Salt","Quark Drive","Rocky Payload","Seed Sower","Sharpness","Supreme Overlord","Sword of Ruin","Tablets of Ruin","Thermal Exchange","Toxic Debris","Vessel of Ruin","Well-Baked Body","Wind Power","Wind Rider","Zero to Hero"]);t.ABILITIES=[[],[],[],c,u,p,g,d,h,m];var y=function(){function e(e){this.gen=e}return e.prototype.get=function(e){return b[this.gen][e]},e.prototype[Symbol.iterator]=function(){var e,t,s,a,i;return n(this,(function(r){switch(r.label){case 0:for(s in e=b[this.gen],t=[],e)t.push(s);a=0,r.label=1;case 1:return a<t.length?(s=t[a])in e?(i=s,[4,this.get(i)]):[3,3]:[3,4];case 2:r.sent(),r.label=3;case 3:return a++,[3,1];case 4:return[2]}}))},e}();t.Abilities=y;var v=function(e){this.kind="Ability",this.id=(0,f.toID)(e),this.name=e},b=[];try{for(var P=l(t.ABILITIES),w=P.next();!w.done;w=P.next()){var S=w.value,k={};try{for(var T=(r=void 0,l(S)),x=T.next();!x.done;x=T.next()){var M=new v(x.value);k[M.id]=M}}catch(e){r={error:e}}finally{try{x&&!x.done&&(o=T.return)&&o.call(T)}finally{if(r)throw r.error}}b.push(k)}}catch(e){a={error:e}}finally{try{w&&!w.done&&(i=P.return)&&i.call(P)}finally{if(a)throw a.error}}},2223:(e,t,s)=>{"use strict";t.__esModule=!0,t.Generations=void 0;var a=s(7650),i=s(9390),r=s(849),o=s(839),n=s(7638),l=s(7121);t.Generations=new(function(){function e(){}return e.prototype.get=function(e){return new f(e)},e}());var f=function(e){this.num=e,this.abilities=new a.Abilities(e),this.items=new i.Items(e),this.moves=new r.Moves(e),this.species=new o.Species(e),this.types=new n.Types(e),this.natures=new l.Natures}},9390:function(e,t,s){"use strict";var a,i,r,o,n=this&&this.__generator||function(e,t){var s,a,i,r,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function n(n){return function(l){return function(n){if(s)throw new TypeError("Generator is already executing.");for(;r&&(r=0,n[0]&&(o=0)),o;)try{if(s=1,a&&(i=2&n[0]?a.return:n[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,n[1])).done)return i;switch(a=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,a=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],a=0}finally{s=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},l=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o},f=this&&this.__spreadArray||function(e,t,s){if(s||2===arguments.length)for(var a,i=0,r=t.length;i<r;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,s=t&&e[t],a=0;if(s)return s.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};t.__esModule=!0,t.Items=t.ITEMS=t.MEGA_STONES=void 0;var u=s(7094),p=["Berry Juice","Berry","Berserk Gene","Bitter Berry","Black Belt","Black Glasses","Bright Powder","Burnt Berry","Charcoal","Dragon Fang","Dragon Scale","Fast Ball","Fire Stone","Focus Band","Friend Ball","Gold Berry","Great Ball","Hard Stone","Heavy Ball","Ice Berry","King's Rock","Leaf Stone","Leftovers","Level Ball","Light Ball","Love Ball","Lucky Punch","Lure Ball","Magnet","Mail","Master Ball","Metal Coat","Metal Powder","Mint Berry","Miracle Berry","Miracle Seed","Moon Ball","Moon Stone","Mystery Berry","Mystic Water","Never-Melt Ice","Pink Bow","Poison Barb","Poke Ball","Polkadot Bow","PRZ Cure Berry","PSN Cure Berry","Quick Claw","Safari Ball","Scope Lens","Sharp Beak","Silver Powder","Soft Sand","Spell Tag","Sport Ball","Stick","Sun Stone","Thick Club","Thunder Stone","Twisted Spoon","Ultra Ball","Up-Grade","Water Stone"],g=["Berry","Berserk Gene","Bitter Berry","Burnt Berry","Ice Berry","Mint Berry","Miracle Berry","Mystery Berry","PRZ Cure Berry","Gold Berry","Pink Bow","Polkadot Bow","PSN Cure Berry","Enigma Berry"],d=p.filter((function(e){return!g.includes(e)})).concat(["Aguav Berry","Apicot Berry","Aspear Berry","Belue Berry","Bluk Berry","Cheri Berry","Chesto Berry","Choice Band","Claw Fossil","Cornn Berry","Deep Sea Scale","Deep Sea Tooth","Dive Ball","Dome Fossil","Durin Berry","Enigma Berry","Figy Berry","Ganlon Berry","Grepa Berry","Helix Fossil","Hondew Berry","Iapapa Berry","Kelpsy Berry","Lansat Berry","Lax Incense","Leppa Berry","Liechi Berry","Lum Berry","Luxury Ball","Macho Brace","Mago Berry","Magost Berry","Mental Herb","Nanab Berry","Nest Ball","Net Ball","Nomel Berry","Old Amber","Oran Berry","Pamtre Berry","Pecha Berry","Persim Berry","Petaya Berry","Pinap Berry","Pomeg Berry","Premier Ball","Qualot Berry","Rabuta Berry","Rawst Berry","Razz Berry","Repeat Ball","Root Fossil","Salac Berry","Sea Incense","Shell Bell","Silk Scarf","Sitrus Berry","Soul Dew","Spelon Berry","Starf Berry","Tamato Berry","Timer Ball","Watmel Berry","Wepear Berry","White Herb","Wiki Berry"]),h=d.concat(["Adamant Orb","Armor Fossil","Babiri Berry","Big Root","Black Sludge","Charti Berry","Cherish Ball","Chilan Berry","Choice Scarf","Choice Specs","Chople Berry","Coba Berry","Colbur Berry","Custap Berry","Damp Rock","Dawn Stone","Destiny Knot","Draco Plate","Dread Plate","Dubious Disc","Dusk Ball","Dusk Stone","Earth Plate","Electirizer","Expert Belt","Fist Plate","Flame Orb","Flame Plate","Focus Sash","Full Incense","Grip Claw","Griseous Orb","Haban Berry","Heal Ball","Heat Rock","Icicle Plate","Icy Rock","Insect Plate","Iron Ball","Iron Plate","Jaboca Berry","Kasib Berry","Kebia Berry","Lagging Tail","Life Orb","Light Clay","Lustrous Orb","Magmarizer","Meadow Plate","Metronome","Micle Berry","Mind Plate","Muscle Band","Occa Berry","Odd Incense","Oval Stone","Park Ball","Passho Berry","Payapa Berry","Power Anklet","Power Band","Power Belt","Power Bracer","Power Herb","Power Lens","Power Weight","Protector","Quick Ball","Quick Powder","Rare Bone","Razor Claw","Razor Fang","Reaper Cloth","Rindo Berry","Rock Incense","Rose Incense","Rowap Berry","Shed Shell","Shiny Stone","Shuca Berry","Skull Fossil","Sky Plate","Smooth Rock","Splash Plate","Spooky Plate","Sticky Barb","Stone Plate","Tanga Berry","Toxic Orb","Toxic Plate","Wacan Berry","Wave Incense","Wide Lens","Wise Glasses","Yache Berry","Zap Plate","Zoom Lens"]),m=h.concat(["Absorb Bulb","Air Balloon","Binding Band","Bug Gem","Burn Drive","Cell Battery","Chill Drive","Cover Fossil","Dark Gem","Douse Drive","Dragon Gem","Dream Ball","Eject Button","Electric Gem","Eviolite","Fighting Gem","Fire Gem","Float Stone","Flying Gem","Ghost Gem","Grass Gem","Ground Gem","Ice Gem","Normal Gem","Plume Fossil","Poison Gem","Prism Scale","Psychic Gem","Red Card","Ring Target","Rock Gem","Rocky Helmet","Shock Drive","Steel Gem","Water Gem"]);t.MEGA_STONES={Absolite:"Absol",Abomasite:"Abomasnow",Aerodactylite:"Aerodactyl",Aggronite:"Aggron",Alakazite:"Alakazam",Altarianite:"Altaria",Ampharosite:"Ampharos",Audinite:"Audino",Banettite:"Banette",Beedrillite:"Beedrill",Blastoisinite:"Blastoise",Blazikenite:"Blaziken",Cameruptite:"Camerupt","Charizardite X":"Charizard","Charizardite Y":"Charizard",Crucibellite:"Crucibelle",Diancite:"Diancie",Galladite:"Gallade",Garchompite:"Garchomp",Gardevoirite:"Gardevoir",Gengarite:"Gengar",Glalitite:"Glalie",Gyaradosite:"Gyarados",Heracronite:"Heracross",Houndoominite:"Houndoom",Kangaskhanite:"Kangaskhan",Latiasite:"Latias",Latiosite:"Latios",Lopunnite:"Lopunny",Lucarionite:"Lucario",Manectite:"Manectric",Mawilite:"Mawile",Medichamite:"Medicham",Metagrossite:"Metagross","Mewtwonite X":"Mewtwo","Mewtwonite Y":"Mewtwo",Pidgeotite:"Pidgeot",Pinsirite:"Pinsir",Sablenite:"Sableye",Salamencite:"Salamence",Sceptilite:"Sceptile",Scizorite:"Scizor",Sharpedonite:"Sharpedo",Slowbronite:"Slowbro",Steelixite:"Steelix",Swampertite:"Swampert",Tyranitarite:"Tyranitar",Venusaurite:"Venusaur"};for(var y=m.concat(f(f([],l(Object.keys(t.MEGA_STONES)),!1),["Assault Vest","Blue Orb","Fairy Gem","Jaw Fossil","Kee Berry","Luminous Moss","Maranga Berry","Pixie Plate","Red Orb","Roseli Berry","Sachet","Safety Goggles","Sail Fossil","Snowball","Weakness Policy","Whipped Dream"],!1).sort()),v=y.filter((function(e){return"Old Amber"!==e})).concat(["Adrenaline Orb","Aloraichium Z","Beast Ball","Bottle Cap","Bug Memory","Buginium Z","Dark Memory","Darkinium Z","Decidium Z","Dragon Memory","Dragonium Z","Eevium Z","Electric Memory","Electric Seed","Electrium Z","Fairium Z","Fairy Memory","Fighting Memory","Fightinium Z","Fire Memory","Firium Z","Flying Memory","Flyinium Z","Ghost Memory","Ghostium Z","Gold Bottle Cap","Grass Memory","Grassium Z","Grassy Seed","Ground Memory","Groundium Z","Ice Memory","Ice Stone","Icium Z","Incinium Z","Kommonium Z","Lunalium Z","Lycanium Z","Marshadium Z","Mewnium Z","Mimikium Z","Misty Seed","Normalium Z","Pikanium Z","Pikashunium Z","Poison Memory","Poisonium Z","Primarium Z","Protective Pads","Psychic Memory","Psychic Seed","Psychium Z","Rock Memory","Rockium Z","Snorlium Z","Solganium Z","Steel Memory","Steelium Z","Tapunium Z","Terrain Extender","Ultranecrozium Z","Water Memory","Waterium Z"]),b=v.concat(["Berry Sweet","Blunder Policy","Chipped Pot","Clover Sweet","Cracked Pot","Eject Pack","Flower Sweet","Fossilized Bird","Fossilized Dino","Fossilized Drake","Fossilized Fish","Galarica Cuff","Galarica Wreath","Heavy-Duty Boots","Leek","Love Sweet","Ribbon Sweet","Room Service","Rusted Shield","Rusted Sword","Star Sweet","Strawberry Sweet","Sweet Apple","Tart Apple","Throat Spray"]),P=0;P<100;P++)b.push("TR".concat(P<10?"0".concat(P):P));b.push("Utility Umbrella","Vile Vial"),b.push.apply(b,f(f([],l(g),!1),["Old Amber"],!1));var w=b.concat(["Adamant Crystal","Auspicious Armor","Ability Shield","Booster Energy","Clear Amulet","Covert Cloak","Loaded Dice","Malicious Armor","Mirror Herb","Punching Glove","Lustrous Globe","Griseous Core","Strange Ball"]),S={"Aguav Berry":{t:"Dragon",p:80},"Apicot Berry":{t:"Ground",p:100},"Aspear Berry":{t:"Ice",p:80},"Babiri Berry":{t:"Steel",p:80},"Belue Berry":{t:"Electric",p:100},Berry:{t:"Poison",p:80},"Bitter Berry":{t:"Ground",p:80},"Bluk Berry":{t:"Fire",p:90},"Burnt Berry":{t:"Ice",p:80},"Charti Berry":{t:"Rock",p:80},"Cheri Berry":{t:"Fire",p:80},"Chesto Berry":{t:"Water",p:80},"Chilan Berry":{t:"Normal",p:80},"Chople Berry":{t:"Fighting",p:80},"Coba Berry":{t:"Flying",p:80},"Colbur Berry":{t:"Dark",p:80},"Cornn Berry":{t:"Bug",p:90},"Custap Berry":{t:"Ghost",p:100},"Durin Berry":{t:"Water",p:100},"Enigma Berry":{t:"Bug",p:100},"Figy Berry":{t:"Bug",p:80},"Ganlon Berry":{t:"Ice",p:100},"Gold Berry":{t:"Psychic",p:80},"Grepa Berry":{t:"Flying",p:90},"Haban Berry":{t:"Dragon",p:80},"Hondew Berry":{t:"Ground",p:90},"Iapapa Berry":{t:"Dark",p:80},"Ice Berry":{t:"Grass",p:80},"Jaboca Berry":{t:"Dragon",p:100},"Kasib Berry":{t:"Ghost",p:80},"Kebia Berry":{t:"Poison",p:80},"Kee Berry":{t:"Fairy",p:100},"Kelpsy Berry":{t:"Fighting",p:90},"Lansat Berry":{t:"Flying",p:100},"Leppa Berry":{t:"Fighting",p:80},"Liechi Berry":{t:"Grass",p:100},"Lum Berry":{t:"Flying",p:80},"Mago Berry":{t:"Ghost",p:80},"Magost Berry":{t:"Rock",p:90},"Maranga Berry":{t:"Dark",p:100},"Micle Berry":{t:"Rock",p:100},"Mint Berry":{t:"Water",p:80},"Miracle Berry":{t:"Flying",p:80},"Mystery Berry":{t:"Fighting",p:80},"Nanab Berry":{t:"Water",p:90},"Nomel Berry":{t:"Dragon",p:90},"Occa Berry":{t:"Fire",p:80},"Oran Berry":{t:"Poison",p:80},"Pamtre Berry":{t:"Steel",p:90},"Passho Berry":{t:"Water",p:80},"Payapa Berry":{t:"Psychic",p:80},"Pecha Berry":{t:"Electric",p:80},"Persim Berry":{t:"Ground",p:80},"Petaya Berry":{t:"Poison",p:100},"Pinap Berry":{t:"Grass",p:90},"Pomeg Berry":{t:"Ice",p:90},"PRZ Cure Berry":{t:"Fire",p:80},"PSN Cure Berry":{t:"Electric",p:80},"Qualot Berry":{t:"Poison",p:90},"Rabuta Berry":{t:"Ghost",p:90},"Rawst Berry":{t:"Grass",p:80},"Razz Berry":{t:"Steel",p:80},"Rindo Berry":{t:"Grass",p:80},"Roseli Berry":{t:"Fairy",p:80},"Rowap Berry":{t:"Dark",p:100},"Salac Berry":{t:"Fighting",p:100},"Shuca Berry":{t:"Ground",p:80},"Sitrus Berry":{t:"Psychic",p:80},"Spelon Berry":{t:"Dark",p:90},"Starf Berry":{t:"Psychic",p:100},"Tamato Berry":{t:"Psychic",p:90},"Tanga Berry":{t:"Bug",p:80},"Wacan Berry":{t:"Electric",p:80},"Watmel Berry":{t:"Fire",p:100},"Wepear Berry":{t:"Electric",p:90},"Wiki Berry":{t:"Rock",p:80},"Yache Berry":{t:"Ice",p:80}};t.ITEMS=[[],[],p,d,h,m,y,v,b,w];var k=function(){function e(e){this.gen=e}return e.prototype.get=function(e){return x[this.gen][e]},e.prototype[Symbol.iterator]=function(){var e,t,s,a,i;return n(this,(function(r){switch(r.label){case 0:for(s in e=x[this.gen],t=[],e)t.push(s);a=0,r.label=1;case 1:return a<t.length?(s=t[a])in e?(i=s,[4,this.get(i)]):[3,3]:[3,4];case 2:r.sent(),r.label=3;case 3:return a++,[3,1];case 4:return[2]}}))},e}();t.Items=k;var T=function(e,s){this.kind="Item",this.id=(0,u.toID)(e),this.name=e,this.megaEvolves=t.MEGA_STONES[e];var a=S[e];a&&(this.isBerry=!0,this.naturalGift={basePower:s<6?a.p-20:a.p,type:a.t})},x=[],M=0;try{for(var D=c(t.ITEMS),A=D.next();!A.done;A=D.next()){var B=A.value,O={};try{for(var C=(r=void 0,c(B)),F=C.next();!F.done;F=C.next())O[(P=new T(F.value,M)).id]=P}catch(e){r={error:e}}finally{try{F&&!F.done&&(o=C.return)&&o.call(C)}finally{if(r)throw r.error}}x.push(O),M++}}catch(e){a={error:e}}finally{try{A&&!A.done&&(i=D.return)&&i.call(D)}finally{if(a)throw a.error}}},849:function(e,t,s){"use strict";var a,i,r,o,n=this&&this.__generator||function(e,t){var s,a,i,r,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function n(n){return function(l){return function(n){if(s)throw new TypeError("Generator is already executing.");for(;r&&(r=0,n[0]&&(o=0)),o;)try{if(s=1,a&&(i=2&n[0]?a.return:n[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,n[1])).done)return i;switch(a=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,a=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],a=0}finally{s=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},l=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,s=t&&e[t],a=0;if(s)return s.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};t.__esModule=!0,t.Moves=t.MOVES=void 0;var f=s(7094),c={"(No Move)":{bp:0,category:"Status",type:"Normal"},Absorb:{bp:20,type:"Grass",drain:[1,2]},Acid:{bp:40,type:"Poison"},Amnesia:{bp:0,category:"Status",type:"Psychic"},"Aurora Beam":{bp:65,type:"Ice"},Barrage:{bp:15,type:"Normal",multihit:[2,5]},Bide:{bp:0,type:"???"},Bind:{bp:15,type:"Normal"},Bite:{bp:60,type:"Normal"},Blizzard:{bp:120,type:"Ice"},Bonemerang:{bp:50,type:"Ground",multihit:2},Bubble:{bp:20,type:"Water"},"Bubble Beam":{bp:65,type:"Water"},Clamp:{bp:35,type:"Water"},"Comet Punch":{bp:18,type:"Normal",multihit:[2,5]},Constrict:{bp:10,type:"Normal"},Conversion:{bp:0,category:"Status",type:"Normal"},Counter:{bp:1,type:"Fighting"},Crabhammer:{bp:90,type:"Water"},"Defense Curl":{bp:0,category:"Status",type:"Normal"},Dig:{bp:100,type:"Ground"},Disable:{bp:0,category:"Status",type:"Normal"},"Dizzy Punch":{bp:70,type:"Normal"},"Double-Edge":{bp:100,type:"Normal",recoil:[25,100]},"Double Kick":{bp:30,type:"Fighting",multihit:2},"Double Slap":{bp:15,type:"Normal",multihit:[2,5]},"Dragon Rage":{bp:1,type:"Dragon"},"Dream Eater":{bp:100,type:"Psychic",drain:[1,2]},Earthquake:{bp:100,type:"Ground"},Explosion:{bp:170,type:"Normal"},"Fire Blast":{bp:120,type:"Fire"},"Fire Spin":{bp:15,type:"Fire"},Fissure:{bp:0,type:"Ground"},Fly:{bp:70,type:"Flying"},"Focus Energy":{bp:0,category:"Status",type:"Normal"},"Fury Attack":{bp:15,type:"Normal",multihit:[2,5]},"Fury Swipes":{bp:18,type:"Normal",multihit:[2,5]},Glare:{bp:0,category:"Status",type:"Normal"},Growth:{bp:0,category:"Status",type:"Normal"},Guillotine:{bp:0,type:"Normal"},Gust:{bp:40,type:"Normal"},Haze:{bp:0,category:"Status",type:"Ice"},"High Jump Kick":{bp:85,type:"Fighting",hasCrashDamage:!0},"Horn Drill":{bp:0,type:"Normal"},"Hyper Beam":{bp:150,type:"Normal"},"Jump Kick":{bp:70,type:"Fighting",hasCrashDamage:!0},"Karate Chop":{bp:50,type:"Normal"},"Leech Seed":{bp:0,category:"Status",type:"Grass"},"Light Screen":{bp:0,category:"Status",type:"Psychic"},Metronome:{bp:0,category:"Status",type:"Normal"},Mimic:{bp:0,category:"Status",type:"Normal"},Minimize:{bp:0,category:"Status",type:"Normal"},"Mirror Move":{bp:0,category:"Status",type:"Flying"},Mist:{bp:0,category:"Status",type:"Ice"},"Night Shade":{bp:1,type:"Ghost"},"Petal Dance":{bp:70,type:"Grass"},"Pin Missile":{bp:14,type:"Bug",multihit:[2,5]},"Poison Sting":{bp:15,type:"Poison"},Psychic:{bp:90,type:"Psychic"},Psywave:{bp:1,type:"Psychic"},Rage:{bp:20,type:"Normal"},"Razor Leaf":{bp:55,type:"Grass"},"Razor Wind":{bp:80,type:"Normal"},Recover:{bp:0,category:"Status",type:"Normal"},Reflect:{bp:0,category:"Status",type:"Psychic"},Rest:{bp:0,category:"Status",type:"Psychic"},Roar:{bp:0,category:"Status",type:"Normal"},"Rock Slide":{bp:75,type:"Rock"},"Rock Throw":{bp:50,type:"Rock"},"Sand Attack":{bp:0,category:"Status",type:"Normal"},"Seismic Toss":{bp:1,type:"Fighting"},"Self-Destruct":{bp:130,type:"Normal"},"Skull Bash":{bp:100,type:"Normal"},Slash:{bp:70,type:"Normal"},Sludge:{bp:65,type:"Poison"},"Soft-Boiled":{bp:0,category:"Status",type:"Normal"},"Solar Beam":{bp:120,type:"Grass"},"Sonic Boom":{bp:1,type:"Normal"},"Spike Cannon":{bp:20,type:"Normal",multihit:[2,5]},Stomp:{bp:65,type:"Normal"},Struggle:{bp:50,type:"Normal",recoil:[1,2]},"Stun Spore":{bp:0,category:"Status",type:"Grass"},Submission:{bp:80,type:"Fighting",recoil:[1,4]},Substitute:{bp:0,category:"Status",type:"Normal"},"Super Fang":{bp:1,type:"Normal"},Swift:{bp:60,type:"Normal"},"Take Down":{bp:90,type:"Normal",recoil:[1,4]},Thrash:{bp:90,type:"Normal"},Thunder:{bp:120,type:"Electric"},"Thunder Wave":{bp:0,category:"Status",type:"Electric"},Transform:{bp:0,category:"Status",type:"Normal"},"Tri Attack":{bp:80,type:"Normal"},Twineedle:{bp:25,type:"Bug",multihit:2},Whirlwind:{bp:0,category:"Status",type:"Normal"},"Wing Attack":{bp:35,type:"Flying"},Wrap:{bp:15,type:"Normal"},Growl:{bp:0,category:"Status",type:"Normal"},Leer:{bp:0,category:"Status",type:"Normal"},"Low Kick":{bp:50,type:"Fighting"},"Poison Gas":{bp:0,category:"Status",type:"Poison"},"Poison Powder":{bp:0,category:"Status",type:"Poison"},"Sky Attack":{bp:140,type:"Flying"},"String Shot":{bp:0,category:"Status",type:"Bug"},Surf:{bp:95,type:"Water"},"Tail Whip":{bp:0,category:"Status",type:"Normal"},Toxic:{bp:0,category:"Status",type:"Poison"},Flash:{bp:0,category:"Status",type:"Normal"},Hypnosis:{bp:0,category:"Status",type:"Psychic"},"Leech Life":{bp:20,type:"Bug",drain:[1,2]},"Mega Drain":{bp:40,type:"Grass",drain:[1,2]},"Vine Whip":{bp:35,type:"Grass"},Waterfall:{bp:80,type:"Water"},Tackle:{bp:35,type:"Normal"},"Acid Armor":{bp:0,category:"Status",type:"Poison"},Barrier:{bp:0,category:"Status",type:"Psychic"},"Body Slam":{bp:85,type:"Normal"},Flamethrower:{bp:95,type:"Fire"},"Hydro Pump":{bp:120,type:"Water"},"Ice Beam":{bp:95,type:"Ice"},Lick:{bp:20,type:"Ghost"},Screech:{bp:0,category:"Status",type:"Normal"},Sing:{bp:0,category:"Status",type:"Normal"},"Sleep Powder":{bp:0,category:"Status",type:"Grass"},Smog:{bp:20,type:"Poison"},Spore:{bp:0,category:"Status",type:"Grass"},Supersonic:{bp:0,category:"Status",type:"Normal"},"Swords Dance":{bp:0,category:"Status",type:"Normal"},Thunderbolt:{bp:95,type:"Electric"},"Bone Club":{bp:65,type:"Ground"},"Egg Bomb":{bp:100,type:"Normal"},"Hyper Fang":{bp:80,type:"Normal"},Kinesis:{bp:0,category:"Status",type:"Psychic"},"Lovely Kiss":{bp:0,category:"Status",type:"Normal"},Meditate:{bp:0,category:"Status",type:"Psychic"},"Rolling Kick":{bp:60,type:"Fighting"},Sharpen:{bp:0,category:"Status",type:"Normal"},Teleport:{bp:0,category:"Status",type:"Psychic"},Agility:{bp:0,category:"Status",type:"Psychic"},"Confuse Ray":{bp:0,category:"Status",type:"Ghost"},Confusion:{bp:50,type:"Psychic"},Cut:{bp:50,type:"Normal"},"Double Team":{bp:0,category:"Status",type:"Normal"},"Drill Peck":{bp:80,type:"Flying"},Ember:{bp:40,type:"Fire"},"Fire Punch":{bp:75,type:"Fire"},Harden:{bp:0,category:"Status",type:"Normal"},Headbutt:{bp:70,type:"Normal"},"Horn Attack":{bp:65,type:"Normal"},"Ice Punch":{bp:75,type:"Ice"},"Mega Kick":{bp:120,type:"Normal"},"Mega Punch":{bp:80,type:"Normal"},"Paleo Wave":{bp:85,type:"Rock"},"Pay Day":{bp:40,type:"Normal"},Peck:{bp:35,type:"Flying"},Pound:{bp:40,type:"Normal"},Psybeam:{bp:65,type:"Psychic"},"Quick Attack":{bp:40,type:"Normal",priority:1},Scratch:{bp:40,type:"Normal"},"Shadow Strike":{bp:80,type:"Ghost"},Slam:{bp:80,type:"Normal"},Smokescreen:{bp:0,category:"Status",type:"Normal"},Splash:{bp:0,category:"Status",type:"Normal"},Strength:{bp:80,type:"Normal"},"Thunder Punch":{bp:75,type:"Electric"},"Thunder Shock":{bp:40,type:"Electric"},"Vise Grip":{bp:55,type:"Normal"},"Water Gun":{bp:40,type:"Water"},Withdraw:{bp:0,category:"Status",type:"Water"}},u=(0,f.extend)(!0,{},c,{Bide:{type:"Normal"},Counter:{bp:0},Dig:{bp:60},"Double-Edge":{bp:120},Explosion:{bp:250},Gust:{type:"Flying"},"Karate Chop":{type:"Fighting"},Psywave:{bp:0},"Self-Destruct":{bp:200},Struggle:{recoil:[1,4]},"Dragon Rage":{bp:0},Bite:{type:"Dark"},"Night Shade":{bp:0},"Sand Attack":{type:"Ground"},"Seismic Toss":{bp:0},"Sonic Boom":{bp:0},"Super Fang":{bp:0},"Wing Attack":{bp:60},Aeroblast:{bp:100,type:"Flying"},Attract:{bp:0,category:"Status",type:"Normal"},"Beat Up":{bp:10,type:"Dark"},"Belly Drum":{bp:0,category:"Status",type:"Normal"},"Conversion 2":{bp:0,category:"Status",type:"Normal"},"Cross Chop":{bp:100,type:"Fighting"},Curse:{bp:0,category:"Status",type:"???"},"Destiny Bond":{bp:0,category:"Status",type:"Ghost"},Detect:{bp:0,category:"Status",type:"Fighting",priority:2},Encore:{bp:0,category:"Status",type:"Normal"},Endure:{bp:0,category:"Status",type:"Normal",priority:2},Flail:{bp:0,type:"Normal"},Foresight:{bp:0,category:"Status",type:"Normal"},"Future Sight":{bp:80,type:"Psychic"},"Heal Bell":{bp:0,category:"Status",type:"Normal"},"Icy Wind":{bp:55,type:"Ice"},"Lock-On":{bp:0,category:"Status",type:"Normal"},"Mind Reader":{bp:0,category:"Status",type:"Normal"},"Mirror Coat":{bp:0,type:"Psychic"},Moonlight:{bp:0,category:"Status",type:"Normal"},"Morning Sun":{bp:0,category:"Status",type:"Normal"},Nightmare:{bp:0,category:"Status",type:"Ghost"},Outrage:{bp:90,type:"Dragon"},"Powder Snow":{bp:40,type:"Ice"},Present:{bp:0,type:"Normal"},Protect:{bp:0,category:"Status",type:"Normal",priority:2},"Psych Up":{bp:0,category:"Status",type:"Normal"},Pursuit:{bp:40,type:"Dark"},"Rain Dance":{bp:0,category:"Status",type:"Water"},Reversal:{bp:0,type:"Fighting"},Safeguard:{bp:0,category:"Status",type:"Normal"},Sandstorm:{bp:0,category:"Status",type:"Rock"},Sketch:{bp:0,category:"Status",type:"Normal"},"Sleep Talk":{bp:0,category:"Status",type:"Normal"},Spikes:{bp:0,category:"Status",type:"Ground"},Spite:{bp:0,category:"Status",type:"Ghost"},"Sunny Day":{bp:0,category:"Status",type:"Fire"},Swagger:{bp:0,category:"Status",type:"Normal"},"Sweet Scent":{bp:0,category:"Status",type:"Normal"},Synthesis:{bp:0,category:"Status",type:"Grass"},Thief:{bp:40,type:"Dark"},"Triple Kick":{bp:10,type:"Fighting",multihit:[1,3]},Twister:{bp:40,type:"Dragon"},"Ancient Power":{bp:60,type:"Rock"},"Bone Rush":{bp:25,type:"Ground",multihit:[2,5]},Crunch:{bp:80,type:"Dark"},"Feint Attack":{bp:60,type:"Dark"},"Giga Drain":{bp:60,type:"Grass",drain:[1,2]},"Hidden Power":{bp:0,type:"Normal"},"Mean Look":{bp:0,category:"Status",type:"Normal"},"Rapid Spin":{bp:20,type:"Normal"},"Rock Smash":{bp:20,type:"Fighting"},"Spider Web":{bp:0,category:"Status",type:"Bug"},Whirlpool:{bp:15,type:"Water"},"Zap Cannon":{bp:100,type:"Electric"},"Cotton Spore":{bp:0,category:"Status",type:"Grass"},"Extreme Speed":{bp:80,type:"Normal",priority:1},"Fury Cutter":{bp:10,type:"Bug"},Magnitude:{bp:0,type:"Ground"},"Milk Drink":{bp:0,category:"Status",type:"Normal"},"Scary Face":{bp:0,category:"Status",type:"Normal"},Charm:{bp:0,category:"Status",type:"Normal"},"Hidden Power Bug":{bp:70,type:"Bug"},"Hidden Power Dark":{bp:70,type:"Dark"},"Hidden Power Dragon":{bp:70,type:"Dragon"},"Hidden Power Electric":{bp:70,type:"Electric"},"Hidden Power Fighting":{bp:70,type:"Fighting"},"Hidden Power Fire":{bp:70,type:"Fire"},"Hidden Power Flying":{bp:70,type:"Flying"},"Hidden Power Ghost":{bp:70,type:"Ghost"},"Hidden Power Grass":{bp:70,type:"Grass"},"Hidden Power Ground":{bp:70,type:"Ground"},"Hidden Power Ice":{bp:70,type:"Ice"},"Hidden Power Poison":{bp:70,type:"Poison"},"Hidden Power Psychic":{bp:70,type:"Psychic"},"Hidden Power Rock":{bp:70,type:"Rock"},"Hidden Power Steel":{bp:70,type:"Steel"},"Hidden Power Water":{bp:70,type:"Water"},"Perish Song":{bp:0,category:"Status",type:"Normal"},Snore:{bp:40,type:"Normal"},"Sweet Kiss":{bp:0,category:"Status",type:"Normal"},Rollout:{bp:30,type:"Rock"},Frustration:{bp:0,type:"Normal"},Return:{bp:0,type:"Normal"},"Sacred Fire":{bp:100,type:"Fire"},"Baton Pass":{bp:0,category:"Status",type:"Normal"},"Dragon Breath":{bp:60,type:"Dragon"},"Dynamic Punch":{bp:100,type:"Fighting"},"False Swipe":{bp:40,type:"Normal"},"Flame Wheel":{bp:60,type:"Fire"},"Iron Tail":{bp:100,type:"Steel"},"Mach Punch":{bp:40,type:"Fighting",priority:1},Megahorn:{bp:120,type:"Bug"},"Metal Claw":{bp:50,type:"Steel"},"Mud-Slap":{bp:20,type:"Ground"},Octazooka:{bp:65,type:"Water"},"Pain Split":{bp:0,category:"Status",type:"Normal"},"Shadow Ball":{bp:80,type:"Ghost"},"Sludge Bomb":{bp:90,type:"Poison"},Spark:{bp:65,type:"Electric"},"Steel Wing":{bp:70,type:"Steel"},"Vital Throw":{bp:70,type:"Fighting"}}),p=(0,f.extend)(!0,{},u,{Acid:{target:"allAdjacentFoes"},"Ancient Power":{makesContact:!0},Bide:{makesContact:!0},Bind:{makesContact:!0},Blizzard:{target:"allAdjacentFoes"},Clamp:{makesContact:!0},"Comet Punch":{makesContact:!0},Counter:{makesContact:!0},Crunch:{makesContact:!0},Detect:{priority:3},Endure:{priority:4},Protect:{priority:3},Dig:{makesContact:!0},"Double Kick":{makesContact:!0},"Double Slap":{makesContact:!0},Explosion:{target:"allAdjacent"},Flail:{makesContact:!0},Fly:{makesContact:!0},"Fury Attack":{makesContact:!0},"Fury Swipes":{makesContact:!0},"High Jump Kick":{makesContact:!0},"Jump Kick":{makesContact:!0},"Leech Life":{makesContact:!0},Outrage:{makesContact:!0},"Petal Dance":{makesContact:!0},Pursuit:{makesContact:!0},Rage:{makesContact:!0},"Rapid Spin":{makesContact:!0},"Razor Wind":{target:"allAdjacentFoes"},Reversal:{makesContact:!0},"Rock Smash":{makesContact:!0},"Self-Destruct":{target:"allAdjacent"},"Skull Bash":{makesContact:!0},Stomp:{makesContact:!0},Struggle:{makesContact:!0},Surf:{target:"allAdjacentFoes"},Thief:{makesContact:!0},Thrash:{makesContact:!0},"Triple Kick":{makesContact:!0,multihit:3},"Vine Whip":{makesContact:!0},Waterfall:{makesContact:!0},Wrap:{makesContact:!0},Crabhammer:{makesContact:!0},"Double-Edge":{recoil:[1,3],makesContact:!0},Earthquake:{target:"allAdjacent"},"Extreme Speed":{makesContact:!0},"Fury Cutter":{makesContact:!0},"Heal Bell":{isSound:!0},Magnitude:{target:"allAdjacent"},Roar:{isSound:!0},Submission:{makesContact:!0},Tackle:{makesContact:!0},"Take Down":{makesContact:!0},Twister:{target:"allAdjacentFoes"},"Body Slam":{makesContact:!0},Bubble:{target:"allAdjacentFoes"},Growl:{isSound:!0,target:"allAdjacentFoes"},Lick:{makesContact:!0},"Perish Song":{isSound:!0},Screech:{isSound:!0},Sing:{isSound:!0},Snore:{isSound:!0},"String Shot":{target:"allAdjacentFoes"},Supersonic:{isSound:!0},"Sweet Scent":{target:"allAdjacentFoes"},Rollout:{makesContact:!0},Constrict:{makesContact:!0},"Dizzy Punch":{makesContact:!0},Frustration:{makesContact:!0},"Hyper Fang":{makesContact:!0},"Karate Chop":{makesContact:!0},"Low Kick":{bp:0,makesContact:!0},Return:{makesContact:!0},"Rolling Kick":{makesContact:!0},Bite:{makesContact:!0},"Cross Chop":{makesContact:!0},Cut:{makesContact:!0},"Drill Peck":{makesContact:!0},"Dynamic Punch":{makesContact:!0},"False Swipe":{makesContact:!0},"Fire Punch":{makesContact:!0},"Flame Wheel":{makesContact:!0},Guillotine:{makesContact:!0},Headbutt:{makesContact:!0},"Horn Attack":{makesContact:!0},"Horn Drill":{makesContact:!0},"Ice Punch":{makesContact:!0},"Icy Wind":{target:"allAdjacentFoes"},"Iron Tail":{makesContact:!0},Leer:{target:"allAdjacentFoes"},"Mach Punch":{makesContact:!0},Megahorn:{makesContact:!0},"Mega Kick":{makesContact:!0},"Mega Punch":{makesContact:!0},"Metal Claw":{makesContact:!0},Peck:{makesContact:!0},Pound:{makesContact:!0},"Powder Snow":{target:"allAdjacentFoes"},"Quick Attack":{makesContact:!0},"Razor Leaf":{target:"allAdjacentFoes"},"Rock Slide":{target:"allAdjacentFoes"},Scratch:{makesContact:!0},"Seismic Toss":{makesContact:!0},"Shadow Strike":{makesContact:!0},Slam:{makesContact:!0},Slash:{makesContact:!0},Spark:{makesContact:!0},"Steel Wing":{makesContact:!0},Strength:{makesContact:!0},"Super Fang":{makesContact:!0},Swift:{target:"allAdjacentFoes"},"Tail Whip":{target:"allAdjacentFoes"},"Thunder Punch":{makesContact:!0},"Vise Grip":{makesContact:!0},"Vital Throw":{makesContact:!0},"Wing Attack":{makesContact:!0},"Arm Thrust":{bp:15,type:"Fighting",multihit:[2,5],makesContact:!0},Assist:{bp:0,category:"Status",type:"Normal"},Astonish:{bp:30,type:"Ghost",makesContact:!0},Block:{bp:0,category:"Status",type:"Normal"},Bounce:{bp:85,type:"Flying",makesContact:!0},"Bullet Seed":{bp:10,type:"Grass",multihit:[2,5]},Camouflage:{bp:0,category:"Status",type:"Normal"},Charge:{bp:0,category:"Status",type:"Electric"},Covet:{bp:40,type:"Normal"},Dive:{bp:60,type:"Water",makesContact:!0},"Doom Desire":{bp:120,type:"Steel"},Extrasensory:{bp:80,type:"Psychic"},"Fake Out":{bp:40,type:"Normal",priority:1},"Follow Me":{bp:0,category:"Status",type:"Normal",priority:3},Hail:{bp:0,category:"Status",type:"Ice"},"Icicle Spear":{bp:10,type:"Ice",multihit:[2,5]},Ingrain:{bp:0,category:"Status",type:"Grass"},"Knock Off":{bp:20,type:"Dark",makesContact:!0},"Leaf Blade":{bp:70,type:"Grass",makesContact:!0},"Magic Coat":{bp:0,category:"Status",type:"Psychic",priority:4},Memento:{bp:0,category:"Status",type:"Dark"},"Nature Power":{bp:0,category:"Status",type:"Normal"},"Needle Arm":{bp:60,type:"Grass",makesContact:!0},"Odor Sleuth":{bp:0,category:"Status",type:"Normal"},Overheat:{bp:140,type:"Fire",self:{boosts:{spa:-2}},makesContact:!0},Revenge:{bp:60,type:"Fighting",makesContact:!0},"Rock Blast":{bp:25,type:"Rock",multihit:[2,5]},"Role Play":{bp:0,category:"Status",type:"Psychic"},"Sand Tomb":{bp:15,type:"Ground"},"Skill Swap":{bp:0,category:"Status",type:"Psychic"},"Smelling Salts":{bp:60,type:"Normal",makesContact:!0},"Spit Up":{bp:0,type:"Normal"},Stockpile:{bp:0,category:"Status",type:"Normal"},Swallow:{bp:0,category:"Status",type:"Normal"},Taunt:{bp:0,category:"Status",type:"Dark"},"Teeter Dance":{bp:0,category:"Status",type:"Normal",target:"allAdjacent"},Tickle:{bp:0,category:"Status",type:"Normal"},Trick:{bp:0,category:"Status",type:"Psychic"},Uproar:{bp:50,type:"Normal",isSound:!0},"Volt Tackle":{bp:120,type:"Electric",recoil:[1,3],makesContact:!0},"Weather Ball":{bp:50,type:"Normal"},Aromatherapy:{bp:0,category:"Status",type:"Grass"},"Brick Break":{bp:75,type:"Fighting",makesContact:!0},Endeavor:{bp:0,type:"Normal",makesContact:!0},"Focus Punch":{bp:150,type:"Fighting",makesContact:!0},Imprison:{bp:0,category:"Status",type:"Psychic"},"Mud Sport":{bp:0,category:"Status",type:"Ground"},Recycle:{bp:0,category:"Status",type:"Normal"},"Secret Power":{bp:70,type:"Normal"},"Sky Uppercut":{bp:85,type:"Fighting",makesContact:!0},"Slack Off":{bp:0,category:"Status",type:"Normal"},Snatch:{bp:0,category:"Status",type:"Dark",priority:4},"Tail Glow":{bp:0,category:"Status",type:"Bug"},Torment:{bp:0,category:"Status",type:"Dark"},"Water Sport":{bp:0,category:"Status",type:"Water"},Wish:{bp:0,category:"Status",type:"Normal"},"Air Cutter":{bp:55,type:"Flying",target:"allAdjacentFoes"},Facade:{bp:70,type:"Normal",makesContact:!0},"Grass Whistle":{bp:0,category:"Status",type:"Grass",isSound:!0},"Heat Wave":{bp:100,type:"Fire",target:"allAdjacentFoes"},"Hyper Voice":{bp:90,type:"Normal",isSound:!0,target:"allAdjacentFoes"},"Metal Sound":{bp:0,category:"Status",type:"Steel",isSound:!0},"Meteor Mash":{bp:100,type:"Steel",makesContact:!0},"Muddy Water":{bp:95,type:"Water",target:"allAdjacentFoes"},"Poison Fang":{bp:50,type:"Poison",makesContact:!0},"Rock Tomb":{bp:50,type:"Rock"},"Will-O-Wisp":{bp:0,category:"Status",type:"Fire"},"Ice Ball":{bp:30,type:"Ice",makesContact:!0},"Sheer Cold":{bp:0,type:"Ice"},Howl:{bp:0,category:"Status",type:"Normal"},"Luster Purge":{bp:70,type:"Psychic"},"Mist Ball":{bp:70,type:"Psychic"},"Psycho Boost":{bp:140,type:"Psychic",self:{boosts:{spa:-2}}},Refresh:{bp:0,category:"Status",type:"Normal"},"Signal Beam":{bp:75,type:"Bug"},"Silver Wind":{bp:60,type:"Bug"},"Aerial Ace":{bp:60,type:"Flying",makesContact:!0},"Blast Burn":{bp:150,type:"Fire"},"Blaze Kick":{bp:85,type:"Fire",makesContact:!0},"Bulk Up":{bp:0,category:"Status",type:"Fighting"},"Calm Mind":{bp:0,category:"Status",type:"Psychic"},"Cosmic Power":{bp:0,category:"Status",type:"Psychic"},"Crush Claw":{bp:75,type:"Normal",makesContact:!0},"Dragon Claw":{bp:80,type:"Dragon",makesContact:!0},"Dragon Dance":{bp:0,category:"Status",type:"Dragon"},Eruption:{bp:150,type:"Fire",target:"allAdjacentFoes"},"Fake Tears":{bp:0,category:"Status",type:"Dark"},"Feather Dance":{bp:0,category:"Status",type:"Flying"},Flatter:{bp:0,category:"Status",type:"Dark"},"Frenzy Plant":{bp:150,type:"Grass"},Grudge:{bp:0,category:"Status",type:"Ghost"},"Helping Hand":{bp:0,category:"Status",type:"Normal",priority:5},"Hydro Cannon":{bp:150,type:"Water"},"Iron Defense":{bp:0,category:"Status",type:"Steel"},"Magical Leaf":{bp:60,type:"Grass"},"Mud Shot":{bp:55,type:"Ground"},"Poison Tail":{bp:50,type:"Poison",makesContact:!0},"Shadow Punch":{bp:60,type:"Ghost",makesContact:!0},"Shock Wave":{bp:60,type:"Electric"},Superpower:{bp:120,type:"Fighting",self:{boosts:{atk:-1,def:-1}},makesContact:!0},"Water Pulse":{bp:60,type:"Water"},"Water Spout":{bp:150,type:"Water",target:"allAdjacentFoes"},Yawn:{bp:0,category:"Status",type:"Normal"}}),g=(0,f.extend)(!0,{},p,{Absorb:{category:"Special"},"Arm Thrust":{category:"Physical"},Barrage:{category:"Physical"},"Beat Up":{category:"Physical"},Bide:{priority:1,category:"Physical"},Bind:{category:"Physical"},"Bone Rush":{category:"Physical"},Bonemerang:{category:"Physical"},Bounce:{category:"Physical"},"Brick Break":{category:"Physical"},"Bullet Seed":{category:"Physical"},Clamp:{category:"Physical"},"Comet Punch":{isPunch:!0,category:"Physical"},Counter:{category:"Physical"},Covet:{makesContact:!0,category:"Physical"},Crabhammer:{category:"Physical"},Dig:{bp:80,category:"Physical"},Dive:{bp:80,category:"Physical"},"Doom Desire":{category:"Special"},"Double-Edge":{category:"Physical"},"Double Kick":{category:"Physical"},"Double Slap":{category:"Physical"},"Dream Eater":{category:"Special"},Earthquake:{category:"Physical"},Endeavor:{category:"Physical"},Explosion:{category:"Physical"},"Extreme Speed":{category:"Physical"},"Fake Out":{makesContact:!0,category:"Physical"},"Fire Spin":{category:"Special"},Flail:{category:"Physical"},Fly:{bp:90,category:"Physical"},"Focus Punch":{isPunch:!0,category:"Physical"},"Fury Attack":{category:"Physical"},"Fury Cutter":{category:"Physical"},"Fury Swipes":{category:"Physical"},"Future Sight":{category:"Special"},"Giga Drain":{category:"Special"},Gust:{category:"Special"},"High Jump Kick":{bp:100,category:"Physical"},"Icicle Spear":{category:"Physical"},"Jump Kick":{bp:85,category:"Physical"},"Knock Off":{category:"Physical"},"Leech Life":{category:"Physical"},Magnitude:{category:"Physical"},"Mega Drain":{category:"Special"},"Mirror Coat":{category:"Special"},Outrage:{bp:120,category:"Physical"},"Petal Dance":{bp:90,category:"Special"},"Pin Missile":{category:"Physical"},Psywave:{category:"Special"},Pursuit:{category:"Physical"},"Rapid Spin":{category:"Physical"},"Razor Wind":{category:"Special"},Revenge:{category:"Physical"},Reversal:{category:"Physical"},"Rock Blast":{category:"Physical"},"Sand Tomb":{category:"Physical"},"Secret Power":{category:"Physical"},"Self-Destruct":{category:"Physical"},"Sky Uppercut":{isPunch:!0,category:"Physical"},"Smelling Salts":{category:"Physical"},"Solar Beam":{category:"Special"},"Spike Cannon":{category:"Physical"},"Spit Up":{category:"Special"},Stomp:{category:"Physical"},Struggle:{category:"Physical",struggleRecoil:!0},Submission:{category:"Physical"},Surf:{target:"allAdjacent",category:"Special"},Tackle:{category:"Physical"},"Take Down":{category:"Physical"},Thief:{category:"Physical"},Thrash:{category:"Physical"},Thunder:{category:"Special"},"Triple Kick":{category:"Physical"},Twineedle:{category:"Physical"},Twister:{category:"Special"},Uproar:{category:"Special"},"Volt Tackle":{category:"Physical"},Whirlpool:{category:"Special"},Wrap:{category:"Physical"},"Air Cutter":{category:"Special"},Blizzard:{category:"Special"},"Body Slam":{category:"Physical"},Bubble:{category:"Special"},Extrasensory:{category:"Special"},Facade:{category:"Physical"},"Fire Blast":{category:"Special"},Flamethrower:{category:"Special"},"Heat Wave":{category:"Special"},"Hidden Power":{category:"Special"},"Hidden Power Bug":{category:"Special"},"Hidden Power Dark":{category:"Special"},"Hidden Power Dragon":{category:"Special"},"Hidden Power Electric":{category:"Special"},"Hidden Power Fighting":{category:"Special"},"Hidden Power Fire":{category:"Special"},"Hidden Power Flying":{category:"Special"},"Hidden Power Ghost":{category:"Special"},"Hidden Power Grass":{category:"Special"},"Hidden Power Ground":{category:"Special"},"Hidden Power Ice":{category:"Special"},"Hidden Power Poison":{category:"Special"},"Hidden Power Psychic":{category:"Special"},"Hidden Power Rock":{category:"Special"},"Hidden Power Steel":{category:"Special"},"Hidden Power Water":{category:"Special"},"Hydro Pump":{category:"Special"},"Hyper Voice":{category:"Special"},"Ice Beam":{category:"Special"},Lick:{category:"Physical"},"Meteor Mash":{isPunch:!0,category:"Physical"},"Muddy Water":{category:"Special"},Overheat:{category:"Special",makesContact:!1},"Poison Fang":{isBite:!0,category:"Physical"},"Rock Tomb":{category:"Physical"},"Skull Bash":{category:"Physical"},Smog:{category:"Special"},Snore:{category:"Special"},Thunderbolt:{category:"Special"},"Vine Whip":{category:"Physical"},"Weather Ball":{category:"Special"},"Ice Ball":{category:"Physical"},Rollout:{category:"Physical"},"Sheer Cold":{category:"Special"},Aeroblast:{category:"Special"},"Bone Club":{category:"Physical"},Constrict:{category:"Physical"},"Dizzy Punch":{isPunch:!0,category:"Physical"},"Dragon Rage":{category:"Special"},"Egg Bomb":{category:"Physical"},"Feint Attack":{makesContact:!0,category:"Physical"},Frustration:{category:"Physical"},"Hyper Fang":{isBite:!0,category:"Physical"},"Karate Chop":{category:"Physical"},"Low Kick":{category:"Physical"},"Luster Purge":{category:"Special"},"Mist Ball":{category:"Special"},"Needle Arm":{category:"Physical"},"Psycho Boost":{category:"Special"},Rage:{category:"Physical"},Return:{category:"Physical"},"Rolling Kick":{category:"Physical"},"Sacred Fire":{category:"Physical"},"Signal Beam":{category:"Special"},"Silver Wind":{category:"Special"},"Sonic Boom":{category:"Special"},Acid:{category:"Special"},"Aerial Ace":{category:"Physical"},"Ancient Power":{category:"Special",makesContact:!1},Astonish:{category:"Physical"},"Aurora Beam":{category:"Special"},Bite:{isBite:!0,category:"Physical"},"Blast Burn":{category:"Special"},"Blaze Kick":{category:"Physical"},"Bubble Beam":{category:"Special"},Confusion:{category:"Special"},"Cross Chop":{category:"Physical"},Crunch:{isBite:!0,category:"Physical"},"Crush Claw":{category:"Physical"},Cut:{category:"Physical"},"Dragon Breath":{category:"Special"},"Dragon Claw":{category:"Physical"},"Drill Peck":{category:"Physical"},"Dynamic Punch":{isPunch:!0,category:"Physical"},Ember:{category:"Special"},Eruption:{category:"Special"},"False Swipe":{category:"Physical"},"Fire Punch":{isPunch:!0,category:"Physical"},Fissure:{category:"Physical"},"Flame Wheel":{category:"Physical"},"Frenzy Plant":{category:"Special"},Guillotine:{category:"Physical"},Headbutt:{category:"Physical"},"Horn Attack":{category:"Physical"},"Horn Drill":{category:"Physical"},"Hydro Cannon":{category:"Special"},"Hyper Beam":{category:"Special"},"Ice Punch":{isPunch:!0,category:"Physical"},"Icy Wind":{category:"Special"},"Iron Tail":{category:"Physical"},"Leaf Blade":{bp:90,category:"Physical"},"Mach Punch":{isPunch:!0,category:"Physical"},"Magical Leaf":{category:"Special"},Megahorn:{category:"Physical"},"Mega Kick":{category:"Physical"},"Mega Punch":{isPunch:!0,category:"Physical"},"Metal Claw":{category:"Physical"},"Mud Shot":{category:"Special"},"Mud-Slap":{category:"Special"},"Night Shade":{category:"Special"},Octazooka:{category:"Special"},"Paleo Wave":{category:"Special"},"Pay Day":{category:"Physical"},Peck:{category:"Physical"},"Poison Sting":{category:"Physical"},"Poison Tail":{category:"Physical"},Pound:{category:"Physical"},"Powder Snow":{category:"Special"},Present:{category:"Physical"},Psybeam:{category:"Special"},Psychic:{category:"Special"},"Quick Attack":{category:"Physical"},"Razor Leaf":{category:"Physical"},"Rock Slide":{category:"Physical"},"Rock Smash":{bp:40,category:"Physical"},"Rock Throw":{category:"Physical"},Scratch:{category:"Physical"},"Seismic Toss":{category:"Physical"},"Shadow Ball":{category:"Special"},"Shadow Punch":{isPunch:!0,category:"Physical"},"Shadow Strike":{category:"Physical"},"Shock Wave":{category:"Special"},"Sky Attack":{category:"Physical"},Slam:{category:"Physical"},Slash:{category:"Physical"},Sludge:{category:"Special"},"Sludge Bomb":{category:"Special"},Spark:{category:"Physical"},"Steel Wing":{category:"Physical"},Strength:{category:"Physical"},"Super Fang":{category:"Physical"},Superpower:{category:"Physical"},Swift:{category:"Special"},"Thunder Punch":{isPunch:!0,category:"Physical"},"Thunder Shock":{category:"Special"},"Tri Attack":{category:"Special"},"Vise Grip":{category:"Physical"},"Vital Throw":{category:"Physical"},Waterfall:{category:"Physical"},"Water Gun":{category:"Special"},"Water Pulse":{category:"Special"},"Water Spout":{category:"Special"},"Wing Attack":{category:"Physical"},"Zap Cannon":{bp:120,category:"Special"},Acupressure:{bp:0,type:"Normal"},"Aqua Ring":{bp:0,type:"Water"},Assurance:{bp:50,type:"Dark",makesContact:!0,category:"Physical"},Avalanche:{bp:60,type:"Ice",makesContact:!0,category:"Physical"},"Brave Bird":{bp:120,type:"Flying",recoil:[1,3],makesContact:!0,category:"Physical"},"Bug Bite":{bp:60,type:"Bug",makesContact:!0,category:"Physical"},Chatter:{bp:60,type:"Flying",isSound:!0,category:"Special"},Copycat:{bp:0,type:"Normal"},"Crush Grip":{bp:0,type:"Normal",makesContact:!0,category:"Physical"},Defog:{bp:0,type:"Flying"},"Double Hit":{bp:35,type:"Normal",multihit:2,makesContact:!0,category:"Physical"},"Drain Punch":{bp:60,type:"Fighting",drain:[1,2],makesContact:!0,isPunch:!0,category:"Physical"},Embargo:{bp:0,type:"Dark"},Feint:{bp:50,type:"Normal",priority:2,breaksProtect:!0,category:"Physical"},"Fire Fang":{bp:65,type:"Fire",makesContact:!0,isBite:!0,category:"Physical"},"Flare Blitz":{bp:120,type:"Fire",recoil:[1,3],makesContact:!0,category:"Physical"},Fling:{bp:0,type:"Dark",category:"Physical"},Gravity:{bp:0,type:"Psychic"},"Head Smash":{bp:150,type:"Rock",recoil:[1,2],makesContact:!0,category:"Physical"},"Heal Block":{bp:0,type:"Psychic",target:"allAdjacentFoes"},"Healing Wish":{bp:0,type:"Psychic"},"Heal Order":{bp:0,type:"Bug"},"Last Resort":{bp:130,type:"Normal",makesContact:!0,category:"Physical"},"Lucky Chant":{bp:0,type:"Normal"},"Lunar Dance":{bp:0,type:"Psychic"},"Magma Storm":{bp:120,type:"Fire",category:"Special"},"Magnet Rise":{bp:0,type:"Electric"},"Me First":{bp:0,type:"Normal"},"Metal Burst":{bp:0,type:"Steel",category:"Physical"},"Miracle Eye":{bp:0,type:"Psychic"},"Natural Gift":{bp:0,type:"Normal",category:"Physical"},Payback:{bp:50,type:"Dark",makesContact:!0,category:"Physical"},Pluck:{bp:60,type:"Flying",makesContact:!0,category:"Physical"},"Power Trick":{bp:0,type:"Psychic"},Roost:{bp:0,type:"Flying"},"Stealth Rock":{bp:0,type:"Rock"},"Sucker Punch":{bp:80,type:"Dark",priority:1,makesContact:!0,category:"Physical"},Switcheroo:{bp:0,type:"Dark"},Tailwind:{bp:0,type:"Flying"},"Toxic Spikes":{bp:0,type:"Poison"},"Trick Room":{bp:0,type:"Psychic"},"U-turn":{bp:70,type:"Bug",makesContact:!0,category:"Physical"},"Wake-Up Slap":{bp:60,type:"Fighting",makesContact:!0,category:"Physical"},"Wood Hammer":{bp:120,type:"Grass",recoil:[1,3],makesContact:!0,category:"Physical"},"Worry Seed":{bp:0,type:"Grass"},"Wring Out":{bp:0,type:"Normal",makesContact:!0,category:"Special"},"Air Slash":{bp:75,type:"Flying",category:"Special"},"Aura Sphere":{bp:90,type:"Fighting",category:"Special"},"Bug Buzz":{bp:90,type:"Bug",isSound:!0,category:"Special"},"Draco Meteor":{bp:140,type:"Dragon",self:{boosts:{spa:-2}},category:"Special"},"Dragon Pulse":{bp:90,type:"Dragon",category:"Special"},"Dragon Rush":{bp:100,type:"Dragon",makesContact:!0,category:"Physical"},"Energy Ball":{bp:80,type:"Grass",category:"Special"},"Gunk Shot":{bp:120,type:"Poison",category:"Physical"},"Gyro Ball":{bp:0,type:"Steel",makesContact:!0,category:"Physical"},"Leaf Storm":{bp:140,type:"Grass",self:{boosts:{spa:-2}},category:"Special"},"Power Gem":{bp:70,type:"Rock",category:"Special"},"Psycho Shift":{bp:0,type:"Psychic"},"Shadow Force":{bp:120,type:"Ghost",breaksProtect:!0,makesContact:!0,category:"Physical"},"Dark Void":{bp:0,type:"Dark",target:"allAdjacentFoes"},"Gastro Acid":{bp:0,type:"Poison"},Captivate:{bp:0,type:"Normal",target:"allAdjacentFoes"},"Grass Knot":{bp:0,type:"Grass",makesContact:!0,category:"Special"},"Heart Swap":{bp:0,type:"Psychic"},Judgment:{bp:100,type:"Normal",category:"Special"},"Magnet Bomb":{bp:60,type:"Steel",category:"Physical"},"Mirror Shot":{bp:65,type:"Steel",category:"Special"},"Mud Bomb":{bp:65,type:"Ground",category:"Special"},"Ominous Wind":{bp:60,type:"Ghost",category:"Special"},Punishment:{bp:0,type:"Dark",makesContact:!0,category:"Physical"},"Roar of Time":{bp:150,type:"Dragon",category:"Special"},"Rock Climb":{bp:90,type:"Normal",makesContact:!0,category:"Physical"},"Seed Flare":{bp:120,type:"Grass",category:"Special"},"Spacial Rend":{bp:100,type:"Dragon",category:"Special"},"Trump Card":{bp:0,type:"Normal",makesContact:!0,category:"Special"},"Aqua Jet":{bp:40,type:"Water",priority:1,makesContact:!0,category:"Physical"},"Aqua Tail":{bp:90,type:"Water",makesContact:!0,category:"Physical"},"Attack Order":{bp:90,type:"Bug",category:"Physical"},Brine:{bp:65,type:"Water",category:"Special"},"Bullet Punch":{bp:40,type:"Steel",priority:1,makesContact:!0,isPunch:!0,category:"Physical"},"Charge Beam":{bp:50,type:"Electric",category:"Special"},"Close Combat":{bp:120,type:"Fighting",makesContact:!0,category:"Physical"},"Cross Poison":{bp:70,type:"Poison",makesContact:!0,category:"Physical"},"Dark Pulse":{bp:80,type:"Dark",category:"Special"},"Defend Order":{bp:0,type:"Bug"},Discharge:{bp:80,type:"Electric",target:"allAdjacent",category:"Special"},"Earth Power":{bp:90,type:"Ground",category:"Special"},"Flash Cannon":{bp:80,type:"Steel",category:"Special"},"Focus Blast":{bp:120,type:"Fighting",category:"Special"},"Force Palm":{bp:60,type:"Fighting",makesContact:!0,category:"Physical"},"Giga Impact":{bp:150,type:"Normal",makesContact:!0,category:"Physical"},"Guard Swap":{bp:0,type:"Psychic"},"Hammer Arm":{bp:100,type:"Fighting",makesContact:!0,isPunch:!0,category:"Physical"},"Ice Fang":{bp:65,type:"Ice",makesContact:!0,isBite:!0,category:"Physical"},"Ice Shard":{bp:40,type:"Ice",priority:1,category:"Physical"},"Iron Head":{bp:80,type:"Steel",makesContact:!0,category:"Physical"},"Lava Plume":{bp:80,type:"Fire",target:"allAdjacent",category:"Special"},"Nasty Plot":{bp:0,type:"Dark"},"Night Slash":{bp:70,type:"Dark",makesContact:!0,category:"Physical"},"Poison Jab":{bp:80,type:"Poison",makesContact:!0,category:"Physical"},"Power Swap":{bp:0,type:"Psychic"},"Power Whip":{bp:120,type:"Grass",makesContact:!0,category:"Physical"},"Psycho Cut":{bp:70,type:"Psychic",category:"Physical"},"Rock Polish":{bp:0,type:"Rock"},"Rock Wrecker":{bp:150,type:"Rock",category:"Physical"},"Seed Bomb":{bp:80,type:"Grass",category:"Physical"},"Shadow Claw":{bp:70,type:"Ghost",makesContact:!0,category:"Physical"},"Shadow Sneak":{bp:40,type:"Ghost",priority:1,makesContact:!0,category:"Physical"},"Stone Edge":{bp:100,type:"Rock",category:"Physical"},"Thunder Fang":{bp:65,type:"Electric",makesContact:!0,isBite:!0,category:"Physical"},"Vacuum Wave":{bp:40,type:"Fighting",priority:1,category:"Special"},"X-Scissor":{bp:80,type:"Bug",makesContact:!0,category:"Physical"},"Zen Headbutt":{bp:80,type:"Psychic",makesContact:!0,category:"Physical"}}),d=(0,f.extend)(!0,{},g,{"Air Slash":{secondaries:!0},Blizzard:{secondaries:!0},"Body Slam":{secondaries:!0},Bounce:{secondaries:!0},Bubble:{secondaries:!0},"Brave Bird":{recoil:[33,100]},"Bug Buzz":{secondaries:!0},Chatter:{secondaries:!0},Covet:{bp:60},"Dragon Rush":{secondaries:!0},"Drain Punch":{bp:75},"Energy Ball":{secondaries:!0},Extrasensory:{secondaries:!0},Feint:{bp:30},Detect:{priority:4},"Double-Edge":{recoil:[33,100]},Protect:{priority:4},"Fire Blast":{secondaries:!0},"Fire Spin":{bp:35},Flamethrower:{secondaries:!0},"Fury Cutter":{bp:20},"Future Sight":{bp:100,type:"Psychic"},"Giga Drain":{bp:75},"Gunk Shot":{secondaries:!0},"Heat Wave":{secondaries:!0},"Ice Beam":{secondaries:!0},Lick:{secondaries:!0},"Meteor Mash":{secondaries:!0},"Muddy Water":{secondaries:!0},Overheat:{},"Poison Fang":{secondaries:!0},"Poison Gas":{target:"allAdjacentFoes"},"Rock Tomb":{secondaries:!0},"Sand Tomb":{bp:35},"Secret Power":{secondaries:!0},Smog:{secondaries:!0},Snore:{secondaries:!0},Stomp:{secondaries:!0},Thunder:{secondaries:!0},Thunderbolt:{secondaries:!0},Uproar:{bp:90},Whirlpool:{bp:35},"Petal Dance":{bp:120},Tackle:{bp:50},Thrash:{bp:120},"Bone Club":{secondaries:!0},Constrict:{secondaries:!0},"Dizzy Punch":{secondaries:!0},"Hyper Fang":{secondaries:!0},"Jump Kick":{bp:100},"Luster Purge":{secondaries:!0},"Mirror Shot":{secondaries:!0},"Mist Ball":{secondaries:!0},"Mud Bomb":{secondaries:!0},"Needle Arm":{secondaries:!0},"Ominous Wind":{secondaries:!0},"Rock Climb":{secondaries:!0},"Rolling Kick":{secondaries:!0},"Sacred Fire":{secondaries:!0},"Seed Flare":{secondaries:!0},"Signal Beam":{secondaries:!0},"Silver Wind":{secondaries:!0},Twineedle:{secondaries:!0},Acid:{secondaries:!0},"Ancient Power":{secondaries:!0},Astonish:{secondaries:!0},"Aurora Beam":{secondaries:!0},"Beat Up":{bp:0},Bite:{secondaries:!0},"Blaze Kick":{secondaries:!0},"Bubble Beam":{secondaries:!0},"Bullet Seed":{bp:25},"Charge Beam":{secondaries:!0},Confusion:{secondaries:!0},"Cross Poison":{secondaries:!0},Crunch:{secondaries:!0},"Crush Claw":{secondaries:!0},Curse:{type:"Ghost"},"Dark Pulse":{secondaries:!0},Discharge:{secondaries:!0},"Doom Desire":{bp:140},"Dragon Breath":{secondaries:!0},"Dynamic Punch":{secondaries:!0},"Earth Power":{secondaries:!0},"Extreme Speed":{priority:2},Ember:{secondaries:!0},"Fake Out":{secondaries:!0,priority:3},"Fire Fang":{secondaries:!0},"Fire Punch":{secondaries:!0},"Flame Wheel":{secondaries:!0},"Flare Blitz":{secondaries:!0,recoil:[33,100]},"Flash Cannon":{secondaries:!0},"Focus Blast":{secondaries:!0},"Force Palm":{secondaries:!0},Headbutt:{secondaries:!0},"High Jump Kick":{bp:130},"Ice Fang":{secondaries:!0},"Ice Punch":{secondaries:!0},"Icicle Spear":{bp:25},"Icy Wind":{secondaries:!0},"Iron Head":{secondaries:!0},"Iron Tail":{secondaries:!0},"Last Resort":{bp:140},"Lava Plume":{secondaries:!0},"Metal Claw":{secondaries:!0},"Mud Shot":{secondaries:!0},"Mud-Slap":{secondaries:!0},Octazooka:{secondaries:!0},"Paleo Wave":{secondaries:!0},"Poison Jab":{secondaries:!0},"Poison Sting":{secondaries:!0},"Poison Tail":{secondaries:!0},"Powder Snow":{secondaries:!0},Psybeam:{secondaries:!0},Psychic:{secondaries:!0},"Rock Slide":{secondaries:!0},"Rock Smash":{secondaries:!0},"Shadow Ball":{secondaries:!0},"Shadow Strike":{secondaries:!0},"Sky Attack":{secondaries:!0},Sludge:{secondaries:!0},"Sludge Bomb":{secondaries:!0},Spark:{secondaries:!0},"Steel Wing":{secondaries:!0},"Thunder Fang":{secondaries:!0},"Thunder Punch":{secondaries:!0},"Thunder Shock":{secondaries:!0},"Tri Attack":{secondaries:!0},Twister:{secondaries:!0},"Volt Tackle":{secondaries:!0,recoil:[33,100]},"Wood Hammer":{recoil:[33,100]},Waterfall:{secondaries:!0},"Water Pulse":{secondaries:!0},"Zap Cannon":{secondaries:!0},"Zen Headbutt":{secondaries:!0},Autotomize:{bp:0,type:"Steel"},Bestow:{bp:0,type:"Normal"},"Echoed Voice":{bp:40,type:"Normal",isSound:!0,category:"Special"},"Electro Ball":{bp:0,type:"Electric",category:"Special"},Entrainment:{bp:0,type:"Normal"},"Final Gambit":{bp:0,type:"Fighting",makesContact:!0,category:"Special"},"Fire Pledge":{bp:50,type:"Fire",category:"Special"},"Frost Breath":{bp:40,type:"Ice",willCrit:!0,category:"Special"},"Grass Pledge":{bp:50,type:"Grass",category:"Special"},"Heal Pulse":{bp:0,type:"Psychic"},"Heat Crash":{bp:0,type:"Fire",makesContact:!0,category:"Physical"},Hex:{bp:50,type:"Ghost",category:"Special"},"Horn Leech":{bp:75,type:"Grass",drain:[1,2],makesContact:!0,category:"Physical"},Hurricane:{bp:120,type:"Flying",category:"Special",secondaries:!0},Incinerate:{bp:30,type:"Fire",target:"allAdjacentFoes",category:"Special"},"Low Sweep":{bp:60,type:"Fighting",makesContact:!0,category:"Physical",secondaries:!0},"Magic Room":{bp:0,type:"Psychic"},"Quick Guard":{bp:0,type:"Fighting",priority:3},"Rage Powder":{bp:0,type:"Bug",priority:3},"Relic Song":{bp:75,type:"Normal",isSound:!0,target:"allAdjacentFoes",category:"Special",secondaries:!0},Round:{bp:60,type:"Normal",isSound:!0,category:"Special"},"Sacred Sword":{bp:90,type:"Fighting",makesContact:!0,category:"Physical",ignoreDefensive:!0},Scald:{bp:80,type:"Water",category:"Special",secondaries:!0},"Simple Beam":{bp:0,type:"Normal"},"Sky Drop":{bp:60,type:"Flying",makesContact:!0,category:"Physical"},Snarl:{bp:55,type:"Dark",isSound:!0,target:"allAdjacentFoes",category:"Special",secondaries:!0},Soak:{bp:0,type:"Water"},Steamroller:{bp:65,type:"Bug",makesContact:!0,category:"Physical",secondaries:!0},"Storm Throw":{bp:40,type:"Fighting",willCrit:!0,makesContact:!0,category:"Physical"},"Struggle Bug":{bp:30,type:"Bug",target:"allAdjacentFoes",category:"Special",secondaries:!0},Synchronoise:{bp:70,type:"Psychic",target:"allAdjacent",category:"Special"},"Techno Blast":{bp:85,type:"Normal",category:"Special"},Telekinesis:{bp:0,type:"Psychic"},"Water Pledge":{bp:50,type:"Water",category:"Special"},"Wide Guard":{bp:0,type:"Rock",priority:3},"Wonder Room":{bp:0,type:"Psychic"},"Ally Switch":{bp:0,type:"Psychic",priority:1},"Flame Burst":{bp:70,type:"Fire",category:"Special"},"Heavy Slam":{bp:0,type:"Steel",makesContact:!0,category:"Physical"},"Reflect Type":{bp:0,type:"Normal"},"Volt Switch":{bp:70,type:"Electric",category:"Special"},"Chip Away":{bp:70,type:"Normal",makesContact:!0,category:"Physical",ignoreDefensive:!0},"Fiery Dance":{bp:80,type:"Fire",category:"Special",secondaries:!0},"Head Charge":{bp:120,type:"Normal",recoil:[1,4],makesContact:!0,category:"Physical"},"Heart Stamp":{bp:60,type:"Psychic",makesContact:!0,category:"Physical",secondaries:!0},Quash:{bp:0,type:"Dark"},"Searing Shot":{bp:100,type:"Fire",target:"allAdjacent",category:"Special",secondaries:!0},"Acid Spray":{bp:40,type:"Poison",category:"Special",secondaries:!0},Acrobatics:{bp:55,type:"Flying",makesContact:!0,category:"Physical"},"After You":{bp:0,type:"Normal"},"Blue Flare":{bp:130,type:"Fire",category:"Special",secondaries:!0},"Bolt Strike":{bp:130,type:"Electric",makesContact:!0,category:"Physical",secondaries:!0},Bulldoze:{bp:60,type:"Ground",target:"allAdjacent",category:"Physical",secondaries:!0},"Circle Throw":{bp:60,type:"Fighting",makesContact:!0,category:"Physical"},"Clear Smog":{bp:50,type:"Poison",category:"Special"},Coil:{bp:0,type:"Poison"},"Cotton Guard":{bp:0,type:"Grass"},"Dragon Tail":{bp:60,type:"Dragon",makesContact:!0,category:"Physical"},"Drill Run":{bp:80,type:"Ground",makesContact:!0,category:"Physical"},"Dual Chop":{bp:40,type:"Dragon",multihit:2,makesContact:!0,category:"Physical"},Electroweb:{bp:55,type:"Electric",target:"allAdjacentFoes",category:"Special",secondaries:!0},"Flame Charge":{bp:50,type:"Fire",makesContact:!0,category:"Physical",secondaries:!0},"Foul Play":{bp:95,type:"Dark",makesContact:!0,category:"Physical",overrideOffensivePokemon:"target"},"Freeze Shock":{bp:140,type:"Ice",category:"Physical",secondaries:!0},"Fusion Bolt":{bp:100,type:"Electric",category:"Physical"},"Fusion Flare":{bp:100,type:"Fire",category:"Special"},"Gear Grind":{bp:50,type:"Steel",multihit:2,makesContact:!0,category:"Physical"},Glaciate:{bp:65,type:"Ice",target:"allAdjacentFoes",category:"Special",secondaries:!0},"Guard Split":{bp:0,type:"Psychic"},"Hone Claws":{bp:0,type:"Dark"},"Ice Burn":{bp:140,type:"Ice",category:"Special",secondaries:!0},"Icicle Crash":{bp:85,type:"Ice",category:"Physical",secondaries:!0},Inferno:{bp:100,type:"Fire",category:"Special",secondaries:!0},"Leaf Tornado":{bp:65,type:"Grass",category:"Special",secondaries:!0},"Night Daze":{bp:85,type:"Dark",category:"Special",secondaries:!0},"Power Split":{bp:0,type:"Psychic"},Psyshock:{bp:80,type:"Psychic",category:"Special",overrideDefensiveStat:"def"},Psystrike:{bp:100,type:"Psychic",category:"Special",overrideDefensiveStat:"def"},"Quiver Dance":{bp:0,type:"Bug"},"Razor Shell":{bp:75,type:"Water",makesContact:!0,category:"Physical",secondaries:!0},Retaliate:{bp:70,type:"Normal",makesContact:!0,category:"Physical"},"Secret Sword":{bp:85,type:"Fighting",category:"Special",overrideDefensiveStat:"def"},"Shell Smash":{bp:0,type:"Normal"},"Shift Gear":{bp:0,type:"Steel"},"Sludge Wave":{bp:95,type:"Poison",target:"allAdjacent",category:"Special",secondaries:!0},"Smack Down":{bp:50,type:"Rock",category:"Physical"},"Stored Power":{bp:20,type:"Psychic",category:"Special"},"Tail Slap":{bp:25,type:"Normal",multihit:[2,5],makesContact:!0,category:"Physical"},"V-create":{bp:180,type:"Fire",makesContact:!0,category:"Physical"},Venoshock:{bp:65,type:"Poison",category:"Special"},"Wild Charge":{bp:90,type:"Electric",recoil:[1,4],makesContact:!0,category:"Physical"},"Work Up":{bp:0,type:"Normal"}});delete d["Faint Attack"];var h=(0,f.extend)(!0,{},d,{"Ice Ball":{isBullet:!0},"Knock Off":{bp:65},Thief:{bp:60},Barrage:{isBullet:!0},Bubble:{bp:40},Chatter:{bp:65},"Egg Bomb":{isBullet:!0},"Follow Me":{priority:2},Hurricane:{bp:110},"Hidden Power":{bp:60},"Hidden Power Bug":{bp:60},"Hidden Power Dark":{bp:60},"Hidden Power Dragon":{bp:60},"Hidden Power Electric":{bp:60},"Hidden Power Fighting":{bp:60},"Hidden Power Fire":{bp:60},"Hidden Power Flying":{bp:60},"Hidden Power Ghost":{bp:60},"Hidden Power Grass":{bp:60},"Hidden Power Ground":{bp:60},"Hidden Power Ice":{bp:60},"Hidden Power Poison":{bp:60},"Hidden Power Psychic":{bp:60},"Hidden Power Rock":{bp:60},"Hidden Power Steel":{bp:60},"Hidden Power Water":{bp:60},"Magma Storm":{bp:100},"Magnet Bomb":{isBullet:!0},"Mist Ball":{isBullet:!0},Moonlight:{type:"Fairy"},"Mud Bomb":{isBullet:!0},"Searing Shot":{isBullet:!0},"Smelling Salts":{bp:70},Synchronoise:{bp:120},"Techno Blast":{bp:120},Thunder:{bp:110},"Wake-Up Slap":{bp:70},"Acid Spray":{isBullet:!0},"Air Cutter":{bp:60},"Ancient Power":{},Assurance:{bp:60},"Aura Sphere":{bp:80,isBullet:!0,isPulse:!0},Blizzard:{bp:110},"Bullet Seed":{isBullet:!0},Charm:{type:"Fairy"},"Cotton Spore":{target:"allAdjacentFoes"},Crabhammer:{bp:100},"Dark Pulse":{isPulse:!0},"Draco Meteor":{bp:130},"Dragon Pulse":{bp:85,isPulse:!0},"Electro Ball":{isBullet:!0},"Energy Ball":{bp:90,isBullet:!0},"Final Gambit":{makesContact:!1},"Fire Blast":{bp:110},"Fire Pledge":{bp:80},Flamethrower:{bp:90},"Focus Blast":{isBullet:!0},"Frost Breath":{bp:60},"Fury Cutter":{bp:40},"Future Sight":{bp:120},"Grass Pledge":{bp:80},"Gyro Ball":{isBullet:!0},"Heal Pulse":{isPulse:!0},"Heat Wave":{bp:95},Hex:{bp:65},"Hydro Pump":{bp:110},"Ice Beam":{bp:90},Incinerate:{bp:60},"Leaf Storm":{bp:130},Lick:{bp:30},"Low Sweep":{bp:65},"Meteor Mash":{bp:90},"Muddy Water":{bp:90},Octazooka:{isBullet:!0},Overheat:{bp:130},"Pin Missile":{bp:25},"Power Gem":{bp:80},"Rage Powder":{priority:2},"Rock Tomb":{bp:60},"Rock Wrecker":{isBullet:!0},"Seed Bomb":{isBullet:!0},"Shadow Ball":{isBullet:!0},"Skull Bash":{bp:130},"Sludge Bomb":{isBullet:!0},Smog:{bp:30},Snore:{bp:50},"Storm Throw":{bp:60},"Struggle Bug":{bp:50},Surf:{bp:90},"Sweet Kiss":{type:"Fairy"},Thunderbolt:{bp:90},"Vine Whip":{bp:45},"Water Pledge":{bp:80},"Water Pulse":{isPulse:!0},"Weather Ball":{isBullet:!0},"Zap Cannon":{isBullet:!0},"Diamond Storm":{bp:100,type:"Rock",target:"allAdjacentFoes",category:"Physical",secondaries:!0},"Fell Stinger":{bp:30,type:"Bug",makesContact:!0,category:"Physical"},"Flying Press":{bp:80,type:"Fighting",makesContact:!0,category:"Physical"},"Hyperspace Fury":{bp:100,type:"Dark",breaksProtect:!0,category:"Physical"},"Hyperspace Hole":{bp:80,type:"Psychic",breaksProtect:!0,category:"Special"},"King's Shield":{bp:0,type:"Steel",priority:4},"Misty Terrain":{bp:0,type:"Fairy"},"Mystical Fire":{bp:65,type:"Fire",category:"Special",secondaries:!0},"Parabolic Charge":{bp:50,type:"Electric",drain:[1,2],target:"allAdjacent",category:"Special"},"Parting Shot":{bp:0,type:"Dark",isSound:!0},"Phantom Force":{bp:90,type:"Ghost",breaksProtect:!0,makesContact:!0,category:"Physical"},Powder:{bp:0,type:"Bug",priority:1},"Spiky Shield":{bp:0,type:"Grass",priority:4},"Thousand Arrows":{bp:90,type:"Ground",target:"allAdjacentFoes",category:"Physical"},"Thousand Waves":{bp:90,type:"Ground",target:"allAdjacentFoes",category:"Physical"},"Water Shuriken":{bp:15,type:"Water",multihit:[2,5],priority:1,category:"Physical"},"Dragon Ascent":{bp:120,type:"Flying",makesContact:!0,category:"Physical"},"Electric Terrain":{bp:0,type:"Electric"},Geomancy:{bp:0,type:"Fairy"},"Grassy Terrain":{bp:0,type:"Grass"},"Ion Deluge":{bp:0,type:"Electric",priority:1},"Land's Wrath":{bp:90,type:"Ground",target:"allAdjacentFoes",category:"Physical"},"Light of Ruin":{bp:140,type:"Fairy",recoil:[1,2],category:"Special"},"Oblivion Wing":{bp:80,type:"Flying",drain:[3,4],category:"Special"},"Origin Pulse":{bp:110,type:"Water",target:"allAdjacentFoes",category:"Special",isPulse:!0},"Precipice Blades":{bp:120,type:"Ground",target:"allAdjacentFoes",category:"Physical"},Rototiller:{bp:0,type:"Ground"},"Steam Eruption":{bp:110,type:"Water",category:"Special",secondaries:!0},"Aromatic Mist":{bp:0,type:"Fairy"},"Baby-Doll Eyes":{bp:0,type:"Fairy",priority:1},Belch:{bp:120,type:"Poison",category:"Special"},Boomburst:{bp:140,type:"Normal",isSound:!0,target:"allAdjacent",category:"Special"},Celebrate:{bp:0,type:"Normal"},Confide:{bp:0,type:"Normal",isSound:!0},"Crafty Shield":{bp:0,type:"Fairy",priority:3},"Dazzling Gleam":{bp:80,type:"Fairy",target:"allAdjacentFoes",category:"Special"},"Disarming Voice":{bp:40,type:"Fairy",isSound:!0,target:"allAdjacentFoes",category:"Special"},"Draining Kiss":{bp:50,type:"Fairy",drain:[3,4],makesContact:!0,category:"Special"},"Eerie Impulse":{bp:0,type:"Electric"},Electrify:{bp:0,type:"Electric"},"Fairy Lock":{bp:0,type:"Fairy"},"Fairy Wind":{bp:40,type:"Fairy",category:"Special"},"Flower Shield":{bp:0,type:"Fairy"},"Forest's Curse":{bp:0,type:"Grass"},"Freeze-Dry":{bp:70,type:"Ice",category:"Special",secondaries:!0},"Happy Hour":{bp:0,type:"Normal"},"Hold Back":{bp:40,type:"Normal",makesContact:!0,category:"Physical"},"Hold Hands":{bp:0,type:"Normal"},Infestation:{bp:20,type:"Bug",makesContact:!0,category:"Special"},"Magnetic Flux":{bp:0,type:"Electric"},"Mat Block":{bp:0,type:"Fighting"},Moonblast:{bp:95,type:"Fairy",category:"Special",secondaries:!0},"Noble Roar":{bp:0,type:"Normal",isSound:!0},Nuzzle:{bp:20,type:"Electric",makesContact:!0,category:"Physical",secondaries:!0},"Petal Blizzard":{bp:90,type:"Grass",target:"allAdjacent",category:"Physical"},"Play Nice":{bp:0,type:"Normal"},"Play Rough":{bp:90,type:"Fairy",makesContact:!0,category:"Physical",secondaries:!0},"Power-Up Punch":{bp:40,type:"Fighting",makesContact:!0,isPunch:!0,category:"Physical",secondaries:!0},"Sticky Web":{bp:0,type:"Bug"},"Topsy-Turvy":{bp:0,type:"Dark"},"Trick-or-Treat":{bp:0,type:"Ghost"},"Venom Drench":{bp:0,type:"Poison",target:"allAdjacentFoes"}}),m=(0,f.extend)(!0,{},h,{"Ally Switch":{priority:2},Aeroblast:{zp:180},Barrage:{zp:100},Bide:{zp:100},"Bone Club":{zp:120},Bonemerang:{zp:100},Bubble:{zp:100},Chatter:{zp:120},"Chip Away":{zp:140},Clamp:{zp:100},"Comet Punch":{zp:100},Constrict:{zp:100},"Crush Grip":{zp:190},"Diamond Storm":{zp:180},"Dizzy Punch":{zp:140},"Double Slap":{zp:100},"Dragon Ascent":{zp:190},"Dragon Rage":{zp:100},"Egg Bomb":{zp:180},"Feint Attack":{zp:120},"Fiery Dance":{zp:160},"Flame Burst":{zp:140},Frustration:{zp:160},"Grass Knot":{zp:160},"Head Charge":{zp:190},"Heart Stamp":{zp:120},"Heat Crash":{zp:160},"Heavy Slam":{zp:160},Hurricane:{zp:185},"Hidden Power":{zp:120},"Hidden Power Bug":{zp:120},"Hidden Power Dark":{zp:120},"Hidden Power Dragon":{zp:120},"Hidden Power Electric":{zp:120},"Hidden Power Fighting":{zp:120},"Hidden Power Fire":{zp:120},"Hidden Power Flying":{zp:120},"Hidden Power Ghost":{zp:120},"Hidden Power Grass":{zp:120},"Hidden Power Ground":{zp:120},"Hidden Power Ice":{zp:120},"Hidden Power Poison":{zp:120},"Hidden Power Psychic":{zp:120},"Hidden Power Rock":{zp:120},"Hidden Power Steel":{zp:120},"Hidden Power Water":{zp:120},"Hyper Fang":{zp:160},"Hyperspace Fury":{zp:180},"Hyperspace Hole":{zp:160},"Ice Ball":{zp:100},Judgment:{zp:180},"Jump Kick":{zp:180},"Karate Chop":{zp:100},"Knock Off":{zp:120},"Land's Wrath":{zp:185},"Light of Ruin":{zp:200},"Low Kick":{zp:160},"Luster Purge":{zp:140},"Magma Storm":{zp:180},"Magnet Bomb":{zp:120},Magnitude:{zp:140},"Mirror Shot":{zp:120},"Mist Ball":{zp:140},"Mud Bomb":{zp:120},"Natural Gift":{zp:160},"Needle Arm":{zp:120},"Oblivion Wing":{zp:160},"Ominous Wind":{zp:120},"Origin Pulse":{zp:185},"Precipice Blades":{zp:190},"Psycho Boost":{zp:200},Psywave:{zp:100},Punishment:{zp:160},Pursuit:{zp:100},Rage:{zp:100},"Rapid Spin":{zp:100},"Razor Wind":{zp:160},"Relic Song":{zp:140},Return:{zp:160},"Roar of Time":{zp:200},"Rock Climb":{zp:175},"Rolling Kick":{zp:120},"Sacred Fire":{zp:180},"Searing Shot":{zp:180},"Secret Power":{zp:140},"Seed Flare":{zp:190},"Shadow Force":{zp:190},"Signal Beam":{zp:140},"Silver Wind":{zp:120},"Sky Drop":{zp:120},"Sky Uppercut":{zp:160},"Smelling Salts":{zp:140},"Solar Beam":{zp:190},"Sonic Boom":{zp:100},"Spacial Rend":{zp:180},"Spike Cannon":{zp:120},"Steam Eruption":{zp:185},Steamroller:{zp:120},Synchronoise:{zp:190},"Techno Blast":{zp:190},"Thousand Arrows":{zp:180},"Thousand Waves":{zp:175},"Trump Card":{zp:160},Thunder:{zp:185},Twineedle:{zp:100},"Wake-Up Slap":{zp:140},"Wring Out":{zp:190},Absorb:{zp:100},Acid:{zp:100},"Acid Spray":{zp:100},Acrobatics:{zp:100},"Aerial Ace":{zp:120},"Air Cutter":{zp:120},"Air Slash":{zp:140},"Ancient Power":{zp:120},"Aqua Jet":{zp:100},"Aqua Tail":{zp:175},"Arm Thrust":{zp:100},Assurance:{zp:120},Astonish:{zp:100},"Attack Order":{zp:175},"Aura Sphere":{zp:160},"Aurora Beam":{zp:120},Avalanche:{zp:120},"Beat Up":{zp:100},Belch:{zp:190},Bind:{zp:100},Bite:{zp:120},"Blast Burn":{zp:200},"Blaze Kick":{zp:160},Blizzard:{zp:185},"Blue Flare":{zp:195},"Body Slam":{zp:160},"Bolt Strike":{zp:195},"Bone Rush":{zp:140},Boomburst:{zp:200},Bounce:{zp:160},"Brave Bird":{zp:190},"Brick Break":{zp:140},Brine:{zp:120},"Bubble Beam":{zp:120},"Bug Bite":{zp:120},"Bug Buzz":{zp:175},Bulldoze:{zp:120},"Bullet Punch":{zp:100},"Bullet Seed":{zp:140},"Charge Beam":{zp:100},"Circle Throw":{zp:120},"Clear Smog":{zp:100},"Close Combat":{zp:190},Confusion:{zp:100},Counter:{zp:100},Covet:{zp:120},Crabhammer:{zp:180},"Cross Chop":{zp:180},"Cross Poison":{zp:140},Crunch:{zp:160},"Crush Claw":{zp:140},Cut:{zp:100},"Dark Pulse":{zp:160},"Dazzling Gleam":{zp:160},Dig:{zp:160},"Disarming Voice":{zp:100},Discharge:{zp:160},Dive:{zp:160},"Doom Desire":{zp:200},"Double-Edge":{zp:190},"Double Hit":{zp:140},"Double Kick":{zp:100},"Draco Meteor":{zp:195},"Dragon Breath":{zp:120},"Dragon Claw":{zp:160},"Dragon Pulse":{zp:160},"Dragon Rush":{zp:180},"Dragon Tail":{zp:120},"Draining Kiss":{zp:100},"Drain Punch":{zp:140},"Dream Eater":{zp:180},"Drill Peck":{zp:160},"Drill Run":{zp:160},"Dual Chop":{zp:100},"Dynamic Punch":{zp:180},"Earth Power":{zp:175},Earthquake:{zp:180},"Echoed Voice":{zp:100},"Electro Ball":{zp:160},Electroweb:{zp:100},Ember:{zp:100},Endeavor:{zp:160},"Energy Ball":{zp:175},Eruption:{zp:200},Explosion:{zp:200},Extrasensory:{zp:160},"Extreme Speed":{zp:160},Facade:{zp:140},"Fairy Wind":{zp:100},"Fake Out":{zp:100},"False Swipe":{zp:100},Feint:{zp:100},"Fell Stinger":{bp:50,zp:100},"Final Gambit":{zp:180},"Fire Blast":{zp:185},"Fire Fang":{zp:120},"Fire Pledge":{zp:160},"Fire Punch":{zp:140},"Fire Spin":{zp:100},Fissure:{zp:180},Flail:{zp:160},"Flame Charge":{zp:100},"Flame Wheel":{zp:120},Flamethrower:{zp:175},"Flare Blitz":{zp:190},"Flash Cannon":{zp:160},Fling:{zp:100},Fly:{zp:175},"Flying Press":{bp:100,zp:170},"Focus Blast":{zp:190},"Focus Punch":{zp:200},"Force Palm":{zp:120},"Foul Play":{zp:175},"Freeze-Dry":{zp:140},"Freeze Shock":{zp:200},"Frenzy Plant":{zp:200},"Frost Breath":{zp:120},"Fury Attack":{zp:100},"Fury Cutter":{zp:100},"Fury Swipes":{zp:100},"Fusion Bolt":{zp:180},"Fusion Flare":{zp:180},"Future Sight":{zp:190},"Gear Grind":{zp:180},"Giga Drain":{zp:140},"Giga Impact":{zp:200},Glaciate:{zp:120},"Grass Pledge":{zp:160},Guillotine:{zp:180},"Gunk Shot":{zp:190},Gust:{zp:100},"Gyro Ball":{zp:160},"Hammer Arm":{zp:180},Headbutt:{zp:140},"Head Smash":{zp:200},"Heat Wave":{zp:175},Hex:{zp:160},"High Jump Kick":{zp:195},"Hold Back":{zp:100},"Horn Attack":{zp:120},"Horn Drill":{zp:180},"Horn Leech":{zp:140},"Hydro Cannon":{zp:200},"Hydro Pump":{zp:185},"Hyper Beam":{zp:200},"Hyper Voice":{zp:175},"Ice Beam":{zp:175},"Ice Burn":{zp:200},"Ice Fang":{zp:120},"Ice Punch":{zp:140},"Ice Shard":{zp:100},"Icicle Crash":{zp:160},"Icicle Spear":{zp:140},"Icy Wind":{zp:100},Incinerate:{zp:120},Inferno:{zp:180},Infestation:{zp:100},"Iron Head":{zp:160},"Iron Tail":{zp:180},"Last Resort":{zp:200},"Lava Plume":{zp:160},"Leaf Blade":{zp:175},"Leaf Storm":{zp:195},"Leaf Tornado":{zp:120},"Leech Life":{bp:80,zp:160},Lick:{zp:100},"Low Sweep":{zp:120},"Mach Punch":{zp:100},"Magical Leaf":{zp:120},"Mega Drain":{zp:120},Megahorn:{zp:190},"Mega Kick":{zp:190},"Mega Punch":{zp:160},"Metal Burst":{zp:100},"Metal Claw":{zp:100},"Meteor Mash":{zp:175},"Mirror Coat":{zp:100},Moonblast:{zp:175},"Mud Shot":{zp:100},"Mud-Slap":{zp:100},"Muddy Water":{zp:175},"Mystical Fire":{bp:75,zp:140},"Night Daze":{zp:160},"Night Shade":{zp:100},"Night Slash":{zp:140},Nuzzle:{zp:100},Octazooka:{zp:120},Outrage:{zp:190},Overheat:{zp:195},"Paleo Wave":{zp:160},"Parabolic Charge":{bp:65,zp:120},Payback:{zp:100},"Pay Day":{zp:100},Peck:{zp:100},"Petal Blizzard":{zp:175},"Petal Dance":{zp:190},"Phantom Force":{zp:175},"Pin Missile":{zp:140},"Play Rough":{zp:175},Pluck:{zp:120},"Poison Fang":{zp:100},"Poison Jab":{zp:160},"Poison Sting":{zp:100},"Poison Tail":{zp:100},Pound:{zp:100},"Powder Snow":{zp:100},"Power Gem":{zp:160},"Power-Up Punch":{zp:100},"Power Whip":{zp:190},Present:{zp:100},Psybeam:{zp:120},Psychic:{zp:175},"Psycho Cut":{zp:140},Psyshock:{zp:160},Psystrike:{zp:180},"Quick Attack":{zp:100},"Razor Leaf":{zp:100},"Razor Shell":{zp:140},Retaliate:{zp:140},Revenge:{zp:120},Reversal:{zp:160},"Rock Blast":{isBullet:!0,zp:140},"Rock Slide":{zp:140},"Rock Smash":{zp:100},"Rock Throw":{zp:100},"Rock Tomb":{zp:120},"Rock Wrecker":{zp:200},Rollout:{zp:100},Round:{zp:120},"Sacred Sword":{zp:175},"Sand Tomb":{zp:100},Scald:{zp:160},Scratch:{zp:100},"Secret Sword":{zp:160},"Seed Bomb":{zp:160},"Seismic Toss":{zp:100},"Self-Destruct":{zp:200},"Shadow Ball":{zp:160},"Shadow Claw":{zp:140},"Shadow Punch":{zp:120},"Shadow Sneak":{zp:100},"Shadow Strike":{zp:160},"Sheer Cold":{zp:180},"Shock Wave":{zp:120},"Skull Bash":{zp:195},"Sky Attack":{zp:200},Slam:{zp:160},Slash:{zp:140},Sludge:{zp:120},"Sludge Bomb":{zp:175},"Sludge Wave":{zp:175},"Smack Down":{zp:100},Smog:{zp:100},Snarl:{zp:100},Snore:{zp:100},Spark:{zp:120},"Spit Up":{zp:100},"Steel Wing":{zp:140},Stomp:{zp:120},"Stone Edge":{zp:180},"Stored Power":{zp:160},"Storm Throw":{zp:120},Strength:{zp:160},"Struggle Bug":{zp:100},Submission:{zp:160},"Sucker Punch":{bp:70,zp:140},"Super Fang":{zp:100},Superpower:{zp:190},Surf:{zp:175},Swift:{zp:120},Tackle:{bp:40,zp:100},"Tail Slap":{zp:140},"Take Down":{zp:175},Thief:{zp:120},Thrash:{zp:190},Thunderbolt:{zp:175},"Thunder Fang":{zp:120},"Thunder Punch":{zp:140},"Thunder Shock":{zp:100},"Tri Attack":{zp:160},"Triple Kick":{zp:120},Twister:{zp:100},"U-turn":{zp:140},Uproar:{zp:175},"Vacuum Wave":{zp:100},"V-create":{zp:220},Venoshock:{zp:120},"Vine Whip":{zp:100},"Vise Grip":{zp:100},"Vital Throw":{zp:140},"Volt Switch":{zp:140},"Volt Tackle":{zp:190},Waterfall:{zp:160},"Water Gun":{zp:100},"Water Pledge":{zp:160},"Water Pulse":{zp:120},"Water Shuriken":{category:"Special",zp:100},"Water Spout":{zp:200},"Weather Ball":{zp:160},Whirlpool:{zp:100},"Wild Charge":{zp:175},"Wing Attack":{zp:120},"Wood Hammer":{zp:190},Wrap:{zp:100},"X-Scissor":{zp:160},"Zap Cannon":{zp:190},"Zen Headbutt":{zp:160},"10,000,000 Volt Thunderbolt":{bp:195,type:"Electric",category:"Special",isZ:!0},"Acid Downpour":{bp:1,type:"Poison",category:"Physical",isZ:!0},"All-Out Pummeling":{bp:1,type:"Fighting",category:"Physical",isZ:!0},"Baddy Bad":{bp:90,type:"Dark",category:"Special",zp:175},"Baneful Bunker":{bp:0,type:"Poison",priority:4},"Beak Blast":{bp:100,type:"Flying",category:"Physical",isBullet:!0,zp:180},"Black Hole Eclipse":{bp:1,type:"Dark",category:"Physical",isZ:!0},"Bloom Doom":{bp:1,type:"Grass",category:"Physical",isZ:!0},"Bouncy Bubble":{bp:90,type:"Water",drain:[1,2],category:"Special",zp:175},"Breakneck Blitz":{bp:1,type:"Normal",category:"Physical",isZ:!0},"Buzzy Buzz":{bp:90,type:"Electric",category:"Special",secondaries:!0,zp:175},Catastropika:{bp:210,type:"Electric",makesContact:!0,category:"Physical",isZ:!0},"Clangorous Soulblaze":{bp:185,type:"Dragon",isSound:!0,target:"allAdjacentFoes",category:"Special",secondaries:!0,isZ:!0},"Continental Crush":{bp:1,type:"Rock",category:"Physical",isZ:!0},"Core Enforcer":{bp:100,type:"Dragon",target:"allAdjacentFoes",category:"Special",zp:140},"Corkscrew Crash":{bp:1,type:"Steel",category:"Physical",isZ:!0},"Devastating Drake":{bp:1,type:"Dragon",category:"Physical",isZ:!0},"Double Iron Bash":{bp:60,type:"Steel",multihit:2,makesContact:!0,isPunch:!0,category:"Physical",secondaries:!0,zp:180},"Dragon Hammer":{bp:90,type:"Dragon",makesContact:!0,category:"Physical",zp:175},"Extreme Evoboost":{bp:0,type:"Normal",isZ:!0},"Fleur Cannon":{bp:130,type:"Fairy",self:{boosts:{spa:-2}},category:"Special",zp:195},"Floral Healing":{bp:0,type:"Fairy"},"Freezy Frost":{bp:90,type:"Ice",category:"Special",zp:175},"Genesis Supernova":{bp:185,type:"Psychic",category:"Special",secondaries:!0,isZ:!0},"Gigavolt Havoc":{bp:1,type:"Electric",category:"Physical",isZ:!0},"Glitzy Glow":{bp:90,type:"Psychic",category:"Special",zp:175},"Guardian of Alola":{bp:0,type:"Fairy",category:"Special",isZ:!0},"Hydro Vortex":{bp:1,type:"Water",category:"Physical",isZ:!0},"Ice Hammer":{bp:100,type:"Ice",makesContact:!0,isPunch:!0,category:"Physical",zp:180},"Inferno Overdrive":{bp:1,type:"Fire",category:"Physical",isZ:!0},Instruct:{bp:0,type:"Psychic"},"Let's Snuggle Forever":{bp:190,type:"Fairy",makesContact:!0,category:"Physical",isZ:!0},"Light That Burns the Sky":{bp:200,type:"Psychic",category:"Special",isZ:!0},"Malicious Moonsault":{bp:180,type:"Dark",makesContact:!0,category:"Physical",isZ:!0},"Menacing Moonraze Maelstrom":{bp:200,type:"Ghost",category:"Special",isZ:!0},"Mind Blown":{bp:150,type:"Fire",mindBlownRecoil:!0,target:"allAdjacent",category:"Special",zp:200},"Multi-Attack":{bp:90,type:"Normal",makesContact:!0,category:"Physical",zp:185},"Nature's Madness":{bp:0,type:"Fairy",category:"Special",zp:100},"Never-Ending Nightmare":{bp:1,type:"Ghost",category:"Physical",isZ:!0},"Oceanic Operetta":{bp:195,type:"Water",category:"Special",isZ:!0},"Psychic Terrain":{bp:0,type:"Psychic"},"Pulverizing Pancake":{bp:210,type:"Normal",makesContact:!0,category:"Physical",isZ:!0},"Revelation Dance":{bp:90,type:"Normal",category:"Special",zp:175},"Sappy Seed":{bp:90,type:"Grass",category:"Physical",zp:175},"Savage Spin-Out":{bp:1,type:"Bug",category:"Physical",isZ:!0},"Searing Sunraze Smash":{bp:200,type:"Steel",makesContact:!0,category:"Physical",isZ:!0},"Shadow Bone":{bp:85,type:"Ghost",category:"Physical",secondaries:!0,zp:160},"Shattered Psyche":{bp:1,type:"Psychic",category:"Physical",isZ:!0},"Shore Up":{bp:0,type:"Ground"},"Sinister Arrow Raid":{bp:180,type:"Ghost",category:"Physical",isZ:!0},"Sizzly Slide":{bp:90,type:"Fire",makesContact:!0,category:"Physical",secondaries:!0,zp:175},"Solar Blade":{bp:125,type:"Grass",makesContact:!0,category:"Physical",zp:190},"Soul-Stealing 7-Star Strike":{bp:195,type:"Ghost",makesContact:!0,category:"Physical",isZ:!0},"Sparkly Swirl":{bp:90,type:"Fairy",category:"Special",zp:175},"Splintered Stormshards":{bp:190,type:"Rock",category:"Physical",isZ:!0},Spotlight:{bp:0,type:"Normal",priority:3},"Stoked Sparksurfer":{bp:175,type:"Electric",category:"Special",secondaries:!0,isZ:!0},"Subzero Slammer":{bp:1,type:"Ice",category:"Physical",isZ:!0},"Supersonic Skystrike":{bp:1,type:"Flying",category:"Physical",isZ:!0},"Tectonic Rage":{bp:1,type:"Ground",category:"Physical",isZ:!0},"Throat Chop":{bp:80,type:"Dark",makesContact:!0,category:"Physical",secondaries:!0,zp:160},"Toxic Thread":{bp:0,type:"Poison"},"Twinkle Tackle":{bp:1,type:"Fairy",category:"Physical",isZ:!0},"Zippy Zap":{bp:50,type:"Electric",willCrit:!0,priority:2,makesContact:!0,category:"Physical",zp:100},Accelerock:{bp:40,type:"Rock",priority:1,makesContact:!0,category:"Physical",zp:100},"Anchor Shot":{bp:80,type:"Steel",makesContact:!0,category:"Physical",secondaries:!0,zp:160},"Aurora Veil":{bp:0,type:"Ice"},"Brutal Swing":{bp:60,type:"Dark",makesContact:!0,target:"allAdjacent",category:"Physical",zp:120},"Burn Up":{bp:130,type:"Fire",category:"Special",zp:195},"Clanging Scales":{bp:110,type:"Dragon",isSound:!0,target:"allAdjacentFoes",category:"Special",zp:185},"Darkest Lariat":{bp:85,type:"Dark",makesContact:!0,category:"Physical",ignoreDefensive:!0,zp:160},"Fire Lash":{bp:80,type:"Fire",makesContact:!0,category:"Physical",secondaries:!0,zp:160},"First Impression":{bp:90,type:"Bug",priority:2,makesContact:!0,category:"Physical",zp:175},"Floaty Fall":{bp:90,type:"Flying",makesContact:!0,category:"Physical",secondaries:!0,zp:175},"Gear Up":{bp:0,type:"Steel"},"High Horsepower":{bp:95,type:"Ground",makesContact:!0,category:"Physical",zp:175},"Laser Focus":{bp:0,type:"Normal"},Leafage:{bp:40,type:"Grass",category:"Physical",zp:100},Liquidation:{bp:85,type:"Water",makesContact:!0,category:"Physical",secondaries:!0,zp:160},Lunge:{bp:80,type:"Bug",makesContact:!0,category:"Physical",secondaries:!0,zp:160},"Moongeist Beam":{bp:100,type:"Ghost",category:"Special",zp:180},"Photon Geyser":{bp:100,type:"Psychic",category:"Special",zp:180},"Pika Papow":{bp:0,type:"Electric",category:"Special",zp:100},"Plasma Fists":{bp:100,type:"Electric",makesContact:!0,isPunch:!0,category:"Physical",zp:180},"Pollen Puff":{bp:90,type:"Bug",category:"Special",isBullet:!0,zp:175},"Power Trip":{bp:20,type:"Dark",makesContact:!0,category:"Physical",zp:160},"Prismatic Laser":{bp:160,type:"Psychic",category:"Special",zp:200},"Psychic Fangs":{bp:85,type:"Psychic",makesContact:!0,isBite:!0,category:"Physical",zp:160},Purify:{bp:0,type:"Poison"},"Shell Trap":{bp:150,type:"Fire",target:"allAdjacentFoes",category:"Special",zp:200},"Smart Strike":{bp:70,type:"Steel",makesContact:!0,category:"Physical",zp:140},"Sparkling Aria":{bp:90,type:"Water",isSound:!0,target:"allAdjacent",category:"Special",secondaries:!0,zp:175},"Spectral Thief":{bp:90,type:"Ghost",makesContact:!0,category:"Physical",zp:175},"Speed Swap":{bp:0,type:"Psychic"},"Spirit Shackle":{bp:80,type:"Ghost",category:"Physical",secondaries:!0,zp:160},"Splishy Splash":{bp:90,type:"Water",target:"allAdjacentFoes",category:"Special",secondaries:!0,zp:175},"Stomping Tantrum":{bp:75,type:"Ground",makesContact:!0,category:"Physical",zp:140},"Strength Sap":{bp:0,type:"Grass"},"Sunsteel Strike":{bp:100,type:"Steel",makesContact:!0,category:"Physical",zp:180},"Tearful Look":{bp:0,type:"Normal"},"Trop Kick":{bp:70,type:"Grass",makesContact:!0,category:"Physical",secondaries:!0,zp:140},"Veevee Volley":{bp:0,type:"Normal",makesContact:!0,category:"Physical",zp:100},"Zing Zap":{bp:80,type:"Electric",makesContact:!0,category:"Physical",secondaries:!0,zp:160}}),y=(0,f.extend)(!0,{},m,{"Apple Acid":{bp:80,type:"Grass",category:"Special",secondaries:!0,zp:160,maxPower:130},"Astral Barrage":{bp:120,type:"Ghost",category:"Special",target:"allAdjacentFoes",zp:190,maxPower:140},"Aura Wheel":{bp:110,type:"Electric",category:"Physical",secondaries:!0,zp:185,maxPower:140},"Behemoth Bash":{bp:100,type:"Steel",makesContact:!0,category:"Physical",zp:180,maxPower:130},"Behemoth Blade":{bp:100,type:"Steel",makesContact:!0,category:"Physical",zp:180,maxPower:130},"Body Press":{bp:80,type:"Fighting",makesContact:!0,category:"Physical",overrideOffensiveStat:"def",zp:160,maxPower:90},"Bolt Beak":{bp:85,type:"Electric",makesContact:!0,category:"Physical",zp:160,maxPower:130},"Branch Poke":{bp:40,type:"Grass",makesContact:!0,category:"Physical",zp:100,maxPower:90},"Breaking Swipe":{bp:60,type:"Dragon",makesContact:!0,target:"allAdjacentFoes",category:"Physical",secondaries:!0,zp:120,maxPower:110},"Burning Jealousy":{bp:70,type:"Fire",target:"allAdjacentFoes",category:"Special",secondaries:!0,zp:140,maxPower:120},"Clangorous Soul":{bp:0,type:"Dragon",isSound:!0},Coaching:{bp:0,type:"Fighting",category:"Status"},"Corrosive Gas":{bp:0,type:"Poison",category:"Status",target:"allAdjacent"},"Court Change":{bp:0,type:"Normal"},Decorate:{bp:0,type:"Fairy"},"Dragon Darts":{bp:50,type:"Dragon",multihit:2,category:"Physical",zp:100,maxPower:130},"Dragon Energy":{bp:150,type:"Dragon",category:"Special",target:"allAdjacentFoes",zp:200,maxPower:150},"Drum Beating":{bp:80,type:"Grass",category:"Physical",secondaries:!0,zp:160,maxPower:130},"Dual Wingbeat":{bp:40,type:"Flying",category:"Physical",makesContact:!0,multihit:2,zp:100,maxPower:130},"Dynamax Cannon":{bp:100,type:"Dragon",category:"Special",zp:180,maxPower:130},"Eerie Spell":{bp:80,type:"Psychic",category:"Special",isSound:!0,secondaries:!0,zp:160,maxPower:130},Eternabeam:{bp:160,type:"Dragon",category:"Special",zp:200,maxPower:150},"Expanding Force":{bp:80,type:"Psychic",category:"Special",zp:160,maxPower:130},"False Surrender":{bp:80,type:"Dark",makesContact:!0,category:"Physical",zp:160,maxPower:130},"Fiery Wrath":{bp:90,type:"Dark",category:"Special",target:"allAdjacentFoes",secondaries:!0,zp:175,maxPower:130},"Fishious Rend":{bp:85,type:"Water",makesContact:!0,isBite:!0,category:"Physical",zp:160,maxPower:130},"Flip Turn":{bp:60,type:"Water",category:"Physical",makesContact:!0,zp:120,maxPower:110},"Freezing Glare":{bp:90,type:"Psychic",category:"Special",secondaries:!0,zp:175,maxPower:130},"Glacial Lance":{bp:130,type:"Ice",category:"Physical",target:"allAdjacentFoes",zp:195,maxPower:140},"G-Max Befuddle":{bp:10,type:"Bug",category:"Physical",isMax:!0,maxPower:1},"G-Max Centiferno":{bp:10,type:"Fire",category:"Physical",isMax:!0,maxPower:1},"G-Max Cannonade":{bp:10,type:"Water",category:"Physical",isMax:!0,maxPower:1},"G-Max Chi Strike":{bp:10,type:"Fighting",category:"Physical",isMax:!0,maxPower:1},"G-Max Cuddle":{bp:10,type:"Normal",category:"Physical",isMax:!0,maxPower:1},"G-Max Depletion":{bp:10,type:"Dragon",category:"Physical",isMax:!0,maxPower:1},"G-Max Drum Solo":{bp:160,type:"Grass",category:"Physical",isMax:!0,maxPower:1},"G-Max Fireball":{bp:160,type:"Fire",category:"Physical",isMax:!0,maxPower:1},"G-Max Finale":{bp:10,type:"Fairy",category:"Physical",isMax:!0,maxPower:1},"G-Max Foam Burst":{bp:10,type:"Water",category:"Physical",isMax:!0,maxPower:1},"G-Max Gold Rush":{bp:10,type:"Normal",category:"Physical",isMax:!0,maxPower:1},"G-Max Gravitas":{bp:10,type:"Psychic",category:"Physical",isMax:!0,maxPower:1},"G-Max Hydrosnipe":{bp:160,type:"Water",category:"Physical",isMax:!0,maxPower:1},"G-Max Malodor":{bp:10,type:"Poison",category:"Physical",isMax:!0,maxPower:1},"G-Max Meltdown":{bp:10,type:"Steel",category:"Physical",isMax:!0,maxPower:1},"G-Max One Blow":{bp:10,type:"Dark",category:"Physical",isMax:!0,maxPower:1},"G-Max Rapid Flow":{bp:10,type:"Water",category:"Physical",isMax:!0,maxPower:1},"G-Max Replenish":{bp:10,type:"Normal",category:"Physical",isMax:!0,maxPower:1},"G-Max Resonance":{bp:10,type:"Ice",category:"Physical",isMax:!0,maxPower:1},"G-Max Sandblast":{bp:10,type:"Ground",category:"Physical",isMax:!0,maxPower:1},"G-Max Smite":{bp:10,type:"Fairy",category:"Physical",isMax:!0,maxPower:1},"G-Max Snooze":{bp:10,type:"Dark",category:"Physical",isMax:!0,maxPower:1},"G-Max Steelsurge":{bp:10,type:"Steel",category:"Physical",isMax:!0,maxPower:1},"G-Max Stonesurge":{bp:10,type:"Water",category:"Physical",isMax:!0,maxPower:1},"G-Max Stun Shock":{bp:10,type:"Electric",category:"Physical",isMax:!0,maxPower:1},"G-Max Sweetness":{bp:10,type:"Grass",category:"Physical",isMax:!0,maxPower:1},"G-Max Tartness":{bp:10,type:"Grass",category:"Physical",isMax:!0,maxPower:1},"G-Max Terror":{bp:10,type:"Ghost",category:"Physical",isMax:!0,maxPower:1},"G-Max Vine Lash":{bp:10,type:"Grass",category:"Physical",isMax:!0,maxPower:1},"G-Max Volcalith":{bp:10,type:"Rock",category:"Physical",isMax:!0,maxPower:1},"G-Max Volt Crash":{bp:10,type:"Electric",category:"Physical",isMax:!0,maxPower:1},"G-Max Wildfire":{bp:10,type:"Fire",category:"Physical",isMax:!0,maxPower:1},"G-Max Wind Rage":{bp:10,type:"Flying",category:"Physical",isMax:!0,maxPower:1},"Grassy Glide":{bp:70,type:"Grass",category:"Physical",makesContact:!0,zp:140,maxPower:120},"Grav Apple":{bp:80,type:"Grass",category:"Physical",secondaries:!0,zp:160,maxPower:130},"Jaw Lock":{bp:80,type:"Dark",makesContact:!0,isBite:!0,category:"Physical",zp:160,maxPower:130},"Jungle Healing":{bp:0,type:"Grass",category:"Status"},"Lash Out":{bp:75,type:"Dark",makesContact:!0,category:"Physical",zp:140,maxPower:130},"Life Dew":{bp:0,type:"Water"},"Magic Powder":{bp:0,type:"Psychic"},"Max Airstream":{bp:10,type:"Flying",category:"Physical",isMax:!0,maxPower:1},"Max Darkness":{bp:10,type:"Dark",category:"Physical",isMax:!0,maxPower:1},"Max Flare":{bp:100,type:"Fire",category:"Physical",isMax:!0,maxPower:1},"Max Flutterby":{bp:10,type:"Bug",category:"Physical",isMax:!0,maxPower:1},"Max Geyser":{bp:10,type:"Water",category:"Physical",isMax:!0,maxPower:1},"Max Guard":{bp:0,type:"Normal",priority:4,isMax:!0},"Max Hailstorm":{bp:10,type:"Ice",category:"Physical",isMax:!0,maxPower:1},"Max Knuckle":{bp:10,type:"Fighting",category:"Physical",isMax:!0,maxPower:1},"Max Lightning":{bp:10,type:"Electric",category:"Physical",isMax:!0,maxPower:1},"Max Mindstorm":{bp:10,type:"Psychic",category:"Physical",isMax:!0,maxPower:1},"Max Ooze":{bp:10,type:"Poison",category:"Physical",isMax:!0,maxPower:1},"Max Overgrowth":{bp:10,type:"Grass",category:"Physical",isMax:!0,maxPower:1},"Max Phantasm":{bp:10,type:"Ghost",category:"Physical",isMax:!0,maxPower:1},"Max Quake":{bp:10,type:"Ground",category:"Physical",isMax:!0,maxPower:1},"Max Rockfall":{bp:10,type:"Rock",category:"Physical",isMax:!0,maxPower:1},"Max Starfall":{bp:10,type:"Fairy",category:"Physical",isMax:!0,maxPower:1},"Max Steelspike":{bp:10,type:"Steel",category:"Physical",isMax:!0,maxPower:1},"Max Strike":{bp:10,type:"Normal",category:"Physical",isMax:!0,maxPower:1},"Max Wyrmwind":{bp:10,type:"Dragon",category:"Physical",isMax:!0,maxPower:1},"Meteor Assault":{bp:150,type:"Fighting",category:"Physical",zp:200,maxPower:100},"Meteor Beam":{bp:120,type:"Rock",category:"Special",zp:190,maxPower:140},"Misty Explosion":{bp:100,type:"Fairy",category:"Special",target:"allAdjacent",zp:180,maxPower:130},"No Retreat":{bp:0,type:"Fighting"},Obstruct:{bp:0,type:"Dark",priority:4},Octolock:{bp:0,type:"Fighting"},Overdrive:{bp:80,type:"Electric",isSound:!0,target:"allAdjacentFoes",category:"Special",zp:160,maxPower:130},Poltergeist:{bp:110,type:"Ghost",category:"Physical",zp:185,maxPower:140},"Pyro Ball":{bp:120,type:"Fire",category:"Physical",secondaries:!0,isBullet:!0,zp:190,maxPower:140},"Rising Voltage":{bp:70,type:"Electric",category:"Special",zp:140,maxPower:140},"Scale Shot":{bp:25,type:"Dragon",category:"Physical",multihit:[2,5],zp:140,maxPower:130},"Shell Side Arm":{bp:90,type:"Poison",category:"Special",secondaries:!0,zp:175,maxPower:90},"Snap Trap":{bp:35,type:"Grass",makesContact:!0,category:"Physical",zp:100,maxPower:90},"Snipe Shot":{bp:80,type:"Water",category:"Special",zp:160,maxPower:130},"Scorching Sands":{bp:70,type:"Ground",category:"Special",secondaries:!0,zp:140,maxPower:120},"Skitter Smack":{bp:70,type:"Bug",category:"Physical",makesContact:!0,secondaries:!0,zp:140,maxPower:120},"Spirit Break":{bp:75,type:"Fairy",makesContact:!0,category:"Physical",secondaries:!0,zp:140,maxPower:130},"Steel Beam":{bp:140,type:"Steel",mindBlownRecoil:!0,category:"Special",zp:200,maxPower:140},"Steel Roller":{bp:130,type:"Steel",category:"Physical",makesContact:!0,zp:195,maxPower:140},"Strange Steam":{bp:90,type:"Fairy",category:"Special",secondaries:!0,zp:175,maxPower:130},"Surging Strikes":{bp:25,type:"Water",category:"Physical",makesContact:!0,willCrit:!0,isPunch:!0,multihit:3,zp:140,maxPower:130},"Terrain Pulse":{bp:50,type:"Normal",category:"Special",isPulse:!0,zp:160,maxPower:130},"Triple Axel":{bp:20,type:"Ice",category:"Physical",makesContact:!0,multihit:3,zp:120,maxPower:140},"Wicked Blow":{bp:80,type:"Dark",category:"Physical",makesContact:!0,willCrit:!0,isPunch:!0,zp:160,maxPower:130},"Stuff Cheeks":{bp:0,type:"Normal"},"Tar Shot":{bp:0,type:"Rock"},Teatime:{bp:0,type:"Normal"},"Thunder Cage":{bp:80,type:"Electric",category:"Special",zp:160,maxPower:130},"Thunderous Kick":{bp:90,type:"Fighting",category:"Physical",secondaries:!0,makesContact:!0,zp:175,maxPower:90},"10,000,000 Volt Thunderbolt":{maxPower:1},Absorb:{maxPower:90},Accelerock:{maxPower:90},Acid:{maxPower:70},"Acid Downpour":{maxPower:1},"Acid Spray":{maxPower:70},Acrobatics:{maxPower:110},"Aerial Ace":{maxPower:110},Aeroblast:{maxPower:130},"Air Cutter":{maxPower:110},"Air Slash":{maxPower:130},"All-Out Pummeling":{maxPower:1},"Anchor Shot":{maxPower:130},"Ancient Power":{maxPower:110},"Aqua Jet":{maxPower:90},"Aqua Tail":{maxPower:130},"Arm Thrust":{maxPower:70},Assurance:{maxPower:110},Astonish:{maxPower:90},"Attack Order":{maxPower:130},"Aura Sphere":{maxPower:90},"Aurora Beam":{maxPower:120},Avalanche:{maxPower:110},Barrage:{maxPower:90},"Beak Blast":{maxPower:130},"Beat Up":{maxPower:100},Belch:{maxPower:95},Bide:{maxPower:100},Bind:{maxPower:90},Bite:{maxPower:110},"Black Hole Eclipse":{maxPower:1},"Blast Burn":{maxPower:150},"Blaze Kick":{maxPower:130},Blizzard:{maxPower:140},"Bloom Doom":{maxPower:1},"Blue Flare":{maxPower:140},"Body Slam":{maxPower:130},"Bolt Strike":{maxPower:140},"Bone Club":{maxPower:120},Bonemerang:{maxPower:130},"Bone Rush":{maxPower:130},Boomburst:{maxPower:140},Bounce:{maxPower:130},"Brave Bird":{maxPower:140},"Breakneck Blitz":{maxPower:1},"Brick Break":{maxPower:90},Brine:{maxPower:120},"Brutal Swing":{maxPower:110},Bubble:{maxPower:90},"Bubble Beam":{maxPower:120},"Bug Bite":{maxPower:110},"Bug Buzz":{maxPower:130},Bulldoze:{maxPower:110},"Bullet Punch":{maxPower:90},"Bullet Seed":{maxPower:130},"Burn Up":{maxPower:140},Catastropika:{maxPower:1},"Charge Beam":{maxPower:100},Chatter:{maxPower:120},"Chip Away":{maxPower:120},"Circle Throw":{maxPower:80},Clamp:{maxPower:90},"Clanging Scales":{maxPower:140},"Clangorous Soulblaze":{maxPower:1},"Clear Smog":{maxPower:75},"Close Combat":{maxPower:95},"Comet Punch":{maxPower:100},Confusion:{maxPower:100},Constrict:{maxPower:90},"Continental Crush":{maxPower:1},"Core Enforcer":{maxPower:130},"Corkscrew Crash":{maxPower:1},Counter:{maxPower:75},Covet:{maxPower:110},Crabhammer:{maxPower:130},"Cross Chop":{maxPower:90},"Cross Poison":{maxPower:85},Crunch:{maxPower:130},"Crush Claw":{maxPower:130},"Crush Grip":{maxPower:140},Cut:{maxPower:100},"Darkest Lariat":{maxPower:130},"Dark Pulse":{maxPower:130},"Dazzling Gleam":{maxPower:130},"Devastating Drake":{maxPower:1},"Diamond Storm":{maxPower:130},Dig:{maxPower:130},"Disarming Voice":{maxPower:90},Discharge:{maxPower:130},Dive:{maxPower:130},"Dizzy Punch":{maxPower:120},"Doom Desire":{maxPower:140},"Double-Edge":{maxPower:140},"Double Hit":{maxPower:120},"Double Iron Bash":{maxPower:140},"Double Kick":{maxPower:80},"Double Slap":{maxPower:90},"Draco Meteor":{maxPower:140},"Dragon Ascent":{maxPower:140},"Dragon Breath":{maxPower:110},"Dragon Claw":{maxPower:130},"Dragon Hammer":{maxPower:130},"Dragon Pulse":{maxPower:130},"Dragon Rage":{maxPower:100},"Dragon Rush":{maxPower:130},"Dragon Tail":{maxPower:110},"Draining Kiss":{maxPower:100},"Drain Punch":{maxPower:90},"Dream Eater":{maxPower:130},"Drill Peck":{maxPower:130},"Drill Run":{maxPower:130},"Dual Chop":{maxPower:130},"Dynamic Punch":{maxPower:90},"Earth Power":{maxPower:130},Earthquake:{maxPower:130},"Echoed Voice":{maxPower:90},"Egg Bomb":{maxPower:130},"Electro Ball":{maxPower:130},Electroweb:{maxPower:110},Ember:{maxPower:90},Endeavor:{maxPower:130},"Energy Ball":{maxPower:130},Eruption:{maxPower:150},Explosion:{maxPower:150},Extrasensory:{maxPower:130},"Extreme Speed":{maxPower:130},Facade:{maxPower:120},"Fairy Wind":{maxPower:90},"Fake Out":{maxPower:90},"False Swipe":{maxPower:90},Feint:{maxPower:90},"Feint Attack":{maxPower:110},"Fell Stinger":{maxPower:100},"Fiery Dance":{maxPower:130},"Final Gambit":{maxPower:100},"Fire Blast":{maxPower:140},"Fire Fang":{maxPower:120},"Fire Lash":{maxPower:130},"Fire Pledge":{maxPower:130},"Fire Punch":{maxPower:130},"Fire Spin":{maxPower:90},"First Impression":{maxPower:130},Fissure:{maxPower:130},Flail:{maxPower:130},"Flame Burst":{maxPower:120},"Flame Charge":{maxPower:100},"Flame Wheel":{maxPower:110},Flamethrower:{maxPower:130},"Flare Blitz":{maxPower:140},"Flash Cannon":{maxPower:130},"Fleur Cannon":{maxPower:140},Fling:{maxPower:100},Fly:{maxPower:130},"Flying Press":{maxPower:90},"Focus Blast":{maxPower:95},"Focus Punch":{maxPower:100},"Force Palm":{maxPower:80},"Foul Play":{maxPower:130},"Freeze-Dry":{maxPower:120},"Freeze Shock":{maxPower:140},"Frenzy Plant":{maxPower:150},"Frost Breath":{maxPower:110},Frustration:{maxPower:130},"Fury Attack":{maxPower:90},"Fury Cutter":{maxPower:90},"Fury Swipes":{maxPower:100},"Fusion Bolt":{maxPower:130},"Fusion Flare":{maxPower:130},"Future Sight":{maxPower:140},"Gear Grind":{maxPower:130},"Genesis Supernova":{maxPower:1},"Giga Drain":{maxPower:130},"Giga Impact":{maxPower:150},"Gigavolt Havoc":{maxPower:1},Glaciate:{maxPower:120},"Grass Knot":{maxPower:130},"Grass Pledge":{maxPower:130},"Guardian of Alola":{maxPower:1},Guillotine:{maxPower:130},"Gunk Shot":{maxPower:95},Gust:{maxPower:90},"Gyro Ball":{maxPower:130},"Hammer Arm":{maxPower:90},Headbutt:{maxPower:120},"Head Charge":{maxPower:140},"Head Smash":{maxPower:150},"Heart Stamp":{maxPower:110},"Heat Crash":{maxPower:130},"Heat Wave":{maxPower:130},"Heavy Slam":{maxPower:130},Hex:{maxPower:120},"Hidden Power":{maxPower:110},"Hidden Power Bug":{maxPower:110},"Hidden Power Dark":{maxPower:110},"Hidden Power Dragon":{maxPower:110},"Hidden Power Electric":{maxPower:110},"Hidden Power Fighting":{maxPower:80},"Hidden Power Fire":{maxPower:110},"Hidden Power Flying":{maxPower:110},"Hidden Power Ghost":{maxPower:110},"Hidden Power Grass":{maxPower:110},"Hidden Power Ground":{maxPower:110},"Hidden Power Ice":{maxPower:110},"Hidden Power Poison":{maxPower:80},"Hidden Power Psychic":{maxPower:110},"Hidden Power Rock":{maxPower:110},"Hidden Power Steel":{maxPower:110},"Hidden Power Water":{maxPower:110},"High Horsepower":{maxPower:130},"High Jump Kick":{maxPower:95},"Hold Back":{maxPower:90},"Horn Attack":{maxPower:120},"Horn Drill":{maxPower:130},"Horn Leech":{maxPower:130},Howl:{isSound:!0},Hurricane:{maxPower:140},"Hydro Cannon":{maxPower:150},"Hydro Pump":{maxPower:140},"Hydro Vortex":{maxPower:1},"Hyper Beam":{maxPower:150},"Hyper Fang":{maxPower:130},"Hyperspace Fury":{maxPower:130},"Hyperspace Hole":{maxPower:130},"Hyper Voice":{maxPower:130},"Ice Ball":{maxPower:90},"Ice Beam":{maxPower:130},"Ice Burn":{maxPower:140},"Ice Fang":{maxPower:120},"Ice Hammer":{maxPower:130},"Ice Punch":{maxPower:130},"Ice Shard":{maxPower:90},"Icicle Crash":{maxPower:130},"Icicle Spear":{maxPower:130},"Icy Wind":{maxPower:110},Incinerate:{maxPower:110},Inferno:{maxPower:130},"Inferno Overdrive":{maxPower:1},Infestation:{maxPower:90},"Iron Head":{maxPower:130},"Iron Tail":{maxPower:130},Judgment:{maxPower:130},"Jump Kick":{maxPower:90},"Karate Chop":{maxPower:75},"Knock Off":{maxPower:120},"Land's Wrath":{maxPower:130},"Last Resort":{maxPower:140},"Lava Plume":{maxPower:130},Leafage:{maxPower:90},"Leaf Blade":{maxPower:130},"Leaf Storm":{maxPower:140},"Leaf Tornado":{maxPower:120},"Leech Life":{maxPower:130},"Let's Snuggle Forever":{maxPower:1},Lick:{maxPower:90},"Light of Ruin":{maxPower:140},"Light That Burns the Sky":{maxPower:1},Liquidation:{maxPower:130},"Low Kick":{maxPower:100},"Low Sweep":{maxPower:85},Lunge:{maxPower:130},"Luster Purge":{maxPower:120},"Mach Punch":{maxPower:70},"Magical Leaf":{maxPower:110},"Magma Storm":{maxPower:130},"Magnet Bomb":{maxPower:110},Magnitude:{maxPower:140},"Malicious Moonsault":{maxPower:1},"Mega Drain":{maxPower:90},Megahorn:{maxPower:140},"Mega Kick":{maxPower:140},"Mega Punch":{maxPower:130},"Menacing Moonraze Maelstrom":{maxPower:1},"Metal Burst":{maxPower:100},"Metal Claw":{maxPower:100},"Meteor Mash":{maxPower:130},"Mind Blown":{maxPower:150},"Mirror Coat":{maxPower:100},"Mirror Shot":{maxPower:120},"Mist Ball":{maxPower:120},Moonblast:{maxPower:130},"Moongeist Beam":{maxPower:130},"Mud Bomb":{maxPower:120},"Mud Shot":{maxPower:110},"Mud-Slap":{maxPower:90},"Muddy Water":{maxPower:130},"Multi-Attack":{bp:120,maxPower:95},"Mystical Fire":{maxPower:130},"Natural Gift":{maxPower:130},"Nature's Madness":{maxPower:100},"Needle Arm":{maxPower:110},"Never-Ending Nightmare":{maxPower:1},"Night Daze":{maxPower:130},"Night Shade":{maxPower:100},"Night Slash":{maxPower:120},Nuzzle:{maxPower:90},"Oblivion Wing":{maxPower:130},"Oceanic Operetta":{maxPower:1},Octazooka:{maxPower:120},"Ominous Wind":{maxPower:110},"Origin Pulse":{maxPower:140},Outrage:{maxPower:140},Overheat:{maxPower:140},"Paleo Wave":{maxPower:130},"Parabolic Charge":{maxPower:120},Payback:{maxPower:100},"Pay Day":{maxPower:90},Peck:{maxPower:90},"Petal Blizzard":{maxPower:130},"Petal Dance":{maxPower:140},"Phantom Force":{maxPower:130},"Photon Geyser":{maxPower:130},"Pin Missile":{maxPower:130},"Plasma Fists":{maxPower:130},"Play Rough":{maxPower:130},Pluck:{maxPower:110},"Poison Fang":{maxPower:75},"Poison Jab":{maxPower:90},"Poison Sting":{maxPower:70},"Poison Tail":{maxPower:75},"Pollen Puff":{maxPower:130},Pound:{maxPower:90},"Powder Snow":{maxPower:90},"Power Gem":{maxPower:130},"Power Trip":{maxPower:130},"Power-Up Punch":{maxPower:70},"Power Whip":{maxPower:140},"Precipice Blades":{maxPower:140},Present:{maxPower:100},"Prismatic Laser":{maxPower:150},Psybeam:{maxPower:120},Psychic:{maxPower:130},"Psychic Fangs":{maxPower:130},"Psycho Boost":{maxPower:140},"Psycho Cut":{maxPower:120},Psyshock:{maxPower:130},Psystrike:{maxPower:130},Psywave:{maxPower:100},"Pulverizing Pancake":{maxPower:1},Punishment:{maxPower:130},Pursuit:{maxPower:90},"Quick Attack":{maxPower:90},Rage:{maxPower:90},"Rapid Spin":{bp:50,secondaries:!0,maxPower:100},"Razor Leaf":{maxPower:110},"Razor Shell":{maxPower:130},"Razor Wind":{maxPower:130},"Relic Song":{maxPower:130},Retaliate:{maxPower:120},Return:{maxPower:130},"Revelation Dance":{maxPower:130},Revenge:{maxPower:80},Reversal:{maxPower:100},"Roar of Time":{maxPower:150},"Rock Blast":{maxPower:130},"Rock Climb":{maxPower:130},"Rock Slide":{maxPower:130},"Rock Smash":{maxPower:70},"Rock Throw":{maxPower:100},"Rock Tomb":{maxPower:110},"Rock Wrecker":{maxPower:150},"Rolling Kick":{maxPower:80},Rollout:{maxPower:90},Round:{maxPower:110},"Sacred Fire":{maxPower:130},"Sacred Sword":{maxPower:90},"Sand Tomb":{maxPower:90},"Savage Spin-Out":{maxPower:1},Scald:{maxPower:130},Scratch:{maxPower:90},"Searing Shot":{maxPower:130},"Searing Sunraze Smash":{maxPower:1},"Secret Power":{maxPower:120},"Secret Sword":{maxPower:90},"Seed Bomb":{maxPower:130},"Seed Flare":{maxPower:140},"Seismic Toss":{maxPower:75},"Self-Destruct":{maxPower:150},"Shadow Ball":{maxPower:130},"Shadow Bone":{maxPower:130},"Shadow Claw":{maxPower:120},"Shadow Force":{maxPower:140},"Shadow Punch":{maxPower:110},"Shadow Sneak":{maxPower:90},"Shadow Strike":{maxPower:130},"Shattered Psyche":{maxPower:1},"Sheer Cold":{maxPower:130},"Shell Trap":{maxPower:150},"Shock Wave":{maxPower:110},"Signal Beam":{maxPower:130},"Silver Wind":{maxPower:110},"Sinister Arrow Raid":{maxPower:1},"Skull Bash":{maxPower:140},"Sky Attack":{maxPower:140},"Sky Drop":{maxPower:110},"Sky Uppercut":{maxPower:90},Slam:{maxPower:130},Slash:{maxPower:120},Sludge:{maxPower:85},"Sludge Bomb":{maxPower:90},"Sludge Wave":{maxPower:90},"Smack Down":{maxPower:100},"Smart Strike":{maxPower:120},"Smelling Salts":{maxPower:120},Smog:{maxPower:70},Snarl:{maxPower:110},Snore:{maxPower:100},"Solar Beam":{maxPower:140},"Solar Blade":{maxPower:140},"Sonic Boom":{maxPower:100},"Soul-Stealing 7-Star Strike":{maxPower:1},"Spacial Rend":{maxPower:130},Spark:{maxPower:120},"Sparkling Aria":{maxPower:130},"Spectral Thief":{maxPower:130},"Spike Cannon":{maxPower:120},"Spirit Shackle":{maxPower:130},"Spit Up":{maxPower:100},"Splintered Stormshards":{maxPower:1},"Steam Eruption":{maxPower:140},Steamroller:{maxPower:120},"Steel Wing":{maxPower:120},"Stoked Sparksurfer":{maxPower:1},Stomp:{maxPower:120},"Stomping Tantrum":{maxPower:130},"Stone Edge":{maxPower:130},"Stored Power":{maxPower:130},"Storm Throw":{maxPower:80},Strength:{maxPower:130},"Struggle Bug":{maxPower:100},Submission:{maxPower:90},"Subzero Slammer":{maxPower:1},"Sucker Punch":{maxPower:120},"Sunsteel Strike":{maxPower:130},"Super Fang":{maxPower:100},Superpower:{maxPower:95},"Supersonic Skystrike":{maxPower:1},Surf:{maxPower:130},Swift:{maxPower:110},Synchronoise:{maxPower:140},Tackle:{maxPower:90},"Tail Slap":{maxPower:130},"Take Down":{maxPower:130},"Techno Blast":{maxPower:140},"Tectonic Rage":{maxPower:1},Thief:{maxPower:110},"Thousand Arrows":{maxPower:130},"Thousand Waves":{maxPower:130},Thrash:{maxPower:140},"Throat Chop":{maxPower:130},Thunder:{maxPower:140},Thunderbolt:{maxPower:130},"Thunder Fang":{maxPower:120},"Thunder Punch":{maxPower:130},"Thunder Shock":{maxPower:90},"Tri Attack":{maxPower:130},"Triple Kick":{maxPower:80},"Trop Kick":{maxPower:120},"Trump Card":{maxPower:130},Twineedle:{maxPower:100},"Twinkle Tackle":{maxPower:1},Twister:{maxPower:90},"U-turn":{maxPower:120},Uproar:{maxPower:130},"Vacuum Wave":{maxPower:70},"V-create":{maxPower:150},Venoshock:{maxPower:85},"Vine Whip":{maxPower:100},"Vise Grip":{maxPower:110},"Vital Throw":{maxPower:85},"Volt Switch":{maxPower:120},"Volt Tackle":{maxPower:140},"Wake-Up Slap":{maxPower:85},Waterfall:{maxPower:130},"Water Gun":{maxPower:90},"Water Pledge":{maxPower:130},"Water Pulse":{maxPower:110},"Water Shuriken":{maxPower:90},"Water Spout":{maxPower:150},"Weather Ball":{maxPower:130},Whirlpool:{maxPower:90},"Wild Charge":{maxPower:130},"Wing Attack":{maxPower:110},"Wood Hammer":{maxPower:140},Wrap:{maxPower:90},"Wring Out":{maxPower:140},"X-Scissor":{maxPower:130},"Zap Cannon":{maxPower:140},"Zen Headbutt":{maxPower:130},"Zing Zap":{maxPower:130}});try{for(var v=l(["Baddy Bad","Bouncy Bubble","Buzzy Buzz","Freezy Frost","Glitzy Glow","Sappy Seed","Sizzly Slide","Sparkly Swirl","Zippy Zap","Floaty Fall","Pika Papow","Splishy Splash","Veevee Volley"]),b=v.next();!b.done;b=v.next())delete y[O=b.value]}catch(e){a={error:e}}finally{try{b&&!b.done&&(i=v.return)&&i.call(v)}finally{if(a)throw a.error}}var P=(0,f.extend)(!0,{},y,{"Aerial Ace":{isSlicing:!0},"Air Cutter":{isSlicing:!0,isWind:!0},"Air Slash":{isSlicing:!0},"Behemoth Blade":{isSlicing:!0},Blizzard:{isWind:!0},"Cross Poison":{isSlicing:!0},Cut:{isSlicing:!0},"Fairy Wind":{isWind:!0},"Fury Cutter":{isSlicing:!0},"Glacial Lance":{bp:120,zp:190},"Grassy Glide":{bp:60,zp:120,maxPower:110},Gust:{isWind:!0},"Heat Wave":{isWind:!0},Hurricane:{isWind:!0},"Icy Wind":{isWind:!0},"Leaf Blade":{isSlicing:!0},"Night Slash":{isSlicing:!0},"Petal Blizzard":{isWind:!0},"Psycho Cut":{isSlicing:!0},"Razor Leaf":{isSlicing:!0},"Razor Shell":{isSlicing:!0},"Sacred Sword":{isSlicing:!0},Sandstorm:{isWind:!0},Slash:{isSlicing:!0},"Solar Blade":{isSlicing:!0},Tailwind:{isWind:!0},Twister:{isWind:!0},Whirlwind:{isWind:!0},"Wicked Blow":{bp:75,zp:140},"X-Scissor":{isSlicing:!0},"Aqua Cutter":{bp:70,type:"Water",category:"Physical",zp:140,maxPower:120,isSlicing:!0},"Aqua Step":{bp:80,type:"Water",category:"Physical",zp:160,maxPower:130,secondaries:!0,makesContact:!0},"Armor Cannon":{bp:120,type:"Fire",category:"Special",zp:190,maxPower:140},"Axe Kick":{bp:120,type:"Fighting",category:"Physical",zp:190,maxPower:95,secondaries:!0,hasCrashDamage:!0,makesContact:!0},"Barb Barrage":{bp:60,type:"Poison",category:"Physical",zp:120,maxPower:80,secondaries:!0},"Bitter Blade":{bp:90,type:"Fire",category:"Physical",zp:175,maxPower:130,makesContact:!0,isSlicing:!0,drain:[1,2]},"Bitter Malice":{bp:75,type:"Ghost",category:"Special",zp:140,maxPower:130,secondaries:!0},"Blazing Torque":{bp:80,type:"Fire",category:"Physical",zp:160,maxPower:130,secondaries:!0},"Bleakwind Storm":{bp:100,type:"Flying",category:"Special",zp:180,maxPower:130,secondaries:!0,isWind:!0,target:"allAdjacentFoes"},"Ceaseless Edge":{bp:65,type:"Dark",category:"Physical",zp:120,maxPower:120,makesContact:!0,isSlicing:!0,secondaries:!0},"Chilling Water":{bp:50,type:"Water",category:"Special",zp:100,maxPower:100,secondaries:!0},"Chilly Reception":{bp:0,type:"Ice",category:"Status"},Chloroblast:{bp:150,type:"Grass",mindBlownRecoil:!0,category:"Special",zp:200,maxPower:150},"Collision Course":{bp:100,type:"Fighting",category:"Physical",zp:180,maxPower:90,makesContact:!0},"Combat Torque":{bp:100,type:"Fighting",category:"Physical",zp:180,maxPower:90,secondaries:!0},Comeuppance:{bp:0,type:"Dark",category:"Physical",zp:100,maxPower:100,makesContact:!0},Doodle:{bp:0,type:"Normal",category:"Status"},"Double Shock":{bp:120,type:"Electric",category:"Physical",zp:190,maxPower:140,makesContact:!0},"Dire Claw":{bp:80,type:"Poison",category:"Physical",zp:160,maxPower:90,makesContact:!0,secondaries:!0},"Electro Drift":{bp:100,type:"Electric",category:"Special",zp:180,maxPower:130,makesContact:!0},"Esper Wing":{bp:80,type:"Psychic",category:"Special",zp:160,maxPower:130,secondaries:!0},"Fillet Away":{bp:0,type:"Normal",category:"Status"},"Flower Trick":{bp:70,type:"Grass",category:"Physical",willCrit:!0,zp:140,maxPower:120},"Gigaton Hammer":{bp:160,type:"Steel",category:"Physical",zp:200,maxPower:150},"Glaive Rush":{bp:120,type:"Dragon",category:"Physical",zp:190,maxPower:140,makesContact:!0},"Headlong Rush":{bp:120,type:"Ground",category:"Physical",zp:190,maxPower:140,makesContact:!0,isPunch:!0},"Hydro Steam":{bp:80,type:"Water",category:"Special",zp:160,maxPower:130},"Hyper Drill":{bp:100,type:"Normal",category:"Physical",zp:180,maxPower:130,makesContact:!0,breaksProtect:!0},"Ice Spinner":{bp:80,type:"Ice",category:"Physical",zp:160,maxPower:130,makesContact:!0},"Infernal Parade":{bp:60,type:"Ghost",category:"Special",zp:120,maxPower:110,secondaries:!0},"Jet Punch":{bp:60,type:"Water",category:"Physical",zp:120,maxPower:110,makesContact:!0,isPunch:!0,priority:1},"Kowtow Cleave":{bp:85,type:"Dark",category:"Physical",zp:160,maxPower:130,makesContact:!0,isSlicing:!0},"Last Respects":{bp:50,type:"Ghost",category:"Physical",zp:100,maxPower:100},"Lumina Crash":{bp:80,type:"Psychic",category:"Special",zp:160,maxPower:130,secondaries:!0},"Lunar Blessing":{bp:0,type:"Psychic",category:"Status"},"Magical Torque":{bp:100,type:"Fairy",category:"Physical",zp:180,maxPower:130,secondaries:!0},"Make It Rain":{bp:120,type:"Steel",category:"Special",zp:190,maxPower:140,target:"allAdjacentFoes",self:{boosts:{spa:-1}}},"Mortal Spin":{bp:30,type:"Poison",category:"Physical",zp:100,maxPower:70,makesContact:!0,secondaries:!0,target:"allAdjacentFoes"},"Mountain Gale":{bp:100,type:"Ice",category:"Physical",zp:180,maxPower:130,secondaries:!0},"Mystical Power":{bp:70,type:"Psychic",category:"Special",zp:140,maxPower:120,secondaries:!0},"Noxious Torque":{bp:100,type:"Poison",category:"Physical",zp:180,maxPower:90,secondaries:!0},"Order Up":{bp:80,type:"Dragon",category:"Physical",zp:160,maxPower:130,isPulse:!0},"Population Bomb":{bp:20,type:"Normal",category:"Physical",zp:100,maxPower:90,makesContact:!0,isSlicing:!0,multihit:10},Pounce:{bp:50,type:"Bug",category:"Physical",zp:100,maxPower:100,makesContact:!0,secondaries:!0},"Power Shift":{bp:0,type:"Normal",category:"Status"},Psyblade:{bp:80,type:"Psychic",category:"Physical",zp:160,maxPower:130,makesContact:!0,isSlicing:!0},"Psyshield Bash":{bp:70,type:"Psychic",category:"Physical",zp:140,maxPower:120,makesContact:!0,secondaries:!0},"Rage Fist":{bp:50,type:"Ghost",category:"Physical",zp:100,maxPower:100,makesContact:!0,isPunch:!0},"Raging Bull":{bp:90,type:"Normal",category:"Physical",zp:175,maxPower:130,makesContact:!0},"Raging Fury":{bp:120,type:"Fire",category:"Physical",zp:190,maxPower:140},"Revival Blessing":{bp:0,type:"Normal",category:"Status"},Ruination:{bp:0,type:"Dark",category:"Special",zp:100,maxPower:100},"Salt Cure":{bp:40,type:"Rock",category:"Physical",zp:100,maxPower:90,secondaries:!0},"Sandsear Storm":{bp:100,type:"Ground",category:"Special",zp:180,maxPower:130,secondaries:!0,isWind:!0,target:"allAdjacentFoes"},"Shed Tail":{bp:0,type:"Normal",category:"Status"},Shelter:{bp:0,type:"Steel",category:"Status"},"Silk Trap":{bp:0,type:"Bug",category:"Status",priority:4},Snowscape:{bp:0,type:"Ice",category:"Status"},"Spicy Extract":{bp:0,type:"Grass",category:"Status"},"Spin Out":{bp:100,type:"Steel",category:"Physical",zp:180,maxPower:130,makesContact:!0},"Springtide Storm":{bp:100,type:"Fairy",category:"Special",zp:180,maxPower:130,secondaries:!0,isWind:!0,target:"allAdjacentFoes"},"Stone Axe":{bp:65,type:"Rock",category:"Physical",zp:120,maxPower:120,makesContact:!0,isSlicing:!0,secondaries:!0},"Take Heart":{bp:0,type:"Psychic",category:"Status"},"Tera Blast":{bp:80,type:"Normal",category:"Special",zp:160,maxPower:130},"Tidy Up":{bp:0,type:"Normal",category:"Status"},"Torch Song":{bp:80,type:"Fire",category:"Special",zp:160,maxPower:130,secondaries:!0,isSound:!0},Trailblaze:{bp:50,type:"Grass",category:"Physical",zp:100,maxPower:100,secondaries:!0,makesContact:!0},"Triple Arrows":{bp:90,type:"Fighting",category:"Physical",zp:175,maxPower:90,secondaries:!0},"Triple Dive":{bp:30,type:"Water",category:"Physical",zp:100,maxPower:90,makesContact:!0,multihit:3},"Twin Beam":{bp:40,type:"Psychic",category:"Special",zp:100,maxPower:90,multihit:2},"Victory Dance":{bp:0,type:"Fighting",category:"Status"},"Wave Crash":{bp:120,type:"Water",category:"Physical",zp:190,maxPower:140,makesContact:!0,recoil:[33,100]},"Wicked Torque":{bp:80,type:"Dark",category:"Physical",zp:160,maxPower:130,secondaries:!0},"Wildbolt Storm":{bp:100,type:"Electric",category:"Special",zp:180,maxPower:130,secondaries:!0,isWind:!0,target:"allAdjacentFoes"}});t.MOVES=[{},c,u,p,g,d,h,m,y,P];var w=function(){function e(e){this.gen=e}return e.prototype.get=function(e){return k[this.gen][e]},e.prototype[Symbol.iterator]=function(){var e,t,s,a,i;return n(this,(function(r){switch(r.label){case 0:for(s in e=k[this.gen],t=[],e)t.push(s);a=0,r.label=1;case 1:return a<t.length?(s=t[a])in e?(i=s,[4,this.get(i)]):[3,3]:[3,4];case 2:r.sent(),r.label=3;case 3:return a++,[3,1];case 4:return[2]}}))},e}();t.Moves=w;var S=function(){function e(t,s,a){this.kind="Move",this.id=(0,f.toID)(t),this.name=t,this.flags={},s.makesContact&&(this.flags.contact=1),s.isPunch&&(this.flags.punch=1),s.isBite&&(this.flags.bite=1),s.isBullet&&(this.flags.bullet=1),s.isSound&&(this.flags.sound=1),s.isPulse&&(this.flags.pulse=1),s.isSlicing&&(this.flags.slicing=1),s.isWind&&(this.flags.wind=1),(0,f.assignWithout)(this,s,e.FLAGS),this.basePower=s.bp,s.zp&&(this.zMove={basePower:s.zp}),s.maxPower&&(this.maxMove={basePower:s.maxPower}),!this.category&&a>=4&&(this.category="Status"),this.struggleRecoil&&delete this.recoil}return e.FLAGS=new Set(["bp","makesContact","isPunch","isBite","isBullet","isSound","isPulse","zp","maxPower","isSlicing","isWind"]),e}(),k=[],T=0;try{for(var x=l(t.MOVES),M=x.next();!M.done;M=x.next()){var D=M.value,A={};for(var B in D){var O;A[(O=new S(B,D[B],T)).id]=O}k.push(A),T++}}catch(e){r={error:e}}finally{try{M&&!M.done&&(o=x.return)&&o.call(x)}finally{if(r)throw r.error}}},7121:function(e,t,s){"use strict";var a=this&&this.__generator||function(e,t){var s,a,i,r,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function n(n){return function(l){return function(n){if(s)throw new TypeError("Generator is already executing.");for(;r&&(r=0,n[0]&&(o=0)),o;)try{if(s=1,a&&(i=2&n[0]?a.return:n[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,n[1])).done)return i;switch(a=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,a=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],a=0}finally{s=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},i=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o};t.__esModule=!0,t.Natures=t.NATURES=void 0;var r=s(7094);t.NATURES={Adamant:["atk","spa"],Bashful:["spa","spa"],Bold:["def","atk"],Brave:["atk","spe"],Calm:["spd","atk"],Careful:["spd","spa"],Docile:["def","def"],Gentle:["spd","def"],Hardy:["atk","atk"],Hasty:["spe","def"],Impish:["def","spa"],Jolly:["spe","spa"],Lax:["def","spd"],Lonely:["atk","def"],Mild:["spa","def"],Modest:["spa","atk"],Naive:["spe","spd"],Naughty:["atk","spd"],Quiet:["spa","spe"],Quirky:["spd","spd"],Rash:["spa","spd"],Relaxed:["def","spe"],Sassy:["spd","spe"],Serious:["spe","spe"],Timid:["spe","atk"]};var o=function(){function e(){}return e.prototype.get=function(e){return l[e]},e.prototype[Symbol.iterator]=function(){var e,t,s,i,r;return a(this,(function(a){switch(a.label){case 0:for(s in t=[],e=l)t.push(s);i=0,a.label=1;case 1:return i<t.length?(s=t[i])in e?(r=s,[4,this.get(r)]):[3,3]:[3,4];case 2:a.sent(),a.label=3;case 3:return i++,[3,1];case 4:return[2]}}))},e}();t.Natures=o;var n=function(e,t){var s=i(t,2),a=s[0],o=s[1];this.kind="Nature",this.id=(0,r.toID)(e),this.name=e,this.plus=a,this.minus=o},l={};for(var f in t.NATURES){var c=new n(f,t.NATURES[f]);l[c.id]=c}},839:function(e,t,s){"use strict";var a,i,r=this&&this.__generator||function(e,t){var s,a,i,r,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function n(n){return function(l){return function(n){if(s)throw new TypeError("Generator is already executing.");for(;r&&(r=0,n[0]&&(o=0)),o;)try{if(s=1,a&&(i=2&n[0]?a.return:n[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,n[1])).done)return i;switch(a=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,a=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],a=0}finally{s=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},o=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o},n=this&&this.__spreadArray||function(e,t,s){if(s||2===arguments.length)for(var a,i=0,r=t.length;i<r;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))},l=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,s=t&&e[t],a=0;if(s)return s.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};t.__esModule=!0,t.Species=t.SPECIES=void 0;var f=s(7094),c={Abra:{types:["Psychic"],bs:{hp:25,at:20,df:15,sp:90,sl:105},weightkg:19.5,nfe:!0},Aerodactyl:{types:["Rock","Flying"],bs:{hp:80,at:105,df:65,sp:130,sl:60},weightkg:59},Alakazam:{types:["Psychic"],bs:{hp:55,at:50,df:45,sp:120,sl:135},weightkg:48},Arbok:{types:["Poison"],bs:{hp:60,at:85,df:69,sp:80,sl:65},weightkg:65},Arcanine:{types:["Fire"],bs:{hp:90,at:110,df:80,sp:95,sl:80},weightkg:155},Articuno:{types:["Ice","Flying"],bs:{hp:90,at:85,df:100,sp:85,sl:125},weightkg:55.4},Beedrill:{types:["Bug","Poison"],bs:{hp:65,at:80,df:40,sp:75,sl:45},weightkg:29.5},Bellsprout:{types:["Grass","Poison"],bs:{hp:50,at:75,df:35,sp:40,sl:70},weightkg:4,nfe:!0},Blastoise:{types:["Water"],bs:{hp:79,at:83,df:100,sp:78,sl:85},weightkg:85.5},Bulbasaur:{types:["Grass","Poison"],bs:{hp:45,at:49,df:49,sp:45,sl:65},weightkg:6.9,nfe:!0},Butterfree:{types:["Bug","Flying"],bs:{hp:60,at:45,df:50,sp:70,sl:80},weightkg:32},Caterpie:{types:["Bug"],bs:{hp:45,at:30,df:35,sp:45,sl:20},weightkg:2.9,nfe:!0},Chansey:{types:["Normal"],bs:{hp:250,at:5,df:5,sp:50,sl:105},weightkg:34.6},Charizard:{types:["Fire","Flying"],bs:{hp:78,at:84,df:78,sp:100,sl:85},weightkg:90.5},Charmander:{types:["Fire"],bs:{hp:39,at:52,df:43,sp:65,sl:50},weightkg:8.5,nfe:!0},Charmeleon:{types:["Fire"],bs:{hp:58,at:64,df:58,sp:80,sl:65},weightkg:19,nfe:!0},Clefable:{types:["Normal"],bs:{hp:95,at:70,df:73,sp:60,sl:85},weightkg:40},Clefairy:{types:["Normal"],bs:{hp:70,at:45,df:48,sp:35,sl:60},weightkg:7.5,nfe:!0},Cloyster:{types:["Water","Ice"],bs:{hp:50,at:95,df:180,sp:70,sl:85},weightkg:132.5},Cubone:{types:["Ground"],bs:{hp:50,at:50,df:95,sp:35,sl:40},weightkg:6.5,nfe:!0},Dewgong:{types:["Water","Ice"],bs:{hp:90,at:70,df:80,sp:70,sl:95},weightkg:120},Diglett:{types:["Ground"],bs:{hp:10,at:55,df:25,sp:95,sl:45},weightkg:.8,nfe:!0},Ditto:{types:["Normal"],bs:{hp:48,at:48,df:48,sp:48,sl:48},weightkg:4},Dodrio:{types:["Normal","Flying"],bs:{hp:60,at:110,df:70,sp:100,sl:60},weightkg:85.2},Doduo:{types:["Normal","Flying"],bs:{hp:35,at:85,df:45,sp:75,sl:35},weightkg:39.2,nfe:!0},Dragonair:{types:["Dragon"],bs:{hp:61,at:84,df:65,sp:70,sl:70},weightkg:16.5,nfe:!0},Dragonite:{types:["Dragon","Flying"],bs:{hp:91,at:134,df:95,sp:80,sl:100},weightkg:210},Dratini:{types:["Dragon"],bs:{hp:41,at:64,df:45,sp:50,sl:50},weightkg:3.3,nfe:!0},Drowzee:{types:["Psychic"],bs:{hp:60,at:48,df:45,sp:42,sl:90},weightkg:32.4,nfe:!0},Dugtrio:{types:["Ground"],bs:{hp:35,at:80,df:50,sp:120,sl:70},weightkg:33.3},Eevee:{types:["Normal"],bs:{hp:55,at:55,df:50,sp:55,sl:65},weightkg:6.5,nfe:!0},Ekans:{types:["Poison"],bs:{hp:35,at:60,df:44,sp:55,sl:40},weightkg:6.9,nfe:!0},Electabuzz:{types:["Electric"],bs:{hp:65,at:83,df:57,sp:105,sl:85},weightkg:30},Electrode:{types:["Electric"],bs:{hp:60,at:50,df:70,sp:140,sl:80},weightkg:66.6},Exeggcute:{types:["Grass","Psychic"],bs:{hp:60,at:40,df:80,sp:40,sl:60},weightkg:2.5,nfe:!0},Exeggutor:{types:["Grass","Psychic"],bs:{hp:95,at:95,df:85,sp:55,sl:125},weightkg:120},"Farfetch’d":{types:["Normal","Flying"],bs:{hp:52,at:65,df:55,sp:60,sl:58},weightkg:15},Fearow:{types:["Normal","Flying"],bs:{hp:65,at:90,df:65,sp:100,sl:61},weightkg:38},Flareon:{types:["Fire"],bs:{hp:65,at:130,df:60,sp:65,sl:110},weightkg:25},Gastly:{types:["Ghost","Poison"],bs:{hp:30,at:35,df:30,sp:80,sl:100},weightkg:.1,nfe:!0},Gengar:{types:["Ghost","Poison"],bs:{hp:60,at:65,df:60,sp:110,sl:130},weightkg:40.5},Geodude:{types:["Rock","Ground"],bs:{hp:40,at:80,df:100,sp:20,sl:30},weightkg:20,nfe:!0},Gloom:{types:["Grass","Poison"],bs:{hp:60,at:65,df:70,sp:40,sl:85},weightkg:8.6,nfe:!0},Golbat:{types:["Poison","Flying"],bs:{hp:75,at:80,df:70,sp:90,sl:75},weightkg:55},Goldeen:{types:["Water"],bs:{hp:45,at:67,df:60,sp:63,sl:50},weightkg:15,nfe:!0},Golduck:{types:["Water"],bs:{hp:80,at:82,df:78,sp:85,sl:80},weightkg:76.6},Golem:{types:["Rock","Ground"],bs:{hp:80,at:110,df:130,sp:45,sl:55},weightkg:300},Graveler:{types:["Rock","Ground"],bs:{hp:55,at:95,df:115,sp:35,sl:45},weightkg:105,nfe:!0},Grimer:{types:["Poison"],bs:{hp:80,at:80,df:50,sp:25,sl:40},weightkg:30,nfe:!0},Growlithe:{types:["Fire"],bs:{hp:55,at:70,df:45,sp:60,sl:50},weightkg:19,nfe:!0},Gyarados:{types:["Water","Flying"],bs:{hp:95,at:125,df:79,sp:81,sl:100},weightkg:235},Haunter:{types:["Ghost","Poison"],bs:{hp:45,at:50,df:45,sp:95,sl:115},weightkg:.1,nfe:!0},Hitmonchan:{types:["Fighting"],bs:{hp:50,at:105,df:79,sp:76,sl:35},weightkg:50.2},Hitmonlee:{types:["Fighting"],bs:{hp:50,at:120,df:53,sp:87,sl:35},weightkg:49.8},Horsea:{types:["Water"],bs:{hp:30,at:40,df:70,sp:60,sl:70},weightkg:8,nfe:!0},Hypno:{types:["Psychic"],bs:{hp:85,at:73,df:70,sp:67,sl:115},weightkg:75.6},Ivysaur:{types:["Grass","Poison"],bs:{hp:60,at:62,df:63,sp:60,sl:80},weightkg:13,nfe:!0},Jigglypuff:{types:["Normal"],bs:{hp:115,at:45,df:20,sp:20,sl:25},weightkg:5.5,nfe:!0},Jolteon:{types:["Electric"],bs:{hp:65,at:65,df:60,sp:130,sl:110},weightkg:24.5},Jynx:{types:["Ice","Psychic"],bs:{hp:65,at:50,df:35,sp:95,sl:95},weightkg:40.6},Kabuto:{types:["Rock","Water"],bs:{hp:30,at:80,df:90,sp:55,sl:45},weightkg:11.5,nfe:!0},Kabutops:{types:["Rock","Water"],bs:{hp:60,at:115,df:105,sp:80,sl:70},weightkg:40.5},Kadabra:{types:["Psychic"],bs:{hp:40,at:35,df:30,sp:105,sl:120},weightkg:56.5,nfe:!0},Kakuna:{types:["Bug","Poison"],bs:{hp:45,at:25,df:50,sp:35,sl:25},weightkg:10,nfe:!0},Kangaskhan:{types:["Normal"],bs:{hp:105,at:95,df:80,sp:90,sl:40},weightkg:80},Kingler:{types:["Water"],bs:{hp:55,at:130,df:115,sp:75,sl:50},weightkg:60},Koffing:{types:["Poison"],bs:{hp:40,at:65,df:95,sp:35,sl:60},weightkg:1,nfe:!0},Krabby:{types:["Water"],bs:{hp:30,at:105,df:90,sp:50,sl:25},weightkg:6.5,nfe:!0},Lapras:{types:["Water","Ice"],bs:{hp:130,at:85,df:80,sp:60,sl:95},weightkg:220},Lickitung:{types:["Normal"],bs:{hp:90,at:55,df:75,sp:30,sl:60},weightkg:65.5},Machamp:{types:["Fighting"],bs:{hp:90,at:130,df:80,sp:55,sl:65},weightkg:130},Machoke:{types:["Fighting"],bs:{hp:80,at:100,df:70,sp:45,sl:50},weightkg:70.5,nfe:!0},Machop:{types:["Fighting"],bs:{hp:70,at:80,df:50,sp:35,sl:35},weightkg:19.5,nfe:!0},Magikarp:{types:["Water"],bs:{hp:20,at:10,df:55,sp:80,sl:20},weightkg:10,nfe:!0},Magmar:{types:["Fire"],bs:{hp:65,at:95,df:57,sp:93,sl:85},weightkg:44.5},Magnemite:{types:["Electric"],bs:{hp:25,at:35,df:70,sp:45,sl:95},weightkg:6,nfe:!0},Magneton:{types:["Electric"],bs:{hp:50,at:60,df:95,sp:70,sl:120},weightkg:60},Mankey:{types:["Fighting"],bs:{hp:40,at:80,df:35,sp:70,sl:35},weightkg:28,nfe:!0},Marowak:{types:["Ground"],bs:{hp:60,at:80,df:110,sp:45,sl:50},weightkg:45},Meowth:{types:["Normal"],bs:{hp:40,at:45,df:35,sp:90,sl:40},weightkg:4.2,nfe:!0},Metapod:{types:["Bug"],bs:{hp:50,at:20,df:55,sp:30,sl:25},weightkg:9.9,nfe:!0},Mew:{types:["Psychic"],bs:{hp:100,at:100,df:100,sp:100,sl:100},weightkg:4},Mewtwo:{types:["Psychic"],bs:{hp:106,at:110,df:90,sp:130,sl:154},weightkg:122},Moltres:{types:["Fire","Flying"],bs:{hp:90,at:100,df:90,sp:90,sl:125},weightkg:60},"Mr. Mime":{types:["Psychic"],bs:{hp:40,at:45,df:65,sp:90,sl:100},weightkg:54.5},Muk:{types:["Poison"],bs:{hp:105,at:105,df:75,sp:50,sl:65},weightkg:30},Nidoking:{types:["Poison","Ground"],bs:{hp:81,at:92,df:77,sp:85,sl:75},weightkg:62},Nidoqueen:{types:["Poison","Ground"],bs:{hp:90,at:82,df:87,sp:76,sl:75},weightkg:60},"Nidoran-F":{types:["Poison"],bs:{hp:55,at:47,df:52,sp:41,sl:40},weightkg:7,nfe:!0},"Nidoran-M":{types:["Poison"],bs:{hp:46,at:57,df:40,sp:50,sl:40},weightkg:9,nfe:!0},Nidorina:{types:["Poison"],bs:{hp:70,at:62,df:67,sp:56,sl:55},weightkg:20,nfe:!0},Nidorino:{types:["Poison"],bs:{hp:61,at:72,df:57,sp:65,sl:55},weightkg:19.5,nfe:!0},Ninetales:{types:["Fire"],bs:{hp:73,at:76,df:75,sp:100,sl:100},weightkg:19.9},Oddish:{types:["Grass","Poison"],bs:{hp:45,at:50,df:55,sp:30,sl:75},weightkg:5.4,nfe:!0},Omanyte:{types:["Rock","Water"],bs:{hp:35,at:40,df:100,sp:35,sl:90},weightkg:7.5,nfe:!0},Omastar:{types:["Rock","Water"],bs:{hp:70,at:60,df:125,sp:55,sl:115},weightkg:35},Onix:{types:["Rock","Ground"],bs:{hp:35,at:45,df:160,sp:70,sl:30},weightkg:210},Paras:{types:["Bug","Grass"],bs:{hp:35,at:70,df:55,sp:25,sl:55},weightkg:5.4,nfe:!0},Parasect:{types:["Bug","Grass"],bs:{hp:60,at:95,df:80,sp:30,sl:80},weightkg:29.5},Persian:{types:["Normal"],bs:{hp:65,at:70,df:60,sp:115,sl:65},weightkg:32},Pidgeot:{types:["Normal","Flying"],bs:{hp:83,at:80,df:75,sp:91,sl:70},weightkg:39.5},Pidgeotto:{types:["Normal","Flying"],bs:{hp:63,at:60,df:55,sp:71,sl:50},weightkg:30,nfe:!0},Pidgey:{types:["Normal","Flying"],bs:{hp:40,at:45,df:40,sp:56,sl:35},weightkg:1.8,nfe:!0},Pikachu:{types:["Electric"],bs:{hp:35,at:55,df:30,sp:90,sl:50},weightkg:6,nfe:!0},Pinsir:{types:["Bug"],bs:{hp:65,at:125,df:100,sp:85,sl:55},weightkg:55},Poliwag:{types:["Water"],bs:{hp:40,at:50,df:40,sp:90,sl:40},weightkg:12.4,nfe:!0},Poliwhirl:{types:["Water"],bs:{hp:65,at:65,df:65,sp:90,sl:50},weightkg:20,nfe:!0},Poliwrath:{types:["Water","Fighting"],bs:{hp:90,at:85,df:95,sp:70,sl:70},weightkg:54},Ponyta:{types:["Fire"],bs:{hp:50,at:85,df:55,sp:90,sl:65},weightkg:30,nfe:!0},Porygon:{types:["Normal"],bs:{hp:65,at:60,df:70,sp:40,sl:75},weightkg:36.5},Primeape:{types:["Fighting"],bs:{hp:65,at:105,df:60,sp:95,sl:60},weightkg:32},Psyduck:{types:["Water"],bs:{hp:50,at:52,df:48,sp:55,sl:50},weightkg:19.6,nfe:!0},Raichu:{types:["Electric"],bs:{hp:60,at:90,df:55,sp:100,sl:90},weightkg:30},Rapidash:{types:["Fire"],bs:{hp:65,at:100,df:70,sp:105,sl:80},weightkg:95},Raticate:{types:["Normal"],bs:{hp:55,at:81,df:60,sp:97,sl:50},weightkg:18.5},Rattata:{types:["Normal"],bs:{hp:30,at:56,df:35,sp:72,sl:25},weightkg:3.5,nfe:!0},Rhydon:{types:["Ground","Rock"],bs:{hp:105,at:130,df:120,sp:40,sl:45},weightkg:120},Rhyhorn:{types:["Ground","Rock"],bs:{hp:80,at:85,df:95,sp:25,sl:30},weightkg:115,nfe:!0},Sandshrew:{types:["Ground"],bs:{hp:50,at:75,df:85,sp:40,sl:30},weightkg:12,nfe:!0},Sandslash:{types:["Ground"],bs:{hp:75,at:100,df:110,sp:65,sl:55},weightkg:29.5},Scyther:{types:["Bug","Flying"],bs:{hp:70,at:110,df:80,sp:105,sl:55},weightkg:56},Seadra:{types:["Water"],bs:{hp:55,at:65,df:95,sp:85,sl:95},weightkg:25},Seaking:{types:["Water"],bs:{hp:80,at:92,df:65,sp:68,sl:80},weightkg:39},Seel:{types:["Water"],bs:{hp:65,at:45,df:55,sp:45,sl:70},weightkg:90,nfe:!0},Shellder:{types:["Water"],bs:{hp:30,at:65,df:100,sp:40,sl:45},weightkg:4,nfe:!0},Slowbro:{types:["Water","Psychic"],bs:{hp:95,at:75,df:110,sp:30,sl:80},weightkg:78.5},Slowpoke:{types:["Water","Psychic"],bs:{hp:90,at:65,df:65,sp:15,sl:40},weightkg:36,nfe:!0},Snorlax:{types:["Normal"],bs:{hp:160,at:110,df:65,sp:30,sl:65},weightkg:460},Spearow:{types:["Normal","Flying"],bs:{hp:40,at:60,df:30,sp:70,sl:31},weightkg:2,nfe:!0},Squirtle:{types:["Water"],bs:{hp:44,at:48,df:65,sp:43,sl:50},weightkg:9,nfe:!0},Starmie:{types:["Water","Psychic"],bs:{hp:60,at:75,df:85,sp:115,sl:100},weightkg:80},Staryu:{types:["Water"],bs:{hp:30,at:45,df:55,sp:85,sl:70},weightkg:34.5,nfe:!0},Tangela:{types:["Grass"],bs:{hp:65,at:55,df:115,sp:60,sl:100},weightkg:35},Tauros:{types:["Normal"],bs:{hp:75,at:100,df:95,sp:110,sl:70},weightkg:88.4},Tentacool:{types:["Water","Poison"],bs:{hp:40,at:40,df:35,sp:70,sl:100},weightkg:45.5,nfe:!0},Tentacruel:{types:["Water","Poison"],bs:{hp:80,at:70,df:65,sp:100,sl:120},weightkg:55},Vaporeon:{types:["Water"],bs:{hp:130,at:65,df:60,sp:65,sl:110},weightkg:29},Venomoth:{types:["Bug","Poison"],bs:{hp:70,at:65,df:60,sp:90,sl:90},weightkg:12.5},Venonat:{types:["Bug","Poison"],bs:{hp:60,at:55,df:50,sp:45,sl:40},weightkg:30,nfe:!0},Venusaur:{types:["Grass","Poison"],bs:{hp:80,at:82,df:83,sp:80,sl:100},weightkg:100},Victreebel:{types:["Grass","Poison"],bs:{hp:80,at:105,df:65,sp:70,sl:100},weightkg:15.5},Vileplume:{types:["Grass","Poison"],bs:{hp:75,at:80,df:85,sp:50,sl:100},weightkg:18.6},Voltorb:{types:["Electric"],bs:{hp:40,at:30,df:50,sp:100,sl:55},weightkg:10.4,nfe:!0},Vulpix:{types:["Fire"],bs:{hp:38,at:41,df:40,sp:65,sl:65},weightkg:9.9,nfe:!0},Wartortle:{types:["Water"],bs:{hp:59,at:63,df:80,sp:58,sl:65},weightkg:22.5,nfe:!0},Weedle:{types:["Bug","Poison"],bs:{hp:40,at:35,df:30,sp:50,sl:20},weightkg:3.2,nfe:!0},Weepinbell:{types:["Grass","Poison"],bs:{hp:65,at:90,df:50,sp:55,sl:85},weightkg:6.4,nfe:!0},Weezing:{types:["Poison"],bs:{hp:65,at:90,df:120,sp:60,sl:85},weightkg:9.5},Wigglytuff:{types:["Normal"],bs:{hp:140,at:70,df:45,sp:45,sl:50},weightkg:12},Zapdos:{types:["Electric","Flying"],bs:{hp:90,at:90,df:85,sp:100,sl:125},weightkg:52.6},Zubat:{types:["Poison","Flying"],bs:{hp:40,at:45,df:35,sp:55,sl:40},weightkg:7.5,nfe:!0}},u=(0,f.extend)(!0,{},c,{Abra:{bs:{sa:105,sd:55}},Aerodactyl:{bs:{sa:60,sd:75}},Alakazam:{bs:{sa:135,sd:85}},Arbok:{bs:{sa:65,sd:79}},Arcanine:{bs:{sa:100,sd:80}},Articuno:{bs:{sa:95,sd:125},gender:"N"},Beedrill:{bs:{sa:45,sd:80}},Bellsprout:{bs:{sa:70,sd:30}},Blastoise:{bs:{sa:85,sd:105}},Bulbasaur:{bs:{sa:65,sd:65}},Butterfree:{bs:{sa:80,sd:80}},Caterpie:{bs:{sa:20,sd:20}},Chansey:{bs:{sa:35,sd:105},nfe:!0},Charizard:{bs:{sa:109,sd:85}},Charmander:{bs:{sa:60,sd:50}},Charmeleon:{bs:{sa:80,sd:65}},Clefable:{bs:{sa:85,sd:90}},Clefairy:{bs:{sa:60,sd:65}},Cloyster:{bs:{sa:85,sd:45}},Cubone:{bs:{sa:40,sd:50}},Dewgong:{bs:{sa:70,sd:95}},Diglett:{bs:{sa:35,sd:45}},Ditto:{bs:{sa:48,sd:48},gender:"N"},Dodrio:{bs:{sa:60,sd:60}},Doduo:{bs:{sa:35,sd:35}},Dragonair:{bs:{sa:70,sd:70}},Dragonite:{bs:{sa:100,sd:100}},Dratini:{bs:{sa:50,sd:50}},Drowzee:{bs:{sa:43,sd:90}},Dugtrio:{bs:{sa:50,sd:70}},Eevee:{bs:{sa:45,sd:65}},Ekans:{bs:{sa:40,sd:54}},Electabuzz:{bs:{sa:95,sd:85}},Electrode:{bs:{sa:80,sd:80},gender:"N"},Exeggcute:{bs:{sa:60,sd:45}},Exeggutor:{bs:{sa:125,sd:65}},"Farfetch’d":{bs:{sa:58,sd:62}},Fearow:{bs:{sa:61,sd:61}},Flareon:{bs:{sa:95,sd:110}},Gastly:{bs:{sa:100,sd:35}},Gengar:{bs:{sa:130,sd:75}},Geodude:{bs:{sa:30,sd:30}},Gloom:{bs:{sa:85,sd:75}},Golbat:{bs:{sa:65,sd:75},nfe:!0},Goldeen:{bs:{sa:35,sd:50}},Golduck:{bs:{sa:95,sd:80}},Golem:{bs:{sa:55,sd:65}},Graveler:{bs:{sa:45,sd:45}},Grimer:{bs:{sa:40,sd:50}},Growlithe:{bs:{sa:70,sd:50}},Gyarados:{bs:{sa:60,sd:100}},Haunter:{bs:{sa:115,sd:55}},Hitmonchan:{bs:{sa:35,sd:110}},Hitmonlee:{bs:{sa:35,sd:110}},Horsea:{bs:{sa:70,sd:25}},Hypno:{bs:{sa:73,sd:115}},Ivysaur:{bs:{sa:80,sd:80}},Jigglypuff:{bs:{sa:45,sd:25}},Jolteon:{bs:{sa:110,sd:95}},Jynx:{bs:{sa:115,sd:95}},Kabuto:{bs:{sa:55,sd:45}},Kabutops:{bs:{sa:65,sd:70}},Kadabra:{bs:{sa:120,sd:70}},Kakuna:{bs:{sa:25,sd:25}},Kangaskhan:{bs:{sa:40,sd:80}},Kingler:{bs:{sa:50,sd:50}},Koffing:{bs:{sa:60,sd:45}},Krabby:{bs:{sa:25,sd:25}},Lapras:{bs:{sa:85,sd:95}},Lickitung:{bs:{sa:60,sd:75}},Machamp:{bs:{sa:65,sd:85}},Machoke:{bs:{sa:50,sd:60}},Machop:{bs:{sa:35,sd:35}},Magikarp:{bs:{sa:15,sd:20}},Magmar:{bs:{sa:100,sd:85}},Magnemite:{types:["Electric","Steel"],bs:{sa:95,sd:55},gender:"N"},Magneton:{types:["Electric","Steel"],bs:{sa:120,sd:70},gender:"N"},Mankey:{bs:{sa:35,sd:45}},Marowak:{bs:{sa:50,sd:80}},Meowth:{bs:{sa:40,sd:40}},Metapod:{bs:{sa:25,sd:25}},Mew:{bs:{sa:100,sd:100},gender:"N"},Mewtwo:{bs:{sa:154,sd:90},gender:"N"},Moltres:{bs:{sa:125,sd:85},gender:"N"},"Mr. Mime":{bs:{sa:100,sd:120}},Muk:{bs:{sa:65,sd:100}},Nidoking:{bs:{sa:85,sd:75}},Nidoqueen:{bs:{sa:75,sd:85}},"Nidoran-F":{bs:{sa:40,sd:40}},"Nidoran-M":{bs:{sa:40,sd:40}},Nidorina:{bs:{sa:55,sd:55}},Nidorino:{bs:{sa:55,sd:55}},Ninetales:{bs:{sa:81,sd:100}},Oddish:{bs:{sa:75,sd:65}},Omanyte:{bs:{sa:90,sd:55}},Omastar:{bs:{sa:115,sd:70}},Onix:{bs:{sa:30,sd:45},nfe:!0},Paras:{bs:{sa:45,sd:55}},Parasect:{bs:{sa:60,sd:80}},Persian:{bs:{sa:65,sd:65}},Pidgeot:{bs:{sa:70,sd:70}},Pidgeotto:{bs:{sa:50,sd:50}},Pidgey:{bs:{sa:35,sd:35}},Pikachu:{bs:{sa:50,sd:40}},Pinsir:{bs:{sa:55,sd:70}},Poliwag:{bs:{sa:40,sd:40}},Poliwhirl:{bs:{sa:50,sd:50}},Poliwrath:{bs:{sa:70,sd:90}},Ponyta:{bs:{sa:65,sd:65}},Porygon:{bs:{sa:85,sd:75},nfe:!0,gender:"N"},Primeape:{bs:{sa:60,sd:70}},Psyduck:{bs:{sa:65,sd:50}},Raichu:{bs:{sa:90,sd:80}},Rapidash:{bs:{sa:80,sd:80}},Raticate:{bs:{sa:50,sd:70}},Rattata:{bs:{sa:25,sd:35}},Rhydon:{bs:{sa:45,sd:45}},Rhyhorn:{bs:{sa:30,sd:30}},Sandshrew:{bs:{sa:20,sd:30}},Sandslash:{bs:{sa:45,sd:55}},Scyther:{bs:{sa:55,sd:80},nfe:!0},Seadra:{bs:{sa:95,sd:45},nfe:!0},Seaking:{bs:{sa:65,sd:80}},Seel:{bs:{sa:45,sd:70}},Shellder:{bs:{sa:45,sd:25}},Slowbro:{bs:{sa:100,sd:80}},Slowpoke:{bs:{sa:40,sd:40}},Snorlax:{bs:{sa:65,sd:110}},Spearow:{bs:{sa:31,sd:31}},Squirtle:{bs:{sa:50,sd:64}},Starmie:{bs:{sa:100,sd:85},gender:"N"},Staryu:{bs:{sa:70,sd:55},gender:"N"},Tangela:{bs:{sa:100,sd:40}},Tauros:{bs:{sa:40,sd:70}},Tentacool:{bs:{sa:50,sd:100}},Tentacruel:{bs:{sa:80,sd:120}},Vaporeon:{bs:{sa:110,sd:95}},Venomoth:{bs:{sa:90,sd:75}},Venonat:{bs:{sa:40,sd:55}},Venusaur:{bs:{sa:100,sd:100}},Victreebel:{bs:{sa:100,sd:60}},Vileplume:{bs:{sa:100,sd:90}},Voltorb:{bs:{sa:55,sd:55},gender:"N"},Vulpix:{bs:{sa:50,sd:65}},Wartortle:{bs:{sa:65,sd:80}},Weedle:{bs:{sa:20,sd:20}},Weepinbell:{bs:{sa:85,sd:45}},Weezing:{bs:{sa:85,sd:70}},Wigglytuff:{bs:{sa:75,sd:50}},Zapdos:{bs:{sa:125,sd:90},gender:"N"},Zubat:{bs:{sa:30,sd:40}},Aipom:{types:["Normal"],bs:{hp:55,at:70,df:55,sa:40,sd:55,sp:85},weightkg:11.5},Ampharos:{types:["Electric"],bs:{hp:90,at:75,df:75,sa:115,sd:90,sp:55},weightkg:61.5},Ariados:{types:["Bug","Poison"],bs:{hp:70,at:90,df:70,sa:60,sd:60,sp:40},weightkg:33.5},Azumarill:{types:["Water"],bs:{hp:100,at:50,df:80,sa:50,sd:80,sp:50},weightkg:28.5},Bayleef:{types:["Grass"],bs:{hp:60,at:62,df:80,sa:63,sd:80,sp:60},weightkg:15.8,nfe:!0},Bellossom:{types:["Grass"],bs:{hp:75,at:80,df:85,sa:90,sd:100,sp:50},weightkg:5.8},Blissey:{types:["Normal"],bs:{hp:255,at:10,df:10,sa:75,sd:135,sp:55},weightkg:46.8},Celebi:{types:["Psychic","Grass"],bs:{hp:100,at:100,df:100,sa:100,sd:100,sp:100},weightkg:5,gender:"N"},Chikorita:{types:["Grass"],bs:{hp:45,at:49,df:65,sa:49,sd:65,sp:45},weightkg:6.4,nfe:!0},Chinchou:{types:["Water","Electric"],bs:{hp:75,at:38,df:38,sa:56,sd:56,sp:67},weightkg:12,nfe:!0},Cleffa:{types:["Normal"],bs:{hp:50,at:25,df:28,sa:45,sd:55,sp:15},weightkg:3,nfe:!0},Corsola:{types:["Water","Rock"],bs:{hp:55,at:55,df:85,sa:65,sd:85,sp:35},weightkg:5},Crobat:{types:["Poison","Flying"],bs:{hp:85,at:90,df:80,sa:70,sd:80,sp:130},weightkg:75},Croconaw:{types:["Water"],bs:{hp:65,at:80,df:80,sa:59,sd:63,sp:58},weightkg:25,nfe:!0},Cyndaquil:{types:["Fire"],bs:{hp:39,at:52,df:43,sa:60,sd:50,sp:65},weightkg:7.9,nfe:!0},Delibird:{types:["Ice","Flying"],bs:{hp:45,at:55,df:45,sa:65,sd:45,sp:75},weightkg:16},Donphan:{types:["Ground"],bs:{hp:90,at:120,df:120,sa:60,sd:60,sp:50},weightkg:120},Dunsparce:{types:["Normal"],bs:{hp:100,at:70,df:70,sa:65,sd:65,sp:45},weightkg:14},Elekid:{types:["Electric"],bs:{hp:45,at:63,df:37,sa:65,sd:55,sp:95},weightkg:23.5,nfe:!0},Entei:{types:["Fire"],bs:{hp:115,at:115,df:85,sa:90,sd:75,sp:100},weightkg:198,gender:"N"},Espeon:{types:["Psychic"],bs:{hp:65,at:65,df:60,sa:130,sd:95,sp:110},weightkg:26.5},Feraligatr:{types:["Water"],bs:{hp:85,at:105,df:100,sa:79,sd:83,sp:78},weightkg:88.8},Flaaffy:{types:["Electric"],bs:{hp:70,at:55,df:55,sa:80,sd:60,sp:45},weightkg:13.3,nfe:!0},Forretress:{types:["Bug","Steel"],bs:{hp:75,at:90,df:140,sa:60,sd:60,sp:40},weightkg:125.8},Furret:{types:["Normal"],bs:{hp:85,at:76,df:64,sa:45,sd:55,sp:90},weightkg:32.5},Girafarig:{types:["Normal","Psychic"],bs:{hp:70,at:80,df:65,sa:90,sd:65,sp:85},weightkg:41.5},Gligar:{types:["Ground","Flying"],bs:{hp:65,at:75,df:105,sa:35,sd:65,sp:85},weightkg:64.8},Granbull:{types:["Normal"],bs:{hp:90,at:120,df:75,sa:60,sd:60,sp:45},weightkg:48.7},Heracross:{types:["Bug","Fighting"],bs:{hp:80,at:125,df:75,sa:40,sd:95,sp:85},weightkg:54},Hitmontop:{types:["Fighting"],bs:{hp:50,at:95,df:95,sa:35,sd:110,sp:70},weightkg:48},"Ho-Oh":{types:["Fire","Flying"],bs:{hp:106,at:130,df:90,sa:110,sd:154,sp:90},weightkg:199,gender:"N"},Hoothoot:{types:["Normal","Flying"],bs:{hp:60,at:30,df:30,sa:36,sd:56,sp:50},weightkg:21.2,nfe:!0},Hoppip:{types:["Grass","Flying"],bs:{hp:35,at:35,df:40,sa:35,sd:55,sp:50},weightkg:.5,nfe:!0},Houndoom:{types:["Dark","Fire"],bs:{hp:75,at:90,df:50,sa:110,sd:80,sp:95},weightkg:35},Houndour:{types:["Dark","Fire"],bs:{hp:45,at:60,df:30,sa:80,sd:50,sp:65},weightkg:10.8,nfe:!0},Igglybuff:{types:["Normal"],bs:{hp:90,at:30,df:15,sa:40,sd:20,sp:15},weightkg:1,nfe:!0},Jumpluff:{types:["Grass","Flying"],bs:{hp:75,at:55,df:70,sa:55,sd:85,sp:110},weightkg:3},Kingdra:{types:["Water","Dragon"],bs:{hp:75,at:95,df:95,sa:95,sd:95,sp:85},weightkg:152},Lanturn:{types:["Water","Electric"],bs:{hp:125,at:58,df:58,sa:76,sd:76,sp:67},weightkg:22.5},Larvitar:{types:["Rock","Ground"],bs:{hp:50,at:64,df:50,sa:45,sd:50,sp:41},weightkg:72,nfe:!0},Ledian:{types:["Bug","Flying"],bs:{hp:55,at:35,df:50,sa:55,sd:110,sp:85},weightkg:35.6},Ledyba:{types:["Bug","Flying"],bs:{hp:40,at:20,df:30,sa:40,sd:80,sp:55},weightkg:10.8,nfe:!0},Lugia:{types:["Psychic","Flying"],bs:{hp:106,at:90,df:130,sa:90,sd:154,sp:110},weightkg:216,gender:"N"},Magby:{types:["Fire"],bs:{hp:45,at:75,df:37,sa:70,sd:55,sp:83},weightkg:21.4,nfe:!0},Magcargo:{types:["Fire","Rock"],bs:{hp:50,at:50,df:120,sa:80,sd:80,sp:30},weightkg:55},Mantine:{types:["Water","Flying"],bs:{hp:65,at:40,df:70,sa:80,sd:140,sp:70},weightkg:220},Mareep:{types:["Electric"],bs:{hp:55,at:40,df:40,sa:65,sd:45,sp:35},weightkg:7.8,nfe:!0},Marill:{types:["Water"],bs:{hp:70,at:20,df:50,sa:20,sd:50,sp:40},weightkg:8.5,nfe:!0},Meganium:{types:["Grass"],bs:{hp:80,at:82,df:100,sa:83,sd:100,sp:80},weightkg:100.5},Miltank:{types:["Normal"],bs:{hp:95,at:80,df:105,sa:40,sd:70,sp:100},weightkg:75.5},Misdreavus:{types:["Ghost"],bs:{hp:60,at:60,df:60,sa:85,sd:85,sp:85},weightkg:1},Murkrow:{types:["Dark","Flying"],bs:{hp:60,at:85,df:42,sa:85,sd:42,sp:91},weightkg:2.1},Natu:{types:["Psychic","Flying"],bs:{hp:40,at:50,df:45,sa:70,sd:45,sp:70},weightkg:2,nfe:!0},Noctowl:{types:["Normal","Flying"],bs:{hp:100,at:50,df:50,sa:76,sd:96,sp:70},weightkg:40.8},Octillery:{types:["Water"],bs:{hp:75,at:105,df:75,sa:105,sd:75,sp:45},weightkg:28.5},Phanpy:{types:["Ground"],bs:{hp:90,at:60,df:60,sa:40,sd:40,sp:40},weightkg:33.5,nfe:!0},Pichu:{types:["Electric"],bs:{hp:20,at:40,df:15,sa:35,sd:35,sp:60},weightkg:2,nfe:!0},Piloswine:{types:["Ice","Ground"],bs:{hp:100,at:100,df:80,sa:60,sd:60,sp:50},weightkg:55.8},Pineco:{types:["Bug"],bs:{hp:50,at:65,df:90,sa:35,sd:35,sp:15},weightkg:7.2,nfe:!0},Politoed:{types:["Water"],bs:{hp:90,at:75,df:75,sa:90,sd:100,sp:70},weightkg:33.9},Porygon2:{types:["Normal"],bs:{hp:85,at:80,df:90,sa:105,sd:95,sp:60},weightkg:32.5,gender:"N"},Pupitar:{types:["Rock","Ground"],bs:{hp:70,at:84,df:70,sa:65,sd:70,sp:51},weightkg:152,nfe:!0},Quagsire:{types:["Water","Ground"],bs:{hp:95,at:85,df:85,sa:65,sd:65,sp:35},weightkg:75},Quilava:{types:["Fire"],bs:{hp:58,at:64,df:58,sa:80,sd:65,sp:80},weightkg:19,nfe:!0},Qwilfish:{types:["Water","Poison"],bs:{hp:65,at:95,df:75,sa:55,sd:55,sp:85},weightkg:3.9},Raikou:{types:["Electric"],bs:{hp:90,at:85,df:75,sa:115,sd:100,sp:115},weightkg:178,gender:"N"},Remoraid:{types:["Water"],bs:{hp:35,at:65,df:35,sa:65,sd:35,sp:65},weightkg:12,nfe:!0},Scizor:{types:["Bug","Steel"],bs:{hp:70,at:130,df:100,sa:55,sd:80,sp:65},weightkg:118},Sentret:{types:["Normal"],bs:{hp:35,at:46,df:34,sa:35,sd:45,sp:20},weightkg:6,nfe:!0},Shuckle:{types:["Bug","Rock"],bs:{hp:20,at:10,df:230,sa:10,sd:230,sp:5},weightkg:20.5},Skarmory:{types:["Steel","Flying"],bs:{hp:65,at:80,df:140,sa:40,sd:70,sp:70},weightkg:50.5},Skiploom:{types:["Grass","Flying"],bs:{hp:55,at:45,df:50,sa:45,sd:65,sp:80},weightkg:1,nfe:!0},Slowking:{types:["Water","Psychic"],bs:{hp:95,at:75,df:80,sa:100,sd:110,sp:30},weightkg:79.5},Slugma:{types:["Fire"],bs:{hp:40,at:40,df:40,sa:70,sd:40,sp:20},weightkg:35,nfe:!0},Smeargle:{types:["Normal"],bs:{hp:55,at:20,df:35,sa:20,sd:45,sp:75},weightkg:58},Smoochum:{types:["Ice","Psychic"],bs:{hp:45,at:30,df:15,sa:85,sd:65,sp:65},weightkg:6,nfe:!0},Sneasel:{types:["Dark","Ice"],bs:{hp:55,at:95,df:55,sa:35,sd:75,sp:115},weightkg:28},Snubbull:{types:["Normal"],bs:{hp:60,at:80,df:50,sa:40,sd:40,sp:30},weightkg:7.8,nfe:!0},Spinarak:{types:["Bug","Poison"],bs:{hp:40,at:60,df:40,sa:40,sd:40,sp:30},weightkg:8.5,nfe:!0},Stantler:{types:["Normal"],bs:{hp:73,at:95,df:62,sa:85,sd:65,sp:85},weightkg:71.2},Steelix:{types:["Steel","Ground"],bs:{hp:75,at:85,df:200,sa:55,sd:65,sp:30},weightkg:400},Sudowoodo:{types:["Rock"],bs:{hp:70,at:100,df:115,sa:30,sd:65,sp:30},weightkg:38},Suicune:{types:["Water"],bs:{hp:100,at:75,df:115,sa:90,sd:115,sp:85},weightkg:187,gender:"N"},Sunflora:{types:["Grass"],bs:{hp:75,at:75,df:55,sa:105,sd:85,sp:30},weightkg:8.5},Sunkern:{types:["Grass"],bs:{hp:30,at:30,df:30,sa:30,sd:30,sp:30},weightkg:1.8,nfe:!0},Swinub:{types:["Ice","Ground"],bs:{hp:50,at:50,df:40,sa:30,sd:30,sp:50},weightkg:6.5,nfe:!0},Teddiursa:{types:["Normal"],bs:{hp:60,at:80,df:50,sa:50,sd:50,sp:40},weightkg:8.8,nfe:!0},Togepi:{types:["Normal"],bs:{hp:35,at:20,df:65,sa:40,sd:65,sp:20},weightkg:1.5,nfe:!0},Togetic:{types:["Normal","Flying"],bs:{hp:55,at:40,df:85,sa:80,sd:105,sp:40},weightkg:3.2},Totodile:{types:["Water"],bs:{hp:50,at:65,df:64,sa:44,sd:48,sp:43},weightkg:9.5,nfe:!0},Typhlosion:{types:["Fire"],bs:{hp:78,at:84,df:78,sa:109,sd:85,sp:100},weightkg:79.5},Tyranitar:{types:["Rock","Dark"],bs:{hp:100,at:134,df:110,sa:95,sd:100,sp:61},weightkg:202},Tyrogue:{types:["Fighting"],bs:{hp:35,at:35,df:35,sa:35,sd:35,sp:35},weightkg:21,nfe:!0},Umbreon:{types:["Dark"],bs:{hp:95,at:65,df:110,sa:60,sd:130,sp:65},weightkg:27},Unown:{types:["Psychic"],bs:{hp:48,at:72,df:48,sa:72,sd:48,sp:48},weightkg:5,gender:"N"},Ursaring:{types:["Normal"],bs:{hp:90,at:130,df:75,sa:75,sd:75,sp:55},weightkg:125.8},Wobbuffet:{types:["Psychic"],bs:{hp:190,at:33,df:58,sa:33,sd:58,sp:33},weightkg:28.5},Wooper:{types:["Water","Ground"],bs:{hp:55,at:45,df:45,sa:25,sd:25,sp:15},weightkg:8.5,nfe:!0},Xatu:{types:["Psychic","Flying"],bs:{hp:65,at:75,df:70,sa:95,sd:70,sp:95},weightkg:15},Yanma:{types:["Bug","Flying"],bs:{hp:65,at:65,df:45,sa:75,sd:45,sp:95},weightkg:38}}),p=(0,f.extend)(!0,{},u,{Abra:{abilities:{0:"Synchronize"}},Aerodactyl:{abilities:{0:"Rock Head"}},Alakazam:{abilities:{0:"Synchronize"}},Arbok:{abilities:{0:"Intimidate"}},Arcanine:{abilities:{0:"Intimidate"}},Articuno:{abilities:{0:"Pressure"}},Beedrill:{abilities:{0:"Swarm"}},Bellsprout:{abilities:{0:"Chlorophyll"}},Blastoise:{abilities:{0:"Torrent"}},Bulbasaur:{abilities:{0:"Overgrow"}},Butterfree:{abilities:{0:"Compound Eyes"}},Caterpie:{abilities:{0:"Shield Dust"}},Chansey:{abilities:{0:"Natural Cure"}},Charizard:{abilities:{0:"Blaze"}},Charmander:{abilities:{0:"Blaze"}},Charmeleon:{abilities:{0:"Blaze"}},Clefable:{abilities:{0:"Cute Charm"}},Clefairy:{abilities:{0:"Cute Charm"}},Cloyster:{abilities:{0:"Shell Armor"}},Cubone:{abilities:{0:"Rock Head"}},Dewgong:{abilities:{0:"Thick Fat"}},Diglett:{abilities:{0:"Sand Veil"}},Ditto:{abilities:{0:"Limber"}},Dodrio:{abilities:{0:"Run Away"}},Doduo:{abilities:{0:"Run Away"}},Dragonair:{abilities:{0:"Shed Skin"}},Dragonite:{abilities:{0:"Inner Focus"}},Dratini:{abilities:{0:"Shed Skin"}},Drowzee:{abilities:{0:"Insomnia"}},Dugtrio:{abilities:{0:"Sand Veil"}},Eevee:{abilities:{0:"Run Away"}},Ekans:{abilities:{0:"Intimidate"}},Electabuzz:{abilities:{0:"Static"}},Electrode:{abilities:{0:"Soundproof"}},Exeggcute:{abilities:{0:"Chlorophyll"}},Exeggutor:{abilities:{0:"Chlorophyll"}},"Farfetch’d":{abilities:{0:"Keen Eye"}},Fearow:{abilities:{0:"Keen Eye"}},Flareon:{abilities:{0:"Flash Fire"}},Gastly:{abilities:{0:"Levitate"}},Gengar:{abilities:{0:"Levitate"}},Geodude:{abilities:{0:"Rock Head"}},Gloom:{abilities:{0:"Chlorophyll"}},Golbat:{abilities:{0:"Inner Focus"}},Goldeen:{abilities:{0:"Swift Swim"}},Golduck:{abilities:{0:"Damp"}},Golem:{abilities:{0:"Rock Head"}},Graveler:{abilities:{0:"Rock Head"}},Grimer:{abilities:{0:"Stench"}},Growlithe:{abilities:{0:"Intimidate"}},Gyarados:{abilities:{0:"Intimidate"}},Haunter:{abilities:{0:"Levitate"}},Hitmonchan:{abilities:{0:"Keen Eye"}},Hitmonlee:{abilities:{0:"Limber"}},Horsea:{abilities:{0:"Swift Swim"}},Hypno:{abilities:{0:"Insomnia"}},Ivysaur:{abilities:{0:"Overgrow"}},Jigglypuff:{abilities:{0:"Cute Charm"}},Jolteon:{abilities:{0:"Volt Absorb"}},Jynx:{abilities:{0:"Oblivious"}},Kabuto:{abilities:{0:"Swift Swim"}},Kabutops:{abilities:{0:"Swift Swim"}},Kadabra:{abilities:{0:"Synchronize"}},Kakuna:{abilities:{0:"Shed Skin"}},Kangaskhan:{abilities:{0:"Early Bird"}},Kingler:{abilities:{0:"Hyper Cutter"}},Koffing:{abilities:{0:"Levitate"}},Krabby:{abilities:{0:"Hyper Cutter"}},Lapras:{abilities:{0:"Water Absorb"}},Lickitung:{abilities:{0:"Own Tempo"}},Machamp:{abilities:{0:"Guts"}},Machoke:{abilities:{0:"Guts"}},Machop:{abilities:{0:"Guts"}},Magikarp:{abilities:{0:"Swift Swim"}},Magmar:{abilities:{0:"Flame Body"}},Magnemite:{abilities:{0:"Magnet Pull"}},Magneton:{abilities:{0:"Magnet Pull"}},Mankey:{abilities:{0:"Vital Spirit"}},Marowak:{abilities:{0:"Rock Head"}},Meowth:{abilities:{0:"Pickup"}},Metapod:{abilities:{0:"Shed Skin"}},Mew:{abilities:{0:"Synchronize"}},Mewtwo:{abilities:{0:"Pressure"}},Moltres:{abilities:{0:"Pressure"}},"Mr. Mime":{abilities:{0:"Soundproof"}},Muk:{abilities:{0:"Stench"}},Nidoking:{abilities:{0:"Poison Point"}},Nidoqueen:{abilities:{0:"Poison Point"}},"Nidoran-F":{abilities:{0:"Poison Point"}},"Nidoran-M":{abilities:{0:"Poison Point"}},Nidorina:{abilities:{0:"Poison Point"}},Nidorino:{abilities:{0:"Poison Point"}},Ninetales:{abilities:{0:"Flash Fire"}},Oddish:{abilities:{0:"Chlorophyll"}},Omanyte:{abilities:{0:"Swift Swim"}},Omastar:{abilities:{0:"Swift Swim"}},Onix:{abilities:{0:"Rock Head"}},Paras:{abilities:{0:"Effect Spore"}},Parasect:{abilities:{0:"Effect Spore"}},Persian:{abilities:{0:"Limber"}},Pidgeot:{abilities:{0:"Keen Eye"}},Pidgeotto:{abilities:{0:"Keen Eye"}},Pidgey:{abilities:{0:"Keen Eye"}},Pikachu:{abilities:{0:"Static"}},Pinsir:{abilities:{0:"Hyper Cutter"}},Poliwag:{abilities:{0:"Water Absorb"}},Poliwhirl:{abilities:{0:"Water Absorb"}},Poliwrath:{abilities:{0:"Water Absorb"}},Ponyta:{abilities:{0:"Run Away"}},Porygon:{abilities:{0:"Trace"}},Primeape:{abilities:{0:"Vital Spirit"}},Psyduck:{abilities:{0:"Damp"}},Raichu:{abilities:{0:"Static"}},Rapidash:{abilities:{0:"Run Away"}},Raticate:{abilities:{0:"Run Away"}},Rattata:{abilities:{0:"Run Away"}},Rhydon:{abilities:{0:"Lightning Rod"}},Rhyhorn:{abilities:{0:"Lightning Rod"}},Sandshrew:{abilities:{0:"Sand Veil"}},Sandslash:{abilities:{0:"Sand Veil"}},Scyther:{abilities:{0:"Swarm"}},Seadra:{abilities:{0:"Poison Point"}},Seaking:{abilities:{0:"Swift Swim"}},Seel:{abilities:{0:"Thick Fat"}},Shellder:{abilities:{0:"Shell Armor"}},Slowbro:{abilities:{0:"Oblivious"}},Slowpoke:{abilities:{0:"Oblivious"}},Snorlax:{abilities:{0:"Immunity"}},Spearow:{abilities:{0:"Keen Eye"}},Squirtle:{abilities:{0:"Torrent"}},Starmie:{abilities:{0:"Illuminate"}},Staryu:{abilities:{0:"Illuminate"}},Tangela:{abilities:{0:"Chlorophyll"}},Tauros:{abilities:{0:"Intimidate"}},Tentacool:{abilities:{0:"Clear Body"}},Tentacruel:{abilities:{0:"Clear Body"}},Vaporeon:{abilities:{0:"Water Absorb"}},Venomoth:{abilities:{0:"Shield Dust"}},Venonat:{abilities:{0:"Compound Eyes"}},Venusaur:{abilities:{0:"Overgrow"}},Victreebel:{abilities:{0:"Chlorophyll"}},Vileplume:{abilities:{0:"Chlorophyll"}},Voltorb:{abilities:{0:"Soundproof"}},Vulpix:{abilities:{0:"Flash Fire"}},Wartortle:{abilities:{0:"Torrent"}},Weedle:{abilities:{0:"Shield Dust"}},Weepinbell:{abilities:{0:"Chlorophyll"}},Weezing:{abilities:{0:"Levitate"}},Wigglytuff:{abilities:{0:"Cute Charm"}},Zapdos:{abilities:{0:"Pressure"}},Zubat:{abilities:{0:"Inner Focus"}},Aipom:{abilities:{0:"Run Away"}},Ampharos:{abilities:{0:"Static"}},Ariados:{abilities:{0:"Swarm"}},Azumarill:{abilities:{0:"Thick Fat"}},Bayleef:{abilities:{0:"Overgrow"}},Bellossom:{abilities:{0:"Chlorophyll"}},Blissey:{abilities:{0:"Natural Cure"}},Celebi:{abilities:{0:"Natural Cure"}},Chikorita:{abilities:{0:"Overgrow"}},Chinchou:{abilities:{0:"Volt Absorb"}},Cleffa:{abilities:{0:"Cute Charm"}},Corsola:{abilities:{0:"Hustle"}},Crobat:{abilities:{0:"Inner Focus"}},Croconaw:{abilities:{0:"Torrent"}},Cyndaquil:{abilities:{0:"Blaze"}},Delibird:{abilities:{0:"Vital Spirit"}},Donphan:{abilities:{0:"Sturdy"}},Dunsparce:{abilities:{0:"Serene Grace"}},Elekid:{abilities:{0:"Static"}},Entei:{abilities:{0:"Pressure"}},Espeon:{abilities:{0:"Synchronize"}},Feraligatr:{abilities:{0:"Torrent"}},Flaaffy:{abilities:{0:"Static"}},Forretress:{abilities:{0:"Sturdy"}},Furret:{abilities:{0:"Run Away"}},Girafarig:{abilities:{0:"Inner Focus"}},Gligar:{abilities:{0:"Hyper Cutter"}},Granbull:{abilities:{0:"Intimidate"}},Heracross:{abilities:{0:"Swarm"}},Hitmontop:{abilities:{0:"Intimidate"}},"Ho-Oh":{abilities:{0:"Pressure"}},Hoothoot:{abilities:{0:"Insomnia"}},Hoppip:{abilities:{0:"Chlorophyll"}},Houndoom:{abilities:{0:"Early Bird"}},Houndour:{abilities:{0:"Early Bird"}},Igglybuff:{abilities:{0:"Cute Charm"}},Jumpluff:{abilities:{0:"Chlorophyll"}},Kingdra:{abilities:{0:"Swift Swim"}},Lanturn:{abilities:{0:"Volt Absorb"}},Larvitar:{abilities:{0:"Guts"}},Ledian:{abilities:{0:"Swarm"}},Ledyba:{abilities:{0:"Swarm"}},Lugia:{abilities:{0:"Pressure"}},Magby:{abilities:{0:"Flame Body"}},Magcargo:{abilities:{0:"Magma Armor"}},Mantine:{abilities:{0:"Swift Swim"}},Mareep:{abilities:{0:"Static"}},Marill:{abilities:{0:"Thick Fat"}},Meganium:{abilities:{0:"Overgrow"}},Miltank:{abilities:{0:"Thick Fat"}},Misdreavus:{abilities:{0:"Levitate"}},Murkrow:{abilities:{0:"Insomnia"}},Natu:{abilities:{0:"Synchronize"}},Noctowl:{abilities:{0:"Insomnia"}},Octillery:{abilities:{0:"Suction Cups"}},Phanpy:{abilities:{0:"Pickup"}},Pichu:{abilities:{0:"Static"}},Piloswine:{abilities:{0:"Oblivious"}},Pineco:{abilities:{0:"Sturdy"}},Politoed:{abilities:{0:"Water Absorb"}},Porygon2:{abilities:{0:"Trace"}},Pupitar:{abilities:{0:"Shed Skin"}},Quagsire:{abilities:{0:"Damp"}},Quilava:{abilities:{0:"Blaze"}},Qwilfish:{abilities:{0:"Poison Point"}},Raikou:{abilities:{0:"Pressure"}},Remoraid:{abilities:{0:"Hustle"}},Scizor:{abilities:{0:"Swarm"}},Sentret:{abilities:{0:"Run Away"}},Shuckle:{abilities:{0:"Sturdy"}},Skarmory:{abilities:{0:"Keen Eye"}},Skiploom:{abilities:{0:"Chlorophyll"}},Slowking:{abilities:{0:"Oblivious"}},Slugma:{abilities:{0:"Magma Armor"}},Smeargle:{abilities:{0:"Own Tempo"}},Smoochum:{abilities:{0:"Oblivious"}},Sneasel:{abilities:{0:"Inner Focus"}},Snubbull:{abilities:{0:"Intimidate"}},Spinarak:{abilities:{0:"Swarm"}},Stantler:{abilities:{0:"Intimidate"}},Steelix:{abilities:{0:"Rock Head"}},Sudowoodo:{abilities:{0:"Sturdy"}},Suicune:{abilities:{0:"Pressure"}},Sunflora:{abilities:{0:"Chlorophyll"}},Sunkern:{abilities:{0:"Chlorophyll"}},Swinub:{abilities:{0:"Oblivious"}},Teddiursa:{abilities:{0:"Pickup"}},Togepi:{abilities:{0:"Hustle"}},Togetic:{abilities:{0:"Hustle"}},Totodile:{abilities:{0:"Torrent"}},Typhlosion:{abilities:{0:"Blaze"}},Tyranitar:{abilities:{0:"Sand Stream"}},Tyrogue:{abilities:{0:"Guts"}},Umbreon:{abilities:{0:"Synchronize"}},Unown:{abilities:{0:"Levitate"}},Ursaring:{abilities:{0:"Guts"}},Wobbuffet:{abilities:{0:"Shadow Tag"}},Wooper:{abilities:{0:"Damp"}},Xatu:{abilities:{0:"Synchronize"}},Yanma:{abilities:{0:"Speed Boost"}},Absol:{types:["Dark"],bs:{hp:65,at:130,df:60,sa:75,sd:60,sp:75},weightkg:47,abilities:{0:"Pressure"}},Aggron:{types:["Steel","Rock"],bs:{hp:70,at:110,df:180,sa:60,sd:60,sp:50},weightkg:360,abilities:{0:"Sturdy"}},Altaria:{types:["Dragon","Flying"],bs:{hp:75,at:70,df:90,sa:70,sd:105,sp:80},weightkg:20.6,abilities:{0:"Natural Cure"}},Anorith:{types:["Rock","Bug"],bs:{hp:45,at:95,df:50,sa:40,sd:50,sp:75},weightkg:12.5,nfe:!0,abilities:{0:"Battle Armor"}},Armaldo:{types:["Rock","Bug"],bs:{hp:75,at:125,df:100,sa:70,sd:80,sp:45},weightkg:68.2,abilities:{0:"Battle Armor"}},Aron:{types:["Steel","Rock"],bs:{hp:50,at:70,df:100,sa:40,sd:40,sp:30},weightkg:60,nfe:!0,abilities:{0:"Sturdy"}},Azurill:{types:["Normal"],bs:{hp:50,at:20,df:40,sa:20,sd:40,sp:20},weightkg:2,nfe:!0,abilities:{0:"Thick Fat"}},Bagon:{types:["Dragon"],bs:{hp:45,at:75,df:60,sa:40,sd:30,sp:50},weightkg:42.1,nfe:!0,abilities:{0:"Rock Head"}},Baltoy:{types:["Ground","Psychic"],bs:{hp:40,at:40,df:55,sa:40,sd:70,sp:55},weightkg:21.5,abilities:{0:"Levitate"},nfe:!0,gender:"N"},Banette:{types:["Ghost"],bs:{hp:64,at:115,df:65,sa:83,sd:63,sp:65},weightkg:12.5,abilities:{0:"Insomnia"}},Barboach:{types:["Water","Ground"],bs:{hp:50,at:48,df:43,sa:46,sd:41,sp:60},weightkg:1.9,nfe:!0,abilities:{0:"Oblivious"}},Beautifly:{types:["Bug","Flying"],bs:{hp:60,at:70,df:50,sa:90,sd:50,sp:65},weightkg:28.4,abilities:{0:"Swarm"}},Beldum:{types:["Steel","Psychic"],bs:{hp:40,at:55,df:80,sa:35,sd:60,sp:30},weightkg:95.2,nfe:!0,gender:"N",abilities:{0:"Clear Body"}},Blaziken:{types:["Fire","Fighting"],bs:{hp:80,at:120,df:70,sa:110,sd:70,sp:80},weightkg:52,abilities:{0:"Blaze"}},Breloom:{types:["Grass","Fighting"],bs:{hp:60,at:130,df:80,sa:60,sd:60,sp:70},weightkg:39.2,abilities:{0:"Effect Spore"}},Cacnea:{types:["Grass"],bs:{hp:50,at:85,df:40,sa:85,sd:40,sp:35},weightkg:51.3,nfe:!0,abilities:{0:"Sand Veil"}},Cacturne:{types:["Grass","Dark"],bs:{hp:70,at:115,df:60,sa:115,sd:60,sp:55},weightkg:77.4,abilities:{0:"Sand Veil"}},Camerupt:{types:["Fire","Ground"],bs:{hp:70,at:100,df:70,sa:105,sd:75,sp:40},weightkg:220,abilities:{0:"Magma Armor"}},Carvanha:{types:["Water","Dark"],bs:{hp:45,at:90,df:20,sa:65,sd:20,sp:65},weightkg:20.8,nfe:!0,abilities:{0:"Rough Skin"}},Cascoon:{types:["Bug"],bs:{hp:50,at:35,df:55,sa:25,sd:25,sp:15},weightkg:11.5,abilities:{0:"Shed Skin"},nfe:!0},Castform:{types:["Normal"],bs:{hp:70,at:70,df:70,sa:70,sd:70,sp:70},weightkg:.8,abilities:{0:"Forecast"},otherFormes:["Castform-Rainy","Castform-Snowy","Castform-Sunny"]},"Castform-Rainy":{types:["Water"],bs:{hp:70,at:70,df:70,sa:70,sd:70,sp:70},weightkg:.8,abilities:{0:"Forecast"},baseSpecies:"Castform"},"Castform-Snowy":{types:["Ice"],bs:{hp:70,at:70,df:70,sa:70,sd:70,sp:70},weightkg:.8,abilities:{0:"Forecast"},baseSpecies:"Castform"},"Castform-Sunny":{types:["Fire"],bs:{hp:70,at:70,df:70,sa:70,sd:70,sp:70},weightkg:.8,abilities:{0:"Forecast"},baseSpecies:"Castform"},Chimecho:{types:["Psychic"],bs:{hp:65,at:50,df:70,sa:95,sd:80,sp:65},weightkg:1,abilities:{0:"Levitate"}},Clamperl:{types:["Water"],bs:{hp:35,at:64,df:85,sa:74,sd:55,sp:32},weightkg:52.5,nfe:!0,abilities:{0:"Shell Armor"}},Claydol:{types:["Ground","Psychic"],bs:{hp:60,at:70,df:105,sa:70,sd:120,sp:75},weightkg:108,abilities:{0:"Levitate"},gender:"N"},Combusken:{types:["Fire","Fighting"],bs:{hp:60,at:85,df:60,sa:85,sd:60,sp:55},weightkg:19.5,nfe:!0,abilities:{0:"Blaze"}},Corphish:{types:["Water"],bs:{hp:43,at:80,df:65,sa:50,sd:35,sp:35},weightkg:11.5,nfe:!0,abilities:{0:"Hyper Cutter"}},Cradily:{types:["Rock","Grass"],bs:{hp:86,at:81,df:97,sa:81,sd:107,sp:43},weightkg:60.4,abilities:{0:"Suction Cups"}},Crawdaunt:{types:["Water","Dark"],bs:{hp:63,at:120,df:85,sa:90,sd:55,sp:55},weightkg:32.8,abilities:{0:"Hyper Cutter"}},Delcatty:{types:["Normal"],bs:{hp:70,at:65,df:65,sa:55,sd:55,sp:70},weightkg:32.6,abilities:{0:"Cute Charm"}},Deoxys:{types:["Psychic"],bs:{hp:50,at:150,df:50,sa:150,sd:50,sp:150},weightkg:60.8,abilities:{0:"Pressure"},gender:"N",otherFormes:["Deoxys-Attack","Deoxys-Defense","Deoxys-Speed"]},"Deoxys-Attack":{types:["Psychic"],bs:{hp:50,at:180,df:20,sa:180,sd:20,sp:150},weightkg:60.8,abilities:{0:"Pressure"},gender:"N",baseSpecies:"Deoxys"},"Deoxys-Defense":{types:["Psychic"],bs:{hp:50,at:70,df:160,sa:70,sd:160,sp:90},weightkg:60.8,abilities:{0:"Pressure"},gender:"N",baseSpecies:"Deoxys"},"Deoxys-Speed":{types:["Psychic"],bs:{hp:50,at:95,df:90,sa:95,sd:90,sp:180},weightkg:60.8,abilities:{0:"Pressure"},gender:"N",baseSpecies:"Deoxys"},Dusclops:{types:["Ghost"],bs:{hp:40,at:70,df:130,sa:60,sd:130,sp:25},weightkg:30.6,abilities:{0:"Pressure"}},Duskull:{types:["Ghost"],bs:{hp:20,at:40,df:90,sa:30,sd:90,sp:25},weightkg:15,nfe:!0,abilities:{0:"Levitate"}},Dustox:{types:["Bug","Poison"],bs:{hp:60,at:50,df:70,sa:50,sd:90,sp:65},weightkg:31.6,abilities:{0:"Shield Dust"}},Electrike:{types:["Electric"],bs:{hp:40,at:45,df:40,sa:65,sd:40,sp:65},weightkg:15.2,nfe:!0,abilities:{0:"Static"}},Exploud:{types:["Normal"],bs:{hp:104,at:91,df:63,sa:91,sd:63,sp:68},weightkg:84,abilities:{0:"Soundproof"}},Feebas:{types:["Water"],bs:{hp:20,at:15,df:20,sa:10,sd:55,sp:80},weightkg:7.4,nfe:!0,abilities:{0:"Swift Swim"}},Flygon:{types:["Ground","Dragon"],bs:{hp:80,at:100,df:80,sa:80,sd:80,sp:100},weightkg:82,abilities:{0:"Levitate"}},Gardevoir:{types:["Psychic"],bs:{hp:68,at:65,df:65,sa:125,sd:115,sp:80},weightkg:48.4,abilities:{0:"Synchronize"}},Glalie:{types:["Ice"],bs:{hp:80,at:80,df:80,sa:80,sd:80,sp:80},weightkg:256.5,abilities:{0:"Inner Focus"}},Gorebyss:{types:["Water"],bs:{hp:55,at:84,df:105,sa:114,sd:75,sp:52},weightkg:22.6,abilities:{0:"Swift Swim"}},Groudon:{types:["Ground"],bs:{hp:100,at:150,df:140,sa:100,sd:90,sp:90},weightkg:950,abilities:{0:"Drought"},gender:"N"},Grovyle:{types:["Grass"],bs:{hp:50,at:65,df:45,sa:85,sd:65,sp:95},weightkg:21.6,nfe:!0,abilities:{0:"Overgrow"}},Grumpig:{types:["Psychic"],bs:{hp:80,at:45,df:65,sa:90,sd:110,sp:80},weightkg:71.5,abilities:{0:"Thick Fat"}},Gulpin:{types:["Poison"],bs:{hp:70,at:43,df:53,sa:43,sd:53,sp:40},weightkg:10.3,nfe:!0,abilities:{0:"Liquid Ooze"}},Hariyama:{types:["Fighting"],bs:{hp:144,at:120,df:60,sa:40,sd:60,sp:50},weightkg:253.8,abilities:{0:"Thick Fat"}},Huntail:{types:["Water"],bs:{hp:55,at:104,df:105,sa:94,sd:75,sp:52},weightkg:27,abilities:{0:"Swift Swim"}},Illumise:{types:["Bug"],bs:{hp:65,at:47,df:55,sa:73,sd:75,sp:85},abilities:{0:"Oblivious"},weightkg:17.7},Jirachi:{types:["Steel","Psychic"],bs:{hp:100,at:100,df:100,sa:100,sd:100,sp:100},weightkg:1.1,abilities:{0:"Serene Grace"},gender:"N"},Kecleon:{types:["Normal"],bs:{hp:60,at:90,df:70,sa:60,sd:120,sp:40},weightkg:22,abilities:{0:"Color Change"}},Kirlia:{types:["Psychic"],bs:{hp:38,at:35,df:35,sa:65,sd:55,sp:50},weightkg:20.2,nfe:!0,abilities:{0:"Synchronize"}},Kyogre:{types:["Water"],bs:{hp:100,at:100,df:90,sa:150,sd:140,sp:90},weightkg:352,abilities:{0:"Drizzle"},gender:"N"},Lairon:{types:["Steel","Rock"],bs:{hp:60,at:90,df:140,sa:50,sd:50,sp:40},weightkg:120,nfe:!0,abilities:{0:"Sturdy"}},Latias:{types:["Dragon","Psychic"],bs:{hp:80,at:80,df:90,sa:110,sd:130,sp:110},weightkg:40,abilities:{0:"Levitate"}},Latios:{types:["Dragon","Psychic"],bs:{hp:80,at:90,df:80,sa:130,sd:110,sp:110},weightkg:60,abilities:{0:"Levitate"}},Lileep:{types:["Rock","Grass"],bs:{hp:66,at:41,df:77,sa:61,sd:87,sp:23},weightkg:23.8,nfe:!0,abilities:{0:"Suction Cups"}},Linoone:{types:["Normal"],bs:{hp:78,at:70,df:61,sa:50,sd:61,sp:100},weightkg:32.5,abilities:{0:"Pickup"}},Lombre:{types:["Water","Grass"],bs:{hp:60,at:50,df:50,sa:60,sd:70,sp:50},weightkg:32.5,nfe:!0,abilities:{0:"Swift Swim"}},Lotad:{types:["Water","Grass"],bs:{hp:40,at:30,df:30,sa:40,sd:50,sp:30},weightkg:2.6,nfe:!0,abilities:{0:"Swift Swim"}},Loudred:{types:["Normal"],bs:{hp:84,at:71,df:43,sa:71,sd:43,sp:48},weightkg:40.5,nfe:!0,abilities:{0:"Soundproof"}},Ludicolo:{types:["Water","Grass"],bs:{hp:80,at:70,df:70,sa:90,sd:100,sp:70},weightkg:55,abilities:{0:"Swift Swim"}},Lunatone:{types:["Rock","Psychic"],bs:{hp:70,at:55,df:65,sa:95,sd:85,sp:70},weightkg:168,abilities:{0:"Levitate"},gender:"N"},Luvdisc:{types:["Water"],bs:{hp:43,at:30,df:55,sa:40,sd:65,sp:97},weightkg:8.7,abilities:{0:"Swift Swim"}},Makuhita:{types:["Fighting"],bs:{hp:72,at:60,df:30,sa:20,sd:30,sp:25},weightkg:86.4,nfe:!0,abilities:{0:"Thick Fat"}},Manectric:{types:["Electric"],bs:{hp:70,at:75,df:60,sa:105,sd:60,sp:105},weightkg:40.2,abilities:{0:"Static"}},Marshtomp:{types:["Water","Ground"],bs:{hp:70,at:85,df:70,sa:60,sd:70,sp:50},weightkg:28,nfe:!0,abilities:{0:"Torrent"}},Masquerain:{types:["Bug","Flying"],bs:{hp:70,at:60,df:62,sa:80,sd:82,sp:60},weightkg:3.6,abilities:{0:"Intimidate"}},Mawile:{types:["Steel"],bs:{hp:50,at:85,df:85,sa:55,sd:55,sp:50},weightkg:11.5,abilities:{0:"Hyper Cutter"}},Medicham:{types:["Fighting","Psychic"],bs:{hp:60,at:60,df:75,sa:60,sd:75,sp:80},weightkg:31.5,abilities:{0:"Pure Power"}},Meditite:{types:["Fighting","Psychic"],bs:{hp:30,at:40,df:55,sa:40,sd:55,sp:60},weightkg:11.2,nfe:!0,abilities:{0:"Pure Power"}},Metagross:{types:["Steel","Psychic"],bs:{hp:80,at:135,df:130,sa:95,sd:90,sp:70},weightkg:550,gender:"N",abilities:{0:"Clear Body"}},Metang:{types:["Steel","Psychic"],bs:{hp:60,at:75,df:100,sa:55,sd:80,sp:50},weightkg:202.5,nfe:!0,gender:"N",abilities:{0:"Clear Body"}},Mightyena:{types:["Dark"],bs:{hp:70,at:90,df:70,sa:60,sd:60,sp:70},weightkg:37,abilities:{0:"Intimidate"}},Milotic:{types:["Water"],bs:{hp:95,at:60,df:79,sa:100,sd:125,sp:81},weightkg:162,abilities:{0:"Marvel Scale"}},Minun:{types:["Electric"],bs:{hp:60,at:40,df:50,sa:75,sd:85,sp:95},weightkg:4.2,abilities:{0:"Minus"}},Mudkip:{types:["Water"],bs:{hp:50,at:70,df:50,sa:50,sd:50,sp:40},weightkg:7.6,nfe:!0,abilities:{0:"Torrent"}},Nincada:{types:["Bug","Ground"],bs:{hp:31,at:45,df:90,sa:30,sd:30,sp:40},weightkg:5.5,nfe:!0,abilities:{0:"Compound Eyes"}},Ninjask:{types:["Bug","Flying"],bs:{hp:61,at:90,df:45,sa:50,sd:50,sp:160},weightkg:12,abilities:{0:"Speed Boost"}},Nosepass:{types:["Rock"],bs:{hp:30,at:45,df:135,sa:45,sd:90,sp:30},weightkg:97,abilities:{0:"Sturdy"}},Numel:{types:["Fire","Ground"],bs:{hp:60,at:60,df:40,sa:65,sd:45,sp:35},weightkg:24,nfe:!0,abilities:{0:"Oblivious"}},Nuzleaf:{types:["Grass","Dark"],bs:{hp:70,at:70,df:40,sa:60,sd:40,sp:60},weightkg:28,nfe:!0,abilities:{0:"Chlorophyll"}},Pelipper:{types:["Water","Flying"],bs:{hp:60,at:50,df:100,sa:85,sd:70,sp:65},weightkg:28,abilities:{0:"Keen Eye"}},Plusle:{types:["Electric"],bs:{hp:60,at:50,df:40,sa:85,sd:75,sp:95},weightkg:4.2,abilities:{0:"Plus"}},Poochyena:{types:["Dark"],bs:{hp:35,at:55,df:35,sa:30,sd:30,sp:35},weightkg:13.6,nfe:!0,abilities:{0:"Run Away"}},Ralts:{types:["Psychic"],bs:{hp:28,at:25,df:25,sa:45,sd:35,sp:40},weightkg:6.6,nfe:!0,abilities:{0:"Synchronize"}},Rayquaza:{types:["Dragon","Flying"],bs:{hp:105,at:150,df:90,sa:150,sd:90,sp:95},weightkg:206.5,abilities:{0:"Air Lock"},gender:"N"},Regice:{types:["Ice"],bs:{hp:80,at:50,df:100,sa:100,sd:200,sp:50},weightkg:175,gender:"N",abilities:{0:"Clear Body"}},Regirock:{types:["Rock"],bs:{hp:80,at:100,df:200,sa:50,sd:100,sp:50},weightkg:230,gender:"N",abilities:{0:"Clear Body"}},Registeel:{types:["Steel"],bs:{hp:80,at:75,df:150,sa:75,sd:150,sp:50},weightkg:205,gender:"N",abilities:{0:"Clear Body"}},Relicanth:{types:["Water","Rock"],bs:{hp:100,at:90,df:130,sa:45,sd:65,sp:55},weightkg:23.4,abilities:{0:"Swift Swim"}},Roselia:{types:["Grass","Poison"],bs:{hp:50,at:60,df:45,sa:100,sd:80,sp:65},weightkg:2,abilities:{0:"Natural Cure"}},Sableye:{types:["Dark","Ghost"],bs:{hp:50,at:75,df:75,sa:65,sd:65,sp:50},weightkg:11,abilities:{0:"Keen Eye"}},Salamence:{types:["Dragon","Flying"],bs:{hp:95,at:135,df:80,sa:110,sd:80,sp:100},weightkg:102.6,abilities:{0:"Intimidate"}},Sceptile:{types:["Grass"],bs:{hp:70,at:85,df:65,sa:105,sd:85,sp:120},weightkg:52.2,abilities:{0:"Overgrow"}},Sealeo:{types:["Ice","Water"],bs:{hp:90,at:60,df:70,sa:75,sd:70,sp:45},weightkg:87.6,nfe:!0,abilities:{0:"Thick Fat"}},Seedot:{types:["Grass"],bs:{hp:40,at:40,df:50,sa:30,sd:30,sp:30},weightkg:4,nfe:!0,abilities:{0:"Chlorophyll"}},Seviper:{types:["Poison"],bs:{hp:73,at:100,df:60,sa:100,sd:60,sp:65},weightkg:52.5,abilities:{0:"Shed Skin"}},Sharpedo:{types:["Water","Dark"],bs:{hp:70,at:120,df:40,sa:95,sd:40,sp:95},weightkg:88.8,abilities:{0:"Rough Skin"}},Shedinja:{types:["Bug","Ghost"],bs:{hp:1,at:90,df:45,sa:30,sd:30,sp:40},weightkg:1.2,abilities:{0:"Wonder Guard"},gender:"N"},Shelgon:{types:["Dragon"],bs:{hp:65,at:95,df:100,sa:60,sd:50,sp:50},weightkg:110.5,nfe:!0,abilities:{0:"Rock Head"}},Shiftry:{types:["Grass","Dark"],bs:{hp:90,at:100,df:60,sa:90,sd:60,sp:80},weightkg:59.6,abilities:{0:"Chlorophyll"}},Shroomish:{types:["Grass"],bs:{hp:60,at:40,df:60,sa:40,sd:60,sp:35},weightkg:4.5,nfe:!0,abilities:{0:"Effect Spore"}},Shuppet:{types:["Ghost"],bs:{hp:44,at:75,df:35,sa:63,sd:33,sp:45},weightkg:2.3,nfe:!0,abilities:{0:"Insomnia"}},Silcoon:{types:["Bug"],bs:{hp:50,at:35,df:55,sa:25,sd:25,sp:15},weightkg:10,abilities:{0:"Shed Skin"},nfe:!0},Skitty:{types:["Normal"],bs:{hp:50,at:45,df:45,sa:35,sd:35,sp:50},weightkg:11,nfe:!0,abilities:{0:"Cute Charm"}},Slaking:{types:["Normal"],bs:{hp:150,at:160,df:100,sa:95,sd:65,sp:100},weightkg:130.5,abilities:{0:"Truant"}},Slakoth:{types:["Normal"],bs:{hp:60,at:60,df:60,sa:35,sd:35,sp:30},weightkg:24,abilities:{0:"Truant"},nfe:!0},Snorunt:{types:["Ice"],bs:{hp:50,at:50,df:50,sa:50,sd:50,sp:50},weightkg:16.8,nfe:!0,abilities:{0:"Inner Focus"}},Solrock:{types:["Rock","Psychic"],bs:{hp:70,at:95,df:85,sa:55,sd:65,sp:70},weightkg:154,abilities:{0:"Levitate"},gender:"N"},Spheal:{types:["Ice","Water"],bs:{hp:70,at:40,df:50,sa:55,sd:50,sp:25},weightkg:39.5,nfe:!0,abilities:{0:"Thick Fat"}},Spinda:{types:["Normal"],bs:{hp:60,at:60,df:60,sa:60,sd:60,sp:60},weightkg:5,abilities:{0:"Own Tempo"}},Spoink:{types:["Psychic"],bs:{hp:60,at:25,df:35,sa:70,sd:80,sp:60},weightkg:30.6,nfe:!0,abilities:{0:"Thick Fat"}},Surskit:{types:["Bug","Water"],bs:{hp:40,at:30,df:32,sa:50,sd:52,sp:65},weightkg:1.7,nfe:!0,abilities:{0:"Swift Swim"}},Swablu:{types:["Normal","Flying"],bs:{hp:45,at:40,df:60,sa:40,sd:75,sp:50},weightkg:1.2,nfe:!0,abilities:{0:"Natural Cure"}},Swalot:{types:["Poison"],bs:{hp:100,at:73,df:83,sa:73,sd:83,sp:55},weightkg:80,abilities:{0:"Liquid Ooze"}},Swampert:{types:["Water","Ground"],bs:{hp:100,at:110,df:90,sa:85,sd:90,sp:60},weightkg:81.9,abilities:{0:"Torrent"}},Swellow:{types:["Normal","Flying"],bs:{hp:60,at:85,df:60,sa:50,sd:50,sp:125},weightkg:19.8,abilities:{0:"Guts"}},Taillow:{types:["Normal","Flying"],bs:{hp:40,at:55,df:30,sa:30,sd:30,sp:85},weightkg:2.3,nfe:!0,abilities:{0:"Guts"}},Torchic:{types:["Fire"],bs:{hp:45,at:60,df:40,sa:70,sd:50,sp:45},weightkg:2.5,nfe:!0,abilities:{0:"Blaze"}},Torkoal:{types:["Fire"],bs:{hp:70,at:85,df:140,sa:85,sd:70,sp:20},weightkg:80.4,abilities:{0:"White Smoke"}},Trapinch:{types:["Ground"],bs:{hp:45,at:100,df:45,sa:45,sd:45,sp:10},weightkg:15,nfe:!0,abilities:{0:"Hyper Cutter"}},Treecko:{types:["Grass"],bs:{hp:40,at:45,df:35,sa:65,sd:55,sp:70},weightkg:5,nfe:!0,abilities:{0:"Overgrow"}},Tropius:{types:["Grass","Flying"],bs:{hp:99,at:68,df:83,sa:72,sd:87,sp:51},weightkg:100,abilities:{0:"Chlorophyll"}},Vibrava:{types:["Ground","Dragon"],bs:{hp:50,at:70,df:50,sa:50,sd:50,sp:70},weightkg:15.3,abilities:{0:"Levitate"},nfe:!0},Vigoroth:{types:["Normal"],bs:{hp:80,at:80,df:80,sa:55,sd:55,sp:90},weightkg:46.5,abilities:{0:"Vital Spirit"},nfe:!0},Volbeat:{types:["Bug"],bs:{hp:65,at:73,df:55,sa:47,sd:75,sp:85},weightkg:17.7,abilities:{0:"Illuminate"}},Wailmer:{types:["Water"],bs:{hp:130,at:70,df:35,sa:70,sd:35,sp:60},weightkg:130,nfe:!0,abilities:{0:"Water Veil"}},Wailord:{types:["Water"],bs:{hp:170,at:90,df:45,sa:90,sd:45,sp:60},weightkg:398,abilities:{0:"Water Veil"}},Walrein:{types:["Ice","Water"],bs:{hp:110,at:80,df:90,sa:95,sd:90,sp:65},weightkg:150.6,abilities:{0:"Thick Fat"}},Whiscash:{types:["Water","Ground"],bs:{hp:110,at:78,df:73,sa:76,sd:71,sp:60},weightkg:23.6,abilities:{0:"Oblivious"}},Whismur:{types:["Normal"],bs:{hp:64,at:51,df:23,sa:51,sd:23,sp:28},weightkg:16.3,nfe:!0,abilities:{0:"Soundproof"}},Wingull:{types:["Water","Flying"],bs:{hp:40,at:30,df:30,sa:55,sd:30,sp:85},weightkg:9.5,nfe:!0,abilities:{0:"Keen Eye"}},Wurmple:{types:["Bug"],bs:{hp:45,at:45,df:35,sa:20,sd:30,sp:20},weightkg:3.6,nfe:!0,abilities:{0:"Shield Dust"}},Wynaut:{types:["Psychic"],bs:{hp:95,at:23,df:48,sa:23,sd:48,sp:23},weightkg:14,nfe:!0,abilities:{0:"Shadow Tag"}},Zangoose:{types:["Normal"],bs:{hp:73,at:115,df:60,sa:60,sd:60,sp:90},weightkg:40.3,abilities:{0:"Immunity"}},Zigzagoon:{types:["Normal"],bs:{hp:38,at:30,df:41,sa:30,sd:41,sp:60},weightkg:17.5,nfe:!0,abilities:{0:"Pickup"}}}),g=(0,f.extend)(!0,{},p,{Aipom:{nfe:!0},Dusclops:{nfe:!0},Electabuzz:{nfe:!0},Gligar:{nfe:!0},Lickitung:{nfe:!0},Magmar:{nfe:!0},Magneton:{nfe:!0},Misdreavus:{nfe:!0},Murkrow:{nfe:!0},Nosepass:{nfe:!0},Piloswine:{nfe:!0},Pichu:{otherFormes:["Pichu-Spiky-eared"]},Porygon2:{nfe:!0},Rhydon:{nfe:!0},Roselia:{nfe:!0},Sneasel:{nfe:!0},Tangela:{nfe:!0},Togetic:{nfe:!0},Yanma:{nfe:!0},Abomasnow:{types:["Grass","Ice"],bs:{hp:90,at:92,df:75,sa:92,sd:85,sp:60},weightkg:135.5,abilities:{0:"Snow Warning"}},Ambipom:{types:["Normal"],bs:{hp:75,at:100,df:66,sa:60,sd:66,sp:115},weightkg:20.3,abilities:{0:"Technician"}},Arceus:{types:["Normal"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",otherFormes:["Arceus-Bug","Arceus-Dark","Arceus-Dragon","Arceus-Electric","Arceus-Fighting","Arceus-Fire","Arceus-Flying","Arceus-Ghost","Arceus-Grass","Arceus-Ground","Arceus-Ice","Arceus-Poison","Arceus-Psychic","Arceus-Rock","Arceus-Steel","Arceus-Water"]},"Arceus-Bug":{types:["Bug"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Dark":{types:["Dark"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Dragon":{types:["Dragon"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Electric":{types:["Electric"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Fighting":{types:["Fighting"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Fire":{types:["Fire"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Flying":{types:["Flying"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Ghost":{types:["Ghost"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Grass":{types:["Grass"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Ground":{types:["Ground"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Ice":{types:["Ice"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Poison":{types:["Poison"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Psychic":{types:["Psychic"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Rock":{types:["Rock"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Steel":{types:["Steel"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},"Arceus-Water":{types:["Water"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},gender:"N",baseSpecies:"Arceus"},Arghonaut:{types:["Water","Fighting"],bs:{hp:105,at:110,df:95,sa:70,sd:100,sp:75},weightkg:151,abilities:{0:"Unaware"}},Azelf:{types:["Psychic"],bs:{hp:75,at:125,df:70,sa:125,sd:70,sp:115},weightkg:.3,abilities:{0:"Levitate"},gender:"N"},Bastiodon:{types:["Rock","Steel"],bs:{hp:60,at:52,df:168,sa:47,sd:138,sp:30},weightkg:149.5,abilities:{0:"Sturdy"}},Bibarel:{types:["Normal","Water"],bs:{hp:79,at:85,df:60,sa:55,sd:60,sp:71},weightkg:31.5,abilities:{0:"Simple"}},Bidoof:{types:["Normal"],bs:{hp:59,at:45,df:40,sa:35,sd:40,sp:31},weightkg:20,nfe:!0,abilities:{0:"Simple"}},Bonsly:{types:["Rock"],bs:{hp:50,at:80,df:95,sa:10,sd:45,sp:10},weightkg:15,nfe:!0,abilities:{0:"Sturdy"}},Breezi:{types:["Poison","Flying"],bs:{hp:50,at:46,df:69,sa:60,sd:50,sp:75},weightkg:.6,nfe:!0,abilities:{0:"Unburden"}},Bronzong:{types:["Steel","Psychic"],bs:{hp:67,at:89,df:116,sa:79,sd:116,sp:33},weightkg:187,gender:"N",abilities:{0:"Levitate"}},Bronzor:{types:["Steel","Psychic"],bs:{hp:57,at:24,df:86,sa:24,sd:86,sp:23},weightkg:60.5,nfe:!0,gender:"N",abilities:{0:"Levitate"}},Budew:{types:["Grass","Poison"],bs:{hp:40,at:30,df:35,sa:50,sd:70,sp:55},weightkg:1.2,nfe:!0,abilities:{0:"Natural Cure"}},Buizel:{types:["Water"],bs:{hp:55,at:65,df:35,sa:60,sd:30,sp:85},weightkg:29.5,nfe:!0,abilities:{0:"Swift Swim"}},Buneary:{types:["Normal"],bs:{hp:55,at:66,df:44,sa:44,sd:56,sp:85},weightkg:5.5,nfe:!0,abilities:{0:"Run Away"}},Burmy:{types:["Bug"],bs:{hp:40,at:29,df:45,sa:29,sd:45,sp:36},weightkg:3.4,nfe:!0,abilities:{0:"Shed Skin"}},Carnivine:{types:["Grass"],bs:{hp:74,at:100,df:72,sa:90,sd:72,sp:46},weightkg:27,abilities:{0:"Levitate"}},Chatot:{types:["Normal","Flying"],bs:{hp:76,at:65,df:45,sa:92,sd:42,sp:91},weightkg:1.9,abilities:{0:"Keen Eye"}},Cherrim:{types:["Grass"],bs:{hp:70,at:60,df:70,sa:87,sd:78,sp:85},weightkg:9.3,abilities:{0:"Flower Gift"},otherFormes:["Cherrim-Sunshine"]},"Cherrim-Sunshine":{types:["Grass"],bs:{hp:70,at:60,df:70,sa:87,sd:78,sp:85},weightkg:9.3,abilities:{0:"Flower Gift"},baseSpecies:"Cherrim"},Cherubi:{types:["Grass"],bs:{hp:45,at:35,df:45,sa:62,sd:53,sp:35},weightkg:3.3,abilities:{0:"Chlorophyll"},nfe:!0},Chimchar:{types:["Fire"],bs:{hp:44,at:58,df:44,sa:58,sd:44,sp:61},weightkg:6.2,nfe:!0,abilities:{0:"Blaze"}},Chingling:{types:["Psychic"],bs:{hp:45,at:30,df:50,sa:65,sd:50,sp:45},weightkg:.6,abilities:{0:"Levitate"},nfe:!0},Colossoil:{types:["Ground","Dark"],bs:{hp:133,at:122,df:72,sa:71,sd:72,sp:95},weightkg:683.6,abilities:{0:"Rebound"}},Combee:{types:["Bug","Flying"],bs:{hp:30,at:30,df:42,sa:30,sd:42,sp:70},weightkg:5.5,nfe:!0,abilities:{0:"Honey Gather"}},Cranidos:{types:["Rock"],bs:{hp:67,at:125,df:40,sa:30,sd:30,sp:58},weightkg:31.5,nfe:!0,abilities:{0:"Mold Breaker"}},Cresselia:{types:["Psychic"],bs:{hp:120,at:70,df:120,sa:75,sd:130,sp:85},weightkg:85.6,abilities:{0:"Levitate"}},Croagunk:{types:["Poison","Fighting"],bs:{hp:48,at:61,df:40,sa:61,sd:40,sp:50},weightkg:23,nfe:!0,abilities:{0:"Anticipation"}},Cyclohm:{types:["Electric","Dragon"],bs:{hp:108,at:60,df:118,sa:112,sd:70,sp:80},weightkg:59,abilities:{0:"Shield Dust"}},Darkrai:{types:["Dark"],bs:{hp:70,at:90,df:90,sa:135,sd:90,sp:125},weightkg:50.5,abilities:{0:"Bad Dreams"},gender:"N"},Dialga:{types:["Steel","Dragon"],bs:{hp:100,at:120,df:120,sa:150,sd:100,sp:90},weightkg:683,gender:"N",abilities:{0:"Pressure"}},Dorsoil:{types:["Ground"],bs:{hp:103,at:72,df:52,sa:61,sd:52,sp:65},weightkg:145,nfe:!0,abilities:{0:"Oblivious"}},Drapion:{types:["Poison","Dark"],bs:{hp:70,at:90,df:110,sa:60,sd:75,sp:95},weightkg:61.5,abilities:{0:"Battle Armor"}},Drifblim:{types:["Ghost","Flying"],bs:{hp:150,at:80,df:44,sa:90,sd:54,sp:80},weightkg:15,abilities:{0:"Aftermath"}},Drifloon:{types:["Ghost","Flying"],bs:{hp:90,at:50,df:34,sa:60,sd:44,sp:70},weightkg:1.2,nfe:!0,abilities:{0:"Aftermath"}},Duohm:{types:["Electric","Dragon"],bs:{hp:88,at:40,df:103,sa:77,sd:60,sp:60},weightkg:19.2,nfe:!0,abilities:{0:"Shield Dust"}},Dusknoir:{types:["Ghost"],bs:{hp:45,at:100,df:135,sa:65,sd:135,sp:45},weightkg:106.6,abilities:{0:"Pressure"}},Electivire:{types:["Electric"],bs:{hp:75,at:123,df:67,sa:95,sd:85,sp:95},weightkg:138.6,abilities:{0:"Motor Drive"}},Embirch:{types:["Fire","Grass"],bs:{hp:60,at:40,df:55,sa:65,sd:40,sp:60},weightkg:15,nfe:!0,abilities:{0:"Reckless"}},Empoleon:{types:["Water","Steel"],bs:{hp:84,at:86,df:88,sa:111,sd:101,sp:60},weightkg:84.5,abilities:{0:"Torrent"}},Fidgit:{types:["Poison","Ground"],bs:{hp:95,at:76,df:109,sa:90,sd:80,sp:105},weightkg:53,abilities:{0:"Persistent"}},Finneon:{types:["Water"],bs:{hp:49,at:49,df:56,sa:49,sd:61,sp:66},weightkg:7,nfe:!0,abilities:{0:"Swift Swim"}},Flarelm:{types:["Fire","Grass"],bs:{hp:90,at:50,df:95,sa:75,sd:70,sp:40},weightkg:73,nfe:!0,abilities:{0:"Rock Head"}},Floatzel:{types:["Water"],bs:{hp:85,at:105,df:55,sa:85,sd:50,sp:115},weightkg:33.5,abilities:{0:"Swift Swim"}},Froslass:{types:["Ice","Ghost"],bs:{hp:70,at:80,df:70,sa:80,sd:70,sp:110},weightkg:26.6,abilities:{0:"Snow Cloak"}},Gabite:{types:["Dragon","Ground"],bs:{hp:68,at:90,df:65,sa:50,sd:55,sp:82},weightkg:56,nfe:!0,abilities:{0:"Sand Veil"}},Gallade:{types:["Psychic","Fighting"],bs:{hp:68,at:125,df:65,sa:65,sd:115,sp:80},weightkg:52,abilities:{0:"Steadfast"}},Garchomp:{types:["Dragon","Ground"],bs:{hp:108,at:130,df:95,sa:80,sd:85,sp:102},weightkg:95,abilities:{0:"Sand Veil"}},Gastrodon:{types:["Water","Ground"],bs:{hp:111,at:83,df:68,sa:92,sd:82,sp:39},weightkg:29.9,abilities:{0:"Sticky Hold"}},Gible:{types:["Dragon","Ground"],bs:{hp:58,at:70,df:45,sa:40,sd:45,sp:42},weightkg:20.5,nfe:!0,abilities:{0:"Sand Veil"}},Giratina:{types:["Ghost","Dragon"],bs:{hp:150,at:100,df:120,sa:100,sd:120,sp:90},weightkg:750,gender:"N",otherFormes:["Giratina-Origin"],abilities:{0:"Pressure"}},"Giratina-Origin":{types:["Ghost","Dragon"],bs:{hp:150,at:120,df:100,sa:120,sd:100,sp:90},weightkg:650,gender:"N",abilities:{0:"Levitate"},baseSpecies:"Giratina"},Glaceon:{types:["Ice"],bs:{hp:65,at:60,df:110,sa:130,sd:95,sp:65},weightkg:25.9,abilities:{0:"Snow Cloak"}},Glameow:{types:["Normal"],bs:{hp:49,at:55,df:42,sa:42,sd:37,sp:85},weightkg:3.9,nfe:!0,abilities:{0:"Limber"}},Gliscor:{types:["Ground","Flying"],bs:{hp:75,at:95,df:125,sa:45,sd:75,sp:95},weightkg:42.5,abilities:{0:"Hyper Cutter"}},Grotle:{types:["Grass"],bs:{hp:75,at:89,df:85,sa:55,sd:65,sp:36},weightkg:97,nfe:!0,abilities:{0:"Overgrow"}},Happiny:{types:["Normal"],bs:{hp:100,at:5,df:5,sa:15,sd:65,sp:30},weightkg:24.4,nfe:!0,abilities:{0:"Natural Cure"}},Heatran:{types:["Fire","Steel"],bs:{hp:91,at:90,df:106,sa:130,sd:106,sp:77},weightkg:430,abilities:{0:"Flash Fire"}},Hippopotas:{types:["Ground"],bs:{hp:68,at:72,df:78,sa:38,sd:42,sp:32},weightkg:49.5,nfe:!0,abilities:{0:"Sand Stream"}},Hippowdon:{types:["Ground"],bs:{hp:108,at:112,df:118,sa:68,sd:72,sp:47},weightkg:300,abilities:{0:"Sand Stream"}},Honchkrow:{types:["Dark","Flying"],bs:{hp:100,at:125,df:52,sa:105,sd:52,sp:71},weightkg:27.3,abilities:{0:"Insomnia"}},Infernape:{types:["Fire","Fighting"],bs:{hp:76,at:104,df:71,sa:104,sd:71,sp:108},weightkg:55,abilities:{0:"Blaze"}},Kitsunoh:{types:["Ghost","Steel"],bs:{hp:80,at:103,df:85,sa:55,sd:80,sp:110},weightkg:51,abilities:{0:"Frisk"}},Kricketot:{types:["Bug"],bs:{hp:37,at:25,df:41,sa:25,sd:41,sp:25},weightkg:2.2,nfe:!0,abilities:{0:"Shed Skin"}},Kricketune:{types:["Bug"],bs:{hp:77,at:85,df:51,sa:55,sd:51,sp:65},weightkg:25.5,abilities:{0:"Swarm"}},Krilowatt:{types:["Electric","Water"],bs:{hp:151,at:84,df:73,sa:83,sd:74,sp:105},weightkg:10.6,abilities:{0:"Trace"}},Leafeon:{types:["Grass"],bs:{hp:65,at:110,df:130,sa:60,sd:65,sp:95},weightkg:25.5,abilities:{0:"Leaf Guard"}},Lickilicky:{types:["Normal"],bs:{hp:110,at:85,df:95,sa:80,sd:95,sp:50},weightkg:140,abilities:{0:"Own Tempo"}},Lopunny:{types:["Normal"],bs:{hp:65,at:76,df:84,sa:54,sd:96,sp:105},weightkg:33.3,abilities:{0:"Cute Charm"}},Lucario:{types:["Fighting","Steel"],bs:{hp:70,at:110,df:70,sa:115,sd:70,sp:90},weightkg:54,abilities:{0:"Steadfast"}},Lumineon:{types:["Water"],bs:{hp:69,at:69,df:76,sa:69,sd:86,sp:91},weightkg:24,abilities:{0:"Swift Swim"}},Luxio:{types:["Electric"],bs:{hp:60,at:85,df:49,sa:60,sd:49,sp:60},weightkg:30.5,nfe:!0,abilities:{0:"Rivalry"}},Luxray:{types:["Electric"],bs:{hp:80,at:120,df:79,sa:95,sd:79,sp:70},weightkg:42,abilities:{0:"Rivalry"}},Magmortar:{types:["Fire"],bs:{hp:75,at:95,df:67,sa:125,sd:95,sp:83},weightkg:68,abilities:{0:"Flame Body"}},Magnezone:{types:["Electric","Steel"],bs:{hp:70,at:70,df:115,sa:130,sd:90,sp:60},weightkg:180,gender:"N",abilities:{0:"Magnet Pull"}},Mamoswine:{types:["Ice","Ground"],bs:{hp:110,at:130,df:80,sa:70,sd:60,sp:80},weightkg:291,abilities:{0:"Oblivious"}},Manaphy:{types:["Water"],bs:{hp:100,at:100,df:100,sa:100,sd:100,sp:100},weightkg:1.4,abilities:{0:"Hydration"},gender:"N"},Mantyke:{types:["Water","Flying"],bs:{hp:45,at:20,df:50,sa:60,sd:120,sp:50},weightkg:65,nfe:!0,abilities:{0:"Swift Swim"}},Mesprit:{types:["Psychic"],bs:{hp:80,at:105,df:105,sa:105,sd:105,sp:80},weightkg:.3,abilities:{0:"Levitate"},gender:"N"},"Mime Jr.":{types:["Psychic"],bs:{hp:20,at:25,df:45,sa:70,sd:90,sp:60},weightkg:13,nfe:!0,abilities:{0:"Soundproof"}},Mismagius:{types:["Ghost"],bs:{hp:60,at:60,df:60,sa:105,sd:105,sp:105},weightkg:4.4,abilities:{0:"Levitate"}},Monferno:{types:["Fire","Fighting"],bs:{hp:64,at:78,df:52,sa:78,sd:52,sp:81},weightkg:22,nfe:!0,abilities:{0:"Blaze"}},Monohm:{types:["Electric"],bs:{hp:53,at:40,df:58,sa:67,sd:55,sp:55},weightkg:4.1,nfe:!0,abilities:{0:"Shield Dust"}},Mothim:{types:["Bug","Flying"],bs:{hp:70,at:94,df:50,sa:94,sd:50,sp:66},weightkg:23.3,abilities:{0:"Swarm"}},Munchlax:{types:["Normal"],bs:{hp:135,at:85,df:40,sa:40,sd:85,sp:5},weightkg:105,nfe:!0,abilities:{0:"Pickup"}},Nohface:{types:["Ghost"],bs:{hp:50,at:73,df:50,sa:30,sd:50,sp:80},weightkg:5.9,nfe:!0,abilities:{0:"Frisk"}},Pachirisu:{types:["Electric"],bs:{hp:60,at:45,df:70,sa:45,sd:90,sp:95},weightkg:3.9,abilities:{0:"Run Away"}},Palkia:{types:["Water","Dragon"],bs:{hp:90,at:120,df:100,sa:150,sd:120,sp:100},weightkg:336,gender:"N",abilities:{0:"Pressure"}},Phione:{types:["Water"],bs:{hp:80,at:80,df:80,sa:80,sd:80,sp:80},weightkg:3.1,abilities:{0:"Hydration"},gender:"N"},"Pichu-Spiky-eared":{types:["Electric"],bs:{hp:20,at:40,df:15,sa:35,sd:35,sp:60},weightkg:2,abilities:{0:"Static"},baseSpecies:"Pichu"},Piplup:{types:["Water"],bs:{hp:53,at:51,df:53,sa:61,sd:56,sp:40},weightkg:5.2,nfe:!0,abilities:{0:"Torrent"}},"Porygon-Z":{types:["Normal"],bs:{hp:85,at:80,df:70,sa:135,sd:75,sp:90},weightkg:34,gender:"N",abilities:{0:"Adaptability"}},Prinplup:{types:["Water"],bs:{hp:64,at:66,df:68,sa:81,sd:76,sp:50},weightkg:23,nfe:!0,abilities:{0:"Torrent"}},Privatyke:{types:["Water","Fighting"],bs:{hp:65,at:75,df:65,sa:40,sd:60,sp:45},weightkg:35,nfe:!0,abilities:{0:"Unaware"}},Probopass:{types:["Rock","Steel"],bs:{hp:60,at:55,df:145,sa:75,sd:150,sp:40},weightkg:340,abilities:{0:"Sturdy"}},Protowatt:{types:["Electric","Water"],bs:{hp:51,at:44,df:33,sa:43,sd:34,sp:65},weightkg:.1,nfe:!0,abilities:{0:"Trace"}},Purugly:{types:["Normal"],bs:{hp:71,at:82,df:64,sa:64,sd:59,sp:112},weightkg:43.8,abilities:{0:"Thick Fat"}},Pyroak:{types:["Fire","Grass"],bs:{hp:120,at:70,df:105,sa:95,sd:90,sp:60},weightkg:168,abilities:{0:"Rock Head"}},Rampardos:{types:["Rock"],bs:{hp:97,at:165,df:60,sa:65,sd:50,sp:58},weightkg:102.5,abilities:{0:"Mold Breaker"}},Rebble:{types:["Rock"],bs:{hp:45,at:25,df:65,sa:75,sd:55,sp:80},weightkg:7,nfe:!0,gender:"N",abilities:{0:"Levitate"}},Regigigas:{types:["Normal"],bs:{hp:110,at:160,df:110,sa:80,sd:110,sp:100},weightkg:420,abilities:{0:"Slow Start"},gender:"N"},Revenankh:{types:["Ghost","Fighting"],bs:{hp:90,at:105,df:90,sa:65,sd:110,sp:65},weightkg:44,abilities:{0:"Shed Skin"}},Rhyperior:{types:["Ground","Rock"],bs:{hp:115,at:140,df:130,sa:55,sd:55,sp:40},weightkg:282.8,abilities:{0:"Lightning Rod"}},Riolu:{types:["Fighting"],bs:{hp:40,at:70,df:40,sa:35,sd:40,sp:60},weightkg:20.2,nfe:!0,abilities:{0:"Steadfast"}},Roserade:{types:["Grass","Poison"],bs:{hp:60,at:70,df:55,sa:125,sd:105,sp:90},weightkg:14.5,abilities:{0:"Natural Cure"}},Rotom:{types:["Electric","Ghost"],bs:{hp:50,at:50,df:77,sa:95,sd:77,sp:91},weightkg:.3,abilities:{0:"Levitate"},gender:"N",otherFormes:["Rotom-Fan","Rotom-Frost","Rotom-Heat","Rotom-Mow","Rotom-Wash"]},"Rotom-Mow":{types:["Electric","Ghost"],bs:{hp:50,at:65,df:107,sa:105,sd:107,sp:86},weightkg:.3,abilities:{0:"Levitate"},gender:"N",baseSpecies:"Rotom"},"Rotom-Frost":{types:["Electric","Ghost"],bs:{hp:50,at:65,df:107,sa:105,sd:107,sp:86},weightkg:.3,abilities:{0:"Levitate"},gender:"N",baseSpecies:"Rotom"},"Rotom-Heat":{types:["Electric","Ghost"],bs:{hp:50,at:65,df:107,sa:105,sd:107,sp:86},weightkg:.3,abilities:{0:"Levitate"},gender:"N",baseSpecies:"Rotom"},"Rotom-Fan":{types:["Electric","Ghost"],bs:{hp:50,at:65,df:107,sa:105,sd:107,sp:86},weightkg:.3,abilities:{0:"Levitate"},gender:"N",baseSpecies:"Rotom"},"Rotom-Wash":{types:["Electric","Ghost"],bs:{hp:50,at:65,df:107,sa:105,sd:107,sp:86},weightkg:.3,abilities:{0:"Levitate"},gender:"N",baseSpecies:"Rotom"},Shaymin:{types:["Grass"],bs:{hp:100,at:100,df:100,sa:100,sd:100,sp:100},weightkg:2.1,abilities:{0:"Natural Cure"},gender:"N",otherFormes:["Shaymin-Sky"]},"Shaymin-Sky":{types:["Grass","Flying"],bs:{hp:100,at:103,df:75,sa:120,sd:75,sp:127},weightkg:5.2,abilities:{0:"Serene Grace"},gender:"N",baseSpecies:"Shaymin"},Shellos:{types:["Water"],bs:{hp:76,at:48,df:48,sa:57,sd:62,sp:34},weightkg:6.3,nfe:!0,abilities:{0:"Sticky Hold"}},Shieldon:{types:["Rock","Steel"],bs:{hp:30,at:42,df:118,sa:42,sd:88,sp:30},weightkg:57,nfe:!0,abilities:{0:"Sturdy"}},Shinx:{types:["Electric"],bs:{hp:45,at:65,df:34,sa:40,sd:34,sp:45},weightkg:9.5,nfe:!0,abilities:{0:"Rivalry"}},Skorupi:{types:["Poison","Bug"],bs:{hp:40,at:50,df:90,sa:30,sd:55,sp:65},weightkg:12,nfe:!0,abilities:{0:"Battle Armor"}},Skuntank:{types:["Poison","Dark"],bs:{hp:103,at:93,df:67,sa:71,sd:61,sp:84},weightkg:38,abilities:{0:"Stench"}},Snover:{types:["Grass","Ice"],bs:{hp:60,at:62,df:50,sa:62,sd:60,sp:40},weightkg:50.5,nfe:!0,abilities:{0:"Snow Warning"}},Spiritomb:{types:["Ghost","Dark"],bs:{hp:50,at:92,df:108,sa:92,sd:108,sp:35},weightkg:108,abilities:{0:"Pressure"}},Staraptor:{types:["Normal","Flying"],bs:{hp:85,at:120,df:70,sa:50,sd:50,sp:100},weightkg:24.9,abilities:{0:"Intimidate"}},Staravia:{types:["Normal","Flying"],bs:{hp:55,at:75,df:50,sa:40,sd:40,sp:80},weightkg:15.5,nfe:!0,abilities:{0:"Intimidate"}},Starly:{types:["Normal","Flying"],bs:{hp:40,at:55,df:30,sa:30,sd:30,sp:60},weightkg:2,nfe:!0,abilities:{0:"Keen Eye"}},Stratagem:{types:["Rock"],bs:{hp:90,at:60,df:65,sa:120,sd:70,sp:130},weightkg:45,gender:"N",abilities:{0:"Levitate"}},Stunky:{types:["Poison","Dark"],bs:{hp:63,at:63,df:47,sa:41,sd:41,sp:74},weightkg:19.2,nfe:!0,abilities:{0:"Stench"}},Syclant:{types:["Ice","Bug"],bs:{hp:70,at:116,df:70,sa:114,sd:64,sp:121},weightkg:52,abilities:{0:"Compound Eyes"}},Syclar:{types:["Ice","Bug"],bs:{hp:40,at:76,df:45,sa:74,sd:39,sp:91},weightkg:4,nfe:!0,abilities:{0:"Compound Eyes"}},Tactite:{types:["Rock"],bs:{hp:70,at:40,df:65,sa:100,sd:65,sp:95},weightkg:16,nfe:!0,gender:"N",abilities:{0:"Levitate"}},Tangrowth:{types:["Grass"],bs:{hp:100,at:100,df:125,sa:110,sd:50,sp:50},weightkg:128.6,abilities:{0:"Chlorophyll"}},Togekiss:{types:["Normal","Flying"],bs:{hp:85,at:50,df:95,sa:120,sd:115,sp:80},weightkg:38,abilities:{0:"Hustle"}},Torterra:{types:["Grass","Ground"],bs:{hp:95,at:109,df:105,sa:75,sd:85,sp:56},weightkg:310,abilities:{0:"Overgrow"}},Toxicroak:{types:["Poison","Fighting"],bs:{hp:83,at:106,df:65,sa:86,sd:65,sp:85},weightkg:44.4,abilities:{0:"Anticipation"}},Turtwig:{types:["Grass"],bs:{hp:55,at:68,df:64,sa:45,sd:55,sp:31},weightkg:10.2,nfe:!0,abilities:{0:"Overgrow"}},Uxie:{types:["Psychic"],bs:{hp:75,at:75,df:130,sa:75,sd:130,sp:95},weightkg:.3,abilities:{0:"Levitate"},gender:"N"},Vespiquen:{types:["Bug","Flying"],bs:{hp:70,at:80,df:102,sa:80,sd:102,sp:40},weightkg:38.5,abilities:{0:"Pressure"}},Voodoll:{types:["Normal","Dark"],bs:{hp:55,at:40,df:55,sa:75,sd:50,sp:70},weightkg:25,nfe:!0,abilities:{0:"Volt Absorb"}},Voodoom:{types:["Fighting","Dark"],bs:{hp:90,at:85,df:80,sa:105,sd:80,sp:110},weightkg:75.5,abilities:{0:"Volt Absorb"}},Weavile:{types:["Dark","Ice"],bs:{hp:70,at:120,df:65,sa:45,sd:85,sp:125},weightkg:34,abilities:{0:"Pressure"}},Wormadam:{types:["Bug","Grass"],bs:{hp:60,at:59,df:85,sa:79,sd:105,sp:36},weightkg:6.5,abilities:{0:"Anticipation"},otherFormes:["Wormadam-Sandy","Wormadam-Trash"]},"Wormadam-Sandy":{types:["Bug","Ground"],bs:{hp:60,at:79,df:105,sa:59,sd:85,sp:36},weightkg:6.5,abilities:{0:"Anticipation"},baseSpecies:"Wormadam"},"Wormadam-Trash":{types:["Bug","Steel"],bs:{hp:60,at:69,df:95,sa:69,sd:95,sp:36},weightkg:6.5,abilities:{0:"Anticipation"},baseSpecies:"Wormadam"},Yanmega:{types:["Bug","Flying"],bs:{hp:86,at:76,df:86,sa:116,sd:56,sp:95},weightkg:51.5,abilities:{0:"Speed Boost"}}}),d=(0,f.extend)(!0,{},g,{"Rotom-Fan":{types:["Electric","Flying"]},"Rotom-Frost":{types:["Electric","Ice"]},"Rotom-Heat":{types:["Electric","Fire"]},"Rotom-Mow":{types:["Electric","Grass"]},"Rotom-Wash":{types:["Electric","Water"]},Accelgor:{types:["Bug"],bs:{hp:80,at:70,df:40,sa:100,sd:60,sp:145},weightkg:25.3,abilities:{0:"Hydration"}},Alomomola:{types:["Water"],bs:{hp:165,at:75,df:80,sa:40,sd:45,sp:65},weightkg:31.6,abilities:{0:"Healer"}},Amoonguss:{types:["Grass","Poison"],bs:{hp:114,at:85,df:70,sa:85,sd:80,sp:30},weightkg:10.5,abilities:{0:"Effect Spore"}},Archen:{types:["Rock","Flying"],bs:{hp:55,at:112,df:45,sa:74,sd:45,sp:70},weightkg:9.5,abilities:{0:"Defeatist"},nfe:!0},Archeops:{types:["Rock","Flying"],bs:{hp:75,at:140,df:65,sa:112,sd:65,sp:110},weightkg:32,abilities:{0:"Defeatist"}},Argalis:{types:["Bug","Psychic"],bs:{hp:60,at:90,df:89,sa:87,sd:40,sp:54},weightkg:341.4,nfe:!0,abilities:{0:"Shed Skin"}},Audino:{types:["Normal"],bs:{hp:103,at:60,df:86,sa:60,sd:86,sp:50},weightkg:31,abilities:{0:"Healer"}},Aurumoth:{types:["Bug","Psychic"],bs:{hp:110,at:120,df:99,sa:117,sd:60,sp:94},weightkg:193,abilities:{0:"Weak Armor"}},Axew:{types:["Dragon"],bs:{hp:46,at:87,df:60,sa:30,sd:40,sp:57},weightkg:18,nfe:!0,abilities:{0:"Rivalry"}},Basculin:{types:["Water"],bs:{hp:70,at:92,df:65,sa:80,sd:55,sp:98},weightkg:18,abilities:{0:"Reckless"},otherFormes:["Basculin-Blue-Striped"]},"Basculin-Blue-Striped":{types:["Water"],bs:{hp:70,at:92,df:65,sa:80,sd:55,sp:98},weightkg:18,abilities:{0:"Rock Head"},baseSpecies:"Basculin"},Beartic:{types:["Ice"],bs:{hp:95,at:110,df:80,sa:70,sd:80,sp:50},weightkg:260,abilities:{0:"Snow Cloak"}},Beheeyem:{types:["Psychic"],bs:{hp:75,at:75,df:75,sa:125,sd:95,sp:40},weightkg:34.5,abilities:{0:"Telepathy"}},Bisharp:{types:["Dark","Steel"],bs:{hp:65,at:125,df:100,sa:60,sd:70,sp:70},weightkg:70,abilities:{0:"Defiant"}},Blitzle:{types:["Electric"],bs:{hp:45,at:60,df:32,sa:50,sd:32,sp:76},weightkg:29.8,nfe:!0,abilities:{0:"Lightning Rod"}},Boldore:{types:["Rock"],bs:{hp:70,at:105,df:105,sa:50,sd:40,sp:20},weightkg:102,nfe:!0,abilities:{0:"Sturdy"}},Bouffalant:{types:["Normal"],bs:{hp:95,at:110,df:95,sa:40,sd:95,sp:55},weightkg:94.6,abilities:{0:"Reckless"}},Brattler:{types:["Dark","Grass"],bs:{hp:80,at:70,df:40,sa:20,sd:90,sp:30},weightkg:11.5,nfe:!0,abilities:{0:"Harvest"}},Braviary:{types:["Normal","Flying"],bs:{hp:100,at:123,df:75,sa:57,sd:75,sp:80},weightkg:41,abilities:{0:"Keen Eye"}},Carracosta:{types:["Water","Rock"],bs:{hp:74,at:108,df:133,sa:83,sd:65,sp:32},weightkg:81,abilities:{0:"Solid Rock"}},Cawdet:{types:["Steel","Flying"],bs:{hp:35,at:72,df:85,sa:40,sd:55,sp:88},weightkg:25,nfe:!0,abilities:{0:"Keen Eye"}},Cawmodore:{types:["Steel","Flying"],bs:{hp:50,at:92,df:130,sa:65,sd:75,sp:118},weightkg:37,abilities:{0:"Intimidate"}},Chandelure:{types:["Ghost","Fire"],bs:{hp:60,at:55,df:90,sa:145,sd:90,sp:80},weightkg:34.3,abilities:{0:"Flash Fire"}},Cinccino:{types:["Normal"],bs:{hp:75,at:95,df:60,sa:65,sd:60,sp:115},weightkg:7.5,abilities:{0:"Cute Charm"}},Cobalion:{types:["Steel","Fighting"],bs:{hp:91,at:90,df:129,sa:90,sd:72,sp:108},weightkg:250,abilities:{0:"Justified"},gender:"N"},Cofagrigus:{types:["Ghost"],bs:{hp:58,at:50,df:145,sa:95,sd:105,sp:30},weightkg:76.5,abilities:{0:"Mummy"}},Conkeldurr:{types:["Fighting"],bs:{hp:105,at:140,df:95,sa:55,sd:65,sp:45},weightkg:87,abilities:{0:"Guts"}},Cottonee:{types:["Grass"],bs:{hp:40,at:27,df:60,sa:37,sd:50,sp:66},weightkg:.6,nfe:!0,abilities:{0:"Prankster"}},Crustle:{types:["Bug","Rock"],bs:{hp:70,at:95,df:125,sa:65,sd:75,sp:45},weightkg:200,abilities:{0:"Sturdy"}},Cryogonal:{types:["Ice"],bs:{hp:70,at:50,df:30,sa:95,sd:135,sp:105},weightkg:148,abilities:{0:"Levitate"},gender:"N"},Cubchoo:{types:["Ice"],bs:{hp:55,at:70,df:40,sa:60,sd:40,sp:40},weightkg:8.5,nfe:!0,abilities:{0:"Snow Cloak"}},Cupra:{types:["Bug","Psychic"],bs:{hp:50,at:60,df:49,sa:67,sd:30,sp:44},weightkg:4.8,nfe:!0,abilities:{0:"Shield Dust"}},Darmanitan:{types:["Fire"],bs:{hp:105,at:140,df:55,sa:30,sd:55,sp:95},weightkg:92.9,abilities:{0:"Sheer Force"},otherFormes:["Darmanitan-Zen"]},"Darmanitan-Zen":{types:["Fire","Psychic"],bs:{hp:105,at:30,df:105,sa:140,sd:105,sp:55},weightkg:92.9,baseSpecies:"Darmanitan",abilities:{0:"Zen Mode"}},Darumaka:{types:["Fire"],bs:{hp:70,at:90,df:45,sa:15,sd:45,sp:50},weightkg:37.5,nfe:!0,abilities:{0:"Hustle"}},Deerling:{types:["Normal","Grass"],bs:{hp:60,at:60,df:50,sa:40,sd:50,sp:75},weightkg:19.5,nfe:!0,abilities:{0:"Chlorophyll"}},Deino:{types:["Dark","Dragon"],bs:{hp:52,at:65,df:50,sa:45,sd:50,sp:38},weightkg:17.3,abilities:{0:"Hustle"},nfe:!0},Dewott:{types:["Water"],bs:{hp:75,at:75,df:60,sa:83,sd:60,sp:60},weightkg:24.5,nfe:!0,abilities:{0:"Torrent"}},Drilbur:{types:["Ground"],bs:{hp:60,at:85,df:40,sa:30,sd:45,sp:68},weightkg:8.5,nfe:!0,abilities:{0:"Sand Rush"}},Druddigon:{types:["Dragon"],bs:{hp:77,at:120,df:90,sa:60,sd:90,sp:48},weightkg:139,abilities:{0:"Rough Skin"}},Ducklett:{types:["Water","Flying"],bs:{hp:62,at:44,df:50,sa:44,sd:50,sp:55},weightkg:5.5,nfe:!0,abilities:{0:"Keen Eye"}},Duosion:{types:["Psychic"],bs:{hp:65,at:40,df:50,sa:125,sd:60,sp:30},weightkg:8,nfe:!0,abilities:{0:"Overcoat"}},Durant:{types:["Bug","Steel"],bs:{hp:58,at:109,df:112,sa:48,sd:48,sp:109},weightkg:33,abilities:{0:"Swarm"}},Dwebble:{types:["Bug","Rock"],bs:{hp:50,at:65,df:85,sa:35,sd:35,sp:55},weightkg:14.5,nfe:!0,abilities:{0:"Sturdy"}},Eelektrik:{types:["Electric"],bs:{hp:65,at:85,df:70,sa:75,sd:70,sp:40},weightkg:22,abilities:{0:"Levitate"},nfe:!0},Eelektross:{types:["Electric"],bs:{hp:85,at:115,df:80,sa:105,sd:80,sp:50},weightkg:80.5,abilities:{0:"Levitate"}},Elgyem:{types:["Psychic"],bs:{hp:55,at:55,df:55,sa:85,sd:55,sp:30},weightkg:9,nfe:!0,abilities:{0:"Telepathy"}},Emboar:{types:["Fire","Fighting"],bs:{hp:110,at:123,df:65,sa:100,sd:65,sp:65},weightkg:150,abilities:{0:"Blaze"}},Emolga:{types:["Electric","Flying"],bs:{hp:55,at:75,df:60,sa:75,sd:60,sp:103},weightkg:5,abilities:{0:"Static"}},Escavalier:{types:["Bug","Steel"],bs:{hp:70,at:135,df:105,sa:60,sd:105,sp:20},weightkg:33,abilities:{0:"Swarm"}},Excadrill:{types:["Ground","Steel"],bs:{hp:110,at:135,df:60,sa:50,sd:65,sp:88},weightkg:40.4,abilities:{0:"Sand Rush"}},Ferroseed:{types:["Grass","Steel"],bs:{hp:44,at:50,df:91,sa:24,sd:86,sp:10},weightkg:18.8,nfe:!0,abilities:{0:"Iron Barbs"}},Ferrothorn:{types:["Grass","Steel"],bs:{hp:74,at:94,df:131,sa:54,sd:116,sp:20},weightkg:110,abilities:{0:"Iron Barbs"}},Foongus:{types:["Grass","Poison"],bs:{hp:69,at:55,df:45,sa:55,sd:55,sp:15},weightkg:1,nfe:!0,abilities:{0:"Effect Spore"}},Fraxure:{types:["Dragon"],bs:{hp:66,at:117,df:70,sa:40,sd:50,sp:67},weightkg:36,nfe:!0,abilities:{0:"Rivalry"}},Frillish:{types:["Water","Ghost"],bs:{hp:55,at:40,df:50,sa:65,sd:85,sp:40},weightkg:33,nfe:!0,abilities:{0:"Water Absorb"}},Galvantula:{types:["Bug","Electric"],bs:{hp:70,at:77,df:60,sa:97,sd:60,sp:108},weightkg:14.3,abilities:{0:"Compound Eyes"}},Garbodor:{types:["Poison"],bs:{hp:80,at:95,df:82,sa:60,sd:82,sp:75},weightkg:107.3,abilities:{0:"Stench"}},Genesect:{types:["Bug","Steel"],bs:{hp:71,at:120,df:95,sa:120,sd:95,sp:99},weightkg:82.5,abilities:{0:"Download"},gender:"N",otherFormes:["Genesect-Burn","Genesect-Chill","Genesect-Douse","Genesect-Shock"]},"Genesect-Burn":{types:["Bug","Steel"],bs:{hp:71,at:120,df:95,sa:120,sd:95,sp:99},weightkg:82.5,abilities:{0:"Download"},gender:"N",baseSpecies:"Genesect"},"Genesect-Chill":{types:["Bug","Steel"],bs:{hp:71,at:120,df:95,sa:120,sd:95,sp:99},weightkg:82.5,abilities:{0:"Download"},gender:"N",baseSpecies:"Genesect"},"Genesect-Douse":{types:["Bug","Steel"],bs:{hp:71,at:120,df:95,sa:120,sd:95,sp:99},weightkg:82.5,abilities:{0:"Download"},gender:"N",baseSpecies:"Genesect"},"Genesect-Shock":{types:["Bug","Steel"],bs:{hp:71,at:120,df:95,sa:120,sd:95,sp:99},weightkg:82.5,abilities:{0:"Download"},gender:"N",baseSpecies:"Genesect"},Gigalith:{types:["Rock"],bs:{hp:85,at:135,df:130,sa:60,sd:70,sp:25},weightkg:260,abilities:{0:"Sturdy"}},Golett:{types:["Ground","Ghost"],bs:{hp:59,at:74,df:50,sa:35,sd:50,sp:35},weightkg:92,nfe:!0,gender:"N",abilities:{0:"Iron Fist"}},Golurk:{types:["Ground","Ghost"],bs:{hp:89,at:124,df:80,sa:55,sd:80,sp:55},weightkg:330,gender:"N",abilities:{0:"Iron Fist"}},Gothita:{types:["Psychic"],bs:{hp:45,at:30,df:50,sa:55,sd:65,sp:45},weightkg:5.8,nfe:!0,abilities:{0:"Frisk"}},Gothitelle:{types:["Psychic"],bs:{hp:70,at:55,df:95,sa:95,sd:110,sp:65},weightkg:44,abilities:{0:"Frisk"}},Gothorita:{types:["Psychic"],bs:{hp:60,at:45,df:70,sa:75,sd:85,sp:55},weightkg:18,nfe:!0,abilities:{0:"Frisk"}},Gurdurr:{types:["Fighting"],bs:{hp:85,at:105,df:85,sa:40,sd:50,sp:40},weightkg:40,nfe:!0,abilities:{0:"Guts"}},Haxorus:{types:["Dragon"],bs:{hp:76,at:147,df:90,sa:60,sd:70,sp:97},weightkg:105.5,abilities:{0:"Rivalry"}},Heatmor:{types:["Fire"],bs:{hp:85,at:97,df:66,sa:105,sd:66,sp:65},weightkg:58,abilities:{0:"Gluttony"}},Herdier:{types:["Normal"],bs:{hp:65,at:80,df:65,sa:35,sd:65,sp:60},weightkg:14.7,nfe:!0,abilities:{0:"Intimidate"}},Hydreigon:{types:["Dark","Dragon"],bs:{hp:92,at:105,df:90,sa:125,sd:90,sp:98},weightkg:160,abilities:{0:"Levitate"}},Jellicent:{types:["Water","Ghost"],bs:{hp:100,at:60,df:70,sa:85,sd:105,sp:60},weightkg:135,abilities:{0:"Water Absorb"}},Joltik:{types:["Bug","Electric"],bs:{hp:50,at:47,df:50,sa:57,sd:50,sp:65},weightkg:.6,nfe:!0,abilities:{0:"Compound Eyes"}},Karrablast:{types:["Bug"],bs:{hp:50,at:75,df:45,sa:40,sd:45,sp:60},weightkg:5.9,nfe:!0,abilities:{0:"Swarm"}},Keldeo:{types:["Water","Fighting"],bs:{hp:91,at:72,df:90,sa:129,sd:90,sp:108},weightkg:48.5,abilities:{0:"Justified"},gender:"N",otherFormes:["Keldeo-Resolute"]},"Keldeo-Resolute":{types:["Water","Fighting"],bs:{hp:91,at:72,df:90,sa:129,sd:90,sp:108},weightkg:48.5,abilities:{0:"Justified"},gender:"N",baseSpecies:"Keldeo"},Klang:{types:["Steel"],bs:{hp:60,at:80,df:95,sa:70,sd:85,sp:50},weightkg:51,nfe:!0,gender:"N",abilities:{0:"Plus"}},Klink:{types:["Steel"],bs:{hp:40,at:55,df:70,sa:45,sd:60,sp:30},weightkg:21,nfe:!0,gender:"N",abilities:{0:"Plus"}},Klinklang:{types:["Steel"],bs:{hp:60,at:100,df:115,sa:70,sd:85,sp:90},weightkg:81,gender:"N",abilities:{0:"Plus"}},Krokorok:{types:["Ground","Dark"],bs:{hp:60,at:82,df:45,sa:45,sd:45,sp:74},weightkg:33.4,nfe:!0,abilities:{0:"Intimidate"}},Krookodile:{types:["Ground","Dark"],bs:{hp:95,at:117,df:70,sa:65,sd:70,sp:92},weightkg:96.3,abilities:{0:"Intimidate"}},Kyurem:{types:["Dragon","Ice"],bs:{hp:125,at:130,df:90,sa:130,sd:90,sp:95},weightkg:325,abilities:{0:"Pressure"},gender:"N",otherFormes:["Kyurem-Black","Kyurem-White"]},"Kyurem-Black":{types:["Dragon","Ice"],bs:{hp:125,at:170,df:100,sa:120,sd:90,sp:95},weightkg:325,abilities:{0:"Teravolt"},gender:"N",baseSpecies:"Kyurem"},"Kyurem-White":{types:["Dragon","Ice"],bs:{hp:125,at:120,df:90,sa:170,sd:100,sp:95},weightkg:325,abilities:{0:"Turboblaze"},gender:"N",baseSpecies:"Kyurem"},Lampent:{types:["Ghost","Fire"],bs:{hp:60,at:40,df:60,sa:95,sd:60,sp:55},weightkg:13,nfe:!0,abilities:{0:"Flash Fire"}},Landorus:{types:["Ground","Flying"],bs:{hp:89,at:125,df:90,sa:115,sd:80,sp:101},weightkg:68,abilities:{0:"Sand Force"},otherFormes:["Landorus-Therian"]},"Landorus-Therian":{types:["Ground","Flying"],bs:{hp:89,at:145,df:90,sa:105,sd:80,sp:91},weightkg:68,abilities:{0:"Intimidate"},baseSpecies:"Landorus"},Larvesta:{types:["Bug","Fire"],bs:{hp:55,at:85,df:55,sa:50,sd:55,sp:60},weightkg:28.8,nfe:!0,abilities:{0:"Flame Body"}},Leavanny:{types:["Bug","Grass"],bs:{hp:75,at:103,df:80,sa:70,sd:70,sp:92},weightkg:20.5,abilities:{0:"Swarm"}},Liepard:{types:["Dark"],bs:{hp:64,at:88,df:50,sa:88,sd:50,sp:106},weightkg:37.5,abilities:{0:"Limber"}},Lilligant:{types:["Grass"],bs:{hp:70,at:60,df:75,sa:110,sd:75,sp:90},weightkg:16.3,abilities:{0:"Chlorophyll"}},Lillipup:{types:["Normal"],bs:{hp:45,at:60,df:45,sa:25,sd:45,sp:55},weightkg:4.1,nfe:!0,abilities:{0:"Vital Spirit"}},Litwick:{types:["Ghost","Fire"],bs:{hp:50,at:30,df:55,sa:65,sd:55,sp:20},weightkg:3.1,nfe:!0,abilities:{0:"Flash Fire"}},Malaconda:{types:["Dark","Grass"],bs:{hp:115,at:100,df:60,sa:40,sd:130,sp:55},weightkg:108.8,abilities:{0:"Harvest"}},Mandibuzz:{types:["Dark","Flying"],bs:{hp:110,at:65,df:105,sa:55,sd:95,sp:80},weightkg:39.5,abilities:{0:"Big Pecks"}},Maractus:{types:["Grass"],bs:{hp:75,at:86,df:67,sa:106,sd:67,sp:60},weightkg:28,abilities:{0:"Water Absorb"}},Meloetta:{types:["Normal","Psychic"],bs:{hp:100,at:77,df:77,sa:128,sd:128,sp:90},weightkg:6.5,abilities:{0:"Serene Grace"},otherFormes:["Meloetta-Pirouette"],gender:"N"},"Meloetta-Pirouette":{types:["Normal","Fighting"],bs:{hp:100,at:128,df:90,sa:77,sd:77,sp:128},weightkg:6.5,abilities:{0:"Serene Grace"},baseSpecies:"Meloetta",gender:"N"},Mienfoo:{types:["Fighting"],bs:{hp:45,at:85,df:50,sa:55,sd:50,sp:65},weightkg:20,nfe:!0,abilities:{0:"Inner Focus"}},Mienshao:{types:["Fighting"],bs:{hp:65,at:125,df:60,sa:95,sd:60,sp:105},weightkg:35.5,abilities:{0:"Inner Focus"}},Minccino:{types:["Normal"],bs:{hp:55,at:50,df:40,sa:40,sd:40,sp:75},weightkg:5.8,nfe:!0,abilities:{0:"Cute Charm"}},Mollux:{types:["Fire","Poison"],bs:{hp:95,at:45,df:83,sa:131,sd:105,sp:76},weightkg:41,abilities:{0:"Dry Skin"}},Munna:{types:["Psychic"],bs:{hp:76,at:25,df:45,sa:67,sd:55,sp:24},weightkg:23.3,nfe:!0,abilities:{0:"Forewarn"}},Musharna:{types:["Psychic"],bs:{hp:116,at:55,df:85,sa:107,sd:95,sp:29},weightkg:60.5,abilities:{0:"Forewarn"}},Necturine:{types:["Grass","Ghost"],bs:{hp:49,at:55,df:60,sa:50,sd:75,sp:51},weightkg:1.8,nfe:!0,abilities:{0:"Anticipation"}},Necturna:{types:["Grass","Ghost"],bs:{hp:64,at:120,df:100,sa:85,sd:120,sp:81},weightkg:49.6,abilities:{0:"Forewarn"}},Oshawott:{types:["Water"],bs:{hp:55,at:55,df:45,sa:63,sd:45,sp:45},weightkg:5.9,nfe:!0,abilities:{0:"Torrent"}},Palpitoad:{types:["Water","Ground"],bs:{hp:75,at:65,df:55,sa:65,sd:55,sp:69},weightkg:17,nfe:!0,abilities:{0:"Swift Swim"}},Panpour:{types:["Water"],bs:{hp:50,at:53,df:48,sa:53,sd:48,sp:64},weightkg:13.5,nfe:!0,abilities:{0:"Gluttony"}},Pansage:{types:["Grass"],bs:{hp:50,at:53,df:48,sa:53,sd:48,sp:64},weightkg:10.5,nfe:!0,abilities:{0:"Gluttony"}},Pansear:{types:["Fire"],bs:{hp:50,at:53,df:48,sa:53,sd:48,sp:64},weightkg:11,nfe:!0,abilities:{0:"Gluttony"}},Patrat:{types:["Normal"],bs:{hp:45,at:55,df:39,sa:35,sd:39,sp:42},weightkg:11.6,nfe:!0,abilities:{0:"Run Away"}},Pawniard:{types:["Dark","Steel"],bs:{hp:45,at:85,df:70,sa:40,sd:40,sp:60},weightkg:10.2,nfe:!0,abilities:{0:"Defiant"}},Petilil:{types:["Grass"],bs:{hp:45,at:35,df:50,sa:70,sd:50,sp:30},weightkg:6.6,nfe:!0,abilities:{0:"Chlorophyll"}},Pidove:{types:["Normal","Flying"],bs:{hp:50,at:55,df:50,sa:36,sd:30,sp:43},weightkg:2.1,nfe:!0,abilities:{0:"Big Pecks"}},Pignite:{types:["Fire","Fighting"],bs:{hp:90,at:93,df:55,sa:70,sd:55,sp:55},weightkg:55.5,nfe:!0,abilities:{0:"Blaze"}},Purrloin:{types:["Dark"],bs:{hp:41,at:50,df:37,sa:50,sd:37,sp:66},weightkg:10.1,nfe:!0,abilities:{0:"Limber"}},Reshiram:{types:["Dragon","Fire"],bs:{hp:100,at:120,df:100,sa:150,sd:120,sp:90},weightkg:330,abilities:{0:"Turboblaze"},gender:"N"},Reuniclus:{types:["Psychic"],bs:{hp:110,at:65,df:75,sa:125,sd:85,sp:30},weightkg:20.1,abilities:{0:"Overcoat"}},Roggenrola:{types:["Rock"],bs:{hp:55,at:75,df:85,sa:25,sd:25,sp:15},weightkg:18,nfe:!0,abilities:{0:"Sturdy"}},Rufflet:{types:["Normal","Flying"],bs:{hp:70,at:83,df:50,sa:37,sd:50,sp:60},weightkg:10.5,nfe:!0,abilities:{0:"Keen Eye"}},Samurott:{types:["Water"],bs:{hp:95,at:100,df:85,sa:108,sd:70,sp:70},weightkg:94.6,abilities:{0:"Torrent"}},Sandile:{types:["Ground","Dark"],bs:{hp:50,at:72,df:35,sa:35,sd:35,sp:65},weightkg:15.2,nfe:!0,abilities:{0:"Intimidate"}},Sawk:{types:["Fighting"],bs:{hp:75,at:125,df:75,sa:30,sd:75,sp:85},weightkg:51,abilities:{0:"Sturdy"}},Sawsbuck:{types:["Normal","Grass"],bs:{hp:80,at:100,df:70,sa:60,sd:70,sp:95},weightkg:92.5,abilities:{0:"Chlorophyll"}},Scolipede:{types:["Bug","Poison"],bs:{hp:60,at:90,df:89,sa:55,sd:69,sp:112},weightkg:200.5,abilities:{0:"Poison Point"}},Scrafty:{types:["Dark","Fighting"],bs:{hp:65,at:90,df:115,sa:45,sd:115,sp:58},weightkg:30,abilities:{0:"Shed Skin"}},Scraggy:{types:["Dark","Fighting"],bs:{hp:50,at:75,df:70,sa:35,sd:70,sp:48},weightkg:11.8,nfe:!0,abilities:{0:"Shed Skin"}},Scratchet:{types:["Normal","Fighting"],bs:{hp:55,at:85,df:80,sa:20,sd:70,sp:40},weightkg:20,nfe:!0,abilities:{0:"Scrappy"}},Seismitoad:{types:["Water","Ground"],bs:{hp:105,at:85,df:75,sa:85,sd:75,sp:74},weightkg:62,abilities:{0:"Swift Swim"}},Serperior:{types:["Grass"],bs:{hp:75,at:75,df:95,sa:75,sd:95,sp:113},weightkg:63,abilities:{0:"Overgrow"}},Servine:{types:["Grass"],bs:{hp:60,at:60,df:75,sa:60,sd:75,sp:83},weightkg:16,nfe:!0,abilities:{0:"Overgrow"}},Sewaddle:{types:["Bug","Grass"],bs:{hp:45,at:53,df:70,sa:40,sd:60,sp:42},weightkg:2.5,nfe:!0,abilities:{0:"Swarm"}},Shelmet:{types:["Bug"],bs:{hp:50,at:40,df:85,sa:40,sd:65,sp:25},weightkg:7.7,nfe:!0,abilities:{0:"Hydration"}},Sigilyph:{types:["Psychic","Flying"],bs:{hp:72,at:58,df:80,sa:103,sd:80,sp:97},weightkg:14,abilities:{0:"Wonder Skin"}},Simipour:{types:["Water"],bs:{hp:75,at:98,df:63,sa:98,sd:63,sp:101},weightkg:29,abilities:{0:"Gluttony"}},Simisage:{types:["Grass"],bs:{hp:75,at:98,df:63,sa:98,sd:63,sp:101},weightkg:30.5,abilities:{0:"Gluttony"}},Simisear:{types:["Fire"],bs:{hp:75,at:98,df:63,sa:98,sd:63,sp:101},weightkg:28,abilities:{0:"Gluttony"}},Snivy:{types:["Grass"],bs:{hp:45,at:45,df:55,sa:45,sd:55,sp:63},weightkg:8.1,nfe:!0,abilities:{0:"Overgrow"}},Solosis:{types:["Psychic"],bs:{hp:45,at:30,df:40,sa:105,sd:50,sp:20},weightkg:1,nfe:!0,abilities:{0:"Overcoat"}},Stoutland:{types:["Normal"],bs:{hp:85,at:100,df:90,sa:45,sd:90,sp:80},weightkg:61,abilities:{0:"Intimidate"}},Stunfisk:{types:["Ground","Electric"],bs:{hp:109,at:66,df:84,sa:81,sd:99,sp:32},weightkg:11,abilities:{0:"Static"}},Swadloon:{types:["Bug","Grass"],bs:{hp:55,at:63,df:90,sa:50,sd:80,sp:42},weightkg:7.3,nfe:!0,abilities:{0:"Leaf Guard"}},Swanna:{types:["Water","Flying"],bs:{hp:75,at:87,df:63,sa:87,sd:63,sp:98},weightkg:24.2,abilities:{0:"Keen Eye"}},Swoobat:{types:["Psychic","Flying"],bs:{hp:67,at:57,df:55,sa:77,sd:55,sp:114},weightkg:10.5,abilities:{0:"Unaware"}},Tepig:{types:["Fire"],bs:{hp:65,at:63,df:45,sa:45,sd:45,sp:45},weightkg:9.9,nfe:!0,abilities:{0:"Blaze"}},Terrakion:{types:["Rock","Fighting"],bs:{hp:91,at:129,df:90,sa:72,sd:90,sp:108},weightkg:260,abilities:{0:"Justified"},gender:"N"},Throh:{types:["Fighting"],bs:{hp:120,at:100,df:85,sa:30,sd:85,sp:45},weightkg:55.5,abilities:{0:"Guts"}},Thundurus:{types:["Electric","Flying"],bs:{hp:79,at:115,df:70,sa:125,sd:80,sp:111},weightkg:61,abilities:{0:"Prankster"},otherFormes:["Thundurus-Therian"]},"Thundurus-Therian":{types:["Electric","Flying"],bs:{hp:79,at:105,df:70,sa:145,sd:80,sp:101},weightkg:61,abilities:{0:"Volt Absorb"},baseSpecies:"Thundurus"},Timburr:{types:["Fighting"],bs:{hp:75,at:80,df:55,sa:25,sd:35,sp:35},weightkg:12.5,nfe:!0,abilities:{0:"Guts"}},Tirtouga:{types:["Water","Rock"],bs:{hp:54,at:78,df:103,sa:53,sd:45,sp:22},weightkg:16.5,nfe:!0,abilities:{0:"Solid Rock"}},Tomohawk:{types:["Flying","Fighting"],bs:{hp:105,at:60,df:90,sa:115,sd:80,sp:85},weightkg:37.2,abilities:{0:"Intimidate"}},Tornadus:{types:["Flying"],bs:{hp:79,at:115,df:70,sa:125,sd:80,sp:111},weightkg:63,abilities:{0:"Prankster"},otherFormes:["Tornadus-Therian"]},"Tornadus-Therian":{types:["Flying"],bs:{hp:79,at:100,df:80,sa:110,sd:90,sp:121},weightkg:63,abilities:{0:"Regenerator"},baseSpecies:"Tornadus"},Tranquill:{types:["Normal","Flying"],bs:{hp:62,at:77,df:62,sa:50,sd:42,sp:65},weightkg:15,nfe:!0,abilities:{0:"Big Pecks"}},Trubbish:{types:["Poison"],bs:{hp:50,at:50,df:62,sa:40,sd:62,sp:65},weightkg:31,nfe:!0,abilities:{0:"Stench"}},Tympole:{types:["Water"],bs:{hp:50,at:50,df:40,sa:50,sd:40,sp:64},weightkg:4.5,nfe:!0,abilities:{0:"Swift Swim"}},Tynamo:{types:["Electric"],bs:{hp:35,at:55,df:40,sa:45,sd:40,sp:60},weightkg:.3,abilities:{0:"Levitate"},nfe:!0},Unfezant:{types:["Normal","Flying"],bs:{hp:80,at:105,df:80,sa:65,sd:55,sp:93},weightkg:29,abilities:{0:"Big Pecks"}},Vanillish:{types:["Ice"],bs:{hp:51,at:65,df:65,sa:80,sd:75,sp:59},weightkg:41,nfe:!0,abilities:{0:"Ice Body"}},Vanillite:{types:["Ice"],bs:{hp:36,at:50,df:50,sa:65,sd:60,sp:44},weightkg:5.7,nfe:!0,abilities:{0:"Ice Body"}},Vanilluxe:{types:["Ice"],bs:{hp:71,at:95,df:85,sa:110,sd:95,sp:79},weightkg:57.5,abilities:{0:"Ice Body"}},Venipede:{types:["Bug","Poison"],bs:{hp:30,at:45,df:59,sa:30,sd:39,sp:57},weightkg:5.3,nfe:!0,abilities:{0:"Poison Point"}},Victini:{types:["Psychic","Fire"],bs:{hp:100,at:100,df:100,sa:100,sd:100,sp:100},weightkg:4,abilities:{0:"Victory Star"},gender:"N"},Virizion:{types:["Grass","Fighting"],bs:{hp:91,at:90,df:72,sa:90,sd:129,sp:108},weightkg:200,abilities:{0:"Justified"},gender:"N"},Volcarona:{types:["Bug","Fire"],bs:{hp:85,at:60,df:65,sa:135,sd:105,sp:100},weightkg:46,abilities:{0:"Flame Body"}},Vullaby:{types:["Dark","Flying"],bs:{hp:70,at:55,df:75,sa:45,sd:65,sp:60},weightkg:9,nfe:!0,abilities:{0:"Big Pecks"}},Watchog:{types:["Normal"],bs:{hp:60,at:85,df:69,sa:60,sd:69,sp:77},weightkg:27,abilities:{0:"Illuminate"}},Whimsicott:{types:["Grass"],bs:{hp:60,at:67,df:85,sa:77,sd:75,sp:116},weightkg:6.6,abilities:{0:"Prankster"}},Whirlipede:{types:["Bug","Poison"],bs:{hp:40,at:55,df:99,sa:40,sd:79,sp:47},weightkg:58.5,nfe:!0,abilities:{0:"Poison Point"}},Woobat:{types:["Psychic","Flying"],bs:{hp:55,at:45,df:43,sa:55,sd:43,sp:72},weightkg:2.1,nfe:!0,abilities:{0:"Unaware"}},Yamask:{types:["Ghost"],bs:{hp:38,at:30,df:85,sa:55,sd:65,sp:30},weightkg:1.5,abilities:{0:"Mummy"},nfe:!0},Zebstrika:{types:["Electric"],bs:{hp:75,at:100,df:63,sa:80,sd:63,sp:116},weightkg:79.5,abilities:{0:"Lightning Rod"}},Zekrom:{types:["Dragon","Electric"],bs:{hp:100,at:150,df:120,sa:120,sd:100,sp:90},weightkg:345,abilities:{0:"Teravolt"},gender:"N"},Zoroark:{types:["Dark"],bs:{hp:60,at:105,df:60,sa:120,sd:60,sp:105},weightkg:81.1,abilities:{0:"Illusion"}},Zorua:{types:["Dark"],bs:{hp:40,at:65,df:40,sa:80,sd:40,sp:65},weightkg:12.5,abilities:{0:"Illusion"},nfe:!0},Zweilous:{types:["Dark","Dragon"],bs:{hp:72,at:85,df:70,sa:65,sd:70,sp:58},weightkg:50,abilities:{0:"Hustle"},nfe:!0}});delete d.Pichu.otherFormes,delete d["Pichu-Spiky-eared"];var h=(0,f.extend)(!0,{},d,{Abomasnow:{otherFormes:["Abomasnow-Mega"]},Absol:{otherFormes:["Absol-Mega"]},Aerodactyl:{otherFormes:["Aerodactyl-Mega"]},Aggron:{otherFormes:["Aggron-Mega"]},Alakazam:{bs:{sd:95},otherFormes:["Alakazam-Mega"]},Altaria:{otherFormes:["Altaria-Mega"]},Ampharos:{bs:{df:85},otherFormes:["Ampharos-Mega"]},Audino:{otherFormes:["Audino-Mega"]},Azumarill:{types:["Water","Fairy"],bs:{sa:60}},Azurill:{types:["Normal","Fairy"]},Banette:{otherFormes:["Banette-Mega"]},Beautifly:{bs:{sa:100}},Beedrill:{bs:{at:90},otherFormes:["Beedrill-Mega"]},Bellossom:{bs:{df:95}},Blastoise:{otherFormes:["Blastoise-Mega"]},Blaziken:{otherFormes:["Blaziken-Mega"]},Butterfree:{bs:{sa:90}},Camerupt:{otherFormes:["Camerupt-Mega"]},Charizard:{otherFormes:["Charizard-Mega-X","Charizard-Mega-Y"]},Clefable:{types:["Fairy"],bs:{sa:95}},Clefairy:{types:["Fairy"]},Cleffa:{types:["Fairy"]},Cottonee:{types:["Grass","Fairy"]},Exploud:{bs:{sd:73}},Gallade:{otherFormes:["Gallade-Mega"]},Garchomp:{otherFormes:["Garchomp-Mega"]},Gardevoir:{types:["Psychic","Fairy"],otherFormes:["Gardevoir-Mega"]},Gengar:{otherFormes:["Gengar-Mega"]},Gigalith:{bs:{sd:80}},Glalie:{otherFormes:["Glalie-Mega"]},Golem:{bs:{at:120}},Granbull:{types:["Fairy"]},Groudon:{otherFormes:["Groudon-Primal"]},Gyarados:{otherFormes:["Gyarados-Mega"]},Heracross:{otherFormes:["Heracross-Mega"]},Houndoom:{otherFormes:["Houndoom-Mega"]},Igglybuff:{types:["Normal","Fairy"]},Jigglypuff:{types:["Normal","Fairy"]},Jumpluff:{bs:{sd:95}},Kangaskhan:{otherFormes:["Kangaskhan-Mega"]},Kirlia:{types:["Psychic","Fairy"]},Krookodile:{bs:{df:80}},Kyogre:{otherFormes:["Kyogre-Primal"]},Latias:{otherFormes:["Latias-Mega"]},Latios:{otherFormes:["Latios-Mega"]},Leavanny:{bs:{sd:80}},Lopunny:{otherFormes:["Lopunny-Mega"]},Lucario:{otherFormes:["Lucario-Mega"]},Manectric:{otherFormes:["Manectric-Mega"]},Marill:{types:["Water","Fairy"]},Mawile:{types:["Steel","Fairy"],otherFormes:["Mawile-Mega"]},Medicham:{otherFormes:["Medicham-Mega"]},Metagross:{otherFormes:["Metagross-Mega"]},Mewtwo:{otherFormes:["Mewtwo-Mega-X","Mewtwo-Mega-Y"]},"Mime Jr.":{types:["Psychic","Fairy"]},"Mr. Mime":{types:["Psychic","Fairy"]},Nidoking:{bs:{at:102}},Nidoqueen:{bs:{at:92}},Pidgeot:{bs:{sp:101},otherFormes:["Pidgeot-Mega"]},Pikachu:{bs:{df:40,sd:50},otherFormes:["Pikachu-Belle","Pikachu-Cosplay","Pikachu-Libre","Pikachu-PhD","Pikachu-Pop-Star","Pikachu-Rock-Star"]},Pinsir:{otherFormes:["Pinsir-Mega"]},Poliwrath:{bs:{at:95}},Raichu:{bs:{sp:110}},Ralts:{types:["Psychic","Fairy"]},Rayquaza:{otherFormes:["Rayquaza-Mega"]},Roserade:{bs:{df:65}},Sableye:{otherFormes:["Sableye-Mega"]},Salamence:{otherFormes:["Salamence-Mega"]},Sceptile:{otherFormes:["Sceptile-Mega"]},Scizor:{otherFormes:["Scizor-Mega"]},Scolipede:{bs:{at:100}},Seismitoad:{bs:{at:95}},Sharpedo:{otherFormes:["Sharpedo-Mega"]},Slowbro:{otherFormes:["Slowbro-Mega"]},Snubbull:{types:["Fairy"]},Staraptor:{bs:{sd:60}},Steelix:{otherFormes:["Steelix-Mega"]},Stoutland:{bs:{at:110}},Swampert:{otherFormes:["Swampert-Mega"]},Togekiss:{types:["Fairy","Flying"]},Togepi:{types:["Fairy"]},Togetic:{types:["Fairy","Flying"]},Tyranitar:{otherFormes:["Tyranitar-Mega"]},Unfezant:{bs:{at:115}},Venusaur:{otherFormes:["Venusaur-Mega"]},Victreebel:{bs:{sd:70}},Vileplume:{bs:{sa:110}},Whimsicott:{types:["Grass","Fairy"]},Wigglytuff:{types:["Normal","Fairy"],bs:{sa:85}},"Aegislash-Blade":{types:["Steel","Ghost"],bs:{hp:60,at:150,df:50,sa:150,sd:50,sp:60},weightkg:53,abilities:{0:"Stance Change"},otherFormes:["Aegislash-Shield","Aegislash-Both"]},"Aegislash-Shield":{types:["Steel","Ghost"],bs:{hp:60,at:50,df:150,sa:50,sd:150,sp:60},weightkg:53,abilities:{0:"Stance Change"},baseSpecies:"Aegislash-Blade"},"Aegislash-Both":{types:["Steel","Ghost"],bs:{hp:60,at:150,df:150,sa:150,sd:150,sp:60},weightkg:53,abilities:{0:"Stance Change"},baseSpecies:"Aegislash-Blade"},Amaura:{types:["Rock","Ice"],bs:{hp:77,at:59,df:50,sa:67,sd:63,sp:46},weightkg:25.2,nfe:!0,abilities:{0:"Refrigerate"}},"Arceus-Fairy":{types:["Fairy"],bs:{hp:120,at:120,df:120,sa:120,sd:120,sp:120},weightkg:320,abilities:{0:"Multitype"},baseSpecies:"Arceus",gender:"N"},Aromatisse:{types:["Fairy"],bs:{hp:101,at:72,df:72,sa:99,sd:89,sp:29},weightkg:15.5,abilities:{0:"Healer"}},Aurorus:{types:["Rock","Ice"],bs:{hp:123,at:77,df:72,sa:99,sd:92,sp:58},weightkg:225,abilities:{0:"Refrigerate"}},Avalugg:{types:["Ice"],bs:{hp:95,at:117,df:184,sa:44,sd:46,sp:28},weightkg:505,abilities:{0:"Own Tempo"}},Barbaracle:{types:["Rock","Water"],bs:{hp:72,at:105,df:115,sa:54,sd:86,sp:68},weightkg:96,abilities:{0:"Tough Claws"}},Bergmite:{types:["Ice"],bs:{hp:55,at:69,df:85,sa:32,sd:35,sp:28},weightkg:99.5,nfe:!0,abilities:{0:"Own Tempo"}},Binacle:{types:["Rock","Water"],bs:{hp:42,at:52,df:67,sa:39,sd:56,sp:50},weightkg:31,nfe:!0,abilities:{0:"Tough Claws"}},Braixen:{types:["Fire"],bs:{hp:59,at:59,df:58,sa:90,sd:70,sp:73},weightkg:14.5,nfe:!0,abilities:{0:"Blaze"}},Bunnelby:{types:["Normal"],bs:{hp:38,at:36,df:38,sa:32,sd:36,sp:57},weightkg:5,nfe:!0,abilities:{0:"Pickup"}},Caimanoe:{types:["Water","Steel"],bs:{hp:73,at:85,df:65,sa:80,sd:40,sp:87},weightkg:72.5,nfe:!0,abilities:{0:"Water Veil"}},Carbink:{types:["Rock","Fairy"],bs:{hp:50,at:50,df:150,sa:50,sd:150,sp:50},weightkg:5.7,gender:"N",abilities:{0:"Clear Body"}},Chesnaught:{types:["Grass","Fighting"],bs:{hp:88,at:107,df:122,sa:74,sd:75,sp:64},weightkg:90,abilities:{0:"Overgrow"}},Chespin:{types:["Grass"],bs:{hp:56,at:61,df:65,sa:48,sd:45,sp:38},weightkg:9,nfe:!0,abilities:{0:"Overgrow"}},Clauncher:{types:["Water"],bs:{hp:50,at:53,df:62,sa:58,sd:63,sp:44},weightkg:8.3,abilities:{0:"Mega Launcher"},nfe:!0},Clawitzer:{types:["Water"],bs:{hp:71,at:73,df:88,sa:120,sd:89,sp:59},weightkg:35.3,abilities:{0:"Mega Launcher"}},Crucibelle:{types:["Rock","Poison"],bs:{hp:106,at:105,df:65,sa:75,sd:85,sp:104},weightkg:23.6,abilities:{0:"Regenerator"},otherFormes:["Crucibelle-Mega"]},Diancie:{types:["Rock","Fairy"],bs:{hp:50,at:100,df:150,sa:100,sd:150,sp:50},weightkg:8.8,abilities:{0:"Clear Body"},otherFormes:["Diancie-Mega"],gender:"N"},Dedenne:{types:["Electric","Fairy"],bs:{hp:67,at:58,df:57,sa:81,sd:67,sp:101},weightkg:2.2,abilities:{0:"Cheek Pouch"}},Delphox:{types:["Fire","Psychic"],bs:{hp:75,at:69,df:72,sa:114,sd:100,sp:104},weightkg:39,abilities:{0:"Blaze"}},Diggersby:{types:["Normal","Ground"],bs:{hp:85,at:56,df:77,sa:50,sd:77,sp:78},weightkg:42.4,abilities:{0:"Pickup"}},Doublade:{types:["Steel","Ghost"],bs:{hp:59,at:110,df:150,sa:45,sd:49,sp:35},weightkg:4.5,abilities:{0:"No Guard"},nfe:!0},Dragalge:{types:["Poison","Dragon"],bs:{hp:65,at:75,df:90,sa:97,sd:123,sp:44},weightkg:81.5,abilities:{0:"Poison Point"}},Espurr:{types:["Psychic"],bs:{hp:62,at:48,df:54,sa:63,sd:60,sp:68},weightkg:3.5,nfe:!0,abilities:{0:"Keen Eye"}},Fennekin:{types:["Fire"],bs:{hp:40,at:45,df:40,sa:62,sd:60,sp:60},weightkg:9.4,nfe:!0,abilities:{0:"Blaze"}},Flabébé:{types:["Fairy"],bs:{hp:44,at:38,df:39,sa:61,sd:79,sp:42},weightkg:.1,nfe:!0,abilities:{0:"Flower Veil"}},Fletchinder:{types:["Fire","Flying"],bs:{hp:62,at:73,df:55,sa:56,sd:52,sp:84},weightkg:16,nfe:!0,abilities:{0:"Flame Body"}},Fletchling:{types:["Normal","Flying"],bs:{hp:45,at:50,df:43,sa:40,sd:38,sp:62},weightkg:1.7,nfe:!0,abilities:{0:"Big Pecks"}},Floatoy:{types:["Water"],bs:{hp:48,at:70,df:40,sa:70,sd:30,sp:77},weightkg:1.9,nfe:!0,abilities:{0:"Water Veil"}},Floette:{types:["Fairy"],bs:{hp:54,at:45,df:47,sa:75,sd:98,sp:52},weightkg:.9,nfe:!0,otherFormes:["Floette-Eternal"],abilities:{0:"Flower Veil"}},"Floette-Eternal":{types:["Fairy"],bs:{hp:74,at:65,df:67,sa:125,sd:128,sp:92},weightkg:.9,abilities:{0:"Flower Veil"},baseSpecies:"Floette"},Florges:{types:["Fairy"],bs:{hp:78,at:65,df:68,sa:112,sd:154,sp:75},weightkg:10,abilities:{0:"Flower Veil"}},Froakie:{types:["Water"],bs:{hp:41,at:56,df:40,sa:62,sd:44,sp:71},weightkg:7,nfe:!0,abilities:{0:"Torrent"}},Frogadier:{types:["Water"],bs:{hp:54,at:63,df:52,sa:83,sd:56,sp:97},weightkg:10.9,nfe:!0,abilities:{0:"Torrent"}},Furfrou:{types:["Normal"],bs:{hp:75,at:80,df:60,sa:65,sd:90,sp:102},weightkg:28,abilities:{0:"Fur Coat"}},Gogoat:{types:["Grass"],bs:{hp:123,at:100,df:62,sa:97,sd:81,sp:68},weightkg:91,abilities:{0:"Sap Sipper"}},Goodra:{types:["Dragon"],bs:{hp:90,at:100,df:70,sa:110,sd:150,sp:80},weightkg:150.5,abilities:{0:"Sap Sipper"}},Goomy:{types:["Dragon"],bs:{hp:45,at:50,df:35,sa:55,sd:75,sp:40},weightkg:2.8,nfe:!0,abilities:{0:"Sap Sipper"}},Gourgeist:{types:["Ghost","Grass"],bs:{hp:65,at:90,df:122,sa:58,sd:75,sp:84},weightkg:12.5,abilities:{0:"Pickup"},otherFormes:["Gourgeist-Large","Gourgeist-Small","Gourgeist-Super"]},"Gourgeist-Large":{types:["Ghost","Grass"],bs:{hp:75,at:95,df:122,sa:58,sd:75,sp:69},weightkg:14,abilities:{0:"Pickup"},baseSpecies:"Gourgeist"},"Gourgeist-Small":{types:["Ghost","Grass"],bs:{hp:55,at:85,df:122,sa:58,sd:75,sp:99},weightkg:9.5,abilities:{0:"Pickup"},baseSpecies:"Gourgeist"},"Gourgeist-Super":{types:["Ghost","Grass"],bs:{hp:85,at:100,df:122,sa:58,sd:75,sp:54},weightkg:39,abilities:{0:"Pickup"},baseSpecies:"Gourgeist"},Greninja:{types:["Water","Dark"],bs:{hp:72,at:95,df:67,sa:103,sd:71,sp:122},weightkg:40,abilities:{0:"Torrent"}},Hawlucha:{types:["Fighting","Flying"],bs:{hp:78,at:92,df:75,sa:74,sd:63,sp:118},weightkg:21.5,abilities:{0:"Limber"}},Heliolisk:{types:["Electric","Normal"],bs:{hp:62,at:55,df:52,sa:109,sd:94,sp:109},weightkg:21,abilities:{0:"Dry Skin"}},Helioptile:{types:["Electric","Normal"],bs:{hp:44,at:38,df:33,sa:61,sd:43,sp:70},weightkg:6,nfe:!0,abilities:{0:"Dry Skin"}},Honedge:{types:["Steel","Ghost"],bs:{hp:45,at:80,df:100,sa:35,sd:37,sp:28},weightkg:2,abilities:{0:"No Guard"},nfe:!0},Hoopa:{types:["Psychic","Ghost"],bs:{hp:80,at:110,df:60,sa:150,sd:130,sp:70},weightkg:9,gender:"N",abilities:{0:"Magician"},otherFormes:["Hoopa-Unbound"]},"Hoopa-Unbound":{types:["Psychic","Dark"],bs:{hp:80,at:160,df:60,sa:170,sd:130,sp:80},weightkg:490,gender:"N",abilities:{0:"Magician"},baseSpecies:"Hoopa"},Inkay:{types:["Dark","Psychic"],bs:{hp:53,at:54,df:53,sa:37,sd:46,sp:45},weightkg:3.5,nfe:!0,abilities:{0:"Contrary"}},Kerfluffle:{types:["Fairy","Fighting"],bs:{hp:84,at:78,df:86,sa:115,sd:88,sp:119},weightkg:24.2,abilities:{0:"Natural Cure"}},Klefki:{types:["Steel","Fairy"],bs:{hp:57,at:80,df:91,sa:80,sd:87,sp:75},weightkg:3,abilities:{0:"Prankster"}},Litleo:{types:["Fire","Normal"],bs:{hp:62,at:50,df:58,sa:73,sd:54,sp:72},weightkg:13.5,nfe:!0,abilities:{0:"Rivalry"}},Malamar:{types:["Dark","Psychic"],bs:{hp:86,at:92,df:88,sa:68,sd:75,sp:73},weightkg:47,abilities:{0:"Contrary"}},"Abomasnow-Mega":{types:["Grass","Ice"],bs:{hp:90,at:132,df:105,sa:132,sd:105,sp:30},weightkg:185,abilities:{0:"Snow Warning"},baseSpecies:"Abomasnow"},"Absol-Mega":{types:["Dark"],bs:{hp:65,at:150,df:60,sa:115,sd:60,sp:115},weightkg:49,abilities:{0:"Magic Bounce"},baseSpecies:"Absol"},"Aerodactyl-Mega":{types:["Rock","Flying"],bs:{hp:80,at:135,df:85,sa:70,sd:95,sp:150},weightkg:79,abilities:{0:"Tough Claws"},baseSpecies:"Aerodactyl"},"Aggron-Mega":{types:["Steel"],bs:{hp:70,at:140,df:230,sa:60,sd:80,sp:50},weightkg:395,abilities:{0:"Filter"},baseSpecies:"Aggron"},"Alakazam-Mega":{types:["Psychic"],bs:{hp:55,at:50,df:65,sa:175,sd:95,sp:150},weightkg:48,abilities:{0:"Trace"},baseSpecies:"Alakazam"},"Altaria-Mega":{types:["Dragon","Fairy"],bs:{hp:75,at:110,df:110,sa:110,sd:105,sp:80},weightkg:20.6,abilities:{0:"Pixilate"},baseSpecies:"Altaria"},"Ampharos-Mega":{types:["Electric","Dragon"],bs:{hp:90,at:95,df:105,sa:165,sd:110,sp:45},weightkg:61.5,abilities:{0:"Mold Breaker"},baseSpecies:"Ampharos"},"Audino-Mega":{types:["Normal","Fairy"],bs:{hp:103,at:60,df:126,sa:80,sd:126,sp:50},weightkg:32,abilities:{0:"Healer"},baseSpecies:"Audino"},"Banette-Mega":{types:["Ghost"],bs:{hp:64,at:165,df:75,sa:93,sd:83,sp:75},weightkg:13,abilities:{0:"Prankster"},baseSpecies:"Banette"},"Beedrill-Mega":{types:["Bug","Poison"],bs:{hp:65,at:150,df:40,sa:15,sd:80,sp:145},weightkg:40.5,abilities:{0:"Adaptability"},baseSpecies:"Beedrill"},"Blastoise-Mega":{types:["Water"],bs:{hp:79,at:103,df:120,sa:135,sd:115,sp:78},weightkg:101.1,abilities:{0:"Mega Launcher"},baseSpecies:"Blastoise"},"Blaziken-Mega":{types:["Fire","Fighting"],bs:{hp:80,at:160,df:80,sa:130,sd:80,sp:100},weightkg:52,abilities:{0:"Speed Boost"},baseSpecies:"Blaziken"},"Camerupt-Mega":{types:["Fire","Ground"],bs:{hp:70,at:120,df:100,sa:145,sd:105,sp:20},weightkg:320.5,abilities:{0:"Sheer Force"},baseSpecies:"Camerupt"},"Charizard-Mega-X":{types:["Fire","Dragon"],bs:{hp:78,at:130,df:111,sa:130,sd:85,sp:100},weightkg:110.5,abilities:{0:"Tough Claws"},baseSpecies:"Charizard"},"Charizard-Mega-Y":{types:["Fire","Flying"],bs:{hp:78,at:104,df:78,sa:159,sd:115,sp:100},weightkg:100.5,abilities:{0:"Drought"},baseSpecies:"Charizard"},"Crucibelle-Mega":{types:["Rock","Poison"],bs:{hp:106,at:135,df:75,sa:85,sd:125,sp:114},weightkg:22.5,abilities:{0:"Magic Guard"},baseSpecies:"Crucibelle"},"Diancie-Mega":{types:["Rock","Fairy"],bs:{hp:50,at:160,df:110,sa:160,sd:110,sp:110},weightkg:27.8,abilities:{0:"Magic Bounce"},baseSpecies:"Diancie",gender:"N"},"Gallade-Mega":{types:["Psychic","Fighting"],bs:{hp:68,at:165,df:95,sa:65,sd:115,sp:110},weightkg:56.4,abilities:{0:"Inner Focus"},baseSpecies:"Gallade"},"Garchomp-Mega":{types:["Dragon","Ground"],bs:{hp:108,at:170,df:115,sa:120,sd:95,sp:92},weightkg:95,abilities:{0:"Sand Force"},baseSpecies:"Garchomp"},"Gardevoir-Mega":{types:["Psychic","Fairy"],bs:{hp:68,at:85,df:65,sa:165,sd:135,sp:100},weightkg:48.4,abilities:{0:"Pixilate"},baseSpecies:"Gardevoir"},"Gengar-Mega":{types:["Ghost","Poison"],bs:{hp:60,at:65,df:80,sa:170,sd:95,sp:130},weightkg:40.5,abilities:{0:"Shadow Tag"},baseSpecies:"Gengar"},"Glalie-Mega":{types:["Ice"],bs:{hp:80,at:120,df:80,sa:120,sd:80,sp:100},weightkg:350.2,abilities:{0:"Refrigerate"},baseSpecies:"Glalie"},"Gyarados-Mega":{types:["Water","Dark"],bs:{hp:95,at:155,df:109,sa:70,sd:130,sp:81},weightkg:305,abilities:{0:"Mold Breaker"},baseSpecies:"Gyarados"},"Heracross-Mega":{types:["Bug","Fighting"],bs:{hp:80,at:185,df:115,sa:40,sd:105,sp:75},weightkg:62.5,abilities:{0:"Skill Link"},baseSpecies:"Heracross"},"Houndoom-Mega":{types:["Dark","Fire"],bs:{hp:75,at:90,df:90,sa:140,sd:90,sp:115},weightkg:49.5,abilities:{0:"Solar Power"},baseSpecies:"Houndoom"},"Kangaskhan-Mega":{types:["Normal"],bs:{hp:105,at:125,df:100,sa:60,sd:100,sp:100},weightkg:100,abilities:{0:"Parental Bond"},baseSpecies:"Kangaskhan"},"Latias-Mega":{types:["Dragon","Psychic"],bs:{hp:80,at:100,df:120,sa:140,sd:150,sp:110},weightkg:52,abilities:{0:"Levitate"},baseSpecies:"Latias"},"Latios-Mega":{types:["Dragon","Psychic"],bs:{hp:80,at:130,df:100,sa:160,sd:120,sp:110},weightkg:70,abilities:{0:"Levitate"},baseSpecies:"Latios"},"Lopunny-Mega":{types:["Normal","Fighting"],bs:{hp:65,at:136,df:94,sa:54,sd:96,sp:135},weightkg:28.3,abilities:{0:"Scrappy"},baseSpecies:"Lopunny"},"Lucario-Mega":{types:["Fighting","Steel"],bs:{hp:70,at:145,df:88,sa:140,sd:70,sp:112},weightkg:57.5,abilities:{0:"Adaptability"},baseSpecies:"Lucario"},"Manectric-Mega":{types:["Electric"],bs:{hp:70,at:75,df:80,sa:135,sd:80,sp:135},weightkg:44,abilities:{0:"Intimidate"},baseSpecies:"Manectric"},"Mawile-Mega":{types:["Steel","Fairy"],bs:{hp:50,at:105,df:125,sa:55,sd:95,sp:50},weightkg:23.5,abilities:{0:"Huge Power"},baseSpecies:"Mawile"},"Medicham-Mega":{types:["Fighting","Psychic"],bs:{hp:60,at:100,df:85,sa:80,sd:85,sp:100},weightkg:31.5,abilities:{0:"Pure Power"},baseSpecies:"Medicham"},"Metagross-Mega":{types:["Steel","Psychic"],bs:{hp:80,at:145,df:150,sa:105,sd:110,sp:110},weightkg:942.9,abilities:{0:"Tough Claws"},baseSpecies:"Metagross",gender:"N"},"Mewtwo-Mega-X":{types:["Psychic","Fighting"],bs:{hp:106,at:190,df:100,sa:154,sd:100,sp:130},weightkg:127,abilities:{0:"Steadfast"},baseSpecies:"Mewtwo",gender:"N"},"Mewtwo-Mega-Y":{types:["Psychic"],bs:{hp:106,at:150,df:70,sa:194,sd:120,sp:140},weightkg:33,abilities:{0:"Insomnia"},baseSpecies:"Mewtwo",gender:"N"},"Pidgeot-Mega":{types:["Normal","Flying"],bs:{hp:83,at:80,df:80,sa:135,sd:80,sp:121},weightkg:50.5,abilities:{0:"No Guard"},baseSpecies:"Pidgeot"},"Pinsir-Mega":{types:["Bug","Flying"],bs:{hp:65,at:155,df:120,sa:65,sd:90,sp:105},weightkg:59,abilities:{0:"Aerilate"},baseSpecies:"Pinsir"},"Rayquaza-Mega":{types:["Dragon","Flying"],bs:{hp:105,at:180,df:100,sa:180,sd:100,sp:115},weightkg:392,gender:"N",abilities:{0:"Delta Stream"},baseSpecies:"Rayquaza"},"Sableye-Mega":{types:["Dark","Ghost"],bs:{hp:50,at:85,df:125,sa:85,sd:115,sp:20},weightkg:161,abilities:{0:"Magic Bounce"},baseSpecies:"Sableye"},"Salamence-Mega":{types:["Dragon","Flying"],bs:{hp:95,at:145,df:130,sa:120,sd:90,sp:120},weightkg:112.6,abilities:{0:"Aerilate"},baseSpecies:"Salamence"},"Sceptile-Mega":{types:["Grass","Dragon"],bs:{hp:70,at:110,df:75,sa:145,sd:85,sp:145},weightkg:55.2,abilities:{0:"Lightning Rod"},baseSpecies:"Sceptile"},"Scizor-Mega":{types:["Bug","Steel"],bs:{hp:70,at:150,df:140,sa:65,sd:100,sp:75},weightkg:125,abilities:{0:"Technician"},baseSpecies:"Scizor"},"Sharpedo-Mega":{types:["Water","Dark"],bs:{hp:70,at:140,df:70,sa:110,sd:65,sp:105},weightkg:130.3,abilities:{0:"Strong Jaw"},baseSpecies:"Sharpedo"},"Slowbro-Mega":{types:["Water","Psychic"],bs:{hp:95,at:75,df:180,sa:130,sd:80,sp:30},weightkg:120,abilities:{0:"Shell Armor"},baseSpecies:"Slowbro"},"Steelix-Mega":{types:["Steel","Ground"],bs:{hp:75,at:125,df:230,sa:55,sd:95,sp:30},weightkg:740,abilities:{0:"Sand Force"},baseSpecies:"Steelix"},"Swampert-Mega":{types:["Water","Ground"],bs:{hp:100,at:150,df:110,sa:95,sd:110,sp:70},weightkg:102,abilities:{0:"Swift Swim"},baseSpecies:"Swampert"},"Tyranitar-Mega":{types:["Rock","Dark"],bs:{hp:100,at:164,df:150,sa:95,sd:120,sp:71},weightkg:255,abilities:{0:"Sand Stream"},baseSpecies:"Tyranitar"},"Venusaur-Mega":{types:["Grass","Poison"],bs:{hp:80,at:100,df:123,sa:122,sd:120,sp:80},weightkg:155.5,abilities:{0:"Thick Fat"},baseSpecies:"Venusaur"},Meowstic:{types:["Psychic"],bs:{hp:74,at:48,df:76,sa:83,sd:81,sp:104},weightkg:8.5,abilities:{0:"Keen Eye"},otherFormes:["Meowstic-F"]},"Meowstic-F":{types:["Psychic"],bs:{hp:74,at:48,df:76,sa:83,sd:81,sp:104},weightkg:8.5,abilities:{0:"Keen Eye"},baseSpecies:"Meowstic"},Naviathan:{types:["Water","Steel"],bs:{hp:103,at:110,df:90,sa:95,sd:65,sp:97},weightkg:510,abilities:{0:"Water Veil"}},Noibat:{types:["Flying","Dragon"],bs:{hp:40,at:30,df:35,sa:45,sd:40,sp:55},weightkg:8,nfe:!0,abilities:{0:"Frisk"}},Noivern:{types:["Flying","Dragon"],bs:{hp:85,at:70,df:80,sa:97,sd:80,sp:123},weightkg:85,abilities:{0:"Frisk"}},Pancham:{types:["Fighting"],bs:{hp:67,at:82,df:62,sa:46,sd:48,sp:43},weightkg:8,nfe:!0,abilities:{0:"Iron Fist"}},Pangoro:{types:["Fighting","Dark"],bs:{hp:95,at:124,df:78,sa:69,sd:71,sp:58},weightkg:136,abilities:{0:"Iron Fist"}},Phantump:{types:["Ghost","Grass"],bs:{hp:43,at:70,df:48,sa:50,sd:60,sp:38},weightkg:7,nfe:!0,abilities:{0:"Natural Cure"}},"Pikachu-Cosplay":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Lightning Rod"},baseSpecies:"Pikachu"},"Pikachu-Rock-Star":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Lightning Rod"},baseSpecies:"Pikachu"},"Pikachu-Belle":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Lightning Rod"},baseSpecies:"Pikachu"},"Pikachu-PhD":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Lightning Rod"},baseSpecies:"Pikachu"},"Pikachu-Pop-Star":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Lightning Rod"},baseSpecies:"Pikachu"},"Pikachu-Libre":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Lightning Rod"},baseSpecies:"Pikachu"},Plasmanta:{types:["Electric","Poison"],bs:{hp:60,at:57,df:119,sa:131,sd:98,sp:100},weightkg:460,abilities:{0:"Storm Drain"}},Pluffle:{types:["Fairy"],bs:{hp:74,at:38,df:51,sa:65,sd:78,sp:49},weightkg:1.8,nfe:!0,abilities:{0:"Natural Cure"}},"Groudon-Primal":{types:["Ground","Fire"],bs:{hp:100,at:180,df:160,sa:150,sd:90,sp:90},weightkg:999.7,abilities:{0:"Desolate Land"},baseSpecies:"Groudon",gender:"N"},"Kyogre-Primal":{types:["Water"],bs:{hp:100,at:150,df:90,sa:180,sd:160,sp:90},weightkg:430,abilities:{0:"Primordial Sea"},baseSpecies:"Kyogre",gender:"N"},Pumpkaboo:{types:["Ghost","Grass"],bs:{hp:49,at:66,df:70,sa:44,sd:55,sp:51},weightkg:5,nfe:!0,abilities:{0:"Pickup"},otherFormes:["Pumpkaboo-Large","Pumpkaboo-Small","Pumpkaboo-Super"]},"Pumpkaboo-Large":{types:["Ghost","Grass"],bs:{hp:54,at:66,df:70,sa:44,sd:55,sp:46},weightkg:7.5,nfe:!0,abilities:{0:"Pickup"},baseSpecies:"Pumpkaboo"},"Pumpkaboo-Small":{types:["Ghost","Grass"],bs:{hp:44,at:66,df:70,sa:44,sd:55,sp:56},weightkg:3.5,nfe:!0,abilities:{0:"Pickup"},baseSpecies:"Pumpkaboo"},"Pumpkaboo-Super":{types:["Ghost","Grass"],bs:{hp:59,at:66,df:70,sa:44,sd:55,sp:41},weightkg:15,nfe:!0,abilities:{0:"Pickup"},baseSpecies:"Pumpkaboo"},Pyroar:{types:["Fire","Normal"],bs:{hp:86,at:68,df:72,sa:109,sd:66,sp:106},weightkg:81.5,abilities:{0:"Rivalry"}},Quilladin:{types:["Grass"],bs:{hp:61,at:78,df:95,sa:56,sd:58,sp:57},weightkg:29,nfe:!0,abilities:{0:"Overgrow"}},Scatterbug:{types:["Bug"],bs:{hp:38,at:35,df:40,sa:27,sd:25,sp:35},weightkg:2.5,nfe:!0,abilities:{0:"Shield Dust"}},Skiddo:{types:["Grass"],bs:{hp:66,at:65,df:48,sa:62,sd:57,sp:52},weightkg:31,nfe:!0,abilities:{0:"Sap Sipper"}},Skrelp:{types:["Poison","Water"],bs:{hp:50,at:60,df:60,sa:60,sd:60,sp:30},weightkg:7.3,nfe:!0,abilities:{0:"Poison Point"}},Sliggoo:{types:["Dragon"],bs:{hp:68,at:75,df:53,sa:83,sd:113,sp:60},weightkg:17.5,nfe:!0,abilities:{0:"Sap Sipper"}},Slurpuff:{types:["Fairy"],bs:{hp:82,at:80,df:86,sa:85,sd:75,sp:72},weightkg:5,abilities:{0:"Sweet Veil"}},Snugglow:{types:["Electric","Poison"],bs:{hp:40,at:37,df:79,sa:91,sd:68,sp:70},weightkg:6,nfe:!0,abilities:{0:"Storm Drain"}},Spewpa:{types:["Bug"],bs:{hp:45,at:22,df:60,sa:27,sd:30,sp:29},weightkg:8.4,nfe:!0,abilities:{0:"Shed Skin"}},Spritzee:{types:["Fairy"],bs:{hp:78,at:52,df:60,sa:63,sd:65,sp:23},weightkg:.5,nfe:!0,abilities:{0:"Healer"}},Swirlix:{types:["Fairy"],bs:{hp:62,at:48,df:66,sa:59,sd:57,sp:49},weightkg:3.5,nfe:!0,abilities:{0:"Sweet Veil"}},Sylveon:{types:["Fairy"],bs:{hp:95,at:65,df:65,sa:110,sd:130,sp:60},weightkg:23.5,abilities:{0:"Cute Charm"}},Talonflame:{types:["Fire","Flying"],bs:{hp:78,at:81,df:71,sa:74,sd:69,sp:126},weightkg:24.5,abilities:{0:"Flame Body"}},Trevenant:{types:["Ghost","Grass"],bs:{hp:85,at:110,df:76,sa:65,sd:82,sp:56},weightkg:71,abilities:{0:"Natural Cure"}},Tyrantrum:{types:["Rock","Dragon"],bs:{hp:82,at:121,df:119,sa:69,sd:59,sp:71},weightkg:270,abilities:{0:"Strong Jaw"}},Tyrunt:{types:["Rock","Dragon"],bs:{hp:58,at:89,df:77,sa:45,sd:45,sp:48},weightkg:26,nfe:!0,abilities:{0:"Strong Jaw"}},Vivillon:{types:["Bug","Flying"],bs:{hp:80,at:52,df:50,sa:90,sd:50,sp:89},weightkg:17,abilities:{0:"Shield Dust"},otherFormes:["Vivillon-Fancy","Vivillon-Pokeball"]},"Vivillon-Fancy":{types:["Bug","Flying"],bs:{hp:80,at:52,df:50,sa:90,sd:50,sp:89},weightkg:17,abilities:{0:"Shield Dust"},baseSpecies:"Vivillon"},"Vivillon-Pokeball":{types:["Bug","Flying"],bs:{hp:80,at:52,df:50,sa:90,sd:50,sp:89},weightkg:17,abilities:{0:"Shield Dust"},baseSpecies:"Vivillon"},Volcanion:{types:["Fire","Water"],bs:{hp:80,at:110,df:120,sa:130,sd:90,sp:70},weightkg:195,gender:"N",abilities:{0:"Water Absorb"}},Volkraken:{types:["Water","Fire"],bs:{hp:100,at:45,df:80,sa:135,sd:100,sp:95},weightkg:44.5,abilities:{0:"Analytic"}},Volkritter:{types:["Water","Fire"],bs:{hp:60,at:30,df:50,sa:80,sd:60,sp:70},weightkg:15,nfe:!0,abilities:{0:"Anticipation"}},Xerneas:{types:["Fairy"],bs:{hp:126,at:131,df:95,sa:131,sd:98,sp:99},weightkg:215,abilities:{0:"Fairy Aura"},gender:"N"},Yveltal:{types:["Dark","Flying"],bs:{hp:126,at:131,df:95,sa:131,sd:98,sp:99},weightkg:203,abilities:{0:"Dark Aura"},gender:"N"},Zygarde:{types:["Dragon","Ground"],bs:{hp:108,at:100,df:121,sa:81,sd:95,sp:95},weightkg:305,abilities:{0:"Aura Break"},gender:"N"}});h.Arceus.otherFormes.push("Arceus-Fairy"),h.Arceus.otherFormes.sort();var m=(0,f.extend)(!0,{},h,{"Alakazam-Mega":{bs:{sd:105}},Arbok:{bs:{at:95}},Ariados:{bs:{sd:70}},Beartic:{bs:{at:130}},Chimecho:{bs:{hp:75,df:80,sd:90}},Corsola:{bs:{hp:65,df:95,sd:95}},"Crucibelle-Mega":{bs:{sa:91,sp:108}},Crustle:{bs:{at:105}},Cryogonal:{bs:{hp:80,df:50}},Delcatty:{bs:{sp:90}},Diglett:{otherFormes:["Diglett-Alola"]},Dodrio:{bs:{sp:110}},Dugtrio:{bs:{at:100},otherFormes:["Dugtrio-Alola"]},Eevee:{otherFormes:["Eevee-Starter"]},Electrode:{bs:{sp:150}},Exeggutor:{bs:{sd:75},otherFormes:["Exeggutor-Alola"]},"Farfetch’d":{bs:{at:90}},Gengar:{abilities:{0:"Cursed Body"}},Geodude:{otherFormes:["Geodude-Alola"]},Golem:{otherFormes:["Golem-Alola"]},Graveler:{otherFormes:["Graveler-Alola"]},Greninja:{otherFormes:["Greninja-Ash"]},Grimer:{otherFormes:["Grimer-Alola"]},Illumise:{bs:{df:75,sd:85}},Lunatone:{bs:{hp:90}},Magcargo:{bs:{hp:60,sa:90}},Mantine:{bs:{hp:85}},Marowak:{otherFormes:["Marowak-Alola","Marowak-Alola-Totem"]},Masquerain:{bs:{sa:100,sp:80}},Meowth:{otherFormes:["Meowth-Alola"]},Muk:{otherFormes:["Muk-Alola"]},Necturna:{bs:{sp:58}},Ninetales:{otherFormes:["Ninetales-Alola"]},Naviathan:{abilities:{0:"Guts"}},Noctowl:{bs:{sa:86}},Pelipper:{bs:{sa:95}},Persian:{otherFormes:["Persian-Alola"]},Pikachu:{otherFormes:["Pikachu-Alola","Pikachu-Hoenn","Pikachu-Kalos","Pikachu-Original","Pikachu-Partner","Pikachu-Sinnoh","Pikachu-Starter","Pikachu-Unova"]},Qwilfish:{bs:{df:85}},Raichu:{otherFormes:["Raichu-Alola"]},Raticate:{otherFormes:["Raticate-Alola","Raticate-Alola-Totem"]},Rattata:{otherFormes:["Rattata-Alola"]},Sandshrew:{otherFormes:["Sandshrew-Alola"]},Sandslash:{otherFormes:["Sandslash-Alola"]},Solrock:{bs:{hp:90}},Swellow:{bs:{sa:75}},Volbeat:{bs:{df:75,sd:85}},Vulpix:{otherFormes:["Vulpix-Alola"]},Woobat:{bs:{hp:65}},Zygarde:{otherFormes:["Zygarde-10%","Zygarde-Complete"]},Araquanid:{types:["Water","Bug"],bs:{hp:68,at:70,df:92,sa:50,sd:132,sp:42},abilities:{0:"Water Bubble"},weightkg:82,otherFormes:["Araquanid-Totem"]},"Araquanid-Totem":{types:["Water","Bug"],bs:{hp:68,at:70,df:92,sa:50,sd:132,sp:42},abilities:{0:"Water Bubble"},weightkg:217.5,baseSpecies:"Araquanid"},Bewear:{types:["Normal","Fighting"],bs:{hp:120,at:125,df:80,sa:55,sd:60,sp:60},abilities:{0:"Fluffy"},weightkg:135},Blacephalon:{types:["Fire","Ghost"],bs:{hp:53,at:127,df:53,sa:151,sd:79,sp:107},weightkg:13,abilities:{0:"Beast Boost"},gender:"N"},Bounsweet:{types:["Grass"],bs:{hp:42,at:30,df:38,sa:30,sd:38,sp:32},weightkg:3.2,nfe:!0,abilities:{0:"Leaf Guard"}},Brionne:{types:["Water"],bs:{hp:60,at:69,df:69,sa:91,sd:81,sp:50},weightkg:17.5,nfe:!0,abilities:{0:"Torrent"}},Bruxish:{types:["Water","Psychic"],bs:{hp:68,at:105,df:70,sa:70,sd:70,sp:92},weightkg:19,abilities:{0:"Dazzling"}},Buzzwole:{types:["Bug","Fighting"],bs:{hp:107,at:139,df:139,sa:53,sd:53,sp:79},weightkg:333.6,abilities:{0:"Beast Boost"},gender:"N"},Caribolt:{types:["Grass","Electric"],bs:{hp:84,at:106,df:82,sa:77,sd:80,sp:106},weightkg:140,abilities:{0:"Overgrow"}},Celesteela:{types:["Steel","Flying"],bs:{hp:97,at:101,df:103,sa:107,sd:101,sp:61},weightkg:999.9,abilities:{0:"Beast Boost"},gender:"N"},Charjabug:{types:["Bug","Electric"],bs:{hp:57,at:82,df:95,sa:55,sd:75,sp:36},weightkg:10.5,nfe:!0,abilities:{0:"Battery"}},Comfey:{types:["Fairy"],bs:{hp:51,at:52,df:90,sa:82,sd:110,sp:100},weightkg:.3,abilities:{0:"Flower Veil"}},Cosmoem:{types:["Psychic"],bs:{hp:43,at:29,df:131,sa:29,sd:131,sp:37},weightkg:999.9,nfe:!0,gender:"N",abilities:{0:"Sturdy"}},Coribalis:{types:["Water","Bug"],bs:{hp:76,at:69,df:90,sa:65,sd:77,sp:43},weightkg:24.5,nfe:!0,abilities:{0:"Torrent"}},Cosmog:{types:["Psychic"],bs:{hp:43,at:29,df:31,sa:29,sd:31,sp:37},weightkg:.1,nfe:!0,gender:"N",abilities:{0:"Unaware"}},Crabominable:{types:["Fighting","Ice"],bs:{hp:97,at:132,df:77,sa:62,sd:67,sp:43},weightkg:180,abilities:{0:"Hyper Cutter"}},Crabrawler:{types:["Fighting"],bs:{hp:47,at:82,df:57,sa:42,sd:47,sp:63},weightkg:7,nfe:!0,abilities:{0:"Hyper Cutter"}},Cutiefly:{types:["Bug","Fairy"],bs:{hp:40,at:45,df:40,sa:55,sd:40,sp:84},weightkg:.2,nfe:!0,abilities:{0:"Honey Gather"}},Dartrix:{types:["Grass","Flying"],bs:{hp:78,at:75,df:75,sa:70,sd:70,sp:52},weightkg:16,nfe:!0,abilities:{0:"Overgrow"}},Decidueye:{types:["Grass","Ghost"],bs:{hp:78,at:107,df:75,sa:100,sd:100,sp:70},weightkg:36.6,abilities:{0:"Overgrow"}},Dewpider:{types:["Water","Bug"],bs:{hp:38,at:40,df:52,sa:40,sd:72,sp:27},weightkg:4,nfe:!0,abilities:{0:"Water Bubble"}},Dhelmise:{types:["Ghost","Grass"],bs:{hp:70,at:131,df:100,sa:86,sd:90,sp:40},weightkg:210,gender:"N",abilities:{0:"Steelworker"}},Drampa:{types:["Normal","Dragon"],bs:{hp:78,at:60,df:85,sa:135,sd:91,sp:36},weightkg:185,abilities:{0:"Berserk"}},"Diglett-Alola":{types:["Ground","Steel"],bs:{hp:10,at:55,df:30,sa:35,sd:45,sp:90},weightkg:1,baseSpecies:"Diglett",nfe:!0,abilities:{0:"Sand Veil"}},"Dugtrio-Alola":{types:["Ground","Steel"],bs:{hp:35,at:100,df:60,sa:50,sd:70,sp:110},weightkg:66.6,baseSpecies:"Dugtrio",abilities:{0:"Sand Veil"}},"Eevee-Starter":{types:["Normal"],bs:{hp:65,at:75,df:70,sa:65,sd:85,sp:75},weightkg:6.5,abilities:{0:"Run Away"},baseSpecies:"Eevee"},Electrelk:{types:["Grass","Electric"],bs:{hp:59,at:81,df:67,sa:57,sd:55,sp:101},weightkg:41.5,nfe:!0,abilities:{0:"Overgrow"}},Equilibra:{types:["Steel","Ground"],bs:{hp:102,at:50,df:96,sa:133,sd:118,sp:60},weightkg:51.3,gender:"N",abilities:{0:"Levitate"}},"Exeggutor-Alola":{types:["Grass","Dragon"],bs:{hp:95,at:105,df:85,sa:125,sd:75,sp:45},weightkg:415.6,baseSpecies:"Exeggutor",abilities:{0:"Frisk"}},Fawnifer:{types:["Grass"],bs:{hp:49,at:61,df:42,sa:52,sd:40,sp:76},weightkg:6.9,nfe:!0,abilities:{0:"Overgrow"}},Fomantis:{types:["Grass"],bs:{hp:40,at:55,df:35,sa:50,sd:35,sp:35},weightkg:1.5,nfe:!0,abilities:{0:"Leaf Guard"}},"Geodude-Alola":{types:["Rock","Electric"],bs:{hp:40,at:80,df:100,sa:30,sd:30,sp:20},weightkg:20.3,baseSpecies:"Geodude",nfe:!0,abilities:{0:"Magnet Pull"}},"Golem-Alola":{types:["Rock","Electric"],bs:{hp:80,at:120,df:130,sa:55,sd:65,sp:45},weightkg:316,abilities:{0:"Magnet Pull"},baseSpecies:"Golem"},Golisopod:{types:["Bug","Water"],bs:{hp:75,at:125,df:140,sa:60,sd:90,sp:40},weightkg:108,abilities:{0:"Emergency Exit"}},"Graveler-Alola":{types:["Rock","Electric"],bs:{hp:55,at:95,df:115,sa:45,sd:45,sp:35},weightkg:110,baseSpecies:"Graveler",nfe:!0,abilities:{0:"Magnet Pull"}},"Grimer-Alola":{types:["Poison","Dark"],bs:{hp:80,at:80,df:50,sa:40,sd:50,sp:25},weightkg:42,baseSpecies:"Grimer",nfe:!0,abilities:{0:"Poison Touch"}},"Greninja-Ash":{types:["Water","Dark"],bs:{hp:72,at:145,df:67,sa:153,sd:71,sp:132},weightkg:40,abilities:{0:"Battle Bond"},baseSpecies:"Greninja"},Grubbin:{types:["Bug"],bs:{hp:47,at:62,df:45,sa:55,sd:45,sp:46},weightkg:4.4,nfe:!0,abilities:{0:"Swarm"}},Gumshoos:{types:["Normal"],bs:{hp:88,at:110,df:60,sa:55,sd:60,sp:45},weightkg:14.2,otherFormes:["Gumshoos-Totem"],abilities:{0:"Stakeout"}},"Gumshoos-Totem":{types:["Normal"],bs:{hp:88,at:110,df:60,sa:55,sd:60,sp:45},weightkg:60,baseSpecies:"Gumshoos",abilities:{0:"Adaptability"}},Guzzlord:{types:["Dark","Dragon"],bs:{hp:223,at:101,df:53,sa:97,sd:53,sp:43},weightkg:888,abilities:{0:"Beast Boost"},gender:"N"},"Hakamo-o":{types:["Dragon","Fighting"],bs:{hp:55,at:75,df:90,sa:65,sd:70,sp:65},weightkg:47,nfe:!0,abilities:{0:"Bulletproof"}},Incineroar:{types:["Fire","Dark"],bs:{hp:95,at:115,df:90,sa:80,sd:90,sp:60},weightkg:83,abilities:{0:"Blaze"}},"Jangmo-o":{types:["Dragon"],bs:{hp:45,at:55,df:65,sa:45,sd:45,sp:45},weightkg:29.7,nfe:!0,abilities:{0:"Bulletproof"}},Justyke:{types:["Steel","Ground"],bs:{hp:72,at:70,df:56,sa:83,sd:68,sp:30},weightkg:36.5,nfe:!0,abilities:{0:"Levitate"},gender:"N"},Jumbao:{types:["Grass","Fairy"],bs:{hp:92,at:63,df:97,sa:124,sd:104,sp:96},weightkg:200,abilities:{0:"Trace"}},Kartana:{types:["Grass","Steel"],bs:{hp:59,at:181,df:131,sa:59,sd:31,sp:109},weightkg:.1,abilities:{0:"Beast Boost"},gender:"N"},Komala:{types:["Normal"],bs:{hp:65,at:115,df:65,sa:75,sd:95,sp:65},weightkg:19.9,abilities:{0:"Comatose"}},"Kommo-o":{types:["Dragon","Fighting"],bs:{hp:75,at:110,df:125,sa:100,sd:105,sp:85},weightkg:78.2,otherFormes:["Kommo-o-Totem"],abilities:{0:"Bulletproof"}},"Kommo-o-Totem":{types:["Dragon","Fighting"],bs:{hp:75,at:110,df:125,sa:100,sd:105,sp:85},weightkg:207.5,abilities:{0:"Overcoat"},baseSpecies:"Kommo-o"},Litten:{types:["Fire"],bs:{hp:45,at:65,df:40,sa:60,sd:40,sp:70},weightkg:4.3,nfe:!0,abilities:{0:"Blaze"}},Lunala:{types:["Psychic","Ghost"],bs:{hp:137,at:113,df:89,sa:137,sd:107,sp:97},weightkg:120,abilities:{0:"Shadow Shield"},gender:"N"},Lurantis:{types:["Grass"],bs:{hp:70,at:105,df:90,sa:80,sd:90,sp:45},weightkg:18.5,otherFormes:["Lurantis-Totem"],abilities:{0:"Leaf Guard"}},"Lurantis-Totem":{types:["Grass"],bs:{hp:70,at:105,df:90,sa:80,sd:90,sp:45},weightkg:58,abilities:{0:"Leaf Guard"},baseSpecies:"Lurantis"},Lycanroc:{types:["Rock"],bs:{hp:75,at:115,df:65,sa:55,sd:65,sp:112},weightkg:25,otherFormes:["Lycanroc-Dusk","Lycanroc-Midnight"],abilities:{0:"Keen Eye"}},"Lycanroc-Dusk":{types:["Rock"],bs:{hp:75,at:117,df:65,sa:55,sd:65,sp:110},weightkg:25,abilities:{0:"Tough Claws"},baseSpecies:"Lycanroc"},"Lycanroc-Midnight":{types:["Rock"],bs:{hp:85,at:115,df:75,sa:55,sd:75,sp:82},weightkg:25,baseSpecies:"Lycanroc",abilities:{0:"Keen Eye"}},Magearna:{types:["Steel","Fairy"],bs:{hp:80,at:95,df:115,sa:130,sd:115,sp:65},weightkg:80.5,gender:"N",abilities:{0:"Soul-Heart"}},Mareanie:{types:["Poison","Water"],bs:{hp:50,at:53,df:62,sa:43,sd:52,sp:45},weightkg:8,nfe:!0,abilities:{0:"Merciless"}},"Marowak-Alola":{types:["Fire","Ghost"],bs:{hp:60,at:80,df:110,sa:50,sd:80,sp:45},weightkg:34,abilities:{0:"Cursed Body"},baseSpecies:"Marowak"},"Marowak-Alola-Totem":{types:["Fire","Ghost"],bs:{hp:60,at:80,df:110,sa:50,sd:80,sp:45},weightkg:98,abilities:{0:"Rock Head"},baseSpecies:"Marowak"},Marshadow:{types:["Fighting","Ghost"],bs:{hp:90,at:125,df:80,sa:90,sd:90,sp:125},weightkg:22.2,gender:"N",abilities:{0:"Technician"}},Melmetal:{types:["Steel"],bs:{hp:135,at:143,df:143,sa:80,sd:65,sp:34},weightkg:800,gender:"N",abilities:{0:"Iron Fist"}},Meltan:{types:["Steel"],bs:{hp:46,at:65,df:65,sa:55,sd:35,sp:34},weightkg:8,gender:"N",abilities:{0:"Magnet Pull"}},"Meowth-Alola":{types:["Dark"],bs:{hp:40,at:35,df:35,sa:50,sd:40,sp:90},weightkg:4.2,baseSpecies:"Meowth",nfe:!0,abilities:{0:"Pickup"}},Mimikyu:{types:["Ghost","Fairy"],bs:{hp:55,at:90,df:80,sa:50,sd:105,sp:96},weightkg:.7,otherFormes:["Mimikyu-Busted","Mimikyu-Busted-Totem","Mimikyu-Totem"],abilities:{0:"Disguise"}},"Mimikyu-Busted":{types:["Ghost","Fairy"],bs:{hp:55,at:90,df:80,sa:50,sd:105,sp:96},weightkg:.7,baseSpecies:"Mimikyu",abilities:{0:"Disguise"}},"Mimikyu-Busted-Totem":{types:["Ghost","Fairy"],bs:{hp:55,at:90,df:80,sa:50,sd:105,sp:96},weightkg:2.8,baseSpecies:"Mimikyu",abilities:{0:"Disguise"}},"Mimikyu-Totem":{types:["Ghost","Fairy"],bs:{hp:55,at:90,df:80,sa:50,sd:105,sp:96},weightkg:2.8,baseSpecies:"Mimikyu",abilities:{0:"Disguise"}},Minior:{types:["Rock","Flying"],bs:{hp:60,at:100,df:60,sa:100,sd:60,sp:120},weightkg:.3,otherFormes:["Minior-Meteor"],gender:"N",abilities:{0:"Shields Down"}},"Minior-Meteor":{types:["Rock","Flying"],bs:{hp:60,at:60,df:100,sa:60,sd:100,sp:60},weightkg:40,gender:"N",baseSpecies:"Minior",abilities:{0:"Shields Down"}},Morelull:{types:["Grass","Fairy"],bs:{hp:40,at:35,df:55,sa:65,sd:75,sp:15},weightkg:1.5,nfe:!0,abilities:{0:"Illuminate"}},Mudbray:{types:["Ground"],bs:{hp:70,at:100,df:70,sa:45,sd:55,sp:45},weightkg:110,nfe:!0,abilities:{0:"Own Tempo"}},Mudsdale:{types:["Ground"],bs:{hp:100,at:125,df:100,sa:55,sd:85,sp:35},weightkg:920,abilities:{0:"Own Tempo"}},"Muk-Alola":{types:["Poison","Dark"],bs:{hp:105,at:105,df:75,sa:65,sd:100,sp:50},weightkg:52,baseSpecies:"Muk",abilities:{0:"Poison Touch"}},Mumbao:{types:["Grass","Fairy"],bs:{hp:55,at:30,df:64,sa:87,sd:73,sp:66},weightkg:83,nfe:!0,abilities:{0:"Trace"}},Naganadel:{types:["Poison","Dragon"],bs:{hp:73,at:73,df:73,sa:127,sd:73,sp:121},weightkg:150,abilities:{0:"Beast Boost"},gender:"N"},Necrozma:{types:["Psychic"],bs:{hp:97,at:107,df:101,sa:127,sd:89,sp:79},weightkg:230,abilities:{0:"Prism Armor"},otherFormes:["Necrozma-Dawn-Wings","Necrozma-Dusk-Mane","Necrozma-Ultra"],gender:"N"},"Necrozma-Dawn-Wings":{types:["Psychic","Ghost"],bs:{hp:97,at:113,df:109,sa:157,sd:127,sp:77},weightkg:350,abilities:{0:"Prism Armor"},baseSpecies:"Necrozma",gender:"N"},"Necrozma-Dusk-Mane":{types:["Psychic","Steel"],bs:{hp:97,at:157,df:127,sa:113,sd:109,sp:77},weightkg:460,abilities:{0:"Prism Armor"},baseSpecies:"Necrozma",gender:"N"},"Necrozma-Ultra":{types:["Psychic","Dragon"],bs:{hp:97,at:167,df:97,sa:167,sd:97,sp:129},weightkg:230,abilities:{0:"Neuroforce"},baseSpecies:"Necrozma",gender:"N"},Nihilego:{types:["Rock","Poison"],bs:{hp:109,at:53,df:47,sa:127,sd:131,sp:103},weightkg:55.5,abilities:{0:"Beast Boost"},gender:"N"},"Ninetales-Alola":{types:["Ice","Fairy"],bs:{hp:73,at:67,df:75,sa:81,sd:100,sp:109},weightkg:19.9,abilities:{0:"Snow Cloak"},baseSpecies:"Ninetales"},Oranguru:{types:["Normal","Psychic"],bs:{hp:90,at:60,df:80,sa:90,sd:110,sp:60},weightkg:76,abilities:{0:"Inner Focus"}},Oricorio:{types:["Fire","Flying"],bs:{hp:75,at:70,df:70,sa:98,sd:70,sp:93},weightkg:3.4,abilities:{0:"Dancer"},otherFormes:["Oricorio-Pa'u","Oricorio-Pom-Pom","Oricorio-Sensu"]},"Oricorio-Pa'u":{types:["Psychic","Flying"],bs:{hp:75,at:70,df:70,sa:98,sd:70,sp:93},weightkg:3.4,abilities:{0:"Dancer"},baseSpecies:"Oricorio"},"Oricorio-Pom-Pom":{types:["Electric","Flying"],bs:{hp:75,at:70,df:70,sa:98,sd:70,sp:93},weightkg:3.4,abilities:{0:"Dancer"},baseSpecies:"Oricorio"},"Oricorio-Sensu":{types:["Ghost","Flying"],bs:{hp:75,at:70,df:70,sa:98,sd:70,sp:93},weightkg:3.4,abilities:{0:"Dancer"},baseSpecies:"Oricorio"},Pajantom:{types:["Dragon","Ghost"],bs:{hp:84,at:133,df:71,sa:51,sd:111,sp:101},weightkg:3.1,abilities:{0:"Comatose"}},Palossand:{types:["Ghost","Ground"],bs:{hp:85,at:75,df:110,sa:100,sd:75,sp:35},weightkg:250,abilities:{0:"Water Compaction"}},Passimian:{types:["Fighting"],bs:{hp:100,at:120,df:90,sa:40,sd:60,sp:80},weightkg:82.8,abilities:{0:"Receiver"}},"Persian-Alola":{types:["Dark"],bs:{hp:65,at:60,df:60,sa:75,sd:65,sp:115},weightkg:33,baseSpecies:"Persian",abilities:{0:"Fur Coat"}},Pheromosa:{types:["Bug","Fighting"],bs:{hp:71,at:137,df:37,sa:137,sd:37,sp:151},weightkg:25,abilities:{0:"Beast Boost"},gender:"N"},"Pikachu-Alola":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},"Pikachu-Hoenn":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},"Pikachu-Kalos":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},"Pikachu-Original":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},"Pikachu-Partner":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},"Pikachu-Sinnoh":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},"Pikachu-Starter":{types:["Electric"],bs:{hp:45,at:80,df:50,sa:75,sd:60,sp:120},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},"Pikachu-Unova":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},Pikipek:{types:["Normal","Flying"],bs:{hp:35,at:75,df:30,sa:30,sd:30,sp:65},weightkg:1.2,nfe:!0,abilities:{0:"Keen Eye"}},Poipole:{types:["Poison"],bs:{hp:67,at:73,df:67,sa:73,sd:67,sp:73},weightkg:1.8,abilities:{0:"Beast Boost"},nfe:!0,gender:"N"},Popplio:{types:["Water"],bs:{hp:50,at:54,df:54,sa:66,sd:56,sp:40},weightkg:7.5,nfe:!0,abilities:{0:"Torrent"}},Primarina:{types:["Water","Fairy"],bs:{hp:80,at:74,df:74,sa:126,sd:116,sp:60},weightkg:44,abilities:{0:"Torrent"}},Pyukumuku:{types:["Water"],bs:{hp:55,at:60,df:130,sa:30,sd:130,sp:5},weightkg:1.2,abilities:{0:"Innards Out"}},"Raichu-Alola":{types:["Electric","Psychic"],bs:{hp:60,at:85,df:50,sa:95,sd:85,sp:110},weightkg:21,baseSpecies:"Raichu",abilities:{0:"Surge Surfer"}},"Raticate-Alola":{types:["Dark","Normal"],bs:{hp:75,at:71,df:70,sa:40,sd:80,sp:77},weightkg:25.5,baseSpecies:"Raticate",abilities:{0:"Gluttony"}},"Raticate-Alola-Totem":{types:["Dark","Normal"],bs:{hp:75,at:71,df:70,sa:40,sd:80,sp:77},weightkg:105,abilities:{0:"Thick Fat"},baseSpecies:"Raticate"},"Rattata-Alola":{types:["Dark","Normal"],bs:{hp:30,at:56,df:35,sa:25,sd:35,sp:72},weightkg:3.8,baseSpecies:"Rattata",nfe:!0,abilities:{0:"Gluttony"}},Ribombee:{types:["Bug","Fairy"],bs:{hp:60,at:55,df:60,sa:95,sd:70,sp:124},weightkg:.5,otherFormes:["Ribombee-Totem"],abilities:{0:"Honey Gather"}},"Ribombee-Totem":{types:["Bug","Fairy"],bs:{hp:60,at:55,df:60,sa:95,sd:70,sp:124},weightkg:2,abilities:{0:"Sweet Veil"},baseSpecies:"Ribombee"},Rockruff:{types:["Rock"],bs:{hp:45,at:65,df:40,sa:30,sd:40,sp:60},weightkg:9.2,nfe:!0,abilities:{0:"Keen Eye"}},Rowlet:{types:["Grass","Flying"],bs:{hp:68,at:55,df:55,sa:50,sd:50,sp:42},weightkg:1.5,nfe:!0,abilities:{0:"Overgrow"}},Salandit:{types:["Poison","Fire"],bs:{hp:48,at:44,df:40,sa:71,sd:40,sp:77},weightkg:4.8,nfe:!0,abilities:{0:"Corrosion"}},Salazzle:{types:["Poison","Fire"],bs:{hp:68,at:64,df:60,sa:111,sd:60,sp:117},weightkg:22.2,otherFormes:["Salazzle-Totem"],abilities:{0:"Corrosion"}},"Salazzle-Totem":{types:["Poison","Fire"],bs:{hp:68,at:64,df:60,sa:111,sd:60,sp:117},weightkg:81,abilities:{0:"Corrosion"},baseSpecies:"Salazzle"},"Sandshrew-Alola":{types:["Ice","Steel"],bs:{hp:50,at:75,df:90,sa:10,sd:35,sp:40},weightkg:40,baseSpecies:"Sandshrew",nfe:!0,abilities:{0:"Snow Cloak"}},"Sandslash-Alola":{types:["Ice","Steel"],bs:{hp:75,at:100,df:120,sa:25,sd:65,sp:65},weightkg:55,baseSpecies:"Sandslash",abilities:{0:"Snow Cloak"}},Sandygast:{types:["Ghost","Ground"],bs:{hp:55,at:55,df:80,sa:70,sd:45,sp:15},weightkg:70,nfe:!0,abilities:{0:"Water Compaction"}},Shiinotic:{types:["Grass","Fairy"],bs:{hp:60,at:45,df:80,sa:90,sd:100,sp:30},weightkg:11.5,abilities:{0:"Illuminate"}},Silvally:{types:["Normal"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},gender:"N",otherFormes:["Silvally-Bug","Silvally-Dark","Silvally-Dragon","Silvally-Electric","Silvally-Fairy","Silvally-Fighting","Silvally-Fire","Silvally-Flying","Silvally-Ghost","Silvally-Grass","Silvally-Ground","Silvally-Ice","Silvally-Poison","Silvally-Psychic","Silvally-Rock","Silvally-Steel","Silvally-Water"]},"Silvally-Bug":{types:["Bug"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Dark":{types:["Dark"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Dragon":{types:["Dragon"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Electric":{types:["Electric"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Fairy":{types:["Fairy"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Fighting":{types:["Fighting"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Fire":{types:["Fire"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Flying":{types:["Flying"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Ghost":{types:["Ghost"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Grass":{types:["Grass"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Ground":{types:["Ground"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Ice":{types:["Ice"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Poison":{types:["Poison"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Psychic":{types:["Psychic"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Rock":{types:["Rock"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Steel":{types:["Steel"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},"Silvally-Water":{types:["Water"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:95},weightkg:100.5,abilities:{0:"RKS System"},baseSpecies:"Silvally",gender:"N"},Smogecko:{types:["Fire"],bs:{hp:48,at:66,df:43,sa:58,sd:48,sp:56},weightkg:8.5,nfe:!0,abilities:{0:"Blaze"}},Smoguana:{types:["Fire","Ground"],bs:{hp:68,at:86,df:53,sa:68,sd:68,sp:76},weightkg:22.2,nfe:!0,abilities:{0:"Blaze"}},Smokomodo:{types:["Fire","Ground"],bs:{hp:88,at:116,df:67,sa:88,sd:78,sp:97},weightkg:205,abilities:{0:"Blaze"}},Snaelstrom:{types:["Water","Bug"],bs:{hp:91,at:94,df:110,sa:80,sd:97,sp:63},weightkg:120,abilities:{0:"Torrent"}},Solgaleo:{types:["Psychic","Steel"],bs:{hp:137,at:137,df:107,sa:113,sd:89,sp:97},weightkg:230,abilities:{0:"Full Metal Body"},gender:"N"},Stakataka:{types:["Rock","Steel"],bs:{hp:61,at:131,df:211,sa:53,sd:101,sp:13},weightkg:820,abilities:{0:"Beast Boost"},gender:"N"},Steenee:{types:["Grass"],bs:{hp:52,at:40,df:48,sa:40,sd:48,sp:62},weightkg:8.2,nfe:!0,abilities:{0:"Leaf Guard"}},Stufful:{types:["Normal","Fighting"],bs:{hp:70,at:75,df:50,sa:45,sd:50,sp:50},weightkg:6.8,abilities:{0:"Fluffy"},nfe:!0},Swirlpool:{types:["Water"],bs:{hp:61,at:49,df:70,sa:50,sd:62,sp:28},weightkg:7,nfe:!0,abilities:{0:"Torrent"}},"Tapu Bulu":{types:["Grass","Fairy"],bs:{hp:70,at:130,df:115,sa:85,sd:95,sp:75},weightkg:45.5,abilities:{0:"Grassy Surge"},gender:"N"},"Tapu Fini":{types:["Water","Fairy"],bs:{hp:70,at:75,df:115,sa:95,sd:130,sp:85},weightkg:21.2,abilities:{0:"Misty Surge"},gender:"N"},"Tapu Koko":{types:["Electric","Fairy"],bs:{hp:70,at:115,df:85,sa:95,sd:75,sp:130},weightkg:20.5,abilities:{0:"Electric Surge"},gender:"N"},"Tapu Lele":{types:["Psychic","Fairy"],bs:{hp:70,at:85,df:75,sa:130,sd:115,sp:95},weightkg:18.6,abilities:{0:"Psychic Surge"},gender:"N"},Togedemaru:{types:["Electric","Steel"],bs:{hp:65,at:98,df:63,sa:40,sd:73,sp:96},weightkg:3.3,abilities:{0:"Iron Barbs"},otherFormes:["Togedemaru-Totem"]},"Togedemaru-Totem":{types:["Electric","Steel"],bs:{hp:65,at:98,df:63,sa:40,sd:73,sp:96},weightkg:13,abilities:{0:"Sturdy"},baseSpecies:"Togedemaru"},Torracat:{types:["Fire"],bs:{hp:65,at:85,df:50,sa:80,sd:50,sp:90},weightkg:25,nfe:!0,abilities:{0:"Blaze"}},Toucannon:{types:["Normal","Flying"],bs:{hp:80,at:120,df:75,sa:75,sd:75,sp:60},weightkg:26,abilities:{0:"Keen Eye"}},Toxapex:{types:["Poison","Water"],bs:{hp:50,at:63,df:152,sa:53,sd:142,sp:35},weightkg:14.5,abilities:{0:"Merciless"}},Trumbeak:{types:["Normal","Flying"],bs:{hp:55,at:85,df:50,sa:40,sd:50,sp:75},weightkg:14.8,nfe:!0,abilities:{0:"Keen Eye"}},Tsareena:{types:["Grass"],bs:{hp:72,at:120,df:98,sa:50,sd:98,sp:72},weightkg:21.4,abilities:{0:"Leaf Guard"}},Turtonator:{types:["Fire","Dragon"],bs:{hp:60,at:78,df:135,sa:91,sd:85,sp:36},weightkg:212,abilities:{0:"Shell Armor"}},"Type: Null":{types:["Normal"],bs:{hp:95,at:95,df:95,sa:95,sd:95,sp:59},weightkg:120.5,abilities:{0:"Battle Armor"},nfe:!0,gender:"N"},Vikavolt:{types:["Bug","Electric"],bs:{hp:77,at:70,df:90,sa:145,sd:75,sp:43},weightkg:45,abilities:{0:"Levitate"},otherFormes:["Vikavolt-Totem"]},"Vikavolt-Totem":{types:["Bug","Electric"],bs:{hp:77,at:70,df:90,sa:145,sd:75,sp:43},weightkg:147.5,abilities:{0:"Levitate"},baseSpecies:"Vikavolt"},"Vulpix-Alola":{types:["Ice"],bs:{hp:38,at:41,df:40,sa:50,sd:65,sp:65},weightkg:9.9,baseSpecies:"Vulpix",nfe:!0,abilities:{0:"Snow Cloak"}},Wimpod:{types:["Bug","Water"],bs:{hp:25,at:35,df:40,sa:20,sd:30,sp:80},weightkg:12,abilities:{0:"Wimp Out"},nfe:!0},Wishiwashi:{types:["Water"],bs:{hp:45,at:20,df:20,sa:25,sd:25,sp:40},weightkg:.3,otherFormes:["Wishiwashi-School"],abilities:{0:"Schooling"}},"Wishiwashi-School":{types:["Water"],bs:{hp:45,at:140,df:130,sa:140,sd:135,sp:30},weightkg:78.6,baseSpecies:"Wishiwashi",abilities:{0:"Schooling"}},Xurkitree:{types:["Electric"],bs:{hp:83,at:89,df:71,sa:173,sd:71,sp:83},weightkg:100,abilities:{0:"Beast Boost"},gender:"N"},Yungoos:{types:["Normal"],bs:{hp:48,at:70,df:30,sa:30,sd:30,sp:45},weightkg:6,nfe:!0,abilities:{0:"Stakeout"}},Zeraora:{types:["Electric"],bs:{hp:88,at:112,df:75,sa:102,sd:80,sp:143},weightkg:44.5,abilities:{0:"Volt Absorb"},gender:"N"},"Zygarde-10%":{types:["Dragon","Ground"],bs:{hp:54,at:100,df:71,sa:61,sd:85,sp:115},weightkg:33.5,abilities:{0:"Aura Break"},baseSpecies:"Zygarde",gender:"N"},"Zygarde-Complete":{types:["Dragon","Ground"],bs:{hp:216,at:100,df:121,sa:91,sd:95,sp:85},weightkg:610,abilities:{0:"Power Construct"},baseSpecies:"Zygarde",gender:"N"}});delete m["Pikachu-Cosplay"],delete m["Pikachu-Rock-Star"],delete m["Pikachu-Belle"],delete m["Pikachu-PhD"],delete m["Pikachu-Pop-Star"],delete m["Pikachu-Libre"];var y=(0,f.extend)(!0,{},m,{"Aegislash-Blade":{bs:{at:140,sa:140}},"Aegislash-Both":{bs:{at:140,df:140,sa:140,sd:140}},"Aegislash-Shield":{bs:{df:140,sd:140}},Articuno:{otherFormes:["Articuno-Galar"]},Blastoise:{otherFormes:["Blastoise-Gmax","Blastoise-Mega"]},Butterfree:{otherFormes:["Butterfree-Gmax"]},Charizard:{otherFormes:["Charizard-Gmax","Charizard-Mega-X","Charizard-Mega-Y"]},Corsola:{otherFormes:["Corsola-Galar"]},Darmanitan:{otherFormes:["Darmanitan-Galar","Darmanitan-Galar-Zen","Darmanitan-Zen"]},Darumaka:{otherFormes:["Darumaka-Galar"]},Eevee:{otherFormes:["Eevee-Gmax"]},Equilibra:{bs:{sa:133}},"Farfetch’d":{otherFormes:["Farfetch’d-Galar"]},Garbodor:{otherFormes:["Garbodor-Gmax"]},Gengar:{otherFormes:["Gengar-Gmax","Gengar-Mega"]},Kingler:{otherFormes:["Kingler-Gmax"]},Lapras:{otherFormes:["Lapras-Gmax"]},Linoone:{otherFormes:["Linoone-Galar"]},Machamp:{otherFormes:["Machamp-Gmax"]},Melmetal:{otherFormes:["Melmetal-Gmax"]},Meowth:{otherFormes:["Meowth-Alola","Meowth-Galar","Meowth-Gmax"]},Moltres:{otherFormes:["Moltres-Galar"]},"Mr. Mime":{otherFormes:["Mr. Mime-Galar"]},Pikachu:{otherFormes:["Pikachu-Alola","Pikachu-Gmax","Pikachu-Hoenn","Pikachu-Kalos","Pikachu-Original","Pikachu-Partner","Pikachu-Sinnoh","Pikachu-Unova","Pikachu-World"]},Ponyta:{otherFormes:["Ponyta-Galar"]},Pyroak:{bs:{sa:70,sd:65}},Rapidash:{otherFormes:["Rapidash-Galar"]},Slowbro:{otherFormes:["Slowbro-Galar","Slowbro-Mega"]},Slowking:{otherFormes:["Slowking-Galar"]},Slowpoke:{otherFormes:["Slowpoke-Galar"]},Snorlax:{otherFormes:["Snorlax-Gmax"]},Stunfisk:{otherFormes:["Stunfisk-Galar"]},Venusaur:{otherFormes:["Venusaur-Gmax","Venusaur-Mega"]},Voodoom:{bs:{sa:130}},Weezing:{otherFormes:["Weezing-Galar"]},Yamask:{otherFormes:["Yamask-Galar"]},Zapdos:{otherFormes:["Zapdos-Galar"]},Zigzagoon:{otherFormes:["Zigzagoon-Galar"]},Alcremie:{types:["Fairy"],bs:{hp:65,at:60,df:75,sa:110,sd:121,sp:64},weightkg:.5,abilities:{0:"Sweet Veil"},otherFormes:["Alcremie-Gmax"]},"Alcremie-Gmax":{types:["Fairy"],bs:{hp:65,at:60,df:75,sa:110,sd:121,sp:64},weightkg:0,abilities:{0:"Sweet Veil"},baseSpecies:"Alcremie"},Appletun:{types:["Grass","Dragon"],bs:{hp:110,at:85,df:80,sa:100,sd:80,sp:30},weightkg:13,abilities:{0:"Ripen"},otherFormes:["Appletun-Gmax"]},"Appletun-Gmax":{types:["Grass","Dragon"],bs:{hp:110,at:85,df:80,sa:100,sd:80,sp:30},weightkg:0,abilities:{0:"Ripen"},baseSpecies:"Appletun"},Applin:{types:["Grass","Dragon"],bs:{hp:40,at:40,df:80,sa:40,sd:40,sp:20},weightkg:.5,abilities:{0:"Ripen"},nfe:!0},Arctovish:{types:["Water","Ice"],bs:{hp:90,at:90,df:100,sa:80,sd:90,sp:55},weightkg:175,abilities:{0:"Water Absorb"},gender:"N"},Arctozolt:{types:["Electric","Ice"],bs:{hp:90,at:100,df:90,sa:90,sd:80,sp:55},weightkg:150,abilities:{0:"Volt Absorb"},gender:"N"},Arrokuda:{types:["Water"],bs:{hp:41,at:63,df:40,sa:40,sd:30,sp:66},weightkg:1,abilities:{0:"Swift Swim"},nfe:!0},"Articuno-Galar":{types:["Psychic","Flying"],bs:{hp:90,at:85,df:85,sa:125,sd:100,sp:95},weightkg:50.9,abilities:{0:"Competitive"},gender:"N",baseSpecies:"Articuno"},Astrolotl:{types:["Fire","Dragon"],bs:{hp:108,at:108,df:74,sa:92,sd:64,sp:114},weightkg:50,abilities:{0:"Regenerator"}},Barraskewda:{types:["Water"],bs:{hp:61,at:123,df:60,sa:60,sd:50,sp:136},weightkg:30,abilities:{0:"Swift Swim"}},"Blastoise-Gmax":{types:["Water"],bs:{hp:79,at:83,df:100,sa:85,sd:105,sp:78},weightkg:0,abilities:{0:"Torrent"},baseSpecies:"Blastoise"},Blipbug:{types:["Bug"],bs:{hp:25,at:20,df:20,sa:25,sd:45,sp:45},weightkg:8,abilities:{0:"Swarm"},nfe:!0},Boltund:{types:["Electric"],bs:{hp:69,at:90,df:60,sa:90,sd:60,sp:121},weightkg:34,abilities:{0:"Strong Jaw"}},"Butterfree-Gmax":{types:["Bug","Flying"],bs:{hp:60,at:45,df:50,sa:90,sd:80,sp:70},weightkg:0,abilities:{0:"Compound Eyes"},baseSpecies:"Butterfree"},Calyrex:{types:["Psychic","Grass"],bs:{hp:100,at:80,df:80,sa:80,sd:80,sp:80},weightkg:7.7,abilities:{0:"Unnerve"},gender:"N",otherFormes:["Calyrex-Ice","Calyrex-Shadow"]},"Calyrex-Ice":{types:["Psychic","Ice"],bs:{hp:100,at:165,df:150,sa:85,sd:130,sp:50},weightkg:809.1,abilities:{0:"As One (Glastrier)"},gender:"N",baseSpecies:"Calyrex"},"Calyrex-Shadow":{types:["Psychic","Ghost"],bs:{hp:100,at:85,df:80,sa:165,sd:100,sp:150},weightkg:53.6,abilities:{0:"As One (Spectrier)"},gender:"N",baseSpecies:"Calyrex"},Carkol:{types:["Rock","Fire"],bs:{hp:80,at:60,df:90,sa:60,sd:70,sp:50},weightkg:78,abilities:{0:"Steam Engine"},nfe:!0},Centiskorch:{types:["Fire","Bug"],bs:{hp:100,at:115,df:65,sa:90,sd:90,sp:65},weightkg:120,abilities:{0:"Flash Fire"},otherFormes:["Centiskorch-Gmax"]},"Centiskorch-Gmax":{types:["Fire","Bug"],bs:{hp:100,at:115,df:65,sa:90,sd:90,sp:65},weightkg:0,abilities:{0:"Flash Fire"},baseSpecies:"Centiskorch"},"Charizard-Gmax":{types:["Fire","Flying"],bs:{hp:78,at:84,df:78,sa:109,sd:85,sp:100},weightkg:0,abilities:{0:"Blaze"},baseSpecies:"Charizard"},Chewtle:{types:["Water"],bs:{hp:50,at:64,df:50,sa:38,sd:38,sp:44},weightkg:8.5,abilities:{0:"Strong Jaw"},nfe:!0},Chromera:{types:["Dark","Normal"],bs:{hp:85,at:85,df:115,sa:115,sd:100,sp:100},weightkg:215,abilities:{0:"Color Change"},gender:"N"},Cinderace:{types:["Fire"],bs:{hp:80,at:116,df:75,sa:65,sd:75,sp:119},weightkg:33,abilities:{0:"Blaze"},otherFormes:["Cinderace-Gmax"]},"Cinderace-Gmax":{types:["Fire"],bs:{hp:80,at:116,df:75,sa:65,sd:75,sp:119},weightkg:0,abilities:{0:"Blaze"},baseSpecies:"Cinderace"},Clobbopus:{types:["Fighting"],bs:{hp:50,at:68,df:60,sa:50,sd:50,sp:32},weightkg:4,abilities:{0:"Limber"},nfe:!0},Coalossal:{types:["Rock","Fire"],bs:{hp:110,at:80,df:120,sa:80,sd:90,sp:30},weightkg:310.5,abilities:{0:"Steam Engine"},otherFormes:["Coalossal-Gmax"]},"Coalossal-Gmax":{types:["Rock","Fire"],bs:{hp:110,at:80,df:120,sa:80,sd:90,sp:30},weightkg:0,abilities:{0:"Steam Engine"},baseSpecies:"Coalossal"},Copperajah:{types:["Steel"],bs:{hp:122,at:130,df:69,sa:80,sd:69,sp:30},weightkg:650,abilities:{0:"Sheer Force"},otherFormes:["Copperajah-Gmax"]},"Copperajah-Gmax":{types:["Steel"],bs:{hp:122,at:130,df:69,sa:80,sd:69,sp:30},weightkg:0,abilities:{0:"Sheer Force"},baseSpecies:"Copperajah"},"Corsola-Galar":{types:["Ghost"],bs:{hp:60,at:55,df:100,sa:65,sd:100,sp:30},weightkg:.5,abilities:{0:"Weak Armor"},nfe:!0,baseSpecies:"Corsola"},Corviknight:{types:["Flying","Steel"],bs:{hp:98,at:87,df:105,sa:53,sd:85,sp:67},weightkg:75,abilities:{0:"Pressure"},otherFormes:["Corviknight-Gmax"]},"Corviknight-Gmax":{types:["Flying","Steel"],bs:{hp:98,at:87,df:105,sa:53,sd:85,sp:67},weightkg:0,abilities:{0:"Pressure"},baseSpecies:"Corviknight"},Corvisquire:{types:["Flying"],bs:{hp:68,at:67,df:55,sa:43,sd:55,sp:77},weightkg:16,abilities:{0:"Keen Eye"},nfe:!0},Cramorant:{types:["Flying","Water"],bs:{hp:70,at:85,df:55,sa:85,sd:95,sp:85},weightkg:18,abilities:{0:"Gulp Missile"},otherFormes:["Cramorant-Gorging","Cramorant-Gulping"]},"Cramorant-Gorging":{types:["Flying","Water"],bs:{hp:70,at:85,df:55,sa:85,sd:95,sp:85},weightkg:18,abilities:{0:"Gulp Missile"},baseSpecies:"Cramorant"},"Cramorant-Gulping":{types:["Flying","Water"],bs:{hp:70,at:85,df:55,sa:85,sd:95,sp:85},weightkg:18,abilities:{0:"Gulp Missile"},baseSpecies:"Cramorant"},Cufant:{types:["Steel"],bs:{hp:72,at:80,df:49,sa:40,sd:49,sp:40},weightkg:100,abilities:{0:"Sheer Force"},nfe:!0},Cursola:{types:["Ghost"],bs:{hp:60,at:95,df:50,sa:145,sd:130,sp:30},weightkg:.4,abilities:{0:"Weak Armor"}},"Darmanitan-Galar":{types:["Ice"],bs:{hp:105,at:140,df:55,sa:30,sd:55,sp:95},weightkg:120,abilities:{0:"Gorilla Tactics"},baseSpecies:"Darmanitan"},"Darmanitan-Galar-Zen":{types:["Ice","Fire"],bs:{hp:105,at:160,df:55,sa:30,sd:55,sp:135},weightkg:120,abilities:{0:"Zen Mode"},baseSpecies:"Darmanitan"},"Darumaka-Galar":{types:["Ice"],bs:{hp:70,at:90,df:45,sa:15,sd:45,sp:50},weightkg:40,abilities:{0:"Hustle"},nfe:!0,baseSpecies:"Darumaka"},Dottler:{types:["Bug","Psychic"],bs:{hp:50,at:35,df:80,sa:50,sd:90,sp:30},weightkg:19.5,abilities:{0:"Swarm"},nfe:!0},Dracovish:{types:["Water","Dragon"],bs:{hp:90,at:90,df:100,sa:70,sd:80,sp:75},weightkg:215,abilities:{0:"Water Absorb"},gender:"N"},Dracozolt:{types:["Electric","Dragon"],bs:{hp:90,at:100,df:90,sa:80,sd:70,sp:75},weightkg:190,abilities:{0:"Volt Absorb"},gender:"N"},Dragapult:{types:["Dragon","Ghost"],bs:{hp:88,at:120,df:75,sa:100,sd:75,sp:142},weightkg:50,abilities:{0:"Clear Body"}},Drakloak:{types:["Dragon","Ghost"],bs:{hp:68,at:80,df:50,sa:60,sd:50,sp:102},weightkg:11,abilities:{0:"Clear Body"},nfe:!0},Drednaw:{types:["Water","Rock"],bs:{hp:90,at:115,df:90,sa:48,sd:68,sp:74},weightkg:115.5,abilities:{0:"Strong Jaw"},otherFormes:["Drednaw-Gmax"]},"Drednaw-Gmax":{types:["Water","Rock"],bs:{hp:90,at:115,df:90,sa:48,sd:68,sp:74},weightkg:0,abilities:{0:"Strong Jaw"},baseSpecies:"Drednaw"},Dreepy:{types:["Dragon","Ghost"],bs:{hp:28,at:60,df:30,sa:40,sd:30,sp:82},weightkg:2,abilities:{0:"Clear Body"},nfe:!0},Drizzile:{types:["Water"],bs:{hp:65,at:60,df:55,sa:95,sd:55,sp:90},weightkg:11.5,abilities:{0:"Torrent"},nfe:!0},Dubwool:{types:["Normal"],bs:{hp:72,at:80,df:100,sa:60,sd:90,sp:88},weightkg:43,abilities:{0:"Fluffy"}},Duraludon:{types:["Steel","Dragon"],bs:{hp:70,at:95,df:115,sa:120,sd:50,sp:85},weightkg:40,abilities:{0:"Light Metal"},otherFormes:["Duraludon-Gmax"]},"Duraludon-Gmax":{types:["Steel","Dragon"],bs:{hp:70,at:95,df:115,sa:120,sd:50,sp:85},weightkg:0,abilities:{0:"Light Metal"},baseSpecies:"Duraludon"},"Eevee-Gmax":{types:["Normal"],bs:{hp:55,at:55,df:50,sa:45,sd:65,sp:55},weightkg:0,abilities:{0:"Run Away"},baseSpecies:"Eevee"},Eiscue:{types:["Ice"],bs:{hp:75,at:80,df:110,sa:65,sd:90,sp:50},weightkg:89,abilities:{0:"Ice Face"},otherFormes:["Eiscue-Noice"]},"Eiscue-Noice":{types:["Ice"],bs:{hp:75,at:80,df:70,sa:65,sd:50,sp:130},weightkg:89,abilities:{0:"Ice Face"},baseSpecies:"Eiscue"},Eldegoss:{types:["Grass"],bs:{hp:60,at:50,df:90,sa:80,sd:120,sp:60},weightkg:2.5,abilities:{0:"Cotton Down"}},Eternatus:{types:["Poison","Dragon"],bs:{hp:140,at:85,df:95,sa:145,sd:95,sp:130},weightkg:950,abilities:{0:"Pressure"},gender:"N",otherFormes:["Eternatus-Eternamax"]},"Eternatus-Eternamax":{types:["Poison","Dragon"],bs:{hp:255,at:115,df:250,sa:125,sd:250,sp:130},weightkg:0,abilities:{0:"Pressure"},gender:"N",baseSpecies:"Eternatus"},Falinks:{types:["Fighting"],bs:{hp:65,at:100,df:100,sa:70,sd:60,sp:75},weightkg:62,abilities:{0:"Battle Armor"},gender:"N"},"Farfetch’d-Galar":{types:["Fighting"],bs:{hp:52,at:95,df:55,sa:58,sd:62,sp:55},weightkg:15,abilities:{0:"Steadfast"},nfe:!0,baseSpecies:"Farfetch’d"},Flapple:{types:["Grass","Dragon"],bs:{hp:70,at:110,df:80,sa:95,sd:60,sp:70},weightkg:1,abilities:{0:"Ripen"},otherFormes:["Flapple-Gmax"]},"Flapple-Gmax":{types:["Grass","Dragon"],bs:{hp:70,at:110,df:80,sa:95,sd:60,sp:70},weightkg:0,abilities:{0:"Ripen"},baseSpecies:"Flapple"},Frosmoth:{types:["Ice","Bug"],bs:{hp:70,at:65,df:60,sa:125,sd:90,sp:65},weightkg:42,abilities:{0:"Shield Dust"}},"Garbodor-Gmax":{types:["Poison"],bs:{hp:80,at:95,df:82,sa:60,sd:82,sp:75},weightkg:0,abilities:{0:"Stench"},baseSpecies:"Garbodor"},"Gengar-Gmax":{types:["Ghost","Poison"],bs:{hp:60,at:65,df:60,sa:130,sd:75,sp:110},weightkg:0,abilities:{0:"Cursed Body"},baseSpecies:"Gengar"},Glastrier:{types:["Ice"],bs:{hp:100,at:145,df:130,sa:65,sd:110,sp:30},weightkg:800,abilities:{0:"Chilling Neigh"},gender:"N"},Gossifleur:{types:["Grass"],bs:{hp:40,at:40,df:60,sa:40,sd:60,sp:10},weightkg:2.2,abilities:{0:"Cotton Down"},nfe:!0},Grapploct:{types:["Fighting"],bs:{hp:80,at:118,df:90,sa:70,sd:80,sp:42},weightkg:39,abilities:{0:"Limber"}},Greedent:{types:["Normal"],bs:{hp:120,at:95,df:95,sa:55,sd:75,sp:20},weightkg:6,abilities:{0:"Cheek Pouch"}},Grimmsnarl:{types:["Dark","Fairy"],bs:{hp:95,at:120,df:65,sa:95,sd:75,sp:60},weightkg:61,abilities:{0:"Prankster"},otherFormes:["Grimmsnarl-Gmax"]},"Grimmsnarl-Gmax":{types:["Dark","Fairy"],bs:{hp:95,at:120,df:65,sa:95,sd:75,sp:60},weightkg:0,abilities:{0:"Prankster"},baseSpecies:"Grimmsnarl"},Grookey:{types:["Grass"],bs:{hp:50,at:65,df:50,sa:40,sd:40,sp:65},weightkg:5,abilities:{0:"Overgrow"},nfe:!0},Hatenna:{types:["Psychic"],bs:{hp:42,at:30,df:45,sa:56,sd:53,sp:39},weightkg:3.4,abilities:{0:"Healer"},nfe:!0},Hatterene:{types:["Psychic","Fairy"],bs:{hp:57,at:90,df:95,sa:136,sd:103,sp:29},weightkg:5.1,abilities:{0:"Healer"},otherFormes:["Hatterene-Gmax"]},"Hatterene-Gmax":{types:["Psychic","Fairy"],bs:{hp:57,at:90,df:95,sa:136,sd:103,sp:29},weightkg:0,abilities:{0:"Healer"},baseSpecies:"Hatterene"},Hattrem:{types:["Psychic"],bs:{hp:57,at:40,df:65,sa:86,sd:73,sp:49},weightkg:4.8,abilities:{0:"Healer"},nfe:!0},Impidimp:{types:["Dark","Fairy"],bs:{hp:45,at:45,df:30,sa:55,sd:40,sp:50},weightkg:5.5,abilities:{0:"Prankster"},nfe:!0},Indeedee:{types:["Psychic","Normal"],bs:{hp:60,at:65,df:55,sa:105,sd:95,sp:95},weightkg:28,abilities:{0:"Inner Focus"},otherFormes:["Indeedee-F"]},"Indeedee-F":{types:["Psychic","Normal"],bs:{hp:70,at:55,df:65,sa:95,sd:105,sp:85},weightkg:28,abilities:{0:"Own Tempo"},baseSpecies:"Indeedee"},Inteleon:{types:["Water"],bs:{hp:70,at:85,df:65,sa:125,sd:65,sp:120},weightkg:45.2,abilities:{0:"Torrent"},otherFormes:["Inteleon-Gmax"]},"Inteleon-Gmax":{types:["Water"],bs:{hp:70,at:85,df:65,sa:125,sd:65,sp:120},weightkg:0,abilities:{0:"Torrent"},baseSpecies:"Inteleon"},"Kingler-Gmax":{types:["Water"],bs:{hp:55,at:130,df:115,sa:50,sd:50,sp:75},weightkg:0,abilities:{0:"Hyper Cutter"},baseSpecies:"Kingler"},Kubfu:{types:["Fighting"],bs:{hp:60,at:90,df:60,sa:53,sd:50,sp:72},weightkg:12,nfe:!0,abilities:{0:"Inner Focus"}},"Lapras-Gmax":{types:["Water","Ice"],bs:{hp:130,at:85,df:80,sa:85,sd:95,sp:60},weightkg:0,abilities:{0:"Water Absorb"},baseSpecies:"Lapras"},"Linoone-Galar":{types:["Dark","Normal"],bs:{hp:78,at:70,df:61,sa:50,sd:61,sp:100},weightkg:32.5,abilities:{0:"Pickup"},nfe:!0,baseSpecies:"Linoone"},Magearna:{otherFormes:["Magearna-Original"]},"Magearna-Original":{baseSpecies:"Magearna",types:["Steel","Fairy"],bs:{hp:80,at:95,df:115,sa:130,sd:115,sp:65},weightkg:80.5,gender:"N",abilities:{0:"Soul-Heart"}},"Machamp-Gmax":{types:["Fighting"],bs:{hp:90,at:130,df:80,sa:65,sd:85,sp:55},weightkg:0,abilities:{0:"Guts"},baseSpecies:"Machamp"},"Melmetal-Gmax":{types:["Steel"],bs:{hp:135,at:143,df:143,sa:80,sd:65,sp:34},weightkg:0,abilities:{0:"Iron Fist"},baseSpecies:"Melmetal",gender:"N"},"Meowth-Galar":{types:["Steel"],bs:{hp:50,at:65,df:55,sa:40,sd:40,sp:40},weightkg:7.5,abilities:{0:"Pickup"},nfe:!0,baseSpecies:"Meowth"},"Meowth-Gmax":{types:["Normal"],bs:{hp:40,at:45,df:35,sa:40,sd:40,sp:90},weightkg:0,abilities:{0:"Pickup"},baseSpecies:"Meowth"},Miasmaw:{types:["Bug","Dragon"],bs:{hp:85,at:135,df:60,sa:88,sd:105,sp:99},weightkg:57,abilities:{0:"Neutralizing Gas"}},Miasmite:{types:["Bug","Dragon"],bs:{hp:40,at:85,df:60,sa:52,sd:52,sp:44},weightkg:10.1,abilities:{0:"Neutralizing Gas"},nfe:!0},Milcery:{types:["Fairy"],bs:{hp:45,at:40,df:40,sa:50,sd:61,sp:34},weightkg:.3,abilities:{0:"Sweet Veil"},nfe:!0},"Moltres-Galar":{types:["Dark","Flying"],bs:{hp:90,at:85,df:90,sa:100,sd:125,sp:90},weightkg:66,abilities:{0:"Berserk"},gender:"N",baseSpecies:"Moltres"},Morgrem:{types:["Dark","Fairy"],bs:{hp:65,at:60,df:45,sa:75,sd:55,sp:70},weightkg:12.5,abilities:{0:"Prankster"},nfe:!0},Morpeko:{types:["Electric","Dark"],bs:{hp:58,at:95,df:58,sa:70,sd:58,sp:97},weightkg:3,abilities:{0:"Hunger Switch"},otherFormes:["Morpeko-Hangry"]},"Morpeko-Hangry":{types:["Electric","Dark"],bs:{hp:58,at:95,df:58,sa:70,sd:58,sp:97},weightkg:3,abilities:{0:"Hunger Switch"},baseSpecies:"Morpeko"},"Mr. Mime-Galar":{types:["Ice","Psychic"],bs:{hp:50,at:65,df:65,sa:90,sd:90,sp:100},weightkg:56.8,abilities:{0:"Vital Spirit"},nfe:!0,baseSpecies:"Mr. Mime"},"Mr. Rime":{types:["Ice","Psychic"],bs:{hp:80,at:85,df:75,sa:110,sd:100,sp:70},weightkg:58.2,abilities:{0:"Tangled Feet"}},Nickit:{types:["Dark"],bs:{hp:40,at:28,df:28,sa:47,sd:52,sp:50},weightkg:8.9,abilities:{0:"Run Away"},nfe:!0},Obstagoon:{types:["Dark","Normal"],bs:{hp:93,at:90,df:101,sa:60,sd:81,sp:95},weightkg:46,abilities:{0:"Reckless"}},Orbeetle:{types:["Bug","Psychic"],bs:{hp:60,at:45,df:110,sa:80,sd:120,sp:90},weightkg:40.8,abilities:{0:"Swarm"},otherFormes:["Orbeetle-Gmax"]},"Orbeetle-Gmax":{types:["Bug","Psychic"],bs:{hp:60,at:45,df:110,sa:80,sd:120,sp:90},weightkg:0,abilities:{0:"Swarm"},baseSpecies:"Orbeetle"},Perrserker:{types:["Steel"],bs:{hp:70,at:110,df:100,sa:50,sd:60,sp:50},weightkg:28,abilities:{0:"Battle Armor"}},"Pikachu-Gmax":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:0,abilities:{0:"Static"},baseSpecies:"Pikachu"},"Pikachu-World":{types:["Electric"],bs:{hp:35,at:55,df:40,sa:50,sd:50,sp:90},weightkg:6,abilities:{0:"Static"},baseSpecies:"Pikachu"},Pincurchin:{types:["Electric"],bs:{hp:48,at:101,df:95,sa:91,sd:85,sp:15},weightkg:1,abilities:{0:"Lightning Rod"}},Polteageist:{types:["Ghost"],bs:{hp:60,at:65,df:65,sa:134,sd:114,sp:70},weightkg:.4,abilities:{0:"Weak Armor"},otherFormes:["Polteageist-Antique"],gender:"N"},"Polteageist-Antique":{types:["Ghost"],bs:{hp:60,at:65,df:65,sa:134,sd:114,sp:70},weightkg:.4,abilities:{0:"Weak Armor"},baseSpecies:"Polteageist",gender:"N"},"Ponyta-Galar":{types:["Psychic"],bs:{hp:50,at:85,df:55,sa:65,sd:65,sp:90},weightkg:24,abilities:{0:"Run Away"},nfe:!0,baseSpecies:"Ponyta"},Raboot:{types:["Fire"],bs:{hp:65,at:86,df:60,sa:55,sd:60,sp:94},weightkg:9,abilities:{0:"Blaze"},nfe:!0},"Rapidash-Galar":{types:["Psychic","Fairy"],bs:{hp:65,at:100,df:70,sa:80,sd:80,sp:105},weightkg:80,abilities:{0:"Run Away"},baseSpecies:"Rapidash"},Regidrago:{types:["Dragon"],bs:{hp:200,at:100,df:50,sa:100,sd:50,sp:80},weightkg:200,abilities:{0:"Dragon's Maw"},gender:"N"},Regieleki:{types:["Electric"],bs:{hp:80,at:100,df:50,sa:100,sd:50,sp:200},weightkg:145,abilities:{0:"Transistor"},gender:"N"},Rillaboom:{types:["Grass"],bs:{hp:100,at:125,df:90,sa:60,sd:70,sp:85},weightkg:90,abilities:{0:"Overgrow"},otherFormes:["Rillaboom-Gmax"]},"Rillaboom-Gmax":{types:["Grass"],bs:{hp:100,at:125,df:90,sa:60,sd:70,sp:85},weightkg:0,abilities:{0:"Overgrow"},baseSpecies:"Rillaboom"},Rolycoly:{types:["Rock"],bs:{hp:30,at:40,df:50,sa:40,sd:50,sp:30},weightkg:12,abilities:{0:"Steam Engine"},nfe:!0},Rookidee:{types:["Flying"],bs:{hp:38,at:47,df:35,sa:33,sd:35,sp:57},weightkg:1.8,abilities:{0:"Keen Eye"},nfe:!0},Runerigus:{types:["Ground","Ghost"],bs:{hp:58,at:95,df:145,sa:50,sd:105,sp:30},weightkg:66.6,abilities:{0:"Wandering Spirit"}},Saharaja:{types:["Ground"],bs:{hp:70,at:112,df:105,sa:65,sd:123,sp:78},weightkg:303.9,abilities:{0:"Water Absorb"}},Saharascal:{types:["Ground"],bs:{hp:50,at:80,df:65,sa:45,sd:90,sp:70},weightkg:48,abilities:{0:"Water Absorb"},nfe:!0},Sandaconda:{types:["Ground"],bs:{hp:72,at:107,df:125,sa:65,sd:70,sp:71},weightkg:65.5,abilities:{0:"Sand Spit"},otherFormes:["Sandaconda-Gmax"]},"Sandaconda-Gmax":{types:["Ground"],bs:{hp:72,at:107,df:125,sa:65,sd:70,sp:71},weightkg:0,abilities:{0:"Sand Spit"},baseSpecies:"Sandaconda"},Scorbunny:{types:["Fire"],bs:{hp:50,at:71,df:40,sa:40,sd:40,sp:69},weightkg:4.5,abilities:{0:"Blaze"},nfe:!0},Silicobra:{types:["Ground"],bs:{hp:52,at:57,df:75,sa:35,sd:50,sp:46},weightkg:7.6,abilities:{0:"Sand Spit"},nfe:!0},Sinistea:{types:["Ghost"],bs:{hp:40,at:45,df:45,sa:74,sd:54,sp:50},weightkg:.2,abilities:{0:"Weak Armor"},nfe:!0,otherFormes:["Sinistea-Antique"],gender:"N"},"Sinistea-Antique":{types:["Ghost"],bs:{hp:40,at:45,df:45,sa:74,sd:54,sp:50},weightkg:.2,abilities:{0:"Weak Armor"},nfe:!0,baseSpecies:"Sinistea",gender:"N"},"Sirfetch’d":{types:["Fighting"],bs:{hp:62,at:135,df:95,sa:68,sd:82,sp:65},weightkg:117,abilities:{0:"Steadfast"}},Sizzlipede:{types:["Fire","Bug"],bs:{hp:50,at:65,df:45,sa:50,sd:50,sp:45},weightkg:1,abilities:{0:"Flash Fire"},nfe:!0},Skwovet:{types:["Normal"],bs:{hp:70,at:55,df:55,sa:35,sd:35,sp:25},weightkg:2.5,abilities:{0:"Cheek Pouch"},nfe:!0},"Slowbro-Galar":{types:["Poison","Psychic"],bs:{hp:95,at:100,df:95,sa:100,sd:70,sp:30},weightkg:70.5,abilities:{0:"Quick Draw"},baseSpecies:"Slowbro"},"Slowking-Galar":{types:["Poison","Psychic"],bs:{hp:95,at:65,df:80,sa:110,sd:110,sp:30},weightkg:79.5,abilities:{0:"Curious Medicine"},baseSpecies:"Slowking"},"Slowpoke-Galar":{types:["Psychic"],bs:{hp:90,at:65,df:65,sa:40,sd:40,sp:15},weightkg:36,nfe:!0,abilities:{0:"Gluttony"},baseSpecies:"Slowpoke"},Solotl:{types:["Fire","Dragon"],bs:{hp:68,at:48,df:34,sa:72,sd:24,sp:84},weightkg:11.8,nfe:!0,abilities:{0:"Regenerator"}},Snom:{types:["Ice","Bug"],bs:{hp:30,at:25,df:35,sa:45,sd:30,sp:20},weightkg:3.8,abilities:{0:"Shield Dust"},nfe:!0},"Snorlax-Gmax":{types:["Normal"],bs:{hp:160,at:110,df:65,sa:65,sd:110,sp:30},weightkg:0,abilities:{0:"Immunity"},baseSpecies:"Snorlax"},Sobble:{types:["Water"],bs:{hp:50,at:40,df:40,sa:70,sd:40,sp:70},weightkg:4,abilities:{0:"Torrent"},nfe:!0},Spectrier:{types:["Ghost"],bs:{hp:100,at:65,df:60,sa:145,sd:80,sp:130},weightkg:44.5,abilities:{0:"Grim Neigh"},gender:"N"},Stonjourner:{types:["Rock"],bs:{hp:100,at:125,df:135,sa:20,sd:20,sp:70},weightkg:520,abilities:{0:"Power Spot"}},"Stunfisk-Galar":{types:["Ground","Steel"],bs:{hp:109,at:81,df:99,sa:66,sd:84,sp:32},weightkg:20.5,abilities:{0:"Mimicry"},baseSpecies:"Stunfisk"},Thievul:{types:["Dark"],bs:{hp:70,at:58,df:58,sa:87,sd:92,sp:90},weightkg:19.9,abilities:{0:"Run Away"}},Thwackey:{types:["Grass"],bs:{hp:70,at:85,df:70,sa:55,sd:60,sp:80},weightkg:14,abilities:{0:"Overgrow"},nfe:!0},Toxel:{types:["Electric","Poison"],bs:{hp:40,at:38,df:35,sa:54,sd:35,sp:40},weightkg:11,abilities:{0:"Rattled"},nfe:!0},Toxtricity:{types:["Electric","Poison"],bs:{hp:75,at:98,df:70,sa:114,sd:70,sp:75},weightkg:40,abilities:{0:"Punk Rock"},otherFormes:["Toxtricity-Gmax","Toxtricity-Low-Key","Toxtricity-Low-Key-Gmax"]},"Toxtricity-Gmax":{types:["Electric","Poison"],bs:{hp:75,at:98,df:70,sa:114,sd:70,sp:75},weightkg:0,abilities:{0:"Punk Rock"},baseSpecies:"Toxtricity"},"Toxtricity-Low-Key":{types:["Electric","Poison"],bs:{hp:75,at:98,df:70,sa:114,sd:70,sp:75},weightkg:40,abilities:{0:"Punk Rock"},baseSpecies:"Toxtricity"},"Toxtricity-Low-Key-Gmax":{types:["Electric","Poison"],bs:{hp:75,at:98,df:70,sa:114,sd:70,sp:75},weightkg:0,abilities:{0:"Punk Rock"},baseSpecies:"Toxtricity"},Urshifu:{types:["Fighting","Dark"],bs:{hp:100,at:130,df:100,sa:63,sd:60,sp:97},weightkg:105,abilities:{0:"Unseen Fist"},otherFormes:["Urshifu-Gmax","Urshifu-Rapid-Strike","Urshifu-Rapid-Strike-Gmax"]},"Urshifu-Rapid-Strike":{types:["Fighting","Water"],bs:{hp:100,at:130,df:100,sa:63,sd:60,sp:97},weightkg:105,abilities:{0:"Unseen Fist"},baseSpecies:"Urshifu"},"Urshifu-Rapid-Strike-Gmax":{types:["Fighting","Water"],bs:{hp:100,at:130,df:100,sa:63,sd:60,sp:97},weightkg:105,abilities:{0:"Unseen Fist"},baseSpecies:"Urshifu"},"Urshifu-Gmax":{types:["Fighting","Dark"],bs:{hp:100,at:130,df:100,sa:63,sd:60,sp:97},weightkg:0,abilities:{0:"Unseen Fist"},baseSpecies:"Urshifu"},Venomicon:{types:["Poison","Flying"],bs:{hp:85,at:50,df:113,sa:118,sd:90,sp:64},weightkg:11.5,abilities:{0:"Stamina"},otherFormes:["Venomicon-Epilogue"],gender:"N"},"Venomicon-Epilogue":{types:["Poison","Flying"],bs:{hp:85,at:102,df:85,sa:62,sd:85,sp:101},weightkg:12.4,abilities:{0:"Tinted Lens"},baseSpecies:"Venomicon",gender:"N"},"Venusaur-Gmax":{types:["Grass","Poison"],bs:{hp:80,at:82,df:83,sa:100,sd:100,sp:80},weightkg:0,abilities:{0:"Overgrow"},baseSpecies:"Venusaur"},"Weezing-Galar":{types:["Poison","Fairy"],bs:{hp:65,at:90,df:120,sa:85,sd:70,sp:60},weightkg:16,abilities:{0:"Levitate"},baseSpecies:"Weezing"},Wooloo:{types:["Normal"],bs:{hp:42,at:40,df:55,sa:40,sd:45,sp:48},weightkg:6,abilities:{0:"Fluffy"},nfe:!0},"Yamask-Galar":{types:["Ground","Ghost"],bs:{hp:38,at:55,df:85,sa:30,sd:65,sp:30},weightkg:1.5,abilities:{0:"Wandering Spirit"},nfe:!0,baseSpecies:"Yamask"},Yamper:{types:["Electric"],bs:{hp:59,at:45,df:50,sa:40,sd:50,sp:26},weightkg:13.5,abilities:{0:"Ball Fetch"},nfe:!0},Zacian:{types:["Fairy"],bs:{hp:92,at:130,df:115,sa:80,sd:115,sp:138},weightkg:110,abilities:{0:"Intrepid Sword"},gender:"N",otherFormes:["Zacian-Crowned"]},"Zacian-Crowned":{types:["Fairy","Steel"],bs:{hp:92,at:170,df:115,sa:80,sd:115,sp:148},weightkg:355,abilities:{0:"Intrepid Sword"},baseSpecies:"Zacian",gender:"N"},Zamazenta:{types:["Fighting"],bs:{hp:92,at:130,df:115,sa:80,sd:115,sp:138},weightkg:210,abilities:{0:"Dauntless Shield"},gender:"N",otherFormes:["Zamazenta-Crowned"]},"Zamazenta-Crowned":{types:["Fighting","Steel"],bs:{hp:92,at:130,df:145,sa:80,sd:145,sp:128},weightkg:785,abilities:{0:"Dauntless Shield"},baseSpecies:"Zamazenta",gender:"N"},"Zapdos-Galar":{types:["Fighting","Flying"],bs:{hp:90,at:125,df:90,sa:85,sd:90,sp:100},weightkg:58.2,abilities:{0:"Defiant"},gender:"N",baseSpecies:"Zapdos"},Zarude:{types:["Dark","Grass"],bs:{hp:105,at:120,df:105,sa:70,sd:95,sp:105},weightkg:70,abilities:{0:"Leaf Guard"},gender:"N",otherFormes:["Zarude-Dada"]},"Zarude-Dada":{types:["Dark","Grass"],bs:{hp:105,at:120,df:105,sa:70,sd:95,sp:105},weightkg:70,abilities:{0:"Leaf Guard"},baseSpecies:"Zarude",gender:"N"},"Zigzagoon-Galar":{types:["Dark","Normal"],bs:{hp:38,at:30,df:41,sa:30,sd:41,sp:60},weightkg:17.5,abilities:{0:"Pickup"},nfe:!0,baseSpecies:"Zigzagoon"}});delete y["Pikachu-Starter"],delete y["Eevee-Starter"];var v=(0,f.extend)(!0,{},y,{Bisharp:{nfe:!0},Cresselia:{bs:{df:110,sd:120}},Dunsparce:{nfe:!0},Girafarig:{nfe:!0},Primeape:{nfe:!0},Tauros:{otherFormes:["Tauros-Paldea-Aqua","Tauros-Paldea-Blaze","Tauros-Paldea-Combat"]},Wooper:{otherFormes:["Wooper-Paldea"]},Zacian:{bs:{at:120}},"Zacian-Crowned":{bs:{at:150}},Zamazenta:{bs:{at:120}},"Zamazenta-Crowned":{bs:{at:120,df:140,sd:140}},Annihilape:{types:["Fighting","Ghost"],bs:{hp:110,at:115,df:80,sa:50,sd:90,sp:90},weightkg:56,abilities:{0:"Vital Spirit"}},Arboliva:{types:["Grass","Normal"],bs:{hp:78,at:69,df:90,sa:125,sd:109,sp:39},weightkg:48.2,abilities:{0:"Seed Sower"}},Arctibax:{types:["Dragon","Ice"],bs:{hp:90,at:95,df:66,sa:45,sd:65,sp:62},weightkg:30,abilities:{0:"Thermal Exchange"},nfe:!0},Armarouge:{types:["Fire","Psychic"],bs:{hp:85,at:60,df:100,sa:125,sd:80,sp:75},weightkg:85,abilities:{0:"Flash Fire"}},Baxcalibur:{types:["Dragon","Ice"],bs:{hp:115,at:145,df:92,sa:75,sd:86,sp:87},weightkg:210,abilities:{0:"Thermal Exchange"}},Bellibolt:{types:["Electric"],bs:{hp:109,at:64,df:91,sa:103,sd:83,sp:45},weightkg:113,abilities:{0:"Electromorphosis"}},Bombirdier:{types:["Flying","Dark"],bs:{hp:70,at:103,df:85,sa:60,sd:85,sp:82},weightkg:42.9,abilities:{0:"Big Pecks"}},Brambleghast:{types:["Grass","Ghost"],bs:{hp:55,at:115,df:70,sa:80,sd:70,sp:90},weightkg:6,abilities:{0:"Wind Rider"}},Bramblin:{types:["Grass","Ghost"],bs:{hp:40,at:65,df:30,sa:45,sd:35,sp:60},weightkg:.6,abilities:{0:"Wind Rider"},nfe:!0},"Brute Bonnet":{types:["Grass","Dark"],bs:{hp:111,at:127,df:99,sa:79,sd:99,sp:55},weightkg:21,gender:"N",abilities:{0:"Protosynthesis"}},Capsakid:{types:["Grass"],bs:{hp:52,at:62,df:40,sa:62,sd:40,sp:50},weightkg:3,abilities:{0:"Chlorophyll"},nfe:!0},Ceruledge:{types:["Fire","Ghost"],bs:{hp:75,at:125,df:80,sa:60,sd:100,sp:85},weightkg:62,abilities:{0:"Flash Fire"}},Cetitan:{types:["Ice"],bs:{hp:170,at:113,df:65,sa:45,sd:55,sp:73},weightkg:700,abilities:{0:"Thick Fat"}},Cetoddle:{types:["Ice"],bs:{hp:108,at:68,df:45,sa:30,sd:40,sp:43},weightkg:45,abilities:{0:"Thick Fat"},nfe:!0},Charcadet:{types:["Fire"],bs:{hp:40,at:50,df:40,sa:50,sd:40,sp:35},weightkg:10.5,abilities:{0:"Flash Fire"},nfe:!0},"Chi-Yu":{types:["Dark","Fire"],bs:{hp:55,at:80,df:80,sa:135,sd:120,sp:100},weightkg:4.9,gender:"N",abilities:{0:"Beads of Ruin"}},"Chien-Pao":{types:["Dark","Ice"],bs:{hp:80,at:120,df:80,sa:90,sd:65,sp:135},weightkg:152.2,gender:"N",abilities:{0:"Sword of Ruin"}},Clodsire:{types:["Poison","Ground"],bs:{hp:130,at:75,df:60,sa:45,sd:100,sp:20},weightkg:223,abilities:{0:"Poison Point"}},Crocalor:{types:["Fire"],bs:{hp:81,at:55,df:78,sa:90,sd:58,sp:49},weightkg:30.7,abilities:{0:"Blaze"},nfe:!0},Cyclizar:{types:["Dragon","Normal"],bs:{hp:70,at:95,df:65,sa:85,sd:65,sp:121},weightkg:63,abilities:{0:"Shed Skin"}},Dachsbun:{types:["Fairy"],bs:{hp:57,at:80,df:115,sa:50,sd:80,sp:95},weightkg:14.9,abilities:{0:"Well-Baked Body"}},Dolliv:{types:["Grass","Normal"],bs:{hp:52,at:53,df:60,sa:78,sd:78,sp:33},weightkg:11.9,abilities:{0:"Early Bird"},nfe:!0},Dondozo:{types:["Water"],bs:{hp:150,at:100,df:115,sa:65,sd:65,sp:35},weightkg:220,abilities:{0:"Unaware"}},Dudunsparce:{types:["Normal"],bs:{hp:125,at:100,df:80,sa:85,sd:75,sp:55},weightkg:39.2,abilities:{0:"Serene Grace"},otherFormes:["Dudunsparce-Three-Segment"]},"Dudunsparce-Three-Segment":{types:["Normal"],bs:{hp:125,at:100,df:80,sa:85,sd:75,sp:55},weightkg:47.4,abilities:{0:"Serene Grace"},baseSpecies:"Dudunsparce"},Espathra:{types:["Psychic"],bs:{hp:95,at:60,df:60,sa:101,sd:60,sp:105},weightkg:90,abilities:{0:"Opportunist"}},Farigiraf:{types:["Normal","Psychic"],bs:{hp:120,at:90,df:70,sa:110,sd:70,sp:60},weightkg:160,abilities:{0:"Cud Chew"}},Fidough:{types:["Fairy"],bs:{hp:37,at:55,df:70,sa:30,sd:55,sp:65},weightkg:10.9,abilities:{0:"Own Tempo"},nfe:!0},Finizen:{types:["Water"],bs:{hp:70,at:45,df:40,sa:45,sd:40,sp:75},weightkg:60.2,abilities:{0:"Water Veil"},nfe:!0},Flamigo:{types:["Flying","Fighting"],bs:{hp:82,at:115,df:74,sa:75,sd:64,sp:90},weightkg:37,abilities:{0:"Scrappy"}},Flittle:{types:["Psychic"],bs:{hp:30,at:35,df:30,sa:55,sd:30,sp:75},weightkg:1.5,abilities:{0:"Anticipation"},nfe:!0},Floragato:{types:["Grass"],bs:{hp:61,at:80,df:63,sa:60,sd:63,sp:83},weightkg:12.2,abilities:{0:"Overgrow"},nfe:!0},"Flutter Mane":{types:["Ghost","Fairy"],bs:{hp:55,at:55,df:55,sa:135,sd:135,sp:135},weightkg:4,gender:"N",abilities:{0:"Protosynthesis"}},Frigibax:{types:["Dragon","Ice"],bs:{hp:65,at:75,df:45,sa:35,sd:45,sp:55},weightkg:17,abilities:{0:"Thermal Exchange"},nfe:!0},Fuecoco:{types:["Fire"],bs:{hp:67,at:45,df:59,sa:63,sd:40,sp:36},weightkg:9.8,abilities:{0:"Blaze"},nfe:!0},Garganacl:{types:["Rock"],bs:{hp:100,at:100,df:130,sa:45,sd:90,sp:35},weightkg:240,abilities:{0:"Purifying Salt"}},Gholdengo:{types:["Steel","Ghost"],bs:{hp:87,at:60,df:95,sa:133,sd:91,sp:84},weightkg:30,gender:"N",abilities:{0:"Good as Gold"}},Gimmighoul:{types:["Ghost"],bs:{hp:45,at:30,df:70,sa:75,sd:70,sp:10},weightkg:5,gender:"N",abilities:{0:"Rattled"},nfe:!0,otherFormes:["Gimmighoul-Roaming"]},"Gimmighoul-Roaming":{types:["Ghost"],bs:{hp:45,at:30,df:25,sa:75,sd:45,sp:80},weightkg:.1,gender:"N",abilities:{0:"Run Away"},nfe:!0,baseSpecies:"Gimmighoul"},Glimmet:{types:["Rock","Poison"],bs:{hp:48,at:35,df:42,sa:105,sd:60,sp:60},weightkg:8,abilities:{0:"Toxic Debris"},nfe:!0},Glimmora:{types:["Rock","Poison"],bs:{hp:83,at:55,df:90,sa:130,sd:81,sp:86},weightkg:45,abilities:{0:"Toxic Debris"}},Grafaiai:{types:["Poison","Normal"],bs:{hp:63,at:95,df:65,sa:80,sd:72,sp:110},weightkg:27.2,abilities:{0:"Unburden"}},"Great Tusk":{types:["Ground","Fighting"],bs:{hp:115,at:131,df:131,sa:53,sd:53,sp:87},weightkg:320,gender:"N",abilities:{0:"Protosynthesis"}},Greavard:{types:["Ghost"],bs:{hp:50,at:61,df:60,sa:30,sd:55,sp:34},weightkg:35,abilities:{0:"Pickup"},nfe:!0},Houndstone:{types:["Ghost"],bs:{hp:72,at:101,df:100,sa:50,sd:97,sp:68},weightkg:15,abilities:{0:"Sand Rush"}},"Iron Bundle":{types:["Ice","Water"],bs:{hp:56,at:80,df:114,sa:124,sd:60,sp:136},weightkg:11,gender:"N",abilities:{0:"Quark Drive"}},"Iron Hands":{types:["Fighting","Electric"],bs:{hp:154,at:140,df:108,sa:50,sd:68,sp:50},weightkg:380.7,gender:"N",abilities:{0:"Quark Drive"}},"Iron Jugulis":{types:["Dark","Flying"],bs:{hp:94,at:80,df:86,sa:122,sd:80,sp:108},weightkg:111,gender:"N",abilities:{0:"Quark Drive"}},"Iron Leaves":{types:["Grass","Psychic"],bs:{hp:90,at:130,df:88,sa:70,sd:108,sp:104},weightkg:125,gender:"N",abilities:{0:"Quark Drive"}},"Iron Moth":{types:["Fire","Poison"],bs:{hp:80,at:70,df:60,sa:140,sd:110,sp:110},weightkg:36,gender:"N",abilities:{0:"Quark Drive"}},"Iron Thorns":{types:["Rock","Electric"],bs:{hp:100,at:134,df:110,sa:70,sd:84,sp:72},weightkg:303,gender:"N",abilities:{0:"Quark Drive"}},"Iron Treads":{types:["Ground","Steel"],bs:{hp:90,at:112,df:120,sa:72,sd:70,sp:106},weightkg:240,gender:"N",abilities:{0:"Quark Drive"}},"Iron Valiant":{types:["Fairy","Fighting"],bs:{hp:74,at:130,df:90,sa:120,sd:60,sp:116},weightkg:35,gender:"N",abilities:{0:"Quark Drive"}},Kilowattrel:{types:["Electric","Flying"],bs:{hp:70,at:70,df:60,sa:105,sd:60,sp:125},weightkg:38.6,abilities:{0:"Wind Power"}},Kingambit:{types:["Dark","Steel"],bs:{hp:100,at:135,df:120,sa:60,sd:85,sp:50},weightkg:120,abilities:{0:"Defiant"}},Klawf:{types:["Rock"],bs:{hp:70,at:100,df:115,sa:35,sd:55,sp:75},weightkg:79,abilities:{0:"Anger Shell"}},Koraidon:{types:["Fighting","Dragon"],bs:{hp:100,at:135,df:115,sa:85,sd:100,sp:135},weightkg:303,gender:"N",abilities:{0:"Orichalcum Pulse"}},Lechonk:{types:["Normal"],bs:{hp:54,at:45,df:40,sa:35,sd:45,sp:35},weightkg:10.2,abilities:{0:"Aroma Veil"},nfe:!0},Lokix:{types:["Bug","Dark"],bs:{hp:71,at:102,df:78,sa:52,sd:55,sp:92},weightkg:17.5,abilities:{0:"Swarm"}},Mabosstiff:{types:["Dark"],bs:{hp:80,at:120,df:90,sa:60,sd:70,sp:85},weightkg:61,abilities:{0:"Intimidate"}},Maschiff:{types:["Dark"],bs:{hp:60,at:78,df:60,sa:40,sd:51,sp:51},weightkg:16,abilities:{0:"Intimidate"},nfe:!0},Maushold:{types:["Normal"],bs:{hp:74,at:75,df:70,sa:65,sd:75,sp:111},weightkg:2.3,gender:"N",abilities:{0:"Friend Guard"},otherFormes:["Maushold-Four"]},"Maushold-Four":{types:["Normal"],bs:{hp:74,at:75,df:70,sa:65,sd:75,sp:111},weightkg:2.8,gender:"N",abilities:{0:"Friend Guard"},baseSpecies:"Maushold"},Meowscarada:{types:["Grass","Dark"],bs:{hp:76,at:110,df:70,sa:81,sd:70,sp:123},weightkg:31.2,abilities:{0:"Overgrow"}},Miraidon:{types:["Electric","Dragon"],bs:{hp:100,at:85,df:100,sa:135,sd:115,sp:135},weightkg:240,gender:"N",abilities:{0:"Hadron Engine"}},Nacli:{types:["Rock"],bs:{hp:55,at:55,df:75,sa:35,sd:35,sp:25},weightkg:16,abilities:{0:"Purifying Salt"},nfe:!0},Naclstack:{types:["Rock"],bs:{hp:60,at:60,df:100,sa:35,sd:65,sp:35},weightkg:105,abilities:{0:"Purifying Salt"},nfe:!0},Nymble:{types:["Bug"],bs:{hp:33,at:46,df:40,sa:21,sd:25,sp:45},weightkg:1,abilities:{0:"Swarm"},nfe:!0},Oinkologne:{types:["Normal"],bs:{hp:110,at:100,df:75,sa:59,sd:80,sp:65},weightkg:120,abilities:{0:"Lingering Aroma"},otherFormes:["Oinkologne-F"]},"Oinkologne-F":{types:["Normal"],bs:{hp:115,at:90,df:70,sa:59,sd:90,sp:65},weightkg:120,abilities:{0:"Aroma Veil"},baseSpecies:"Oinkologne"},Orthworm:{types:["Steel"],bs:{hp:70,at:85,df:145,sa:60,sd:55,sp:65},weightkg:310,abilities:{0:"Earth Eater"}},Palafin:{types:["Water"],bs:{hp:100,at:70,df:72,sa:53,sd:62,sp:100},weightkg:60.2,abilities:{0:"Zero to Hero"},otherFormes:["Palafin-Hero"]},"Palafin-Hero":{types:["Water"],bs:{hp:100,at:160,df:97,sa:106,sd:87,sp:100},weightkg:97.4,abilities:{0:"Zero to Hero"},baseSpecies:"Palafin"},Pawmi:{types:["Electric"],bs:{hp:45,at:50,df:20,sa:40,sd:25,sp:60},weightkg:2.5,abilities:{0:"Static"},nfe:!0},Pawmo:{types:["Electric","Fighting"],bs:{hp:60,at:75,df:40,sa:50,sd:40,sp:85},weightkg:6.5,abilities:{0:"Volt Absorb"},nfe:!0},Pawmot:{types:["Electric","Fighting"],bs:{hp:70,at:115,df:70,sa:70,sd:60,sp:105},weightkg:41,abilities:{0:"Volt Absorb"}},Quaquaval:{types:["Water","Fighting"],bs:{hp:85,at:120,df:80,sa:85,sd:75,sp:85},weightkg:61.9,abilities:{0:"Torrent"}},Quaxly:{types:["Water"],bs:{hp:55,at:65,df:45,sa:50,sd:45,sp:50},weightkg:6.1,abilities:{0:"Torrent"},nfe:!0},Quaxwell:{types:["Water"],bs:{hp:70,at:85,df:65,sa:65,sd:60,sp:65},weightkg:21.5,abilities:{0:"Torrent"},nfe:!0},Rabsca:{types:["Bug","Psychic"],bs:{hp:75,at:50,df:85,sa:115,sd:100,sp:45},weightkg:3.5,abilities:{0:"Synchronize"}},Rellor:{types:["Bug"],bs:{hp:41,at:50,df:60,sa:31,sd:58,sp:30},weightkg:1,abilities:{0:"Compound Eyes"},nfe:!0},Revavroom:{types:["Steel","Poison"],bs:{hp:80,at:119,df:90,sa:54,sd:67,sp:90},weightkg:120,abilities:{0:"Overcoat"}},"Roaring Moon":{types:["Dragon","Dark"],bs:{hp:105,at:139,df:71,sa:55,sd:101,sp:119},weightkg:380,gender:"N",abilities:{0:"Protosynthesis"}},"Sandy Shocks":{types:["Electric","Ground"],bs:{hp:85,at:81,df:97,sa:121,sd:85,sp:101},weightkg:60,gender:"N",abilities:{0:"Protosynthesis"}},Scovillain:{types:["Grass","Fire"],bs:{hp:65,at:108,df:65,sa:108,sd:65,sp:75},weightkg:15,abilities:{0:"Chlorophyll"}},"Scream Tail":{types:["Fairy","Psychic"],bs:{hp:115,at:65,df:99,sa:65,sd:115,sp:111},weightkg:8,gender:"N",abilities:{0:"Protosynthesis"}},Shroodle:{types:["Poison","Normal"],bs:{hp:40,at:65,df:35,sa:40,sd:35,sp:75},weightkg:.7,abilities:{0:"Unburden"},nfe:!0},Skeledirge:{types:["Fire","Ghost"],bs:{hp:104,at:75,df:100,sa:110,sd:75,sp:66},weightkg:326.5,abilities:{0:"Blaze"}},"Slither Wing":{types:["Bug","Fighting"],bs:{hp:85,at:135,df:79,sa:85,sd:105,sp:81},weightkg:92,gender:"N",abilities:{0:"Protosynthesis"}},Smoliv:{types:["Grass","Normal"],bs:{hp:41,at:35,df:45,sa:58,sd:51,sp:30},weightkg:6.5,abilities:{0:"Early Bird"},nfe:!0},Spidops:{types:["Bug"],bs:{hp:60,at:79,df:92,sa:52,sd:86,sp:35},weightkg:16.5,abilities:{0:"Insomnia"}},Sprigatito:{types:["Grass"],bs:{hp:40,at:61,df:54,sa:45,sd:45,sp:65},weightkg:4.1,abilities:{0:"Overgrow"},nfe:!0},Squawkabilly:{types:["Normal","Flying"],bs:{hp:82,at:96,df:51,sa:45,sd:51,sp:92},weightkg:2.4,abilities:{0:"Intimidate"},otherFormes:["Squawkabilly-Blue","Squawkabilly-White","Squawkabilly-Yellow"]},"Squawkabilly-Blue":{types:["Normal","Flying"],bs:{hp:82,at:96,df:51,sa:45,sd:51,sp:92},weightkg:2.4,abilities:{0:"Intimidate"},baseSpecies:"Squawkabilly"},"Squawkabilly-White":{types:["Normal","Flying"],bs:{hp:82,at:96,df:51,sa:45,sd:51,sp:92},weightkg:2.4,abilities:{0:"Intimidate"},baseSpecies:"Squawkabilly"},"Squawkabilly-Yellow":{types:["Normal","Flying"],bs:{hp:82,at:96,df:51,sa:45,sd:51,sp:92},weightkg:2.4,abilities:{0:"Intimidate"},baseSpecies:"Squawkabilly"},Tadbulb:{types:["Electric"],bs:{hp:61,at:31,df:41,sa:59,sd:35,sp:45},weightkg:.4,abilities:{0:"Own Tempo"},nfe:!0},Tandemaus:{types:["Normal"],bs:{hp:50,at:50,df:45,sa:40,sd:45,sp:75},weightkg:1.8,gender:"N",abilities:{0:"Run Away"},nfe:!0},Tarountula:{types:["Bug"],bs:{hp:35,at:41,df:45,sa:29,sd:40,sp:20},weightkg:4,abilities:{0:"Insomnia"},nfe:!0},Tatsugiri:{types:["Dragon","Water"],bs:{hp:68,at:50,df:60,sa:120,sd:95,sp:82},weightkg:8,abilities:{0:"Commander"}},"Tauros-Paldea-Aqua":{types:["Fighting","Water"],bs:{hp:75,at:110,df:105,sa:30,sd:70,sp:100},weightkg:88.4,abilities:{0:"Intimidate"},baseSpecies:"Tauros"},"Tauros-Paldea-Blaze":{types:["Fighting","Fire"],bs:{hp:75,at:110,df:105,sa:30,sd:70,sp:100},weightkg:88.4,abilities:{0:"Intimidate"},baseSpecies:"Tauros"},"Tauros-Paldea-Combat":{types:["Fighting"],bs:{hp:75,at:110,df:105,sa:30,sd:70,sp:100},weightkg:88.4,abilities:{0:"Intimidate"},baseSpecies:"Tauros"},"Ting-Lu":{types:["Dark","Ground"],bs:{hp:155,at:110,df:125,sa:55,sd:80,sp:45},weightkg:699.7,gender:"N",abilities:{0:"Vessel of Ruin"}},Tinkatink:{types:["Fairy","Steel"],bs:{hp:50,at:45,df:45,sa:35,sd:64,sp:58},weightkg:8.9,abilities:{0:"Mold Breaker"},nfe:!0},Tinkaton:{types:["Fairy","Steel"],bs:{hp:85,at:75,df:77,sa:70,sd:105,sp:94},weightkg:112.8,abilities:{0:"Mold Breaker"}},Tinkatuff:{types:["Fairy","Steel"],bs:{hp:65,at:55,df:55,sa:45,sd:82,sp:78},weightkg:59.1,abilities:{0:"Mold Breaker"},nfe:!0},Toedscool:{types:["Ground","Grass"],bs:{hp:40,at:40,df:35,sa:50,sd:100,sp:70},weightkg:33,abilities:{0:"Mycelium Might"},nfe:!0},Toedscruel:{types:["Ground","Grass"],bs:{hp:80,at:70,df:65,sa:80,sd:120,sp:100},weightkg:58,abilities:{0:"Mycelium Might"}},Varoom:{types:["Steel","Poison"],bs:{hp:45,at:70,df:63,sa:30,sd:45,sp:47},weightkg:35,abilities:{0:"Overcoat"},nfe:!0},Veluza:{types:["Water","Psychic"],bs:{hp:90,at:102,df:73,sa:78,sd:65,sp:70},weightkg:90,abilities:{0:"Mold Breaker"}},"Walking Wake":{types:["Water","Dragon"],bs:{hp:99,at:83,df:91,sa:125,sd:83,sp:109},weightkg:280,gender:"N",abilities:{0:"Protosynthesis"}},Wattrel:{types:["Electric","Flying"],bs:{hp:40,at:40,df:35,sa:55,sd:40,sp:70},weightkg:3.6,abilities:{0:"Wind Power"},nfe:!0},Wiglett:{types:["Water"],bs:{hp:10,at:55,df:25,sa:35,sd:25,sp:95},weightkg:1.8,abilities:{0:"Gooey"},nfe:!0},"Wo-Chien":{types:["Dark","Grass"],bs:{hp:85,at:85,df:100,sa:95,sd:135,sp:70},weightkg:74.2,gender:"N",abilities:{0:"Tablets of Ruin"}},"Wooper-Paldea":{types:["Poison","Ground"],bs:{hp:55,at:45,df:45,sa:25,sd:25,sp:15},weightkg:8.5,abilities:{0:"Poison Point"},baseSpecies:"Wooper",nfe:!0},Wugtrio:{types:["Water"],bs:{hp:35,at:100,df:50,sa:50,sd:70,sp:120},weightkg:5.4,abilities:{0:"Gooey"}}},{Arcanine:{otherFormes:["Arcanine-Hisui"]},Avalugg:{otherFormes:["Avalugg-Hisui"]},Basculin:{otherFormes:["Basculin-Blue-Striped","Basculin-White-Striped"]},Braviary:{otherFormes:["Braviary-Hisui"]},Decidueye:{otherFormes:["Decidueye-Hisui"]},Dialga:{otherFormes:["Dialga-Origin"]},Electrode:{otherFormes:["Electrode-Hisui"]},Goodra:{otherFormes:["Goodra-Hisui"]},Growlithe:{otherFormes:["Growlithe-Hisui"]},Lilligant:{otherFormes:["Lilligant-Hisui"]},Palkia:{otherFormes:["Palkia-Origin"]},Qwilfish:{otherFormes:["Qwilfish-Hisui"]},Samurott:{otherFormes:["Samurott-Hisui"]},Sliggoo:{otherFormes:["Sliggoo-Hisui"]},Sneasel:{otherFormes:["Sneasel-Hisui"]},Stantler:{nfe:!0},Typhlosion:{otherFormes:["Typhlosion-Hisui"]},Ursaring:{nfe:!0},Voltorb:{otherFormes:["Voltorb-Hisui"]},Zoroark:{otherFormes:["Zoroark-Hisui"]},Zorua:{otherFormes:["Zorua-Hisui"]},"Arcanine-Hisui":{types:["Fire","Rock"],bs:{hp:95,at:115,df:80,sa:95,sd:80,sp:90},weightkg:168,abilities:{0:"Intimidate"},baseSpecies:"Arcanine"},"Avalugg-Hisui":{types:["Ice","Rock"],bs:{hp:95,at:127,df:184,sa:34,sd:36,sp:38},weightkg:262.4,abilities:{0:"Strong Jaw"},baseSpecies:"Avalugg"},Basculegion:{types:["Water","Ghost"],bs:{hp:120,at:112,df:65,sa:80,sd:75,sp:78},weightkg:110,abilities:{0:"Swift Swim"},otherFormes:["Basculegion-F"]},"Basculegion-F":{types:["Water","Ghost"],bs:{hp:120,at:92,df:65,sa:100,sd:75,sp:78},weightkg:110,abilities:{0:"Swift Swim"},baseSpecies:"Basculegion"},"Basculin-White-Striped":{types:["Water"],bs:{hp:70,at:92,df:65,sa:80,sd:55,sp:98},weightkg:18,abilities:{0:"Rattled"},baseSpecies:"Basculin",nfe:!0},"Braviary-Hisui":{types:["Psychic","Flying"],bs:{hp:110,at:83,df:70,sa:112,sd:70,sp:65},weightkg:43.4,abilities:{0:"Keen Eye"},baseSpecies:"Braviary"},"Decidueye-Hisui":{types:["Grass","Fighting"],bs:{hp:88,at:112,df:80,sa:95,sd:95,sp:60},weightkg:37,abilities:{0:"Overgrow"},baseSpecies:"Decidueye"},"Dialga-Origin":{types:["Steel","Dragon"],bs:{hp:100,at:100,df:120,sa:150,sd:120,sp:90},weightkg:850,gender:"N",abilities:{0:"Pressure"},baseSpecies:"Dialga"},"Electrode-Hisui":{types:["Electric","Grass"],bs:{hp:60,at:50,df:70,sa:80,sd:80,sp:150},weightkg:71,gender:"N",abilities:{0:"Soundproof"},baseSpecies:"Electrode"},Enamorus:{types:["Fairy","Flying"],bs:{hp:74,at:115,df:70,sa:135,sd:80,sp:106},weightkg:48,abilities:{0:"Cute Charm"},otherFormes:["Enamorus-Therian"]},"Enamorus-Therian":{types:["Fairy","Flying"],bs:{hp:74,at:115,df:110,sa:135,sd:100,sp:46},weightkg:48,abilities:{0:"Overcoat"},baseSpecies:"Enamorus"},"Goodra-Hisui":{types:["Steel","Dragon"],bs:{hp:80,at:100,df:100,sa:110,sd:150,sp:60},weightkg:334.1,abilities:{0:"Sap Sipper"},baseSpecies:"Goodra"},"Growlithe-Hisui":{types:["Fire","Rock"],bs:{hp:60,at:75,df:45,sa:65,sd:50,sp:55},weightkg:22.7,abilities:{0:"Intimidate"},baseSpecies:"Growlithe",nfe:!0},Kleavor:{types:["Bug","Rock"],bs:{hp:70,at:130,df:95,sa:45,sd:75,sp:85},weightkg:89,abilities:{0:"Swarm"}},"Lilligant-Hisui":{types:["Grass","Fighting"],bs:{hp:70,at:105,df:75,sa:50,sd:75,sp:105},weightkg:19.2,abilities:{0:"Chlorophyll"},baseSpecies:"Lilligant"},Overqwil:{types:["Dark","Poison"],bs:{hp:85,at:115,df:95,sa:65,sd:65,sp:85},weightkg:3.9,abilities:{0:"Poison Point"}},"Palkia-Origin":{types:["Water","Dragon"],bs:{hp:90,at:100,df:100,sa:150,sd:120,sp:120},weightkg:660,gender:"N",abilities:{0:"Pressure"},baseSpecies:"Palkia"},"Qwilfish-Hisui":{types:["Dark","Poison"],bs:{hp:65,at:95,df:85,sa:55,sd:55,sp:85},weightkg:3.9,abilities:{0:"Poison Point"},baseSpecies:"Qwilfish",nfe:!0},"Samurott-Hisui":{types:["Water","Dark"],bs:{hp:90,at:108,df:80,sa:100,sd:65,sp:85},weightkg:58.2,abilities:{0:"Torrent"},baseSpecies:"Samurott"},"Sliggoo-Hisui":{types:["Steel","Dragon"],bs:{hp:58,at:75,df:83,sa:83,sd:113,sp:40},weightkg:68.5,abilities:{0:"Sap Sipper"},baseSpecies:"Sliggoo",nfe:!0},"Sneasel-Hisui":{types:["Fighting","Poison"],bs:{hp:55,at:95,df:55,sa:35,sd:75,sp:115},weightkg:27,abilities:{0:"Inner Focus"},baseSpecies:"Sneasel",nfe:!0},Sneasler:{types:["Fighting","Poison"],bs:{hp:80,at:130,df:60,sa:40,sd:80,sp:120},weightkg:43,abilities:{0:"Pressure"}},"Typhlosion-Hisui":{types:["Fire","Ghost"],bs:{hp:73,at:84,df:78,sa:119,sd:85,sp:95},weightkg:69.8,abilities:{0:"Blaze"},baseSpecies:"Typhlosion"},Ursaluna:{types:["Ground","Normal"],bs:{hp:130,at:140,df:105,sa:45,sd:80,sp:50},weightkg:290,abilities:{0:"Guts"}},"Voltorb-Hisui":{types:["Electric","Grass"],bs:{hp:40,at:30,df:50,sa:55,sd:55,sp:100},weightkg:13,gender:"N",abilities:{0:"Soundproof"},baseSpecies:"Voltorb",nfe:!0},Wyrdeer:{types:["Normal","Psychic"],bs:{hp:103,at:105,df:72,sa:105,sd:75,sp:65},weightkg:95.1,abilities:{0:"Intimidate"}},"Zoroark-Hisui":{types:["Normal","Ghost"],bs:{hp:55,at:100,df:60,sa:125,sd:60,sp:110},weightkg:73,abilities:{0:"Illusion"},baseSpecies:"Zoroark"},"Zorua-Hisui":{types:["Normal","Ghost"],bs:{hp:35,at:60,df:40,sa:85,sd:40,sp:70},weightkg:12.5,abilities:{0:"Illusion"},baseSpecies:"Zorua",nfe:!0}});t.SPECIES=[{},c,u,p,g,d,h,m,y,v];var b=function(){function e(e){this.gen=e}return e.prototype.get=function(e){return w[this.gen][e]},e.prototype[Symbol.iterator]=function(){var e,t,s,a,i;return r(this,(function(r){switch(r.label){case 0:for(s in e=w[this.gen],t=[],e)t.push(s);a=0,r.label=1;case 1:return a<t.length?(s=t[a])in e?(i=s,[4,this.get(i)]):[3,3]:[3,4];case 2:r.sent(),r.label=3;case 3:return a++,[3,1];case 4:return[2]}}))},e}();t.Species=b;var P=function(){function e(t,s){this.kind="Species",this.id=(0,f.toID)(t),this.name=t;var a={};a.hp=s.bs.hp,a.atk=s.bs.at,a.def=s.bs.df,a.spa=S>=2?s.bs.sa:s.bs.sl,a.spd=S>=2?s.bs.sd:s.bs.sl,a.spe=s.bs.sp,this.baseStats=a,s.otherFormes&&(this.otherFormes=s.otherFormes,S>=9&&!["toxtricity","urshifu"].includes(this.id)&&(this.otherFormes=this.otherFormes.filter((function(e){return!e.endsWith("-Gmax")})),this.otherFormes.length||(this.otherFormes=void 0),this.otherFormes&&(this.otherFormes=n([],o(new Set(this.otherFormes)),!1)))),(0,f.assignWithout)(this,s,e.EXCLUDE)}return e.EXCLUDE=new Set(["bs","otherFormes"]),e}(),w=[],S=0;try{for(var k=l(t.SPECIES),T=k.next();!T.done;T=k.next()){var x=T.value,M={};for(var D in x){S>=2&&x[D].bs.sl&&delete x[D].bs.sl;var A=new P(D,x[D]);M[A.id]=A}w.push(M),S++}}catch(e){a={error:e}}finally{try{T&&!T.done&&(i=k.return)&&i.call(k)}finally{if(a)throw a.error}}},7638:function(e,t,s){"use strict";var a,i,r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,s=1,a=arguments.length;s<a;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},r.apply(this,arguments)},o=this&&this.__generator||function(e,t){var s,a,i,r,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function n(n){return function(l){return function(n){if(s)throw new TypeError("Generator is already executing.");for(;r&&(r=0,n[0]&&(o=0)),o;)try{if(s=1,a&&(i=2&n[0]?a.return:n[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,n[1])).done)return i;switch(a=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,a=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],a=0}finally{s=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,l])}}},n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,s=t&&e[t],a=0;if(s)return s.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};t.__esModule=!0,t.Types=t.TYPE_CHART=void 0;var l=s(7094),f={"???":{Normal:1,Grass:1,Fire:1,Water:1,Electric:1,Ice:1,Flying:1,Bug:1,Poison:1,Ground:1,Rock:1,Fighting:1,Psychic:1,Ghost:1,Dragon:1},Normal:{"???":1,Normal:1,Grass:1,Fire:1,Water:1,Electric:1,Ice:1,Flying:1,Bug:1,Poison:1,Ground:1,Rock:.5,Fighting:1,Psychic:1,Ghost:0,Dragon:1},Grass:{"???":1,Normal:1,Grass:.5,Fire:.5,Water:2,Electric:1,Ice:1,Flying:.5,Bug:.5,Poison:.5,Ground:2,Rock:2,Fighting:1,Psychic:1,Ghost:1,Dragon:.5},Fire:{"???":1,Normal:1,Grass:2,Fire:.5,Water:.5,Electric:1,Ice:2,Flying:1,Bug:2,Poison:1,Ground:1,Rock:.5,Fighting:1,Psychic:1,Ghost:1,Dragon:.5},Water:{"???":1,Normal:1,Grass:.5,Fire:2,Water:.5,Electric:1,Ice:1,Flying:1,Bug:1,Poison:1,Ground:2,Rock:2,Fighting:1,Psychic:1,Ghost:1,Dragon:.5},Electric:{"???":1,Normal:1,Grass:.5,Fire:1,Water:2,Electric:.5,Ice:1,Flying:2,Bug:1,Poison:1,Ground:0,Rock:1,Fighting:1,Psychic:1,Ghost:1,Dragon:.5},Ice:{"???":1,Normal:1,Grass:2,Fire:1,Water:.5,Electric:1,Ice:.5,Flying:2,Bug:1,Poison:1,Ground:2,Rock:1,Fighting:1,Psychic:1,Ghost:1,Dragon:2},Flying:{"???":1,Normal:1,Grass:2,Fire:1,Water:1,Electric:.5,Ice:1,Flying:1,Bug:2,Poison:1,Ground:1,Rock:.5,Fighting:2,Psychic:1,Ghost:1,Dragon:1},Bug:{"???":1,Normal:1,Grass:2,Fire:.5,Water:1,Electric:1,Ice:1,Flying:.5,Bug:1,Poison:2,Ground:1,Rock:1,Fighting:.5,Psychic:2,Ghost:.5,Dragon:1},Poison:{"???":1,Normal:1,Grass:2,Fire:1,Water:1,Electric:1,Ice:1,Flying:1,Bug:2,Poison:.5,Ground:.5,Rock:.5,Fighting:1,Psychic:1,Ghost:.5,Dragon:1},Ground:{"???":1,Normal:1,Grass:.5,Fire:2,Water:1,Electric:2,Ice:1,Flying:0,Bug:.5,Poison:2,Ground:1,Rock:2,Fighting:1,Psychic:1,Ghost:1,Dragon:1},Rock:{"???":1,Normal:1,Grass:1,Fire:2,Water:1,Electric:1,Ice:2,Flying:2,Bug:2,Poison:1,Ground:.5,Rock:1,Fighting:.5,Psychic:1,Ghost:1,Dragon:1},Fighting:{"???":1,Normal:2,Grass:1,Fire:1,Water:1,Electric:1,Ice:2,Flying:.5,Bug:.5,Poison:.5,Ground:1,Rock:2,Fighting:1,Psychic:.5,Ghost:0,Dragon:1},Psychic:{"???":1,Normal:1,Grass:1,Fire:1,Water:1,Electric:1,Ice:1,Flying:1,Bug:1,Poison:2,Ground:1,Rock:1,Fighting:2,Psychic:.5,Ghost:1,Dragon:1},Ghost:{"???":1,Normal:0,Grass:1,Fire:1,Water:1,Electric:1,Ice:1,Flying:1,Bug:1,Poison:1,Ground:1,Rock:1,Fighting:1,Psychic:0,Ghost:2,Dragon:1},Dragon:{"???":1,Normal:1,Grass:1,Fire:1,Water:1,Electric:1,Ice:1,Flying:1,Bug:1,Poison:1,Ground:1,Rock:1,Fighting:1,Psychic:1,Ghost:1,Dragon:2}},c=(0,l.extend)(!0,{},f,{"???":{Dark:1,Steel:1},Normal:{Dark:1,Steel:.5},Grass:{Dark:1,Steel:.5},Fire:{Dark:1,Steel:2},Water:{Dark:1,Steel:1},Electric:{Dark:1,Steel:1},Ice:{Fire:.5,Dark:1,Steel:.5},Flying:{Dark:1,Steel:.5},Bug:{Poison:.5,Dark:2,Steel:.5},Poison:{Bug:1,Dark:1,Steel:0},Ground:{Dark:1,Steel:2},Rock:{Dark:1,Steel:.5},Fighting:{Dark:2,Steel:2},Psychic:{Dark:0,Steel:.5},Ghost:{Psychic:2,Dark:.5,Steel:.5},Dragon:{Dark:1,Steel:.5},Dark:{"???":1,Normal:1,Grass:1,Fire:1,Water:1,Electric:1,Ice:1,Flying:1,Bug:1,Poison:1,Ground:1,Rock:1,Fighting:.5,Psychic:2,Ghost:2,Dragon:1,Dark:.5,Steel:.5},Steel:{"???":1,Normal:1,Grass:1,Fire:.5,Water:.5,Electric:.5,Ice:2,Flying:1,Bug:1,Poison:1,Ground:1,Rock:2,Fighting:1,Psychic:1,Ghost:1,Dragon:1,Dark:1,Steel:.5}}),u=c,p=c,g=c,d=(0,l.extend)(!0,{},c,{"???":{Fairy:1},Normal:{Fairy:1},Grass:{Fairy:1},Fire:{Fairy:1},Water:{Fairy:1},Electric:{Fairy:1},Ice:{Fairy:1},Flying:{Fairy:1},Bug:{Fairy:.5},Poison:{Fairy:2},Ground:{Fairy:1},Rock:{Fairy:1},Fighting:{Fairy:.5},Psychic:{Fairy:1},Ghost:{Steel:1,Fairy:1},Dragon:{Fairy:0},Dark:{Steel:1,Fairy:.5},Steel:{Fairy:2},Fairy:{"???":1,Normal:1,Grass:1,Fire:.5,Water:1,Electric:1,Ice:1,Flying:1,Bug:1,Poison:.5,Ground:1,Rock:1,Fighting:2,Psychic:1,Ghost:1,Dragon:2,Dark:2,Steel:.5,Fairy:1}}),h=d,m=h,y=m;t.TYPE_CHART=[{},f,c,u,p,g,d,h,m,y];var v=function(){function e(e){this.gen=e}return e.prototype.get=function(e){return P[this.gen][e]},e.prototype[Symbol.iterator]=function(){var e,t,s,a,i;return o(this,(function(r){switch(r.label){case 0:for(s in e=P[this.gen],t=[],e)t.push(s);a=0,r.label=1;case 1:return a<t.length?(s=t[a])in e?(i=s,[4,this.get(i)]):[3,3]:[3,4];case 2:r.sent(),r.label=3;case 3:return a++,[3,1];case 4:return[2]}}))},e}();t.Types=v;var b=function(e,t){this.kind="Type",this.id=(0,l.toID)(e),this.name=e,this.effectiveness=t},P=[];try{for(var w=n(t.TYPE_CHART),S=w.next();!S.done;S=w.next()){var k=S.value,T={};for(var x in k){var M=new b(x,r({},k[x]));T[M.id]=M}P.push(T)}}catch(e){a={error:e}}finally{try{S&&!S.done&&(i=w.return)&&i.call(w)}finally{if(a)throw a.error}}},1670:function(e,t,s){"use strict";var a=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o};t.__esModule=!0,t.getKOChance=t.getRecoil=t.getRecovery=t.displayMove=t.display=void 0;var i=s(6314),r=s(7094),o=s(6748);function n(e,t,s,r,o,n){void 0===n&&(n="%");var l=a((0,i.damageRange)(o),2),f=l[0],c=l[1],u="number"==typeof f?[f]:f,p="number"==typeof c?[c]:c,g=[0,0],d="",m=3===e.num&&r.named("Doom Desire","Future Sight");if(t.hasItem("Shell Bell")&&!m)for(var y=Math.round(s.maxHP()/8),v=0;v<u.length;v++)g[0]+=Math.min(Math.round(u[v]*r.hits/8),y),g[1]+=Math.min(Math.round(p[v]*r.hits/8),y);if(r.named("G-Max Finale")&&(g[0]=g[1]=Math.round(t.maxHP()/6)),r.drain){var b=r.drain[0]/r.drain[1];for(y=Math.round(s.maxHP()*b),v=0;v<u.length;v++){var P=[u[v],p[v]];for(var w in g){var S=Math.round(P[w]*b);t.hasItem("Big Root")&&(S=Math.trunc(5324*S/4096)),g[w]+=Math.min(S*r.hits,y)}}}if(0===g[1])return{recovery:g,text:d};var k=h(n,g[0],t.maxHP()),T=h(n,g[1],t.maxHP());return{recovery:g,text:d="".concat(k," - ").concat(T).concat(n," recovered")}}function l(e,t,s,r,o,n){void 0===n&&(n="%");var l=a((0,i.damageRange)(o),2),f=l[0],c=l[1],u=("number"==typeof f?f:f[0]+f[1])*r.hits,p=("number"==typeof c?c:c[0]+c[1])*r.hits,g=[0,0],d="",m=f>s.curHP()||c>s.curHP();if(r.recoil){var y=r.recoil[0]/r.recoil[1]*100,v=void 0,b=void 0;m?(v=h(n,s.curHP()*y,t.maxHP(),100),b=h(n,s.curHP()*y,t.maxHP(),100)):(v=h(n,Math.min(u,s.curHP())*y,t.maxHP(),100),b=h(n,Math.min(p,s.curHP())*y,t.maxHP(),100)),t.hasAbility("Rock Head")||(g=[v,b],d="".concat(v," - ").concat(b).concat(n," recoil damage"))}else if(r.hasCrashDamage){var P=2===e.num?12.5:e.num>=3?50:1;switch(v=void 0,b=void 0,m&&2!==e.num?(v=h(n,s.curHP()*P,t.maxHP(),100),b=h(n,s.curHP()*P,t.maxHP(),100)):(v=h(n,Math.min(u,s.maxHP())*P,t.maxHP(),100),b=h(n,Math.min(p,s.maxHP())*P,t.maxHP(),100)),g=[v,b],e.num){case 1:g=h(n,1,t.maxHP()),d="1hp damage on miss";break;case 2:case 3:case 4:if(s.hasType("Ghost"))if(4===e.num){var w=Math.floor(.5*s.maxHP()/t.maxHP()*100);g="%"===n?w:Math.floor(w/100*48),d="".concat(w,"% crash damage")}else g=0,d="no crash damage on Ghost types";else d="".concat(v," - ").concat(b).concat(n," crash damage on miss");break;default:g="%"===n?24:50,d="50% crash damage"}}else r.struggleRecoil?(g="%"===n?12:25,d="25% struggle damage",4===e.num&&(d+=" (rounded down)")):r.mindBlownRecoil&&(g="%"===n?24:50,d="50% recoil damage");return{recoil:g,text:d}}function f(e,t,s,a,i,n,l){if(void 0===l&&(l=!0),n=function(e){if("number"==typeof e)return[e];if(e.length>2)return e[0]>e[e.length-1]&&(e=e.slice().sort()),e;if("number"==typeof e[0]&&"number"==typeof e[1])return[e[0]+e[1]];for(var t=e,s=[],a=0;a<t[0].length;a++)for(var i=0;i<t[1].length;i++)s.push(t[0][a]+t[1][i]);return s.sort()}(n),isNaN(n[0]))return(0,r.error)(l,"damage[0] must be a number."),{chance:0,n:0,text:""};if(0===n[n.length-1])return(0,r.error)(l,"damage[damage.length - 1] === 0."),{chance:0,n:0,text:""};if(void 0===a.timesUsed&&(a.timesUsed=1),void 0===a.timesUsedWithMetronome&&(a.timesUsedWithMetronome=1),n[0]>=s.maxHP()&&1===a.timesUsed&&1===a.timesUsedWithMetronome)return{chance:1,n:1,text:"guaranteed OHKO"};var f=function(e,t,s){var a=0,i=[];if(t.hasItem("Heavy-Duty Boots"))return{damage:a,texts:i};if(s.isSR&&!t.hasAbility("Magic Guard","Mountaineer")){var r=e.types.get("rock"),o=r.effectiveness[t.types[0]]*(t.types[1]?r.effectiveness[t.types[1]]:1);a+=Math.floor(o*t.maxHP()/8),i.push("Stealth Rock")}if(s.steelsurge&&!t.hasAbility("Magic Guard","Mountaineer")){var n=e.types.get("steel");o=n.effectiveness[t.types[0]]*(t.types[1]?n.effectiveness[t.types[1]]:1),a+=Math.floor(o*t.maxHP()/8),i.push("Steelsurge")}return t.hasType("Flying")||t.hasAbility("Magic Guard","Levitate")||t.hasItem("Air Balloon")||(1===s.spikes?(a+=Math.floor(t.maxHP()/8),2===e.num?i.push("Spikes"):i.push("1 layer of Spikes")):2===s.spikes?(a+=Math.floor(t.maxHP()/6),i.push("2 layers of Spikes")):3===s.spikes&&(a+=Math.floor(t.maxHP()/4),i.push("3 layers of Spikes"))),isNaN(a)&&(a=0),{damage:a,texts:i}}(e,s,i.defenderSide),d=function(e,t,s,a,i){var r=0,n=[];i.hasWeather("Sun","Harsh Sunshine")?s.hasAbility("Dry Skin","Solar Power")&&(r-=Math.floor(s.maxHP()/8),n.push(s.ability+" damage")):i.hasWeather("Rain","Heavy Rain")?s.hasAbility("Dry Skin")?(r+=Math.floor(s.maxHP()/8),n.push("Dry Skin recovery")):s.hasAbility("Rain Dish")&&(r+=Math.floor(s.maxHP()/16),n.push("Rain Dish recovery")):i.hasWeather("Sand")?s.hasType("Rock","Ground","Steel")||s.hasAbility("Magic Guard","Overcoat","Sand Force","Sand Rush","Sand Veil")||s.hasItem("Safety Goggles")||(r-=Math.floor(s.maxHP()/(2===e.num?8:16)),n.push("sandstorm damage")):i.hasWeather("Hail","Snow")&&(s.hasAbility("Ice Body")?(r+=Math.floor(s.maxHP()/16),n.push("Ice Body recovery")):s.hasType("Ice")||s.hasAbility("Magic Guard","Overcoat","Snow Cloak")||s.hasItem("Safety Goggles")||!i.hasWeather("Hail")||(r-=Math.floor(s.maxHP()/16),n.push("hail damage")));var l=a.named("Knock Off")&&!s.hasAbility("Sticky Hold");if(s.hasItem("Leftovers")&&!l?(r+=Math.floor(s.maxHP()/16),n.push("Leftovers recovery")):s.hasItem("Black Sludge")&&!l?s.hasType("Poison")?(r+=Math.floor(s.maxHP()/16),n.push("Black Sludge recovery")):s.hasAbility("Magic Guard","Klutz")||(r-=Math.floor(s.maxHP()/8),n.push("Black Sludge damage")):s.hasItem("Sticky Barb")&&(r-=Math.floor(s.maxHP()/8),n.push("Sticky Barb damage")),i.defenderSide.isSeeded&&(s.hasAbility("Magic Guard")||(r-=Math.floor(s.maxHP()/(e.num>=2?8:16)),n.push("Leech Seed damage"))),i.attackerSide.isSeeded&&!t.hasAbility("Magic Guard")){var f=Math.floor(t.maxHP()/(e.num>=2?8:16));s.hasItem("Big Root")&&(f=Math.trunc(5324*f/4096)),t.hasAbility("Liquid Ooze")?(r-=f,n.push("Liquid Ooze damage")):(r+=f,n.push("Leech Seed recovery"))}if(i.hasTerrain("Grassy")&&(0,o.isGrounded)(s,i)&&(r+=Math.floor(s.maxHP()/16),n.push("Grassy Terrain recovery")),s.hasStatus("psn")?s.hasAbility("Poison Heal")?(r+=Math.floor(s.maxHP()/8),n.push("Poison Heal")):s.hasAbility("Magic Guard")||(r-=Math.floor(s.maxHP()/(1===e.num?16:8)),n.push("poison damage")):s.hasStatus("tox")?s.hasAbility("Poison Heal")?(r+=Math.floor(s.maxHP()/8),n.push("Poison Heal")):s.hasAbility("Magic Guard")||n.push("toxic damage"):s.hasStatus("brn")?s.hasAbility("Heatproof")?(r-=Math.floor(s.maxHP()/(e.num>6?32:16)),n.push("reduced burn damage")):s.hasAbility("Magic Guard")||(r-=Math.floor(s.maxHP()/(1===e.num||e.num>6?16:8)),n.push("burn damage")):(s.hasStatus("slp")||s.hasAbility("Comatose"))&&t.hasAbility("isBadDreams")&&!s.hasAbility("Magic Guard")&&(r-=Math.floor(s.maxHP()/8),n.push("Bad Dreams")),!s.hasAbility("Magic Guard")&&c.includes(a.name)&&(t.hasItem("Binding Band")?(r-=e.num>5?Math.floor(s.maxHP()/6):Math.floor(s.maxHP()/8),n.push("trapping damage")):(r-=e.num>5?Math.floor(s.maxHP()/8):Math.floor(s.maxHP()/16),n.push("trapping damage"))),s.isSaltCure&&!s.hasAbility("Magic Guard")){var u=s.hasType("Water","Steel")||s.teraType&&["Water","Steel"].includes(s.teraType);r-=Math.floor(s.maxHP()/(u?4:8)),n.push("Salt Cure")}return s.hasType("Fire")||s.hasAbility("Magic Guard")||!a.named("Fire Pledge (Grass Pledge Boosted)","Grass Pledge (Fire Pledge Boosted)")||(r-=Math.floor(s.maxHP()/8),n.push("Sea of Fire damage")),s.hasAbility("Magic Guard")||s.hasType("Grass")||!i.defenderSide.vinelash&&!a.named("G-Max Vine Lash")||(r-=Math.floor(s.maxHP()/6),n.push("Vine Lash damage")),s.hasAbility("Magic Guard")||s.hasType("Fire")||!i.defenderSide.wildfire&&!a.named("G-Max Wildfire")||(r-=Math.floor(s.maxHP()/6),n.push("Wildfire damage")),s.hasAbility("Magic Guard")||s.hasType("Water")||!i.defenderSide.cannonade&&!a.named("G-Max Cannonade")||(r-=Math.floor(s.maxHP()/6),n.push("Cannonade damage")),s.hasAbility("Magic Guard")||s.hasType("Rock")||!i.defenderSide.volcalith&&!a.named("G-Max Volcalith")||(r-=Math.floor(s.maxHP()/6),n.push("Volcalith damage")),{damage:r,texts:n}}(e,t,s,a,i),h=s.hasStatus("tox")&&!s.hasAbility("Magic Guard")?s.toxicCounter:0,m="";a.hits>1&&(m="approx. ",n=function(e,t,s,a){if(void 0===a&&(a=!0),1===t.length)return[t[0]*s];if(1===e.num){for(var i=[],o=0;o<t.length;o++)i[o]=t[o]*s;return i}if(16===t.length)switch(s){case 2:return[2*t[0],t[2]+t[3],t[4]+t[4],t[4]+t[5],t[5]+t[6],t[6]+t[6],t[6]+t[7],t[7]+t[7],t[8]+t[8],t[8]+t[9],t[9]+t[9],t[9]+t[10],t[10]+t[11],t[11]+t[11],t[12]+t[13],2*t[15]];case 3:return[3*t[0],t[3]+t[3]+t[4],t[4]+t[4]+t[5],t[5]+t[5]+t[6],t[5]+t[6]+t[6],t[6]+t[6]+t[7],t[6]+t[7]+t[7],t[7]+t[7]+t[8],t[7]+t[8]+t[8],t[8]+t[8]+t[9],t[8]+t[9]+t[9],t[9]+t[9]+t[10],t[9]+t[10]+t[10],t[10]+t[11]+t[11],t[11]+t[12]+t[12],3*t[15]];case 4:return[4*t[0],4*t[4],t[4]+t[5]+t[5]+t[5],t[5]+t[5]+t[6]+t[6],4*t[6],t[6]+t[6]+t[7]+t[7],4*t[7],t[7]+t[7]+t[7]+t[8],t[7]+t[8]+t[8]+t[8],4*t[8],t[8]+t[8]+t[9]+t[9],4*t[9],t[9]+t[9]+t[10]+t[10],t[10]+t[10]+t[10]+t[11],4*t[11],4*t[15]];case 5:return[5*t[0],t[4]+t[4]+t[4]+t[5]+t[5],t[5]+t[5]+t[5]+t[5]+t[6],t[5]+t[6]+t[6]+t[6]+t[6],t[6]+t[6]+t[6]+t[6]+t[7],t[6]+t[6]+t[7]+t[7]+t[7],5*t[7],t[7]+t[7]+t[7]+t[8]+t[8],t[7]+t[7]+t[8]+t[8]+t[8],5*t[8],t[8]+t[8]+t[8]+t[9]+t[9],t[8]+t[9]+t[9]+t[9]+t[9],t[9]+t[9]+t[9]+t[9]+t[10],t[9]+t[10]+t[10]+t[10]+t[10],t[10]+t[10]+t[11]+t[11]+t[11],5*t[15]];case 10:return[10*t[0],10*t[4],3*t[4]+7*t[5],5*t[5]+5*t[6],10*t[6],5*t[6]+5*t[7],10*t[7],7*t[7]+3*t[8],3*t[7]+7*t[8],10*t[8],5*t[8]+5*t[9],4*t[9],5*t[9]+5*t[10],7*t[10]+3*t[11],10*t[11],10*t[15]];default:return(0,r.error)(a,"Unexpected # of hits: ".concat(s)),t}else{if(39!==t.length){if(256===t.length){for(s>1&&(0,r.error)(a,"Unexpected # of hits for Parental Bond: ".concat(s)),i=[],o=0;o<16;o++){for(var n=0,l=0;l<16;l++)n+=t[o+l];i[o]=Math.round(n/16)}return i}return(0,r.error)(a,"Unexpected # of possible damage values: ".concat(t.length)),t}switch(s){case 2:return[2*t[0],2*t[7],2*t[10],2*t[12],2*t[14],t[15]+t[16],2*t[17],t[18]+t[19],t[19]+t[20],2*t[21],t[22]+t[23],2*t[24],2*t[26],2*t[28],2*t[31],2*t[38]];case 3:return[3*t[0],3*t[9],3*t[12],3*t[13],3*t[15],3*t[16],3*t[17],3*t[18],3*t[20],3*t[21],3*t[22],3*t[23],3*t[25],3*t[26],3*t[29],3*t[38]];case 4:return[4*t[0],2*t[10]+2*t[11],4*t[13],4*t[14],2*t[15]+2*t[16],2*t[16]+2*t[17],2*t[17]+2*t[18],2*t[18]+2*t[19],2*t[19]+2*t[20],2*t[20]+2*t[21],2*t[21]+2*t[22],2*t[22]+2*t[23],4*t[24],4*t[25],2*t[27]+2*t[28],4*t[38]];case 5:return[5*t[0],5*t[11],5*t[13],5*t[15],5*t[16],5*t[17],5*t[18],5*t[19],5*t[19],5*t[20],5*t[21],5*t[22],5*t[23],5*t[25],5*t[27],5*t[38]];case 10:return[10*t[0],10*t[11],10*t[13],10*t[15],10*t[16],10*t[17],10*t[18],10*t[19],10*t[19],10*t[20],10*t[21],10*t[22],10*t[23],10*t[25],10*t[27],10*t[38]];default:return(0,r.error)(a,"Unexpected # of hits: ".concat(s)),t}}}(e,n,a.hits,l));var y,v=f.texts.length>0?" after "+g(f.texts):"",b=f.texts.length>0||d.texts.length>0?" after "+g(f.texts.concat(d.texts)):"";if(!(1===a.timesUsed&&1===a.timesUsedWithMetronome||a.isZ))return 1===(y=u(n,s.maxHP()-f.damage,d.damage,a.hits||1,a.timesUsed||1,s.maxHP(),h))?{chance:y,n:a.timesUsed,text:"".concat(m||"guaranteed ","KO in ").concat(a.timesUsed," turns").concat(b)}:y>0?{chance:y,n:a.timesUsed,text:m+Math.round(1e3*y)/10+"% chance to ".concat(a.timesUsed,"HKO").concat(b)}:p(n[0],d.damage,a.hits,a.timesUsed,h,s.maxHP())>=s.curHP()-f.damage?{chance:1,n:a.timesUsed,text:"".concat(m||"guaranteed ","KO in ").concat(a.timesUsed," turns").concat(b)}:p(n[n.length-1],d.damage,a.hits,a.timesUsed,h,s.maxHP())>=s.curHP()-f.damage?{n:a.timesUsed,text:m+"possible KO in ".concat(a.timesUsed," turns").concat(b)}:{n:a.timesUsed,text:m+"not a KO"};if(1===(y=u(n,s.curHP()-f.damage,0,1,1,s.maxHP(),h)))return{chance:y,n:1,text:"guaranteed OHKO".concat(v)};if(y>0)return{chance:y,n:1,text:m+Math.round(1e3*y)/10+"% chance to OHKO".concat(v)};256===n.length&&(m="approx. ");for(var P=2;P<=4;P++){var w=u(n,s.curHP()-f.damage,d.damage,P,1,s.maxHP(),h);if(1===w)return{chance:w,n:P,text:"".concat(m||"guaranteed ").concat(P,"HKO").concat(b)};if(w>0)return{chance:w,n:P,text:m+Math.round(1e3*w)/10+"% chance to ".concat(P,"HKO").concat(b)}}for(P=5;P<=9;P++){if(p(n[0],d.damage,P,1,h,s.maxHP())>=s.curHP()-f.damage)return{chance:1,n:P,text:"".concat(m||"guaranteed ").concat(P,"HKO").concat(b)};if(p(n[n.length-1],d.damage,P,1,h,s.maxHP())>=s.curHP()-f.damage)return{n:P,text:m+"possible ".concat(P,"HKO").concat(b)}}return{chance:0,n:0,text:""}}t.display=function(e,t,s,r,o,n,l,c,u){void 0===c&&(c="%"),void 0===u&&(u=!0);var p=a((0,i.damageRange)(n),2),g=p[0],m=p[1],y=("number"==typeof g?g:g[0]+g[1])*r.hits,v=("number"==typeof m?m:m[0]+m[1])*r.hits,b=h(c,y,s.maxHP()),P=h(c,v,s.maxHP()),w=function(e,t,s){var i=a(function(e,t){if(e.level!==t.level)return[100===e.level?"":"Lvl ".concat(e.level),100===t.level?"":"Lvl ".concat(t.level)];var s=[100,50,5].includes(e.level)?"":"Lvl ".concat(e.level);return[s,s]}(t,s),2),r=i[0],o=i[1],n="";return e.attackBoost&&(e.attackBoost>0&&(n+="+"),n+=e.attackBoost+" "),n=d(n,r),n=d(n,e.attackEVs),n=d(n,e.attackerItem),n=d(n,e.attackerAbility),n=d(n,e.rivalry),e.isBurned&&(n+="burned "),e.alliesFainted&&(n+=Math.min(5,e.alliesFainted)+" ".concat(1===e.alliesFainted?"ally":"allies"," fainted ")),e.attackerTera&&(n+="Tera ".concat(e.attackerTera," ")),e.isBeadsOfRuin&&(n+="Beads of Ruin "),e.isSwordOfRuin&&(n+="Sword of Ruin "),n+=e.attackerName+" ",e.isHelpingHand&&(n+="Helping Hand "),e.isFlowerGiftAttacker&&(n+=" with an ally's Flower Gift "),e.isBattery&&(n+=" Battery boosted "),e.isPowerSpot&&(n+=" Power Spot boosted "),e.isSwitching&&(n+=" switching boosted "),n+=e.moveName+" ",e.moveBP&&e.moveType?n+="("+e.moveBP+" BP "+e.moveType+") ":e.moveBP?n+="("+e.moveBP+" BP) ":e.moveType&&(n+="("+e.moveType+") "),e.hits&&(n+="("+e.hits+" hits) "),n=d(n,e.moveTurns),n+="vs. ",e.defenseBoost&&(e.defenseBoost>0&&(n+="+"),n+=e.defenseBoost+" "),n=d(n,o),n=d(n,e.HPEVs),e.defenseEVs&&(n+="/ "+e.defenseEVs+" "),n=d(n,e.defenderItem),n=d(n,e.defenderAbility),e.isTabletsOfRuin&&(n+="Tablets of Ruin "),e.isVesselOfRuin&&(n+="Vessel of Ruin "),e.isProtected&&(n+="protected "),e.isDefenderDynamaxed&&(n+="Dynamax "),e.defenderTera&&(n+="Tera ".concat(e.defenderTera," ")),n+=e.defenderName,e.weather&&e.terrain||(e.weather?n+=" in "+e.weather:e.terrain&&(n+=" in "+e.terrain+" Terrain")),e.isReflect?n+=" through Reflect":e.isLightScreen&&(n+=" through Light Screen"),e.isFlowerGiftDefender&&(n+=" with an ally's Flower Gift"),e.isFriendGuard&&(n+=" with an ally's Friend Guard"),e.isAuroraVeil&&(n+=" with an ally's Aurora Veil"),e.isCritical&&(n+=" on a critical hit"),e.isWonderRoom&&(n+=" in Wonder Room"),n}(l,t,s),S="".concat(y,"-").concat(v," (").concat(b," - ").concat(P).concat(c,")");if("Status"===r.category&&!r.named("Nature Power"))return"".concat(w,": ").concat(S);var k=f(e,t,s,r,o,n,u).text;return k?"".concat(w,": ").concat(S," -- ").concat(k):"".concat(w,": ").concat(S)},t.displayMove=function(e,t,s,r,o,f){void 0===f&&(f="%");var c=a((0,i.damageRange)(o),2),u=c[0],p=c[1],g=("number"==typeof u?u:u[0]+u[1])*r.hits,d=("number"==typeof p?p:p[0]+p[1])*r.hits,m=h(f,g,s.maxHP()),y=h(f,d,s.maxHP()),v=n(e,t,s,r,o,f).text,b=l(e,t,s,r,o,f).text;return"".concat(m," - ").concat(y).concat(f).concat(v&&" (".concat(v,")")).concat(b&&" (".concat(b,")"))},t.getRecovery=n,t.getRecoil=l,t.getKOChance=f;var c=["Bind","Clamp","Fire Spin","Infestation","Magma Storm","Sand Tomb","Thunder Cage","Whirlpool","Wrap","G-Max Sandblast","G-Max Centiferno"];function u(e,t,s,a,i,r,o){var n=e.length;if(1===a)for(var l=0;l<n;l++){if(e[n-1]<t)return 0;if(e[l]>=t)return(n-l)/n}var f=0;o>0&&(f=Math.floor(o*r/16),o++);var c=0,p=0;for(l=0;l<n;l++){var g;if(1===(g=0===l||e[l]!==e[l-1]?u(e,t-e[l]+s-f,s,a-1,i,r,o):p)){c+=n-l;break}c+=g,p=g}return c/n}function p(e,t,s,a,i,r){var o=0;if(i>0)for(var n=0;n<s-1;n++)o+=Math.floor((i+n)*r/16);return s>1&&1===a?e*s-t*(s-1)+o:e-t*(s-1)+o}function g(e){if(0===e.length)return"";if(1===e.length)return e[0];if(2===e.length)return e[0]+" and "+e[1];for(var t="",s=0;s<e.length-1;s++)t+=e[s]+", ";return t+"and "+e[e.length-1]}function d(e,t){return t?"".concat(e).concat(t," "):e}function h(e,t,s,a){return void 0===a&&(a=1),"%"===e?Math.floor(t*(1e3/a)/s)/10:Math.floor(t*(48/a)/s)}},8851:function(e,t){"use strict";var s=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o};t.__esModule=!0,t.Side=t.Field=void 0;var a=function(){function e(e){void 0===e&&(e={}),this.gameType=e.gameType||"Singles",this.terrain=e.terrain,this.weather=e.weather,this.isMagicRoom=!!e.isMagicRoom,this.isWonderRoom=!!e.isWonderRoom,this.isGravity=!!e.isGravity,this.isAuraBreak=e.isAuraBreak||!1,this.isFairyAura=e.isFairyAura||!1,this.isDarkAura=e.isDarkAura||!1,this.isBeadsOfRuin=e.isBeadsOfRuin||!1,this.isSwordOfRuin=e.isSwordOfRuin||!1,this.isTabletsOfRuin=e.isTabletsOfRuin||!1,this.isVesselOfRuin=e.isVesselOfRuin||!1,this.attackerSide=new i(e.attackerSide||{}),this.defenderSide=new i(e.defenderSide||{})}return e.prototype.hasWeather=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return!(!this.weather||!e.includes(this.weather))},e.prototype.hasTerrain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return!(!this.terrain||!e.includes(this.terrain))},e.prototype.swap=function(){var e;return e=s([this.defenderSide,this.attackerSide],2),this.attackerSide=e[0],this.defenderSide=e[1],this},e.prototype.clone=function(){return new e({gameType:this.gameType,weather:this.weather,terrain:this.terrain,isMagicRoom:this.isMagicRoom,isWonderRoom:this.isWonderRoom,isGravity:this.isGravity,attackerSide:this.attackerSide,defenderSide:this.defenderSide,isAuraBreak:this.isAuraBreak,isDarkAura:this.isDarkAura,isFairyAura:this.isFairyAura,isBeadsOfRuin:this.isBeadsOfRuin,isSwordOfRuin:this.isSwordOfRuin,isTabletsOfRuin:this.isTabletsOfRuin,isVesselOfRuin:this.isVesselOfRuin})},e}();t.Field=a;var i=function(){function e(e){void 0===e&&(e={}),this.spikes=e.spikes||0,this.steelsurge=!!e.steelsurge,this.vinelash=!!e.vinelash,this.wildfire=!!e.wildfire,this.cannonade=!!e.cannonade,this.volcalith=!!e.volcalith,this.isSR=!!e.isSR,this.isReflect=!!e.isReflect,this.isLightScreen=!!e.isLightScreen,this.isProtected=!!e.isProtected,this.isSeeded=!!e.isSeeded,this.isForesight=!!e.isForesight,this.isTailwind=!!e.isTailwind,this.isHelpingHand=!!e.isHelpingHand,this.isFlowerGift=!!e.isFlowerGift,this.isFriendGuard=!!e.isFriendGuard,this.isAuroraVeil=!!e.isAuroraVeil,this.isBattery=!!e.isBattery,this.isPowerSpot=!!e.isPowerSpot,this.isSwitching=e.isSwitching}return e.prototype.clone=function(){return new e(this)},e}();t.Side=i},9781:function(e,t,s){"use strict";var a,i=this&&this.__extends||(a=function(e,t){return a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])},a(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}),r=this&&this.__createBinding||(Object.create?function(e,t,s,a){void 0===a&&(a=s);var i=Object.getOwnPropertyDescriptor(t,s);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,i)}:function(e,t,s,a){void 0===a&&(a=s),e[a]=t[s]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)"default"!==s&&Object.prototype.hasOwnProperty.call(e,s)&&r(t,e,s);return o(t,e),t};t.__esModule=!0,t.Stats=t.STATS=t.TYPE_CHART=t.NATURES=t.SPECIES=t.MOVES=t.MEGA_STONES=t.ITEMS=t.ABILITIES=t.toID=t.Generations=t.Result=t.Side=t.Field=t.calcStat=t.Pokemon=t.Move=t.calculate=void 0;var l=s(2223),f=n(s(3100)),c=t.calculate;t.calculate=function(e,t,s,a,i){return(c||f.calculate)("number"==typeof e?l.Generations.get(e):e,t,s,a,i)};var u=function(e){function t(t,s,a){return void 0===a&&(a={}),e.call(this,"number"==typeof t?l.Generations.get(t):t,s,a)||this}return i(t,e),t}(f.Move);t.Move=u;var p=function(e){function t(t,s,a){return void 0===a&&(a={}),e.call(this,"number"==typeof t?l.Generations.get(t):t,s,a)||this}return i(t,e),t.getForme=function(e,t,s,a){return f.Pokemon.getForme("number"==typeof e?l.Generations.get(e):e,t,s,a)},t}(f.Pokemon);t.Pokemon=p,t.calcStat=function(e,t,s,a,i,r,o){return f.Stats.calcStat("number"==typeof e?l.Generations.get(e):e,"spc"===t?"spa":t,s,a,i,r,o)};var g=s(8851);r(t,g,"Field"),r(t,g,"Side");var d=s(6314);r(t,d,"Result");var h=s(2223);r(t,h,"Generations");var m=s(7094);r(t,m,"toID");var y=s(7650);r(t,y,"ABILITIES");var v=s(9390);r(t,v,"ITEMS"),r(t,v,"MEGA_STONES");var b=s(849);r(t,b,"MOVES");var P=s(839);r(t,P,"SPECIES");var w=s(7121);r(t,w,"NATURES");var S=s(7638);r(t,S,"TYPE_CHART");var k=s(7221);r(t,k,"STATS"),r(t,k,"Stats")},3193:(e,t,s)=>{"use strict";t.__esModule=!0,t.getMultiAttack=t.getTechnoBlast=t.getNaturalGift=t.getFlingPower=t.getBerryResistType=t.getItemBoostType=t.SEED_BOOSTED_STAT=void 0;var a=s(7094);t.SEED_BOOSTED_STAT={"Electric Seed":"def","Grassy Seed":"def","Misty Seed":"spd","Psychic Seed":"spd"},t.getItemBoostType=function(e){switch(e){case"Draco Plate":case"Dragon Fang":return"Dragon";case"Dread Plate":case"Black Glasses":return"Dark";case"Earth Plate":case"Soft Sand":return"Ground";case"Fist Plate":case"Black Belt":return"Fighting";case"Flame Plate":case"Charcoal":return"Fire";case"Icicle Plate":case"Never-Melt Ice":return"Ice";case"Insect Plate":case"Silver Powder":return"Bug";case"Iron Plate":case"Metal Coat":return"Steel";case"Meadow Plate":case"Rose Incense":case"Miracle Seed":return"Grass";case"Mind Plate":case"Odd Incense":case"Twisted Spoon":return"Psychic";case"Pixie Plate":return"Fairy";case"Sky Plate":case"Sharp Beak":return"Flying";case"Splash Plate":case"Sea Incense":case"Wave Incense":case"Mystic Water":return"Water";case"Spooky Plate":case"Spell Tag":return"Ghost";case"Stone Plate":case"Rock Incense":case"Hard Stone":return"Rock";case"Toxic Plate":case"Poison Barb":return"Poison";case"Zap Plate":case"Magnet":return"Electric";case"Silk Scarf":case"Pink Bow":case"Polkadot Bow":return"Normal";default:return}},t.getBerryResistType=function(e){switch(e){case"Chilan Berry":return"Normal";case"Occa Berry":return"Fire";case"Passho Berry":return"Water";case"Wacan Berry":return"Electric";case"Rindo Berry":return"Grass";case"Yache Berry":return"Ice";case"Chople Berry":return"Fighting";case"Kebia Berry":return"Poison";case"Shuca Berry":return"Ground";case"Coba Berry":return"Flying";case"Payapa Berry":return"Psychic";case"Tanga Berry":return"Bug";case"Charti Berry":return"Rock";case"Kasib Berry":return"Ghost";case"Haban Berry":return"Dragon";case"Colbur Berry":return"Dark";case"Babiri Berry":return"Steel";case"Roseli Berry":return"Fairy";default:return}};var i=new Set(["TR24","TR28","TR34","TR39","TR53","TR55","TR64","TR66","TR72","TR73"]),r=new Set(["Hard Stone","Room Service","Claw Fossil","Dome Fossil","Helix Fossil","Old Amber","Root Fossil","Armor Fossil","Old Amber","Fossilized Bird","Fossilized Dino","Fossilized Drake","Fossilized Fish","Plume Fossil","Jaw Fossil","Cover Fossil","Sail Fossil","Rare Bone","Skull Fossil","TR10","TR31","TR75"]),o=new Set(["Deep Sea Tooth","Thick Club","TR02","TR04","TR05","TR08","TR11","TR22","TR35","TR42","TR45","TR50","TR61","TR65","TR67","TR86","TR90","TR96"]),n=new Set(["TR01","TR41","TR62","TR93","TR97","TR98"]),l=new Set(["Assault Vest","Blunder Policy","Chipped Pot","Cracked Pot","Heavy-Duty Boots","Weakness Policy","Quick Claw","Dawn Stone","Dusk Stone","Electirizer","Magmarizer","Oval Stone","Protector","Sachet","Whipped Dream","Razor Claw","Shiny Stone","TR16","TR18","TR19","TR25","TR32","TR33","TR47","TR56","TR57","TR58","TR59","TR60","TR63","TR69","TR70","TR74","TR84","TR87","TR92","TR95","TR99"]),f=new Set(["Poison Barb","Dragon Fang","Power Anklet","Power Band","Power Belt","Power Bracer","Power Lens","Power Weight"]),c=new Set(["Adamant Orb","Damp Rock","Heat Rock","Leek","Lustrous Orb","Macho Brace","Rocky Helmet","Stick","Utility Umbrella","Terrain Extender"]),u=new Set(["Absorb Bulb","Black Belt","Black Sludge","Black Glasses","Cell Battery","Charcoal","Deep Sea Scale","Flame Orb","King's Rock","Life Orb","Light Ball","Light Clay","Magnet","Metal Coat","Miracle Seed","Mystic Water","Never-Melt Ice","Razor Fang","Scope Lens","Soul Dew","Spell Tag","Sweet Apple","Tart Apple","Throat Spray","Toxic Orb","Twisted Spoon","Dragon Scale","Energy Powder","Fire Stone","Leaf Stone","Moon Stone","Sun Stone","Thunder Stone","Up-Grade","Water Stone","Berry Juice","Black Sludge","Prism Scale","Ice Stone","Gold Bottle Cap","Luminous Moss","Eject Button","Snowball","Bottle Cap"]),p=new Set(["Air Balloon","Berry Sweet","Choice Band","Choice Scarf","Choice Specs","Clover Sweet","Destiny Knot","Electric Seed","Expert Belt","Flower Sweet","Focus Band","Focus Sash","Full Incense","Grassy Seed","Lagging Tail","Lax Incense","Leftovers","Love Sweet","Mental Herb","Metal Powder","Mint Berry","Miracle Berry","Misty Seed","Muscle Band","Power Herb","Psychic Seed","Odd Incense","Quick Powder","Reaper Cloth","Red Card","Ribbon Sweet","Ring Target","Rock Incense","Rose Incense","Sea Incense","Shed Shell","Silk Scarf","Silver Powder","Smooth Rock","Soft Sand","Soothe Bell","Star Sweet","Strawberry Sweet","Wave Incense","White Herb","Wide Lens","Wise Glasses","Zoom Lens","Silver Powder","Power Herb","TR00","TR07","TR12","TR13","TR14","TR17","TR20","TR21","TR23","TR26","TR27","TR29","TR30","TR37","TR38","TR40","TR44","TR46","TR48","TR49","TR51","TR52","TR54","TR68","TR76","TR77","TR79","TR80","TR83","TR85","TR88","TR91"]);t.getFlingPower=function(e){return e?["Iron Ball","TR43","TR71"].includes(e)?130:i.has(e)?85:["TR03","TR06","TR09","TR15","TR89"].includes(e)?110:r.has(e)?100:["TR36","TR78","TR81","TR94"].includes(e)?95:e.includes("Plate")||o.has(e)?90:n.has(e)?85:l.has(e)?80:f.has(e)?70:c.has(e)?60:["Eject Pack","Sharp Beak","Dubious Disc"].includes(e)?50:["Icy Rock","Eviolite","Lucky Punch"].includes(e)?40:u.has(e)?30:"TR82"===e?20:e.includes("Berry")||p.has(e)?10:0:0},t.getNaturalGift=function(e,t){var s,i=null===(s=e.items.get((0,a.toID)(t)))||void 0===s?void 0:s.naturalGift;return i?{t:i.type,p:i.basePower}:{t:"Normal",p:1}},t.getTechnoBlast=function(e){switch(e){case"Burn Drive":return"Fire";case"Chill Drive":return"Ice";case"Douse Drive":return"Water";case"Shock Drive":return"Electric";default:return}},t.getMultiAttack=function(e){if(e.includes("Memory"))return e.substring(0,e.indexOf(" "))}},2816:function(e,t,s){"use strict";var a=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o},i=this&&this.__spreadArray||function(e,t,s){if(s||2===arguments.length)for(var a,i=0,r=t.length;i<r;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))};t.__esModule=!0,t.calculateRBYGSC=void 0;var r=s(3193),o=s(6314),n=s(6748);t.calculateRBYGSC=function(e,t,s,l,f){var c;(0,n.computeFinalStats)(e,t,s,f,"atk","def","spa","spd","spe");var u={attackerName:t.name,moveName:l.name,defenderName:s.name},p=new o.Result(e,t,s,l,f,0,u);if("Status"===l.category)return p;if(f.defenderSide.isProtected)return u.isProtected=!0,p;if(1===e.num&&(m=(0,n.handleFixedDamageMoves)(t,l)))return p.damage=m,p;var g=["Normal","Fire","Water","Electric","Grass","Ice","Fighting","Poison","Ground","Flying","Psychic","Bug","Rock","Ghost","Dragon","Dark","Steel"],d=s.types[0],h=s.types[1];h&&d!==h&&2===e.num&&g.indexOf(d)>g.indexOf(h)&&(d=(c=a([h,d],2))[0],h=c[1]);var m,y=(0,n.getMoveEffectiveness)(e,l,d,f.defenderSide.isForesight),v=h?(0,n.getMoveEffectiveness)(e,l,h,f.defenderSide.isForesight):1,b=y*v;if(0===b)return p;if(2===e.num&&(m=(0,n.handleFixedDamageMoves)(t,l)))return p.damage=m,p;if(l.hits>1&&(u.hits=l.hits),l.named("Flail","Reversal")){l.isCrit=!1;var P=Math.floor(48*t.curHP()/t.maxHP());l.bp=P<=1?200:P<=4?150:P<=9?100:P<=16?80:P<=32?40:20,u.moveBP=l.bp}else l.named("Present")&&!l.bp&&(l.bp=40);if(0===l.bp)return p;var w="Physical"===l.category,S=w?"atk":"spa",k=w?"def":"spd",T=t.stats[S],x=s.stats[k],M=l.isCrit&&(1===e.num||2===e.num&&t.boosts[S]<=s.boosts[k]),D=t.level;if(M?(T=t.rawStats[S],x=s.rawStats[k],1===e.num&&(D*=2,u.isCritical=!0)):(0!==t.boosts[S]&&(u.attackBoost=t.boosts[S]),0!==s.boosts[k]&&(u.defenseBoost=s.boosts[k]),w&&t.hasStatus("brn")&&(T=Math.floor(T/2),u.isBurned=!0)),l.named("Explosion","Self-Destruct")&&(x=Math.floor(x/2)),M||(w&&f.defenderSide.isReflect?(x*=2,u.isReflect=!0):!w&&f.defenderSide.isLightScreen&&(x*=2,u.isLightScreen=!0)),(t.named("Pikachu")&&t.hasItem("Light Ball")&&!w||t.named("Cubone","Marowak")&&t.hasItem("Thick Club")&&w)&&(T*=2,u.attackerItem=t.item),(T>255||x>255)&&(T=Math.floor(T/4)%256,x=Math.floor(x/4)%256),l.named("Present")){var A={Normal:0,Fighting:1,Flying:2,Poison:3,Ground:4,Rock:5,Bug:7,Ghost:8,Steel:9,"???":19,Fire:20,Water:21,Grass:22,Electric:23,Psychic:24,Ice:25,Dragon:26,Dark:27};T=10,x=Math.max(A[t.types[1]?t.types[1]:t.types[0]],1),D=Math.max(A[s.types[1]?s.types[1]:s.types[0]],1)}s.named("Ditto")&&s.hasItem("Metal Powder")&&(x=Math.floor(1.5*x),u.defenderItem=s.item);var B=Math.floor(Math.floor(Math.floor(2*D/5+2)*Math.max(1,T)*l.bp/Math.max(1,x))/50);2===e.num&&l.isCrit&&(B*=2,u.isCritical=!0),l.named("Pursuit")&&"out"===f.defenderSide.isSwitching&&(B=Math.floor(2*B),u.isSwitching="out");var O=t.hasItem("Dragon Fang")?void 0:(0,r.getItemBoostType)(t.hasItem("Dragon Scale")?"Dragon Fang":t.item);if(l.hasType(O)&&(B=Math.floor(1.1*B),u.attackerItem=t.item),B=Math.min(997,B)+2,f.hasWeather("Sun")&&l.hasType("Fire")||f.hasWeather("Rain")&&l.hasType("Water")?(B=Math.floor(1.5*B),u.weather=f.weather):(f.hasWeather("Sun")&&l.hasType("Water")||f.hasWeather("Rain")&&(l.hasType("Fire")||l.named("Solar Beam")))&&(B=Math.floor(B/2),u.weather=f.weather),l.hasType.apply(l,i([],a(t.types),!1))&&(B=Math.floor(1.5*B)),1===e.num?(B=Math.floor(B*y),B=Math.floor(B*v)):B=Math.floor(B*b),l.named("Flail","Reversal"))return p.damage=B,p;p.damage=[];for(var C=217;C<=255;C++)2===e.num?p.damage[C-217]=Math.max(1,Math.floor(B*C/255)):p.damage[C-217]=1===B?1:Math.floor(B*C/255);return p}},6336:function(e,t,s){"use strict";var a=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o},i=this&&this.__spreadArray||function(e,t,s){if(s||2===arguments.length)for(var a,i=0,r=t.length;i<r;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))};t.__esModule=!0,t.calculateADV=void 0;var r=s(3193),o=s(6314),n=s(6748);t.calculateADV=function(e,t,s,l,f){var c;(0,n.checkAirLock)(t,f),(0,n.checkAirLock)(s,f),(0,n.checkForecast)(t,f.weather),(0,n.checkForecast)(s,f.weather),(0,n.checkIntimidate)(e,t,s),(0,n.checkIntimidate)(e,s,t),t.stats.spe=(0,n.getFinalSpeed)(e,t,f,f.attackerSide),s.stats.spe=(0,n.getFinalSpeed)(e,s,f,f.defenderSide);var u={attackerName:t.name,moveName:l.name,defenderName:s.name},p=new o.Result(e,t,s,l,f,0,u);if("Status"===l.category&&!l.named("Nature Power"))return p;if(f.defenderSide.isProtected)return u.isProtected=!0,p;l.named("Weather Ball")&&(l.type=f.hasWeather("Sun")?"Fire":f.hasWeather("Rain")?"Water":f.hasWeather("Sand")?"Rock":f.hasWeather("Hail")?"Ice":"Normal",l.category="Rock"===l.type?"Physical":"Special",u.weather=f.weather,u.moveType=l.type,u.moveBP=l.bp);var g=["Normal","Fire","Water","Electric","Grass","Ice","Fighting","Poison","Ground","Flying","Psychic","Bug","Rock","Ghost","Dragon","Dark","Steel"],d=s.types[0],h=s.types[1];h&&d!==h&&g.indexOf(d)>g.indexOf(h)&&(d=(c=a([h,d],2))[0],h=c[1]);var m=(0,n.getMoveEffectiveness)(e,l,d,f.defenderSide.isForesight)*(h?(0,n.getMoveEffectiveness)(e,l,h,f.defenderSide.isForesight):1);if(0===m)return p;if(s.hasAbility("Flash Fire")&&l.hasType("Fire")||s.hasAbility("Levitate")&&l.hasType("Ground")||s.hasAbility("Volt Absorb")&&l.hasType("Electric")||s.hasAbility("Water Absorb")&&l.hasType("Water")||s.hasAbility("Wonder Guard")&&!l.hasType("???")&&m<=1||s.hasAbility("Soundproof")&&l.flags.sound)return u.defenderAbility=s.ability,p;u.HPEVs="".concat(s.evs.hp," HP");var y=(0,n.handleFixedDamageMoves)(t,l);if(y)return p.damage=y,p;l.hits>1&&(u.hits=l.hits);var v=l.bp;switch(l.name){case"Flail":case"Reversal":var b=Math.floor(48*t.curHP()/t.maxHP());v=b<=1?200:b<=4?150:b<=9?100:b<=16?80:b<=32?40:20,u.moveBP=v;break;case"Eruption":case"Water Spout":v=Math.max(1,Math.floor(150*t.curHP()/t.maxHP())),u.moveBP=v;break;case"Low Kick":var P=s.weightkg;v=P>=200?120:P>=100?100:P>=50?80:P>=25?60:P>=10?40:20,u.moveBP=v;break;case"Facade":t.hasStatus("par","psn","tox","brn")&&(v=2*l.bp,u.moveBP=v);break;case"Nature Power":l.category="Physical",v=60,u.moveName="Swift";break;default:v=l.bp}if(0===v)return p;var w="Physical"===l.category,S=w?"atk":"spa";u.attackEVs=(0,n.getEVDescriptionText)(e,t,S,t.nature);var k=w?"def":"spd";u.defenseEVs=(0,n.getEVDescriptionText)(e,s,k,s.nature);var T=t.rawStats[S],x=s.rawStats[k];w&&t.hasAbility("Huge Power","Pure Power")&&(T*=2,u.attackerAbility=t.ability),!t.hasItem("Sea Incense")&&l.hasType((0,r.getItemBoostType)(t.item))?(T=Math.floor(1.1*T),u.attackerItem=t.item):t.hasItem("Sea Incense")&&l.hasType("Water")?(T=Math.floor(1.05*T),u.attackerItem=t.item):w&&t.hasItem("Choice Band")||!w&&t.hasItem("Soul Dew")&&t.named("Latios","Latias")?(T=Math.floor(1.5*T),u.attackerItem=t.item):(!w&&t.hasItem("Deep Sea Tooth")&&t.named("Clamperl")||!w&&t.hasItem("Light Ball")&&t.named("Pikachu")||w&&t.hasItem("Thick Club")&&t.named("Cubone","Marowak"))&&(T*=2,u.attackerItem=t.item),!w&&s.hasItem("Soul Dew")&&s.named("Latios","Latias")?(x=Math.floor(1.5*x),u.defenderItem=s.item):(!w&&s.hasItem("Deep Sea Scale")&&s.named("Clamperl")||w&&s.hasItem("Metal Powder")&&s.named("Ditto"))&&(x*=2,u.defenderItem=s.item),s.hasAbility("Thick Fat")&&l.hasType("Fire","Ice")?(T=Math.floor(T/2),u.defenderAbility=s.ability):w&&s.hasAbility("Marvel Scale")&&s.status&&(x=Math.floor(1.5*x),u.defenderAbility=s.ability),w&&(t.hasAbility("Hustle")||t.hasAbility("Guts")&&t.status)||!w&&t.abilityOn&&t.hasAbility("Plus","Minus")?(T=Math.floor(1.5*T),u.attackerAbility=t.ability):t.curHP()<=t.maxHP()/3&&(t.hasAbility("Overgrow")&&l.hasType("Grass")||t.hasAbility("Blaze")&&l.hasType("Fire")||t.hasAbility("Torrent")&&l.hasType("Water")||t.hasAbility("Swarm")&&l.hasType("Bug"))&&(v=Math.floor(1.5*v),u.attackerAbility=t.ability),l.named("Explosion","Self-Destruct")&&(x=Math.floor(x/2));var M=l.isCrit&&!s.hasAbility("Battle Armor","Shell Armor"),D=t.boosts[S],A=s.boosts[k];(D>0||!M&&D<0)&&(T=(0,n.getModifiedStat)(T,D),u.attackBoost=D),(A<0||!M&&A>0)&&(x=(0,n.getModifiedStat)(x,A),u.defenseBoost=A);var B=t.level,O=Math.floor(Math.floor(Math.floor(2*B/5+2)*T*v/x)/50);if(t.hasStatus("brn")&&w&&!t.hasAbility("Guts")&&(O=Math.floor(O/2),u.isBurned=!0),!M){var C="Singles"!==f.gameType?2/3:.5;w&&f.defenderSide.isReflect?(O=Math.floor(O*C),u.isReflect=!0):!w&&f.defenderSide.isLightScreen&&(O=Math.floor(O*C),u.isLightScreen=!0)}l.named("Pursuit")&&"out"===f.defenderSide.isSwitching&&(O=Math.floor(2*O),u.isSwitching="out"),"Singles"!==f.gameType&&"allAdjacentFoes"===l.target&&(O=Math.floor(O/2)),f.hasWeather("Sun")&&l.hasType("Fire")||f.hasWeather("Rain")&&l.hasType("Water")?(O=Math.floor(1.5*O),u.weather=f.weather):(f.hasWeather("Sun")&&l.hasType("Water")||f.hasWeather("Rain")&&l.hasType("Fire")||l.named("Solar Beam")&&f.hasWeather("Rain","Sand","Hail"))&&(O=Math.floor(O/2),u.weather=f.weather),t.hasAbility("Flash Fire")&&t.abilityOn&&l.hasType("Fire")&&(O=Math.floor(1.5*O),u.attackerAbility="Flash Fire"),O=("Physical"===l.category?Math.max(1,O):O)+2,M&&(O*=2,u.isCritical=!0),l.named("Weather Ball")&&f.weather&&(O*=2,u.moveBP=2*v),f.attackerSide.isHelpingHand&&(O=Math.floor(1.5*O),u.isHelpingHand=!0),l.hasType.apply(l,i([],a(t.types),!1))&&(O=Math.floor(1.5*O)),O=Math.floor(O*m),p.damage=[];for(var F=85;F<=100;F++)p.damage[F-85]=Math.max(1,Math.floor(O*F/100));return p}},1442:function(e,t,s){"use strict";var a=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o},i=this&&this.__spreadArray||function(e,t,s){if(s||2===arguments.length)for(var a,i=0,r=t.length;i<r;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))};t.__esModule=!0,t.calculateDPP=void 0;var r=s(3193),o=s(6314),n=s(6748);function l(e,t){var s=Math.min(6,Math.max(-6,2*t));return s>0?Math.floor(e*(2+s)/2):s<0?Math.floor(2*e/(2-s)):e}t.calculateDPP=function(e,t,s,f,c){var u;(0,n.checkAirLock)(t,c),(0,n.checkAirLock)(s,c),(0,n.checkForecast)(t,c.weather),(0,n.checkForecast)(s,c.weather),(0,n.checkItem)(t),(0,n.checkItem)(s),(0,n.checkIntimidate)(e,t,s),(0,n.checkIntimidate)(e,s,t),(0,n.checkDownload)(t,s),(0,n.checkDownload)(s,t),t.stats.spe=(0,n.getFinalSpeed)(e,t,c,c.attackerSide),s.stats.spe=(0,n.getFinalSpeed)(e,s,c,c.defenderSide);var p={attackerName:t.name,moveName:f.name,defenderName:s.name},g=new o.Result(e,t,s,f,c,0,p);if("Status"===f.category&&!f.named("Nature Power"))return g;if(c.defenderSide.isProtected&&!f.breaksProtect)return p.isProtected=!0,g;t.hasAbility("Mold Breaker")&&(s.ability="",p.attackerAbility=t.ability);var d=f.isCrit&&!s.hasAbility("Battle Armor","Shell Armor"),h=f.bp;if(f.named("Weather Ball"))c.hasWeather("Sun")?(f.type="Fire",h*=2):c.hasWeather("Rain")?(f.type="Water",h*=2):c.hasWeather("Sand")?(f.type="Rock",h*=2):c.hasWeather("Hail")?(f.type="Ice",h*=2):f.type="Normal",p.weather=c.weather,p.moveType=f.type,p.moveBP=h;else if(f.named("Judgment")&&t.item&&t.item.includes("Plate"))f.type=(0,r.getItemBoostType)(t.item);else if(f.named("Natural Gift")&&t.item&&t.item.includes("Berry")){var m=(0,r.getNaturalGift)(e,t.item);f.type=m.t,f.bp=m.p,p.attackerItem=t.item,p.moveBP=f.bp,p.moveType=f.type}t.hasAbility("Normalize")&&(f.type="Normal",p.attackerAbility=t.ability);var y=t.hasAbility("Scrappy")||c.defenderSide.isForesight,v=["Normal","Fire","Water","Electric","Grass","Ice","Fighting","Poison","Ground","Flying","Psychic","Bug","Rock","Ghost","Dragon","Dark","Steel"],b=s.types[0],P=s.types[1];P&&b!==P&&v.indexOf(b)>v.indexOf(P)&&(b=(u=a([P,b],2))[0],P=u[1]);var w=(0,n.getMoveEffectiveness)(e,f,b,y,c.isGravity),S=P?(0,n.getMoveEffectiveness)(e,f,P,y,c.isGravity):1,k=w*S;if(0===k&&f.hasType("Ground")&&s.hasItem("Iron Ball")&&(0===w?w=1:s.types[1]&&0===S&&(S=1),k=w*S),0===k)return g;if(!f.hasType("???")&&!f.named("Fire Fang")&&s.hasAbility("Wonder Guard")&&k<=1||f.hasType("Fire")&&s.hasAbility("Flash Fire")||f.hasType("Water")&&s.hasAbility("Dry Skin","Water Absorb")||f.hasType("Electric")&&s.hasAbility("Motor Drive","Volt Absorb")||f.hasType("Ground")&&!c.isGravity&&!s.hasItem("Iron Ball")&&s.hasAbility("Levitate")||f.flags.sound&&s.hasAbility("Soundproof"))return p.defenderAbility=s.ability,g;p.HPEVs="".concat(s.evs.hp," HP");var T=(0,n.handleFixedDamageMoves)(t,f);if(T)return g.damage=T,g;f.hits>1&&(p.hits=f.hits);var x=t.stats.spe>s.stats.spe?"first":"last";switch(f.name){case"Brine":s.curHP()<=s.maxHP()/2&&(h*=2,p.moveBP=h);break;case"Eruption":case"Water Spout":h=Math.max(1,Math.floor(h*t.curHP()/t.maxHP())),p.moveBP=h;break;case"Facade":t.hasStatus("par","psn","tox","brn")&&(h=2*f.bp,p.moveBP=h);break;case"Flail":case"Reversal":var M=Math.floor(64*t.curHP()/t.maxHP());h=M<=1?200:M<=5?150:M<=12?100:M<=21?80:M<=42?40:20,p.moveBP=h;break;case"Fling":h=(0,r.getFlingPower)(t.item),p.moveBP=h,p.attackerItem=t.item;break;case"Grass Knot":case"Low Kick":var D=s.weightkg;h=D>=200?120:D>=100?100:D>=50?80:D>=25?60:D>=10?40:20,p.moveBP=h;break;case"Gyro Ball":h=Math.min(150,Math.floor(25*s.stats.spe/t.stats.spe)),p.moveBP=h;break;case"Payback":"first"!==x&&(h*=2,p.moveBP=h);break;case"Punishment":h=Math.min(200,60+20*(0,n.countBoosts)(e,s.boosts)),p.moveBP=h;break;case"Wake-Up Slap":s.hasStatus("slp")&&(h*=2,p.moveBP=h);break;case"Nature Power":f.category="Special",f.secondaries=!0,h=80,p.moveName="Tri Attack";break;case"Crush Grip":case"Wring Out":h=Math.floor(120*s.curHP()/s.maxHP())+1,p.moveBP=h;break;default:h=f.bp}if(0===h)return g;c.attackerSide.isHelpingHand&&(h=Math.floor(1.5*h),p.isHelpingHand=!0);var A="Physical"===f.category;t.hasItem("Muscle Band")&&A||t.hasItem("Wise Glasses")&&!A?(h=Math.floor(1.1*h),p.attackerItem=t.item):(f.hasType((0,r.getItemBoostType)(t.item))||t.hasItem("Adamant Orb")&&t.named("Dialga")&&f.hasType("Steel","Dragon")||t.hasItem("Lustrous Orb")&&t.named("Palkia")&&f.hasType("Water","Dragon")||t.hasItem("Griseous Orb")&&t.named("Giratina-Origin")&&f.hasType("Ghost","Dragon"))&&(h=Math.floor(1.2*h),p.attackerItem=t.item),t.hasAbility("Reckless")&&(f.recoil||f.hasCrashDamage)||t.hasAbility("Iron Fist")&&f.flags.punch?(h=Math.floor(1.2*h),p.attackerAbility=t.ability):(t.curHP()<=t.maxHP()/3&&(t.hasAbility("Overgrow")&&f.hasType("Grass")||t.hasAbility("Blaze")&&f.hasType("Fire")||t.hasAbility("Torrent")&&f.hasType("Water")||t.hasAbility("Swarm")&&f.hasType("Bug"))||t.hasAbility("Technician")&&h<=60)&&(h=Math.floor(1.5*h),p.attackerAbility=t.ability),s.hasAbility("Heatproof")&&f.hasType("Fire")||s.hasAbility("Thick Fat")&&f.hasType("Fire","Ice")?(h=Math.floor(.5*h),p.defenderAbility=s.ability):s.hasAbility("Dry Skin")&&f.hasType("Fire")&&(h=Math.floor(1.25*h),p.defenderAbility=s.ability);var B,O=A?"atk":"spa";p.attackEVs=(0,n.getEVDescriptionText)(e,t,O,t.nature);var C=t.boosts[O],F=t.rawStats[O];0===C||d&&C<0?B=F:s.hasAbility("Unaware")?(B=F,p.defenderAbility=s.ability):t.hasAbility("Simple")?(B=l(F,C),p.attackerAbility=t.ability,p.attackBoost=C):(B=(0,n.getModifiedStat)(F,C),p.attackBoost=C),A&&t.hasAbility("Pure Power","Huge Power")?(B*=2,p.attackerAbility=t.ability):c.hasWeather("Sun")&&t.hasAbility(A?"Flower Gift":"Solar Power")?(B=Math.floor(1.5*B),p.attackerAbility=t.ability,p.weather=c.weather):c.attackerSide.isFlowerGift&&c.hasWeather("Sun")&&A?(B=Math.floor(1.5*B),p.weather=c.weather,p.isFlowerGiftAttacker=!0):A&&(t.hasAbility("Hustle")||t.hasAbility("Guts")&&t.status)||!A&&t.abilityOn&&t.hasAbility("Plus","Minus")?(B=Math.floor(1.5*B),p.attackerAbility=t.ability):A&&t.hasAbility("Slow Start")&&t.abilityOn&&(B=Math.floor(B/2),p.attackerAbility=t.ability),(A?t.hasItem("Choice Band"):t.hasItem("Choice Specs"))||!A&&t.hasItem("Soul Dew")&&t.named("Latios","Latias")?(B=Math.floor(1.5*B),p.attackerItem=t.item):(t.hasItem("Light Ball")&&t.named("Pikachu")||t.hasItem("Thick Club")&&t.named("Cubone","Marowak")&&A||t.hasItem("Deep Sea Tooth")&&t.named("Clamperl")&&!A)&&(B*=2,p.attackerItem=t.item);var N,E=A?"def":"spd";p.defenseEVs=(0,n.getEVDescriptionText)(e,s,E,s.nature);var G=s.boosts[E],I=s.rawStats[E];0===G||d&&G>0?N=I:t.hasAbility("Unaware")?(N=I,p.attackerAbility=t.ability):s.hasAbility("Simple")?(N=l(I,G),p.defenderAbility=s.ability,p.defenseBoost=G):(N=(0,n.getModifiedStat)(I,G),p.defenseBoost=G),s.hasAbility("Marvel Scale")&&s.status&&A?(N=Math.floor(1.5*N),p.defenderAbility=s.ability):s.hasAbility("Flower Gift")&&c.hasWeather("Sun")&&!A?(N=Math.floor(1.5*N),p.defenderAbility=s.ability,p.weather=c.weather):c.defenderSide.isFlowerGift&&c.hasWeather("Sun")&&!A&&(N=Math.floor(1.5*N),p.weather=c.weather,p.isFlowerGiftDefender=!0),s.hasItem("Soul Dew")&&s.named("Latios","Latias")&&!A?(N=Math.floor(1.5*N),p.defenderItem=s.item):(s.hasItem("Deep Sea Scale")&&s.named("Clamperl")&&!A||s.hasItem("Metal Powder")&&s.named("Ditto")&&A)&&(N*=2,p.defenderItem=s.item),c.hasWeather("Sand")&&s.hasType("Rock")&&!A&&(N=Math.floor(1.5*N),p.weather=c.weather),(f.named("Explosion")||f.named("Self-Destruct"))&&(N=Math.floor(.5*N)),N<1&&(N=1);var z=Math.floor(Math.floor(Math.floor(2*t.level/5+2)*h*B/50)/N);if(t.hasStatus("brn")&&A&&!t.hasAbility("Guts")&&(z=Math.floor(.5*z),p.isBurned=!0),!d){var R="Singles"!==c.gameType?2/3:.5;A&&c.defenderSide.isReflect?(z=Math.floor(z*R),p.isReflect=!0):!A&&c.defenderSide.isLightScreen&&(z=Math.floor(z*R),p.isLightScreen=!0)}"Singles"!==c.gameType&&["allAdjacent","allAdjacentFoes"].includes(f.target)&&(z=Math.floor(3*z/4)),c.hasWeather("Sun")&&f.hasType("Fire")||c.hasWeather("Rain")&&f.hasType("Water")?(z=Math.floor(1.5*z),p.weather=c.weather):(c.hasWeather("Sun")&&f.hasType("Water")||c.hasWeather("Rain")&&f.hasType("Fire")||f.named("Solar Beam")&&c.hasWeather("Rain","Sand","Hail"))&&(z=Math.floor(.5*z),p.weather=c.weather),t.hasAbility("Flash Fire")&&t.abilityOn&&f.hasType("Fire")&&(z=Math.floor(1.5*z),p.attackerAbility="Flash Fire"),z+=2,d&&(t.hasAbility("Sniper")?(z*=3,p.attackerAbility=t.ability):z*=2,p.isCritical=d),t.hasItem("Life Orb")&&(z=Math.floor(1.3*z),p.attackerItem=t.item),f.named("Pursuit")&&"out"===c.defenderSide.isSwitching&&(t.hasAbility("Technician")?z=Math.floor(1*z):(z=Math.floor(2*z),p.isSwitching="out"));var H=1;f.hasType.apply(f,i([],a(t.types),!1))&&(t.hasAbility("Adaptability")?(H=2,p.attackerAbility=t.ability):H=1.5);var _=1;s.hasAbility("Filter","Solid Rock")&&k>1&&(_=.75,p.defenderAbility=s.ability);var L=1;t.hasItem("Expert Belt")&&k>1&&(L=1.2,p.attackerItem=t.item);var W=1;t.hasAbility("Tinted Lens")&&k<1&&(W=2,p.attackerAbility=t.ability);var Z=1;f.hasType((0,r.getBerryResistType)(s.item))&&(k>1||f.hasType("Normal"))&&(Z=.5,p.defenderItem=s.item);for(var U=[],j=0;j<16;j++)U[j]=Math.floor(z*(85+j)/100),U[j]=Math.floor(U[j]*H),U[j]=Math.floor(U[j]*w),U[j]=Math.floor(U[j]*S),U[j]=Math.floor(U[j]*_),U[j]=Math.floor(U[j]*L),U[j]=Math.floor(U[j]*W),U[j]=Math.floor(U[j]*Z),U[j]=Math.max(1,U[j]);return g.damage=U,g}},3573:(e,t,s)=>{"use strict";t.__esModule=!0,t.calculateBWXY=void 0;var a=s(7094),i=s(3193),r=s(6314),o=s(6748);t.calculateBWXY=function e(t,s,n,l,f){var c;(0,o.checkAirLock)(s,f),(0,o.checkAirLock)(n,f),(0,o.checkForecast)(s,f.weather),(0,o.checkForecast)(n,f.weather),(0,o.checkItem)(s,f.isMagicRoom),(0,o.checkItem)(n,f.isMagicRoom),(0,o.checkWonderRoom)(s,f.isWonderRoom),(0,o.checkWonderRoom)(n,f.isWonderRoom),(0,o.checkSeedBoost)(s,f),(0,o.checkSeedBoost)(n,f),(0,o.computeFinalStats)(t,s,n,f,"def","spd","spe"),(0,o.checkIntimidate)(t,s,n),(0,o.checkIntimidate)(t,n,s),(0,o.checkDownload)(s,n,f.isWonderRoom),(0,o.checkDownload)(n,s,f.isWonderRoom),(0,o.computeFinalStats)(t,s,n,f,"atk","spa"),(0,o.checkInfiltrator)(s,f.defenderSide),(0,o.checkInfiltrator)(n,f.attackerSide);var u={attackerName:s.name,moveName:l.name,defenderName:n.name,isWonderRoom:f.isWonderRoom},p=new r.Result(t,s,n,l,f,0,u);if("Status"===l.category&&!l.named("Nature Power"))return p;if(f.defenderSide.isProtected&&!l.breaksProtect)return u.isProtected=!0,p;s.hasAbility("Mold Breaker","Teravolt","Turboblaze")&&(n.ability="",u.attackerAbility=s.ability);var g=l.isCrit&&!n.hasAbility("Battle Armor","Shell Armor")&&1===l.timesUsed;if(l.named("Weather Ball"))l.type=f.hasWeather("Sun","Harsh Sunshine")?"Fire":f.hasWeather("Rain","Heavy Rain")?"Water":f.hasWeather("Sand")?"Rock":f.hasWeather("Hail")?"Ice":"Normal",u.weather=f.weather,u.moveType=l.type;else if(l.named("Judgment")&&s.item&&s.item.includes("Plate"))l.type=(0,i.getItemBoostType)(s.item);else if(l.named("Techno Blast")&&s.item&&s.item.includes("Drive"))l.type=(0,i.getTechnoBlast)(s.item);else if(l.named("Natural Gift")&&s.item&&s.item.includes("Berry")){var d=(0,i.getNaturalGift)(t,s.item);l.type=d.t,l.bp=d.p,u.attackerItem=s.item,u.moveBP=l.bp,u.moveType=l.type}else l.named("Nature Power")&&(5===t.num?l.type="Ground":l.type=f.hasTerrain("Electric")?"Electric":f.hasTerrain("Grassy")?"Grass":f.hasTerrain("Misty")?"Fairy":"Normal");var h=!1,m=!1,y=!1,v=!1,b=l.named("Judgment","Nature Power","Techo Blast","Natural Gift","Weather Ball");if(!l.isZ&&!b){var P=l.hasType("Normal");(h=s.hasAbility("Aerilate")&&P)?l.type="Flying":(m=s.hasAbility("Pixilate")&&P)?l.type="Fairy":(y=s.hasAbility("Refrigerate")&&P)?l.type="Ice":(v=s.hasAbility("Normalize"))&&(l.type="Normal"),(m||y||h||v)&&(u.attackerAbility=s.ability)}s.hasAbility("Gale Wings")&&l.hasType("Flying")&&(l.priority=1,u.attackerAbility=s.ability);var w=s.hasAbility("Scrappy")||f.defenderSide.isForesight,S=(0,o.getMoveEffectiveness)(t,l,n.types[0],w,f.isGravity),k=n.types[1]?(0,o.getMoveEffectiveness)(t,l,n.types[1],w,f.isGravity):1,T=S*k,x=!n.item||n.named("Giratina-Origin")&&n.hasItem("Griseous Orb")||n.name.includes("Arceus")&&n.item.includes("Plate")||n.name.includes("Genesect")&&n.item.includes("Drive")||n.named("Groudon","Groudon-Primal")&&n.hasItem("Red Orb")||n.named("Kyogre","Kyogre-Primal")&&n.hasItem("Blue Orb");if(!x&&n.item){var M=t.items.get((0,a.toID)(n.item));x=!(!M.megaEvolves||!n.name.includes(M.megaEvolves))}if(0===T&&l.named("Thousand Arrows"))T=1;else if(0===T&&l.hasType("Ground")&&n.hasItem("Iron Ball")&&!n.hasAbility("Klutz"))T=1;else if(0===T&&n.hasItem("Ring Target")){var D=t.types.get((0,a.toID)(l.type)).effectiveness;0===D[n.types[0]]?T=k:n.types[1]&&0===D[n.types[1]]&&(T=S)}if(0===T)return p;if(l.named("Sky Drop")&&(n.hasType("Flying")||n.weightkg>=200||f.isGravity)||l.named("Synchronoise")&&!n.hasType(s.types[0])&&(!s.types[1]||!n.hasType(s.types[1]))||l.named("Dream Eater")&&!n.hasStatus("slp"))return p;if(f.hasWeather("Harsh Sunshine")&&l.hasType("Water")||f.hasWeather("Heavy Rain")&&l.hasType("Fire"))return u.weather=f.weather,p;if(f.hasWeather("Strong Winds")&&n.hasType("Flying")&&t.types.get((0,a.toID)(l.type)).effectiveness.Flying>1&&(T/=2,u.weather=f.weather),n.hasAbility("Wonder Guard")&&T<=1||l.hasType("Grass")&&n.hasAbility("Sap Sipper")||l.hasType("Fire")&&n.hasAbility("Flash Fire")||l.hasType("Water")&&n.hasAbility("Dry Skin","Storm Drain","Water Absorb")||l.hasType("Electric")&&n.hasAbility("Lightning Rod","Motor Drive","Volt Absorb")||l.hasType("Ground")&&!f.isGravity&&!l.named("Thousand Arrows")&&!n.hasItem("Iron Ball")&&n.hasAbility("Levitate")||l.flags.bullet&&n.hasAbility("Bulletproof")||l.flags.sound&&n.hasAbility("Soundproof"))return u.defenderAbility=n.ability,p;if(l.hasType("Ground")&&!l.named("Thousand Arrows")&&!f.isGravity&&n.hasItem("Air Balloon"))return u.defenderItem=n.item,p;if(l.priority>0&&f.hasTerrain("Psychic")&&(0,o.isGrounded)(n,f))return u.terrain=f.terrain,p;u.HPEVs="".concat(n.evs.hp," HP");var A=(0,o.handleFixedDamageMoves)(s,l);if(A)return s.hasAbility("Parental Bond")?(p.damage=[A,A],u.attackerAbility=s.ability):p.damage=A,p;if(l.named("Final Gambit"))return p.damage=s.curHP(),p;l.hits>1&&(u.hits=l.hits);var B,O=s.stats.spe>n.stats.spe?"first":"last";switch(l.name){case"Payback":B=l.bp*("last"===O?2:1),u.moveBP=B;break;case"Pursuit":var C="out"===f.defenderSide.isSwitching;B=l.bp*(C?2:1),C&&(u.isSwitching="out"),u.moveBP=B;break;case"Electro Ball":0===n.stats.spe&&(n.stats.spe=1);var F=Math.floor(s.stats.spe/n.stats.spe);B=F>=4?150:F>=3?120:F>=2?80:F>=1?60:40,u.moveBP=B;break;case"Gyro Ball":0===s.stats.spe&&(s.stats.spe=1),B=Math.min(150,Math.floor(25*n.stats.spe/s.stats.spe)+1),u.moveBP=B;break;case"Punishment":B=Math.min(200,60+20*(0,o.countBoosts)(t,n.boosts)),u.moveBP=B;break;case"Low Kick":case"Grass Knot":var N=n.weightkg*(0,o.getWeightFactor)(n);B=N>=200?120:N>=100?100:N>=50?80:N>=25?60:N>=10?40:20,u.moveBP=B;break;case"Hex":B=l.bp*(n.status?2:1),u.moveBP=B;break;case"Heavy Slam":case"Heat Crash":var E=s.weightkg*(0,o.getWeightFactor)(s)/(n.weightkg*(0,o.getWeightFactor)(n));B=E>=5?120:E>=4?100:E>=3?80:E>=2?60:40,u.moveBP=B;break;case"Stored Power":case"Power Trip":B=20+20*(0,o.countBoosts)(t,s.boosts),u.moveBP=B;break;case"Acrobatics":B=l.bp*(s.hasItem("Flying Gem")||!s.item?2:1),u.moveBP=B;break;case"Assurance":B=l.bp*(n.hasAbility("Parental Bond (Child)")?2:1);break;case"Wake-Up Slap":B=l.bp*(n.hasStatus("slp")?2:1),u.moveBP=B;break;case"Smelling Salts":B=l.bp*(n.hasStatus("par")?2:1),u.moveBP=B;break;case"Weather Ball":B=l.bp*(f.weather&&!f.hasWeather("Strong Winds")?2:1),u.moveBP=B;break;case"Fling":B=(0,i.getFlingPower)(s.item),u.moveBP=B,u.attackerItem=s.item;break;case"Eruption":case"Water Spout":B=Math.max(1,Math.floor(150*s.curHP()/s.maxHP())),u.moveBP=B;break;case"Flail":case"Reversal":var G=Math.floor(48*s.curHP()/s.maxHP());B=G<=1?200:G<=4?150:G<=9?100:G<=16?80:G<=32?40:20,u.moveBP=B;break;case"Nature Power":if(5===t.num)l.category="Physical",l.target="allAdjacent",B=100,u.moveName="Earthquake";else switch(l.category="Special",l.secondaries=!0,f.terrain){case"Electric":B=90,u.moveName="Thunderbolt";break;case"Grassy":B=90,u.moveName="Energy Ball";break;case"Misty":B=95,u.moveName="Moonblast";break;default:B=80,u.moveName="Tri Attack"}break;case"Triple Kick":B=2===l.hits?15:3===l.hits?30:10,u.moveBP=B;break;case"Crush Grip":case"Wring Out":B=100*Math.floor(4096*n.curHP()/n.maxHP()),B=Math.floor(Math.floor((120*B+2048-1)/4096)/100)||1,u.moveBP=B;break;default:B=l.bp}if(0===B)return p;var I=[];s.hasAbility("Technician")&&B<=60||s.hasAbility("Flare Boost")&&s.hasStatus("brn")&&"Special"===l.category||s.hasAbility("Toxic Boost")&&s.hasStatus("psn","tox")&&"Physical"===l.category?(I.push(6144),u.attackerAbility=s.ability):s.hasAbility("Analytic")&&"first"!==O?(I.push(5325),u.attackerAbility=s.ability):s.hasAbility("Sand Force")&&f.hasWeather("Sand")&&l.hasType("Rock","Ground","Steel")?(I.push(5325),u.attackerAbility=s.ability,u.weather=f.weather):(s.hasAbility("Reckless")&&(l.recoil||l.hasCrashDamage)||s.hasAbility("Iron Fist")&&l.flags.punch)&&(I.push(4915),u.attackerAbility=s.ability),n.hasAbility("Heatproof")&&l.hasType("Fire")?(I.push(2048),u.defenderAbility=n.ability):n.hasAbility("Dry Skin")&&l.hasType("Fire")&&(I.push(5120),u.defenderAbility=n.ability),s.hasAbility("Sheer Force")&&l.secondaries&&(I.push(5325),u.attackerAbility=s.ability),s.hasAbility("Rivalry")&&![s.gender,n.gender].includes("N")&&(s.gender===n.gender?(I.push(5120),u.rivalry="buffed"):(I.push(3072),u.rivalry="nerfed"),u.attackerAbility=s.ability),s.item&&(0,i.getItemBoostType)(s.item)===l.type?(I.push(4915),u.attackerItem=s.item):s.hasItem("Muscle Band")&&"Physical"===l.category||s.hasItem("Wise Glasses")&&"Special"===l.category?(I.push(4505),u.attackerItem=s.item):s.hasItem("Adamant Orb")&&s.named("Dialga")&&l.hasType("Steel","Dragon")||s.hasItem("Lustrous Orb")&&s.named("Palkia")&&l.hasType("Water","Dragon")||s.hasItem("Griseous Orb")&&s.named("Giratina-Origin")&&l.hasType("Ghost","Dragon")?(I.push(4915),u.attackerItem=s.item):s.hasItem("".concat(l.type," Gem"))&&(I.push(t.num>5?5325:6144),u.attackerItem=s.item),l.named("Facade")&&s.hasStatus("brn","par","psn","tox")||l.named("Brine")&&n.curHP()<=n.maxHP()/2||l.named("Venoshock")&&n.hasStatus("psn","tox")?(I.push(8192),u.moveBP=2*B):t.num>5&&l.named("Knock Off")&&!x?(I.push(6144),u.moveBP=1.5*B):l.named("Solar Beam")&&f.hasWeather("Rain","Heavy Rain","Sand","Hail")&&(I.push(2048),u.moveBP=B/2,u.weather=f.weather),f.attackerSide.isHelpingHand&&(I.push(6144),u.isHelpingHand=!0),h||m||y||v?(I.push(5325),u.attackerAbility=s.ability):s.hasAbility("Mega Launcher")&&l.flags.pulse||s.hasAbility("Strong Jaw")&&l.flags.bite?(I.push(6144),u.attackerAbility=s.ability):s.hasAbility("Tough Claws")&&l.flags.contact&&(I.push(5325),u.attackerAbility=s.ability);var z,R="".concat(l.type," Aura"),H=s.hasAbility(R),_=n.hasAbility(R),L=s.hasAbility("Aura Break")||n.hasAbility("Aura Break"),W=f.isAuraBreak,Z=f.isFairyAura&&"Fairy"===l.type,U=f.isDarkAura&&"Dark"===l.type;(H||_||Z||U)&&(W||L?(I.push(3072),u.attackerAbility=s.ability,u.defenderAbility=n.ability):(I.push(5448),H&&(u.attackerAbility=s.ability),_&&(u.defenderAbility=n.ability))),(0,o.isGrounded)(s,f)&&(f.hasTerrain("Electric")&&l.hasType("Electric")||f.hasTerrain("Grassy")&&l.hasType("Grass"))&&(I.push(6144),u.terrain=f.terrain),(0,o.isGrounded)(n,f)&&(f.hasTerrain("Misty")&&l.hasType("Dragon")||f.hasTerrain("Grassy")&&l.named("Bulldoze","Earthquake"))&&(I.push(2048),u.terrain=f.terrain),B=(0,o.OF16)(Math.max(1,(0,o.pokeRound)(B*(0,o.chainMods)(I,41,2097152)/4096)));var j=l.named("Foul Play")?n:s,K="Special"===l.category?"spa":"atk";u.attackEVs=l.named("Foul Play")?(0,o.getEVDescriptionText)(t,n,K,n.nature):(0,o.getEVDescriptionText)(t,s,K,s.nature),0===j.boosts[K]||g&&j.boosts[K]<0?z=j.rawStats[K]:n.hasAbility("Unaware")?(z=j.rawStats[K],u.defenderAbility=n.ability):(z=j.stats[K],u.attackBoost=j.boosts[K]),s.hasAbility("Hustle")&&"Physical"===l.category&&(z=(0,o.pokeRound)(3*z/2),u.attackerAbility=s.ability);var V,q=[];n.hasAbility("Thick Fat")&&l.hasType("Fire","Ice")&&(q.push(2048),u.defenderAbility=n.ability),s.hasAbility("Guts")&&s.status&&"Physical"===l.category||s.curHP()<=s.maxHP()/3&&(s.hasAbility("Overgrow")&&l.hasType("Grass")||s.hasAbility("Blaze")&&l.hasType("Fire")||s.hasAbility("Torrent")&&l.hasType("Water")||s.hasAbility("Swarm")&&l.hasType("Bug"))||"Special"===l.category&&s.abilityOn&&s.hasAbility("Plus","Minus")?(q.push(6144),u.attackerAbility=s.ability):s.hasAbility("Flash Fire")&&s.abilityOn&&l.hasType("Fire")?(q.push(6144),u.attackerAbility="Flash Fire"):s.hasAbility("Solar Power")&&f.hasWeather("Sun","Harsh Sunshine")&&"Special"===l.category||s.named("Cherrim")&&s.hasAbility("Flower Gift")&&f.hasWeather("Sun","Harsh Sunshine")&&"Physical"===l.category?(q.push(6144),u.attackerAbility=s.ability,u.weather=f.weather):f.attackerSide.isFlowerGift&&f.hasWeather("Sun","Harsh Sunshine")&&"Physical"===l.category?(q.push(6144),u.weather=f.weather,u.isFlowerGiftAttacker=!0):s.hasAbility("Defeatist")&&s.curHP()<=s.maxHP()/2||s.hasAbility("Slow Start")&&s.abilityOn&&"Physical"===l.category?(q.push(2048),u.attackerAbility=s.ability):s.hasAbility("Huge Power","Pure Power")&&"Physical"===l.category&&(q.push(8192),u.attackerAbility=s.ability),s.hasItem("Thick Club")&&s.named("Cubone","Marowak","Marowak-Alola")&&"Physical"===l.category||s.hasItem("Deep Sea Tooth")&&s.named("Clamperl")&&"Special"===l.category||s.hasItem("Light Ball")&&s.name.startsWith("Pikachu")&&!l.isZ?(q.push(8192),u.attackerItem=s.item):(s.hasItem("Soul Dew")&&s.named("Latios","Latias","Latios-Mega","Latias-Mega")&&"Special"===l.category||s.hasItem("Choice Band")&&"Physical"===l.category||s.hasItem("Choice Specs")&&"Special"===l.category)&&(q.push(6144),u.attackerItem=s.item),z=(0,o.OF16)(Math.max(1,(0,o.pokeRound)(z*(0,o.chainMods)(q,410,131072)/4096)));var $=l.overrideDefensiveStat||"Physical"===l.category?"def":"spd",Y="def"===$;u.defenseEVs=(0,o.getEVDescriptionText)(t,n,$,n.nature),0===n.boosts[$]||g&&n.boosts[$]>0||l.ignoreDefensive?V=n.rawStats[$]:s.hasAbility("Unaware")?(V=n.rawStats[$],u.attackerAbility=s.ability):(V=n.stats[$],u.defenseBoost=n.boosts[$]),f.hasWeather("Sand")&&n.hasType("Rock")&&!Y&&(V=(0,o.pokeRound)(3*V/2),u.weather=f.weather);var J=[];n.hasAbility("Marvel Scale")&&n.status&&Y?(J.push(6144),u.defenderAbility=n.ability):n.named("Cherrim")&&n.hasAbility("Flower Gift")&&f.hasWeather("Sun","Harsh Sunshine")&&!Y?(J.push(6144),u.defenderAbility=n.ability,u.weather=f.weather):f.defenderSide.isFlowerGift&&f.hasWeather("Sun","Harsh Sunshine")&&!Y&&(J.push(6144),u.weather=f.weather,u.isFlowerGiftDefender=!0),f.hasTerrain("Grassy")&&n.hasAbility("Grass Pelt")&&Y&&(J.push(6144),u.defenderAbility=n.ability),(!Y&&n.hasItem("Soul Dew")&&n.named("Latios","Latias","Latios-Mega","Latias-Mega")||n.hasItem("Eviolite")&&(null===(c=t.species.get((0,a.toID)(n.name)))||void 0===c?void 0:c.nfe)||!Y&&n.hasItem("Assault Vest"))&&(J.push(6144),u.defenderItem=n.item),(n.hasItem("Metal Powder")&&n.named("Ditto")&&Y||n.hasItem("Deep Sea Scale")&&n.named("Clamperl")&&!Y)&&(J.push(8192),u.defenderItem=n.item),n.hasAbility("Fur Coat")&&Y&&(J.push(8192),u.defenderAbility=n.ability),V=(0,o.OF16)(Math.max(1,(0,o.pokeRound)(V*(0,o.chainMods)(J,410,131072)/4096)));var Q=(0,o.getBaseDamage)(s.level,B,z,V),X="Singles"!==f.gameType&&["allAdjacent","allAdjacentFoes"].includes(l.target);X&&(Q=(0,o.pokeRound)((0,o.OF32)(3072*Q)/4096)),s.hasAbility("Parental Bond (Child)")&&(Q=(0,o.pokeRound)((0,o.OF32)(2048*Q)/4096)),f.hasWeather("Sun","Harsh Sunshine")&&l.hasType("Fire")||f.hasWeather("Rain","Heavy Rain")&&l.hasType("Water")?(Q=(0,o.pokeRound)((0,o.OF32)(6144*Q)/4096),u.weather=f.weather):(f.hasWeather("Sun")&&l.hasType("Water")||f.hasWeather("Rain")&&l.hasType("Fire"))&&(Q=(0,o.pokeRound)((0,o.OF32)(2048*Q)/4096),u.weather=f.weather),g&&(Q=Math.floor((0,o.OF32)(Q*(t.num>5?1.5:2))),u.isCritical=g);var ee=4096;s.hasType(l.type)?s.hasAbility("Adaptability")?(ee=8192,u.attackerAbility=s.ability):ee=6144:s.hasAbility("Protean")&&(ee=6144,u.attackerAbility=s.ability);var te=s.hasStatus("brn")&&"Physical"===l.category&&!s.hasAbility("Guts")&&!(l.named("Facade")&&6===t.num);u.isBurned=te;var se=[];if(f.defenderSide.isReflect&&"Physical"===l.category&&!g?(se.push("Singles"!==f.gameType?t.num>5?2732:2703:2048),u.isReflect=!0):f.defenderSide.isLightScreen&&"Special"===l.category&&!g&&(se.push("Singles"!==f.gameType?t.num>5?2732:2703:2048),u.isLightScreen=!0),!n.hasAbility("Multiscale")||n.curHP()!==n.maxHP()||f.defenderSide.isSR||f.defenderSide.spikes&&!n.hasType("Flying")||s.hasAbility("Parental Bond (Child)")||(se.push(2048),u.defenderAbility=n.ability),s.hasAbility("Tinted Lens")&&T<1&&(se.push(8192),u.attackerAbility=s.ability),f.defenderSide.isFriendGuard&&(se.push(3072),u.isFriendGuard=!0),s.hasAbility("Sniper")&&g&&(se.push(6144),u.attackerAbility=s.ability),n.hasAbility("Solid Rock","Filter")&&T>1&&(se.push(3072),u.defenderAbility=n.ability),s.hasItem("Metronome")&&l.timesUsedWithMetronome>=1){var ae=Math.floor(l.timesUsedWithMetronome);ae<=4?se.push(4096+819*ae):se.push(8192),u.attackerItem=s.item}s.hasItem("Expert Belt")&&T>1&&!l.isZ?(se.push(4915),u.attackerItem=s.item):s.hasItem("Life Orb")&&(se.push(5324),u.attackerItem=s.item),l.hasType((0,i.getBerryResistType)(n.item))&&(T>1||l.hasType("Normal"))&&!s.hasAbility("Unnerve")&&(se.push(2048),u.defenderItem=n.item),f.defenderSide.isProtected&&l.isZ&&s.item&&s.item.includes(" Z")&&(se.push(1024),u.isProtected=!0);var ie,re=(0,o.chainMods)(se,41,131072);if(s.hasAbility("Parental Bond")&&1===l.hits&&!X){var oe=s.clone();oe.ability="Parental Bond (Child)",(0,o.checkMultihitBoost)(t,oe,n,l,f,u),ie=e(t,oe,n,l,f).damage,u.attackerAbility=s.ability}for(var ne=[],le=0;le<16;le++)ne[le]=(0,o.getFinalDamage)(Q,le,T,te,ee,re);if(l.dropsStats&&(l.timesUsed||0)>1){var fe=s.hasAbility("Simple")?2:1;u.moveTurns="over ".concat(l.timesUsed," turns");for(var ce=s.hasItem("White Herb"),ue=!1,pe=s.boosts[K],ge=function(e){var t=(0,o.getModifiedStat)(z,pe),a=0;ne=ne.map((function(i){if(e){var r=(0,o.getBaseDamage)(s.level,B,t,V),n=(0,o.getFinalDamage)(r,a,T,te,ee,re);return a++,i+n}return i})),s.hasAbility("Contrary")?(pe=Math.min(6,pe+l.dropsStats),u.attackerAbility=s.ability):(pe=Math.max(-6,pe-l.dropsStats*fe),s.hasAbility("Simple")&&(u.attackerAbility=s.ability)),ce&&s.boosts[K]<0&&!ue&&(pe+=l.dropsStats*fe,ue=!0,u.attackerItem=s.item)},de=0;de<l.timesUsed;de++)ge(de)}return u.attackBoost=l.named("Foul Play")?n.boosts[K]:s.boosts[K],p.damage=ie?[ne,ie]:ne,p}},9038:(e,t,s)=>{"use strict";t.__esModule=!0,t.calculateFinalModsSMSSSV=t.calculateDfModsSMSSSV=t.calculateDefenseSMSSSV=t.calculateAtModsSMSSSV=t.calculateAttackSMSSSV=t.calculateBPModsSMSSSV=t.calculateBasePowerSMSSSV=t.calculateSMSSSV=void 0;var a=s(7094),i=s(3193),r=s(6314),o=s(6748);function n(e,t,s,a,r,n,f){var c,u,p=t.stats.spe>s.stats.spe?"first":"last";switch(a.name){case"Payback":u=a.bp*("last"===p?2:1),f.moveBP=u;break;case"Bolt Beak":case"Fishious Rend":u=a.bp*("last"!==p?2:1),f.moveBP=u;break;case"Pursuit":var g="out"===r.defenderSide.isSwitching;u=a.bp*(g?2:1),g&&(f.isSwitching="out"),f.moveBP=u;break;case"Electro Ball":var d=Math.floor(t.stats.spe/s.stats.spe);u=d>=4?150:d>=3?120:d>=2?80:d>=1?60:40,0===s.stats.spe&&(u=40),f.moveBP=u;break;case"Gyro Ball":u=Math.min(150,Math.floor(25*s.stats.spe/t.stats.spe)+1),0===t.stats.spe&&(u=1),f.moveBP=u;break;case"Punishment":u=Math.min(200,60+20*(0,o.countBoosts)(e,s.boosts)),f.moveBP=u;break;case"Low Kick":case"Grass Knot":var h=s.weightkg*(0,o.getWeightFactor)(s);u=h>=200?120:h>=100?100:h>=50?80:h>=25?60:h>=10?40:20,f.moveBP=u;break;case"Hex":case"Infernal Parade":u=a.bp*(s.status||s.hasAbility("Comatose")?2:1),f.moveBP=u;break;case"Barb Barrage":u=a.bp*(s.hasStatus("psn","tox")?2:1),f.moveBP=u;break;case"Heavy Slam":case"Heat Crash":var m=t.weightkg*(0,o.getWeightFactor)(t)/(s.weightkg*(0,o.getWeightFactor)(s));u=m>=5?120:m>=4?100:m>=3?80:m>=2?60:40,f.moveBP=u;break;case"Stored Power":case"Power Trip":u=20+20*(0,o.countBoosts)(e,t.boosts),f.moveBP=u;break;case"Acrobatics":u=a.bp*(t.hasItem("Flying Gem")||!t.item?2:1),f.moveBP=u;break;case"Assurance":u=a.bp*(s.hasAbility("Parental Bond (Child)")?2:1);break;case"Wake-Up Slap":u=a.bp*(s.hasStatus("slp")||s.hasAbility("Comatose")?2:1),f.moveBP=u;break;case"Smelling Salts":u=a.bp*(s.hasStatus("par")?2:1),f.moveBP=u;break;case"Weather Ball":u=a.bp*(r.weather&&!r.hasWeather("Strong Winds")?2:1),r.hasWeather("Sun","Harsh Sunshine","Rain","Heavy Rain")&&t.hasItem("Utility Umbrella")&&(u=a.bp),f.moveBP=u;break;case"Terrain Pulse":u=a.bp*((0,o.isGrounded)(t,r)&&r.terrain?2:1),f.moveBP=u;break;case"Rising Voltage":u=a.bp*((0,o.isGrounded)(s,r)&&r.hasTerrain("Electric")?2:1),f.moveBP=u;break;case"Psyblade":u=a.bp*(r.hasTerrain("Electric")?1.5:1),r.hasTerrain("Electric")&&(f.moveBP=u,f.terrain=r.terrain);break;case"Fling":u=(0,i.getFlingPower)(t.item),f.moveBP=u,f.attackerItem=t.item;break;case"Dragon Energy":case"Eruption":case"Water Spout":u=Math.max(1,Math.floor(150*t.curHP()/t.maxHP())),f.moveBP=u;break;case"Flail":case"Reversal":var y=Math.floor(48*t.curHP()/t.maxHP());u=y<=1?200:y<=4?150:y<=9?100:y<=16?80:y<=32?40:20,f.moveBP=u;break;case"Natural Gift":(null===(c=t.item)||void 0===c?void 0:c.includes("Berry"))?(u=(0,i.getNaturalGift)(e,t.item).p,f.attackerItem=t.item,f.moveBP=a.bp):u=a.bp;break;case"Nature Power":switch(a.category="Special",a.secondaries=!0,r.terrain){case"Electric":u=90,f.moveName="Thunderbolt";break;case"Grassy":u=90,f.moveName="Energy Ball";break;case"Misty":u=95,f.moveName="Moonblast";break;case"Psychic":u=90,f.moveName="Psychic";break;default:u=80,f.moveName="Tri Attack"}break;case"Water Shuriken":u=t.named("Greninja-Ash")&&t.hasAbility("Battle Bond")?20:15,f.moveBP=u;break;case"Triple Axel":u=2===a.hits?30:3===a.hits?40:20,f.moveBP=u;break;case"Triple Kick":u=2===a.hits?15:3===a.hits?30:10,f.moveBP=u;break;case"Crush Grip":case"Wring Out":u=100*Math.floor(4096*s.curHP()/s.maxHP()),u=Math.floor(Math.floor((120*u+2048-1)/4096)/100)||1,f.moveBP=u;break;default:u=a.bp}if(0===u)return 0;a.named("Breakneck Blitz","Bloom Doom","Inferno Overdrive","Hydro Vortex","Gigavolt Havoc","Subzero Slammer","Supersonic Skystrike","Savage Spin-Out","Acid Downpour","Tectonic Rage","Continental Crush","All-Out Pummeling","Shattered Psyche","Never-Ending Nightmare","Devastating Drake","Black Hole Eclipse","Corkscrew Crash","Twinkle Tackle")&&(f.moveBP=a.bp);var v=l(e,t,s,a,r,f,u,n,p);return u=(0,o.OF16)(Math.max(1,(0,o.pokeRound)(u*(0,o.chainMods)(v,41,2097152)/4096))),t.teraType&&a.type===t.teraType&&t.hasType(t.teraType)&&1===a.hits&&a.priority<=0&&a.bp>0&&!a.named("Dragon Energy","Eruption","Water Spout")&&u<60&&e.num>=9&&(u=60,f.moveBP=60),u}function l(e,t,s,r,n,l,f,c,u){var p=[],g=!s.item||s.named("Dialga-Origin")&&s.hasItem("Adamant Crystal")||s.named("Palkia-Origin")&&s.hasItem("Lustrous Globe")||s.name.includes("Giratina-Origin")&&s.item.includes("Griseous")||s.name.includes("Arceus")&&s.item.includes("Plate")||s.name.includes("Genesect")&&s.item.includes("Drive")||s.named("Groudon","Groudon-Primal")&&s.hasItem("Red Orb")||s.named("Kyogre","Kyogre-Primal")&&s.hasItem("Blue Orb")||s.name.includes("Silvally")&&s.item.includes("Memory")||s.item.includes(" Z")||s.named("Zacian")&&s.hasItem("Rusted Sword")||s.named("Zamazenta")&&s.hasItem("Rusted Shield")||s.named("Venomicon-Epilogue")&&s.hasItem("Vile Vial");if(!g&&s.item){var d=e.items.get((0,a.toID)(s.item));g=!!d.megaEvolves&&s.name.includes(d.megaEvolves)}if(r.named("Facade")&&t.hasStatus("brn","par","psn","tox")||r.named("Brine")&&s.curHP()<=s.maxHP()/2||r.named("Venoshock")&&s.hasStatus("psn","tox")||r.named("Lash Out")&&(0,o.countBoosts)(e,t.boosts)<0)p.push(8192),l.moveBP=2*f;else if(r.named("Expanding Force")&&(0,o.isGrounded)(t,n)&&n.hasTerrain("Psychic"))r.target="allAdjacentFoes",p.push(6144),l.moveBP=1.5*f;else if(r.named("Knock Off")&&!g||r.named("Misty Explosion")&&(0,o.isGrounded)(t,n)&&n.hasTerrain("Misty")||r.named("Grav Apple")&&n.isGravity)p.push(6144),l.moveBP=1.5*f;else if(r.named("Solar Beam","Solar Blade")&&n.hasWeather("Rain","Heavy Rain","Sand","Hail","Snow"))p.push(2048),l.moveBP=f/2,l.weather=n.weather;else if(r.named("Collision Course","Electro Drift")){var h=t.hasAbility("Scrappy")||n.defenderSide.isForesight,m=s.hasItem("Ring Target")&&!s.hasAbility("Klutz"),y=s.teraType?[s.teraType]:s.types;(0,o.getMoveEffectiveness)(e,r,y[0],h,n.isGravity,m)*(y[1]?(0,o.getMoveEffectiveness)(e,r,y[1],h,n.isGravity,m):1)>=2&&(p.push(5461),l.moveBP=f*(5461/4096))}n.attackerSide.isHelpingHand&&(p.push(6144),l.isHelpingHand=!0);var v=e.num>7?5325:6144;(0,o.isGrounded)(t,n)&&(n.hasTerrain("Electric")&&r.hasType("Electric")||n.hasTerrain("Grassy")&&r.hasType("Grass")||n.hasTerrain("Psychic")&&r.hasType("Psychic"))&&(p.push(v),l.terrain=n.terrain),(0,o.isGrounded)(s,n)&&(n.hasTerrain("Misty")&&r.hasType("Dragon")||n.hasTerrain("Grassy")&&r.named("Bulldoze","Earthquake"))&&(p.push(2048),l.terrain=n.terrain),(t.hasAbility("Technician")&&f<=60||t.hasAbility("Flare Boost")&&t.hasStatus("brn")&&"Special"===r.category||t.hasAbility("Toxic Boost")&&t.hasStatus("psn","tox")&&"Physical"===r.category||t.hasAbility("Mega Launcher")&&r.flags.pulse||t.hasAbility("Strong Jaw")&&r.flags.bite||t.hasAbility("Steely Spirit")&&r.hasType("Steel")||t.hasAbility("Sharpness")&&r.flags.slicing)&&(p.push(6144),l.attackerAbility=t.ability);var b="".concat(r.type," Aura"),P=t.hasAbility(b),w=s.hasAbility(b),S=t.hasAbility("Aura Break")||s.hasAbility("Aura Break"),k=n.isAuraBreak,T=n.isFairyAura&&"Fairy"===r.type,x=n.isDarkAura&&"Dark"===r.type;return(P||w||T||x)&&(k||S?(p.push(3072),l.attackerAbility=t.ability,l.defenderAbility=s.ability):(p.push(5448),P&&(l.attackerAbility=t.ability),w&&(l.defenderAbility=s.ability))),(t.hasAbility("Sheer Force")&&(r.secondaries||r.named("Jet Punch","Order Up"))&&!r.isMax||t.hasAbility("Sand Force")&&n.hasWeather("Sand")&&r.hasType("Rock","Ground","Steel")||t.hasAbility("Analytic")&&("first"!==u||"out"===n.defenderSide.isSwitching)||t.hasAbility("Tough Claws")&&r.flags.contact||t.hasAbility("Punk Rock")&&r.flags.sound)&&(p.push(5325),l.attackerAbility=t.ability),n.attackerSide.isBattery&&"Special"===r.category&&(p.push(5325),l.isBattery=!0),n.attackerSide.isPowerSpot&&(p.push(5325),l.isPowerSpot=!0),t.hasAbility("Rivalry")&&![t.gender,s.gender].includes("N")&&(t.gender===s.gender?(p.push(5120),l.rivalry="buffed"):(p.push(3072),l.rivalry="nerfed"),l.attackerAbility=t.ability),!r.isMax&&c&&p.push(4915),(t.hasAbility("Reckless")&&(r.recoil||r.hasCrashDamage)||t.hasAbility("Iron Fist")&&r.flags.punch)&&(p.push(4915),l.attackerAbility=t.ability),t.hasItem("Punching Glove")&&r.flags.punch&&(p.push(4506),l.attackerItem=t.item),s.hasAbility("Heatproof")&&r.hasType("Fire")?(p.push(2048),l.defenderAbility=s.ability):s.hasAbility("Dry Skin")&&r.hasType("Fire")&&(p.push(5120),l.defenderAbility=s.ability),t.hasAbility("Supreme Overlord")&&t.alliesFainted&&(p.push([4096,4506,4915,5325,5734,6144][Math.min(5,t.alliesFainted)]),l.attackerAbility=t.ability,l.alliesFainted=t.alliesFainted),t.hasItem("".concat(r.type," Gem"))?(p.push(5325),l.attackerItem=t.item):t.hasItem("Adamant Crystal")&&t.named("Dialga-Origin")||t.hasItem("Adamant Orb")&&t.named("Dialga")&&r.hasType("Steel","Dragon")||t.hasItem("Lustrous Orb")&&t.named("Palkia")||t.hasItem("Lustrous Globe")&&t.named("Palkia-Origin")&&r.hasType("Water","Dragon")||(t.hasItem("Griseous Orb")||t.hasItem("Griseous Core"))&&(t.named("Giratina-Origin")||t.named("Giratina"))&&r.hasType("Ghost","Dragon")||t.hasItem("Vile Vial")&&t.named("Venomicon-Epilogue")&&r.hasType("Poison","Flying")||t.hasItem("Soul Dew")&&t.named("Latios","Latias","Latios-Mega","Latias-Mega")&&r.hasType("Psychic","Dragon")||t.item&&r.hasType((0,i.getItemBoostType)(t.item))?(p.push(4915),l.attackerItem=t.item):(t.hasItem("Muscle Band")&&"Physical"===r.category||t.hasItem("Wise Glasses")&&"Special"===r.category)&&(p.push(4505),l.attackerItem=t.item),p}function f(e,t,s,a,i,r,n){var l;void 0===n&&(n=!1);var f=a.named("Foul Play")?s:t;(a.named("Photon Geyser","Light That Burns The Sky")||a.named("Tera Blast")&&f.teraType)&&(a.category=f.stats.atk>f.stats.spa?"Physical":"Special");var u=a.named("Shell Side Arm")&&"Physical"===(0,o.getShellSideArmCategory)(t,s)?"atk":a.named("Body Press")?"def":"Special"===a.category?"spa":"atk";r.attackEVs=a.named("Foul Play")?(0,o.getEVDescriptionText)(e,s,u,s.nature):(0,o.getEVDescriptionText)(e,t,u,t.nature),0===f.boosts[u]||n&&f.boosts[u]<0?l=f.rawStats[u]:s.hasAbility("Unaware")?(l=f.rawStats[u],r.defenderAbility=s.ability):(l=f.stats[u],r.attackBoost=f.boosts[u]),t.hasAbility("Hustle")&&"Physical"===a.category&&(l=(0,o.pokeRound)(3*l/2),r.attackerAbility=t.ability);var p=c(0,t,s,a,i,r);return(0,o.OF16)(Math.max(1,(0,o.pokeRound)(l*(0,o.chainMods)(p,410,131072)/4096)))}function c(e,t,s,a,i,r){var n=[];t.hasAbility("Slow Start")&&t.abilityOn&&("Physical"===a.category||"Special"===a.category&&a.isZ)||t.hasAbility("Defeatist")&&t.curHP()<=t.maxHP()/2?(n.push(2048),r.attackerAbility=t.ability):t.hasAbility("Solar Power")&&i.hasWeather("Sun","Harsh Sunshine")&&"Special"===a.category||t.named("Cherrim")&&t.hasAbility("Flower Gift")&&i.hasWeather("Sun","Harsh Sunshine")&&"Physical"===a.category||t.hasAbility("Gorilla Tactics")&&"Physical"===a.category&&!t.isDynamaxed?(n.push(6144),r.attackerAbility=t.ability,r.weather=i.weather):i.attackerSide.isFlowerGift&&i.hasWeather("Sun","Harsh Sunshine")&&"Physical"===a.category?(n.push(6144),r.weather=i.weather,r.isFlowerGiftAttacker=!0):t.hasAbility("Guts")&&t.status&&"Physical"===a.category||t.curHP()<=t.maxHP()/3&&(t.hasAbility("Overgrow")&&a.hasType("Grass")||t.hasAbility("Blaze")&&a.hasType("Fire")||t.hasAbility("Torrent")&&a.hasType("Water")||t.hasAbility("Swarm")&&a.hasType("Bug"))||"Special"===a.category&&t.abilityOn&&t.hasAbility("Plus","Minus")?(n.push(6144),r.attackerAbility=t.ability):t.hasAbility("Flash Fire")&&t.abilityOn&&a.hasType("Fire")?(n.push(6144),r.attackerAbility="Flash Fire"):t.hasAbility("Steelworker")&&a.hasType("Steel")||t.hasAbility("Dragon's Maw")&&a.hasType("Dragon")||t.hasAbility("Transistor")&&a.hasType("Electric")||t.hasAbility("Rocky Payload")&&a.hasType("Rock")?(n.push(6144),r.attackerAbility=t.ability):(t.hasAbility("Stakeout")&&t.abilityOn||t.hasAbility("Water Bubble")&&a.hasType("Water")||t.hasAbility("Huge Power","Pure Power")&&"Physical"===a.category)&&(n.push(8192),r.attackerAbility=t.ability),(s.hasAbility("Thick Fat")&&a.hasType("Fire","Ice")||s.hasAbility("Water Bubble")&&a.hasType("Fire")||s.hasAbility("Purifying Salt")&&a.hasType("Ghost"))&&(n.push(2048),r.defenderAbility=s.ability);var l=s.hasAbility("Tablets of Ruin")||i.isTabletsOfRuin,f=s.hasAbility("Vessel of Ruin")||i.isVesselOfRuin;return(l&&"Physical"===a.category||f&&"Special"===a.category)&&(s.hasAbility("Tablets of Ruin")||s.hasAbility("Vessel of Ruin")?r.defenderAbility=s.ability:r["Special"===a.category?"isVesselOfRuin":"isTabletsOfRuin"]=!0,n.push(3072)),(t.hasAbility("Protosynthesis")&&(i.hasWeather("Sun")||t.hasItem("Booster Energy"))||t.hasAbility("Quark Drive")&&(i.hasTerrain("Electric")||t.hasItem("Booster Energy")))&&("Physical"===a.category&&"atk"===(0,o.getMostProficientStat)(t)||"Special"===a.category&&"spa"===(0,o.getMostProficientStat)(t))&&(n.push(5325),r.attackerAbility=t.ability),(t.hasAbility("Hadron Engine")&&"Special"===a.category&&i.hasTerrain("Electric")&&(0,o.isGrounded)(t,i)||t.hasAbility("Orichalcum Pulse")&&"Physical"===a.category&&i.hasWeather("Sun","Harsh Sunshine")&&!t.hasItem("Utility Umbrella"))&&(n.push(5461),r.attackerAbility=t.ability),t.hasItem("Thick Club")&&t.named("Cubone","Marowak","Marowak-Alola","Marowak-Alola-Totem")&&"Physical"===a.category||t.hasItem("Deep Sea Tooth")&&t.named("Clamperl")&&"Special"===a.category||t.hasItem("Light Ball")&&t.name.includes("Pikachu")&&!a.isZ?(n.push(8192),r.attackerItem=t.item):a.isZ||a.isMax||!(t.hasItem("Choice Band")&&"Physical"===a.category||t.hasItem("Choice Specs")&&"Special"===a.category)||(n.push(6144),r.attackerItem=t.item),n}function u(e,t,s,a,i,r,n){var l;void 0===n&&(n=!1);var f="def"===a.overrideDefensiveStat||"Physical"===a.category||a.named("Shell Side Arm")&&"Physical"===(0,o.getShellSideArmCategory)(t,s),c=f?"def":"spd";r.defenseEVs=(0,o.getEVDescriptionText)(e,s,c,s.nature),0===s.boosts[c]||n&&s.boosts[c]>0||a.ignoreDefensive?l=s.rawStats[c]:t.hasAbility("Unaware")?(l=s.rawStats[c],r.attackerAbility=t.ability):(l=s.stats[c],r.defenseBoost=s.boosts[c]),i.hasWeather("Sand")&&s.hasType("Rock")&&!f&&(l=(0,o.pokeRound)(3*l/2),r.weather=i.weather),i.hasWeather("Snow")&&s.hasType("Ice")&&f&&(l=(0,o.pokeRound)(3*l/2),r.weather=i.weather);var u=p(e,t,s,0,i,r,n,f);return(0,o.OF16)(Math.max(1,(0,o.pokeRound)(l*(0,o.chainMods)(u,410,131072)/4096)))}function p(e,t,s,i,r,n,l,f){var c;void 0===l&&(l=!1),void 0===f&&(f=!1);var u=[];s.hasAbility("Marvel Scale")&&s.status&&f?(u.push(6144),n.defenderAbility=s.ability):s.named("Cherrim")&&s.hasAbility("Flower Gift")&&r.hasWeather("Sun","Harsh Sunshine")&&!f?(u.push(6144),n.defenderAbility=s.ability,n.weather=r.weather):r.defenderSide.isFlowerGift&&r.hasWeather("Sun","Harsh Sunshine")&&!f?(u.push(6144),n.weather=r.weather,n.isFlowerGiftDefender=!0):s.hasAbility("Grass Pelt")&&r.hasTerrain("Grassy")&&f?(u.push(6144),n.defenderAbility=s.ability):s.hasAbility("Fur Coat")&&f&&(u.push(8192),n.defenderAbility=s.ability);var p=t.hasAbility("Sword of Ruin")||r.isSwordOfRuin,g=t.hasAbility("Beads of Ruin")||r.isBeadsOfRuin;return(p&&f||g&&!f)&&(t.hasAbility("Sword of Ruin")||t.hasAbility("Beads of Ruin")?n.attackerAbility=t.ability:n[f?"isSwordOfRuin":"isBeadsOfRuin"]=!0,u.push(3072)),(s.hasAbility("Protosynthesis")&&(r.hasWeather("Sun")||t.hasItem("Booster Energy"))||s.hasAbility("Quark Drive")&&(r.hasTerrain("Electric")||t.hasItem("Booster Energy")))&&(f&&"def"===(0,o.getMostProficientStat)(s)||!f&&"spd"===(0,o.getMostProficientStat)(s))&&(n.defenderAbility=s.ability,u.push(5324)),s.hasItem("Eviolite")&&(null===(c=e.species.get((0,a.toID)(s.name)))||void 0===c?void 0:c.nfe)||!f&&s.hasItem("Assault Vest")?(u.push(6144),n.defenderItem=s.item):(s.hasItem("Metal Powder")&&s.named("Ditto")&&f||s.hasItem("Deep Sea Scale")&&s.named("Clamperl")&&!f)&&(u.push(8192),n.defenderItem=s.item),u}function g(e,t,s,a,r,o,n,l){void 0===n&&(n=!1);var f=[];if(!r.defenderSide.isReflect||"Physical"!==a.category||n||r.defenderSide.isAuroraVeil?!r.defenderSide.isLightScreen||"Special"!==a.category||n||r.defenderSide.isAuroraVeil||(f.push("Singles"!==r.gameType?2732:2048),o.isLightScreen=!0):(f.push("Singles"!==r.gameType?2732:2048),o.isReflect=!0),r.defenderSide.isAuroraVeil&&!n&&(f.push("Singles"!==r.gameType?2732:2048),o.isAuroraVeil=!0),t.hasAbility("Neuroforce")&&l>1?(f.push(5120),o.attackerAbility=t.ability):t.hasAbility("Sniper")&&n?(f.push(6144),o.attackerAbility=t.ability):t.hasAbility("Tinted Lens")&&l<1&&(f.push(8192),o.attackerAbility=t.ability),s.isDynamaxed&&a.named("Dynamax Cannon","Behemoth Blade","Behemoth Bash")&&f.push(8192),!s.hasAbility("Multiscale","Shadow Shield")||s.curHP()!==s.maxHP()||(r.defenderSide.isSR||r.defenderSide.spikes&&!s.hasType("Flying"))&&!s.hasItem("Heavy-Duty Boots")||t.hasAbility("Parental Bond (Child)")||(f.push(2048),o.defenderAbility=s.ability),(s.hasAbility("Fluffy")&&a.flags.contact&&!t.hasAbility("Long Reach")||s.hasAbility("Punk Rock")&&a.flags.sound||s.hasAbility("Ice Scales")&&"Special"===a.category)&&(f.push(2048),o.defenderAbility=s.ability),s.hasAbility("Solid Rock","Filter","Prism Armor")&&l>1&&(f.push(3072),o.defenderAbility=s.ability),r.defenderSide.isFriendGuard&&(f.push(3072),o.isFriendGuard=!0),s.hasAbility("Fluffy")&&a.hasType("Fire")&&(f.push(8192),o.defenderAbility=s.ability),t.hasItem("Expert Belt")&&l>1&&!a.isZ)f.push(4915),o.attackerItem=t.item;else if(t.hasItem("Life Orb"))f.push(5324),o.attackerItem=t.item;else if(t.hasItem("Metronome")&&a.timesUsedWithMetronome>=1){var c=Math.floor(a.timesUsedWithMetronome);c<=4?f.push(4096+819*c):f.push(8192),o.attackerItem=t.item}return a.hasType((0,i.getBerryResistType)(s.item))&&(l>1||a.hasType("Normal"))&&!t.hasAbility("Unnerve","As One (Glastrier)","As One (Spectrier)")&&(s.hasAbility("Ripen")?f.push(1024):f.push(2048),o.defenderItem=s.item),f}t.calculateSMSSSV=function e(t,s,l,c,p){(0,o.checkAirLock)(s,p),(0,o.checkAirLock)(l,p),(0,o.checkForecast)(s,p.weather),(0,o.checkForecast)(l,p.weather),(0,o.checkItem)(s,p.isMagicRoom),(0,o.checkItem)(l,p.isMagicRoom),(0,o.checkWonderRoom)(s,p.isWonderRoom),(0,o.checkWonderRoom)(l,p.isWonderRoom),(0,o.checkSeedBoost)(s,p),(0,o.checkSeedBoost)(l,p),(0,o.checkDauntlessShield)(s,t),(0,o.checkDauntlessShield)(l,t),(0,o.computeFinalStats)(t,s,l,p,"def","spd","spe"),(0,o.checkIntimidate)(t,s,l),(0,o.checkIntimidate)(t,l,s),(0,o.checkDownload)(s,l,p.isWonderRoom),(0,o.checkDownload)(l,s,p.isWonderRoom),(0,o.checkIntrepidSword)(s,t),(0,o.checkIntrepidSword)(l,t),(0,o.computeFinalStats)(t,s,l,p,"atk","spa"),(0,o.checkInfiltrator)(s,p.defenderSide),(0,o.checkInfiltrator)(l,p.attackerSide);var d={attackerName:s.name,attackerTera:s.teraType,moveName:c.name,defenderName:l.name,defenderTera:l.teraType,isDefenderDynamaxed:l.isDynamaxed,isWonderRoom:p.isWonderRoom},h=new r.Result(t,s,l,c,p,0,d);if("Status"===c.category&&!c.named("Nature Power"))return h;var m=c.breaksProtect||c.isZ||s.isDynamaxed||s.hasAbility("Unseen Fist")&&c.flags.contact;if(p.defenderSide.isProtected&&!m)return d.isProtected=!0,h;var y=l.hasAbility("Full Metal Body","Neutralizing Gas","Prism Armor","Shadow Shield"),v=s.hasAbility("Mold Breaker","Teravolt","Turboblaze"),b=c.named("G-Max Drum Solo","G-Max Fire Ball","G-Max Hydrosnipe","Light That Burns the Sky","Menacing Moonraze Maelstrom","Moongeist Beam","Photon Geyser","Searing Sunraze Smash","Sunsteel Strike");y||l.hasAbility("Poison Heal")||!v&&!b||(v&&(d.attackerAbility=s.ability),l.hasItem("Ability Shield")?d.defenderItem=l.item:l.ability="");var P=!l.hasAbility("Battle Armor","Shell Armor")&&(c.isCrit||s.hasAbility("Merciless")&&l.hasStatus("psn","tox"))&&1===c.timesUsed,w=c.type;if(c.named("Weather Ball")){var S=s.hasItem("Utility Umbrella");w=p.hasWeather("Sun","Harsh Sunshine")&&!S?"Fire":p.hasWeather("Rain","Heavy Rain")&&!S?"Water":p.hasWeather("Sand")?"Rock":p.hasWeather("Hail","Snow")?"Ice":"Normal",d.weather=p.weather,d.moveType=w}else c.named("Judgment")&&s.item&&s.item.includes("Plate")?w=(0,i.getItemBoostType)(s.item):c.named("Techno Blast")&&s.item&&s.item.includes("Drive")?w=(0,i.getTechnoBlast)(s.item):c.named("Multi-Attack")&&s.item&&s.item.includes("Memory")?w=(0,i.getMultiAttack)(s.item):c.named("Natural Gift")&&s.item&&s.item.includes("Berry")?(w=(0,i.getNaturalGift)(t,s.item).t,d.moveType=w,d.attackerItem=s.item):c.named("Nature Power")||c.named("Terrain Pulse")&&(0,o.isGrounded)(s,p)?(w=p.hasTerrain("Electric")?"Electric":p.hasTerrain("Grassy")?"Grass":p.hasTerrain("Misty")?"Fairy":p.hasTerrain("Psychic")?"Psychic":"Normal",d.terrain=p.terrain,d.moveType=w):c.named("Revelation Dance")?w=s.types[0]:c.named("Aura Wheel")?s.named("Morpeko")?w="Electric":s.named("Morpeko-Hangry")&&(w="Dark"):c.named("Raging Bull")&&(s.named("Tauros-Paldea-Combat")?w="Fighting":s.named("Tauros-Paldea-Blaze")?w="Fire":s.named("Tauros-Paldea-Aqua")&&(w="Water"));var k=!1,T=!1,x=!1,M=!1,D=!1,A=!1,B=!1,O=c.named("Revelation Dance","Judgment","Nature Power","Techno Blast","Multi Attack","Natural Gift","Weather Ball","Terrain Pulse")||c.named("Tera Blast")&&s.teraType;if(!c.isZ&&!O){var C=c.hasType("Normal");(T=s.hasAbility("Aerilate")&&C)?w="Flying":(D=s.hasAbility("Galvanize")&&C)?w="Electric":(A=s.hasAbility("Liquid Voice")&&!!c.flags.sound)?w="Water":(x=s.hasAbility("Pixilate")&&C)?w="Fairy":(M=s.hasAbility("Refrigerate")&&C)?w="Ice":(B=s.hasAbility("Normalize"))&&(w="Normal"),D||x||M||T||B?(d.attackerAbility=s.ability,k=!0):A&&(d.attackerAbility=s.ability)}c.named("Tera Blast")&&s.teraType&&(w=s.teraType),c.type=w,(s.hasAbility("Triage")&&c.drain||s.hasAbility("Gale Wings")&&c.hasType("Flying")&&s.curHP()===s.maxHP())&&(c.priority=1,d.attackerAbility=s.ability);var F=s.hasAbility("Scrappy")||p.defenderSide.isForesight,N=l.hasItem("Ring Target")&&!l.hasAbility("Klutz"),E=(0,o.getMoveEffectiveness)(t,c,l.types[0],F,p.isGravity,N)*(l.types[1]?(0,o.getMoveEffectiveness)(t,c,l.types[1],F,p.isGravity,N):1);if(l.teraType&&(E=(0,o.getMoveEffectiveness)(t,c,l.teraType,F,p.isGravity,N)),0===E&&c.hasType("Ground")&&l.hasItem("Iron Ball")&&!l.hasAbility("Klutz")&&(E=1),0===E&&c.named("Thousand Arrows")&&(E=1),0===E)return h;if(c.named("Sky Drop")&&(l.hasType("Flying")||l.weightkg>=200||p.isGravity)||c.named("Synchronoise")&&!l.hasType(s.types[0])&&(!s.types[1]||!l.hasType(s.types[1]))||c.named("Dream Eater")&&!l.hasStatus("slp")&&!l.hasAbility("Comatose")||c.named("Steel Roller")&&!p.terrain||c.named("Poltergeist")&&!l.item)return h;if(p.hasWeather("Harsh Sunshine")&&c.hasType("Water")||p.hasWeather("Heavy Rain")&&c.hasType("Fire"))return d.weather=p.weather,h;if(p.hasWeather("Strong Winds")&&l.hasType("Flying")&&t.types.get((0,a.toID)(c.type)).effectiveness.Flying>1&&(E/=2,d.weather=p.weather),l.hasAbility("Wonder Guard")&&E<=1||c.hasType("Grass")&&l.hasAbility("Sap Sipper")||c.hasType("Fire")&&l.hasAbility("Flash Fire","Well-Baked Body")||c.hasType("Water")&&l.hasAbility("Dry Skin","Storm Drain","Water Absorb")||c.hasType("Electric")&&l.hasAbility("Lightning Rod","Motor Drive","Volt Absorb")||c.hasType("Ground")&&!p.isGravity&&!c.named("Thousand Arrows")&&!l.hasItem("Iron Ball")&&l.hasAbility("Levitate")||c.flags.bullet&&l.hasAbility("Bulletproof")||c.flags.sound&&!c.named("Clangorous Soul")&&l.hasAbility("Soundproof")||c.priority>0&&l.hasAbility("Queenly Majesty","Dazzling","Armor Tail")||c.hasType("Ground")&&l.hasAbility("Earth Eater")||c.flags.wind&&l.hasAbility("Wind Rider"))return d.defenderAbility=l.ability,h;if(c.hasType("Ground")&&!c.named("Thousand Arrows")&&!p.isGravity&&l.hasItem("Air Balloon"))return d.defenderItem=l.item,h;if(c.priority>0&&p.hasTerrain("Psychic")&&(0,o.isGrounded)(l,p))return d.terrain=p.terrain,h;var G=c.named("Heat Crash","Heavy Slam","Low Kick","Grass Knot");if(l.isDynamaxed&&G)return h;d.HPEVs="".concat(l.evs.hp," HP");var I=(0,o.handleFixedDamageMoves)(s,c);if(I)return s.hasAbility("Parental Bond")?(h.damage=[I,I],d.attackerAbility=s.ability):h.damage=I,h;if(c.named("Final Gambit"))return h.damage=s.curHP(),h;if(c.named("Guardian of Alola")){var z=Math.floor(3*l.curHP()/4);return p.defenderSide.isProtected&&s.item&&s.item.includes(" Z")&&(z=Math.ceil(z/4-.5)),h.damage=z,h}if(c.named("Nature's Madness")){var R=p.defenderSide.isProtected?0:Math.floor(l.curHP()/2);return h.damage=R,h}if(c.named("Spectral Thief")){var H=void 0;for(H in l.boosts)l.boosts[H]&&(s.boosts[H]+=s.hasAbility("Contrary")?-l.boosts[H]:l.boosts[H],s.boosts[H]>6&&(s.boosts[H]=6),s.boosts[H]<-6&&(s.boosts[H]=-6),s.stats[H]=(0,o.getModifiedStat)(s.rawStats[H],s.boosts[H]))}c.hits>1&&(d.hits=c.hits),s.stats.spe,l.stats.spe;var _=n(t,s,l,c,p,k,d);if(0===_)return h;var L=f(t,s,l,c,p,d,P),W=c.named("Foul Play")?l:s;(c.named("Photon Geyser","Light That Burns The Sky")||c.named("Tera Blast")&&W.teraType)&&(c.category=W.stats.atk>W.stats.spa?"Physical":"Special");var Z=c.named("Shell Side Arm")&&"Physical"===(0,o.getShellSideArmCategory)(s,l)?"atk":c.named("Body Press")?"def":"Special"===c.category?"spa":"atk",U=u(t,s,l,c,p,d,P),j="def"===c.overrideDefensiveStat||"Physical"===c.category||c.named("Shell Side Arm")&&"Physical"===(0,o.getShellSideArmCategory)(s,l)?"def":"spd",K=(0,o.getBaseDamage)(s.level,_,L,U),V="Singles"!==p.gameType&&["allAdjacent","allAdjacentFoes"].includes(c.target);V&&(K=(0,o.pokeRound)((0,o.OF32)(3072*K)/4096)),s.hasAbility("Parental Bond (Child)")&&(K=(0,o.pokeRound)((0,o.OF32)(1024*K)/4096)),p.hasWeather("Sun")&&c.named("Hydro Steam")&&!s.hasItem("Utility Umbrella")?(K=(0,o.pokeRound)((0,o.OF32)(6144*K)/4096),d.weather=p.weather):l.hasItem("Utility Umbrella")||(p.hasWeather("Sun","Harsh Sunshine")&&c.hasType("Fire")||p.hasWeather("Rain","Heavy Rain")&&c.hasType("Water")?(K=(0,o.pokeRound)((0,o.OF32)(6144*K)/4096),d.weather=p.weather):(p.hasWeather("Sun")&&c.hasType("Water")||p.hasWeather("Rain")&&c.hasType("Fire"))&&(K=(0,o.pokeRound)((0,o.OF32)(2048*K)/4096),d.weather=p.weather)),l.hasItem("Electric Seed","Misty Seed","Grassy Seed","Psychic Seed")&&p.hasTerrain(l.item.substring(0,l.item.indexOf(" ")))&&i.SEED_BOOSTED_STAT[l.item]===j&&(d.defenderItem=l.item),P&&(K=Math.floor((0,o.OF32)(1.5*K)),d.isCritical=P);var q=4096;s.hasOriginalType(c.type)?q+=2048:s.hasAbility("Protean","Libero")&&!s.teraType&&(q+=2048,d.attackerAbility=s.ability);var $=s.teraType;$===c.type&&(q+=2048,d.attackerTera=$),s.hasAbility("Adaptability")&&s.hasType(c.type)&&(q+=$&&s.hasOriginalType($)?1024:2048,d.attackerAbility=s.ability);var Y=s.hasStatus("brn")&&"Physical"===c.category&&!s.hasAbility("Guts")&&!c.named("Facade");d.isBurned=Y;var J=g(0,s,l,c,p,d,P,E),Q=!1;p.defenderSide.isProtected&&(s.isDynamaxed||c.isZ&&s.item&&s.item.includes(" Z"))&&(Q=!0,d.isProtected=!0);var X,ee=(0,o.chainMods)(J,41,131072);if(s.hasAbility("Parental Bond")&&1===c.hits&&!V){var te=s.clone();te.ability="Parental Bond (Child)",(0,o.checkMultihitBoost)(t,te,l,c,p,d),X=e(t,te,l,c,p).damage,d.attackerAbility=s.ability}for(var se=[],ae=0;ae<16;ae++)se[ae]=(0,o.getFinalDamage)(K,ae,E,Y,q,ee,Q);if(c.dropsStats&&c.timesUsed>1){var ie=s.hasAbility("Simple")?2:1;d.moveTurns="over ".concat(c.timesUsed," turns");for(var re=s.hasItem("White Herb"),oe=!1,ne=s.boosts[Z],le=function(e){var t=(0,o.getModifiedStat)(L,ne),a=0;se=se.map((function(i){if(e){var r=(0,o.getBaseDamage)(s.level,_,t,U),n=(0,o.getFinalDamage)(r,a,E,Y,q,ee,Q);return a++,i+n}return i})),s.hasAbility("Contrary")?(ne=Math.min(6,ne+c.dropsStats),d.attackerAbility=s.ability):(ne=Math.max(-6,ne-c.dropsStats*ie),s.hasAbility("Simple")&&(d.attackerAbility=s.ability)),re&&s.boosts[Z]<0&&!oe&&(ne+=c.dropsStats*ie,oe=!0,d.attackerItem=s.item)},fe=0;fe<c.timesUsed;fe++)le(fe)}return d.attackBoost=c.named("Foul Play")?l.boosts[Z]:s.boosts[Z],h.damage=X?[se,X]:se,h},t.calculateBasePowerSMSSSV=n,t.calculateBPModsSMSSSV=l,t.calculateAttackSMSSSV=f,t.calculateAtModsSMSSSV=c,t.calculateDefenseSMSSSV=u,t.calculateDfModsSMSSSV=p,t.calculateFinalModsSMSSSV=g},6748:function(e,t,s){"use strict";var a=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,s=t&&e[t],a=0;if(s)return s.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},i=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o},r=this&&this.__spreadArray||function(e,t,s){if(s||2===arguments.length)for(var a,i=0,r=t.length;i<r;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))};t.__esModule=!0,t.OF32=t.OF16=t.pokeRound=t.handleFixedDamageMoves=t.getEVDescriptionText=t.countBoosts=t.getWeightFactor=t.getShellSideArmCategory=t.getFinalDamage=t.getMostProficientStat=t.getBaseDamage=t.chainMods=t.checkMultihitBoost=t.checkSeedBoost=t.checkInfiltrator=t.checkDauntlessShield=t.checkIntrepidSword=t.checkDownload=t.checkIntimidate=t.checkWonderRoom=t.checkItem=t.checkForecast=t.checkAirLock=t.getMoveEffectiveness=t.getFinalSpeed=t.computeFinalStats=t.getModifiedStat=t.isGrounded=void 0;var o=s(7094),n=s(7221),l=["Macho Brace","Power Anklet","Power Band","Power Belt","Power Bracer","Power Lens","Power Weight"];function f(e,t,s){if(s&&s.num<3)return e=t>=0?Math.floor(e*[1,1.5,2,2.5,3,3.5,4][t]):Math.floor(e*[100,66,50,40,33,28,25][-t]/100),Math.min(999,Math.max(1,e));var a=[[2,8],[2,7],[2,6],[2,5],[2,4],[2,3],[2,2],[3,2],[4,2],[5,2],[6,2],[7,2],[8,2]];return e=d(e*a[6+t][0]),Math.floor(e/a[6+t][1])}function c(e,t,s,a){var o=s.weather||"",n=s.terrain,c=f(t.rawStats.spe,t.boosts.spe,e),d=[];return a.isTailwind&&d.push(8192),t.hasAbility("Unburden")&&t.abilityOn||t.hasAbility("Chlorophyll")&&o.includes("Sun")||t.hasAbility("Sand Rush")&&"Sand"===o||t.hasAbility("Swift Swim")&&o.includes("Rain")||t.hasAbility("Slush Rush")&&["Hail","Snow"].includes(o)||t.hasAbility("Surge Surfer")&&"Electric"===n?d.push(8192):t.hasAbility("Quick Feet")&&t.status?d.push(6144):t.hasAbility("Slow Start")&&t.abilityOn?d.push(2048):"spe"===p(t,e)&&(t.hasAbility("Protosynthesis")&&(o.includes("Sun")||t.hasItem("Booster Energy"))||t.hasAbility("Quark Drive")&&("Electric"===n||t.hasItem("Booster Energy")))&&d.push(6144),t.hasItem("Choice Scarf")?d.push(6144):t.hasItem.apply(t,r(["Iron Ball"],i(l),!1))?d.push(2048):t.hasItem("Quick Powder")&&t.named("Ditto")&&d.push(8192),c=h(g(c*u(d,410,131172)/4096)),t.hasStatus("par")&&!t.hasAbility("Quick Feet")&&(c=Math.floor(h(c*(e.num<7?25:50))/100)),c=Math.min(e.num<=2?999:1e4,c),Math.max(0,c)}function u(e,t,s){var i,r,o=4096;try{for(var n=a(e),l=n.next();!l.done;l=n.next()){var f=l.value;4096!==f&&(o=o*f+2048>>12)}}catch(e){i={error:e}}finally{try{l&&!l.done&&(r=n.return)&&r.call(n)}finally{if(i)throw i.error}}return Math.max(Math.min(o,s),t)}function p(e,t){var s,i,r="atk";try{for(var o=a(["def","spa","spd","spe"]),n=o.next();!n.done;n=o.next()){var l=n.value;f(e.rawStats[l],e.boosts[l],t)>f(e.rawStats[r],e.boosts[r],t)&&(r=l)}}catch(e){s={error:e}}finally{try{n&&!n.done&&(i=o.return)&&i.call(o)}finally{if(s)throw s.error}}return r}function g(e){return e%1>.5?Math.ceil(e):Math.floor(e)}function d(e){return e>65535?e%65536:e}function h(e){return e>4294967295?e%4294967296:e}t.isGrounded=function(e,t){return t.isGravity||e.hasItem("Iron Ball")||!e.hasType("Flying")&&!e.hasAbility("Levitate")&&!e.hasItem("Air Balloon")},t.getModifiedStat=f,t.computeFinalStats=function(e,t,s,r){for(var o,n,l,u,p=[],g=4;g<arguments.length;g++)p[g-4]=arguments[g];var d=[[t,r.attackerSide],[s,r.defenderSide]];try{for(var h=a(d),m=h.next();!m.done;m=h.next()){var y=i(m.value,2),v=y[0],b=y[1];try{for(var P=(l=void 0,a(p)),w=P.next();!w.done;w=P.next()){var S=w.value;"spe"===S?v.stats.spe=c(e,v,r,b):v.stats[S]=f(v.rawStats[S],v.boosts[S],e)}}catch(e){l={error:e}}finally{try{w&&!w.done&&(u=P.return)&&u.call(P)}finally{if(l)throw l.error}}}}catch(e){o={error:e}}finally{try{m&&!m.done&&(n=h.return)&&n.call(h)}finally{if(o)throw o.error}}},t.getFinalSpeed=c,t.getMoveEffectiveness=function(e,t,s,a,i,r){return(r||a)&&"Ghost"===s&&t.hasType("Normal","Fighting")||(r||i)&&"Flying"===s&&t.hasType("Ground")?1:t.named("Freeze-Dry")&&"Water"===s?2:t.named("Flying Press")?e.types.get("fighting").effectiveness[s]*e.types.get("flying").effectiveness[s]:e.types.get((0,o.toID)(t.type)).effectiveness[s]},t.checkAirLock=function(e,t){e.hasAbility("Air Lock","Cloud Nine")&&(t.weather=void 0)},t.checkForecast=function(e,t){if(e.hasAbility("Forecast")&&e.named("Castform"))switch(t){case"Sun":case"Harsh Sunshine":e.types=["Fire"];break;case"Rain":case"Heavy Rain":e.types=["Water"];break;case"Hail":case"Snow":e.types=["Ice"];break;default:e.types=["Normal"]}},t.checkItem=function(e,t){(e.hasAbility("Klutz")&&!l.includes(e.item)||t)&&(e.item="")},t.checkWonderRoom=function(e,t){var s;t&&(s=i([e.rawStats.spd,e.rawStats.def],2),e.rawStats.def=s[0],e.rawStats.spd=s[1])},t.checkIntimidate=function(e,t,s){var a=s.hasAbility("Clear Body","White Smoke","Hyper Cutter","Full Metal Body")||e.num>=8&&s.hasAbility("Inner Focus","Own Tempo","Oblivious","Scrappy")||s.hasItem("Clear Amulet");t.hasAbility("Intimidate")&&t.abilityOn&&!a&&(s.hasAbility("Contrary","Defiant","Guard Dog")?s.boosts.atk=Math.min(6,s.boosts.atk+1):s.hasAbility("Simple")?s.boosts.atk=Math.max(-6,s.boosts.atk-2):s.boosts.atk=Math.max(-6,s.boosts.atk-1),s.hasAbility("Competitive")&&(s.boosts.spa=Math.min(6,s.boosts.spa+2)))},t.checkDownload=function(e,t,s){var a;if(e.hasAbility("Download")){var r=t.stats.def,o=t.stats.spd;s&&(r=(a=i([o,r],2))[0],o=a[1]),o<=r?e.boosts.spa=Math.min(6,e.boosts.spa+1):e.boosts.atk=Math.min(6,e.boosts.atk+1)}},t.checkIntrepidSword=function(e,t){e.hasAbility("Intrepid Sword")&&t.num<9&&(e.boosts.atk=Math.min(6,e.boosts.atk+1))},t.checkDauntlessShield=function(e,t){e.hasAbility("Dauntless Shield")&&t.num<9&&(e.boosts.def=Math.min(6,e.boosts.def+1))},t.checkInfiltrator=function(e,t){e.hasAbility("Infiltrator")&&(t.isReflect=!1,t.isLightScreen=!1,t.isAuroraVeil=!1)},t.checkSeedBoost=function(e,t){if(e.item&&t.terrain&&e.item.includes("Seed")){var s=e.item.substring(0,e.item.indexOf(" "));t.hasTerrain(s)&&("Grassy"===s||"Electric"===s?e.boosts.def=e.hasAbility("Contrary")?Math.max(-6,e.boosts.def-1):Math.min(6,e.boosts.def+1):e.boosts.spd=e.hasAbility("Contrary")?Math.max(-6,e.boosts.spd-1):Math.min(6,e.boosts.spd+1))}},t.checkMultihitBoost=function(e,t,s,a,i,r,o){void 0===o&&(o=!1),a.named("Gyro Ball","Electro Ball")&&s.hasAbility("Gooey","Tangling Hair")?t.hasItem("White Herb")&&!o?(r.attackerItem=t.item,o=!0):(t.boosts.spe=Math.max(t.boosts.spe-1,-6),t.stats.spe=c(e,t,i,i.attackerSide),r.defenderAbility=s.ability):a.named("Power-Up Punch")&&(t.boosts.atk=Math.min(t.boosts.atk+1,6),t.stats.atk=f(t.rawStats.atk,t.boosts.atk,e)),s.hasAbility("Stamina")?t.hasAbility("Unaware")?r.attackerAbility=t.ability:(s.boosts.def=Math.min(s.boosts.def+1,6),s.stats.def=f(s.rawStats.def,s.boosts.def,e),r.defenderAbility=s.ability):s.hasAbility("Weak Armor")&&(t.hasAbility("Unaware")?r.attackerAbility=t.ability:s.hasItem("White Herb")&&!o?(r.defenderItem=s.item,o=!0):(s.boosts.def=Math.max(s.boosts.def-1,-6),s.stats.def=f(s.rawStats.def,s.boosts.def,e)),s.boosts.spe=Math.min(s.boosts.spe+2,6),s.stats.spe=c(e,s,i,i.defenderSide),r.defenderAbility=s.ability);var n=t.hasAbility("Simple")?2:1;if(a.dropsStats)if(t.hasAbility("Unaware"))r.attackerAbility=t.ability;else{var l="Special"===a.category?"spa":"atk",u=t.boosts[l];t.hasAbility("Contrary")?(u=Math.min(6,u+a.dropsStats),r.attackerAbility=t.ability):(u=Math.max(-6,u-a.dropsStats*n),n>1&&(r.attackerAbility=t.ability)),t.hasItem("White Herb")&&t.boosts[l]<0&&!o&&(u+=a.dropsStats*n,r.attackerItem=t.item,o=!0),t.boosts[l]=u,t.stats[l]=f(t.rawStats[l],s.boosts[l],e)}return o},t.chainMods=u,t.getBaseDamage=function(e,t,s,a){return Math.floor(h(Math.floor(h(h(Math.floor(2*e/5+2)*t)*s)/a)/50+2))},t.getMostProficientStat=p,t.getFinalDamage=function(e,t,s,a,i,r,o){var n=Math.floor(h(e*(85+t))/100);return 4096!==i&&(n=h(n*i)/4096),n=Math.floor(h(g(n)*s)),a&&(n=Math.floor(n/2)),o&&(n=g(h(1024*n)/4096)),d(g(Math.max(1,h(n*r)/4096)))},t.getShellSideArmCategory=function(e,t){return e.stats.atk/t.stats.def>e.stats.spa/t.stats.spd?"Physical":"Special"},t.getWeightFactor=function(e){return e.hasAbility("Heavy Metal")?2:e.hasAbility("Light Metal")||e.hasItem("Float Stone")?.5:1},t.countBoosts=function(e,t){var s,i,r=0,o=1===e.num?["atk","def","spa","spe"]:["atk","def","spa","spd","spe"];try{for(var n=a(o),l=n.next();!l.done;l=n.next()){var f=t[l.value];f&&f>0&&(r+=f)}}catch(e){s={error:e}}finally{try{l&&!l.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return r},t.getEVDescriptionText=function(e,t,s,a){var i=e.natures.get((0,o.toID)(a));return t.evs[s]+(i.plus===i.minus?"":i.plus===s?"+":i.minus===s?"-":"")+" "+n.Stats.displayStat(s)},t.handleFixedDamageMoves=function(e,t){return t.named("Seismic Toss","Night Shade")?e.level:t.named("Dragon Rage")?40:t.named("Sonic Boom")?20:0},t.pokeRound=g,t.OF16=d,t.OF32=h},5947:(e,t,s)=>{"use strict";t.__esModule=!0,t.getMaxMoveName=t.getZMoveName=t.Move=void 0;var a=s(7094),i=["Fire","Water","Grass","Electric","Ice","Psychic","Dark","Dragon"],r=function(){function e(e,t,s){var r,n;void 0===s&&(s={}),t=s.name||t,this.originalName=t;var f=(0,a.extend)(!0,{name:t},e.moves.get((0,a.toID)(t)),s.overrides);if(this.hits=1,s.useMax&&f.maxMove){var c=l(f.type,s.species,!("Status"!==f.category),s.ability),u=e.moves.get((0,a.toID)(c));f=(0,a.extend)(!0,{},u,{name:c,basePower:["G-Max Drum Solo","G-Max Fire Ball","G-Max Hydrosnipe"].includes(c)?160:10===u.basePower||"Max Flare"===c?f.maxMove.basePower:u.basePower,category:f.category})}if(s.useZ&&(null===(r=f.zMove)||void 0===r?void 0:r.basePower)){var p=o(f.name,f.type,s.item),g=e.moves.get((0,a.toID)(p));f=(0,a.extend)(!0,{},g,{name:p,basePower:1===g.basePower?f.zMove.basePower:g.basePower,category:f.category})}else f.multihit&&("number"==typeof f.multihit?this.hits=f.multihit:s.hits?this.hits=s.hits:this.hits="Skill Link"===s.ability?f.multihit[1]:f.multihit[0]+1),this.timesUsedWithMetronome=s.timesUsedWithMetronome;this.gen=e,this.name=f.name,this.ability=s.ability,this.item=s.item,this.useZ=s.useZ,this.useMax=s.useMax,this.overrides=s.overrides,this.species=s.species,this.bp=f.basePower;var d=e.num>=2&&"struggle"===f.id||e.num<=4&&["futuresight","doomdesire"].includes(f.id);this.type=d?"???":f.type,this.category=f.category||(e.num<4?i.includes(f.type)?"Special":"Physical":"Status");var h="Special"===this.category?"spa":"atk";(null===(n=f.self)||void 0===n?void 0:n.boosts)&&f.self.boosts[h]&&f.self.boosts[h]<0&&(this.dropsStats=Math.abs(f.self.boosts[h])),this.timesUsed=this.dropsStats&&s.timesUsed||1,this.secondaries=f.secondaries,this.target=f.target||"any",this.recoil=f.recoil,this.hasCrashDamage=!!f.hasCrashDamage,this.mindBlownRecoil=!!f.mindBlownRecoil,this.struggleRecoil=!!f.struggleRecoil,this.isCrit=!!s.isCrit||!!f.willCrit||1===e.num&&["crabhammer","razorleaf","slash","karate chop"].includes(f.id),this.drain=f.drain,this.flags=f.flags,this.priority=f.priority||0,this.ignoreDefensive=!!f.ignoreDefensive,this.overrideOffensiveStat=f.overrideOffensiveStat,this.overrideDefensiveStat=f.overrideDefensiveStat,this.overrideOffensivePokemon=f.overrideOffensivePokemon,this.overrideDefensivePokemon=f.overrideDefensivePokemon,this.breaksProtect=!!f.breaksProtect,this.isZ=!!f.isZ,this.isMax=!!f.isMax,this.bp||["return","frustration","pikapapow","veeveevolley"].includes(f.id)&&(this.bp=102)}return e.prototype.named=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e.includes(this.name)},e.prototype.hasType=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e.includes(this.type)},e.prototype.clone=function(){return new e(this.gen,this.originalName,{ability:this.ability,item:this.item,species:this.species,useZ:this.useZ,useMax:this.useMax,isCrit:this.isCrit,hits:this.hits,timesUsed:this.timesUsed,timesUsedWithMetronome:this.timesUsedWithMetronome,overrides:this.overrides})},e}();function o(e,t,s){if(s=s||"",e.includes("Hidden Power"))return"Breakneck Blitz";if("Clanging Scales"===e&&"Kommonium Z"===s)return"Clangorous Soulblaze";if("Darkest Lariat"===e&&"Incinium Z"===s)return"Malicious Moonsault";if("Giga Impact"===e&&"Snorlium Z"===s)return"Pulverizing Pancake";if("Moongeist Beam"===e&&"Lunalium Z"===s)return"Menacing Moonraze Maelstrom";if("Photon Geyser"===e&&"Ultranecrozium Z"===s)return"Light That Burns the Sky";if("Play Rough"===e&&"Mimikium Z"===s)return"Let's Snuggle Forever";if("Psychic"===e&&"Mewnium Z"===s)return"Genesis Supernova";if("Sparkling Aria"===e&&"Primarium Z"===s)return"Oceanic Operetta";if("Spectral Thief"===e&&"Marshadium Z"===s)return"Soul-Stealing 7-Star Strike";if("Spirit Shackle"===e&&"Decidium Z"===s)return"Sinister Arrow Raid";if("Stone Edge"===e&&"Lycanium Z"===s)return"Splintered Stormshards";if("Sunsteel Strike"===e&&"Solganium Z"===s)return"Searing Sunraze Smash";if("Volt Tackle"===e&&"Pikanium Z"===s)return"Catastropika";if("Nature's Madness"===e&&"Tapunium Z"===s)return"Guardian of Alola";if("Thunderbolt"===e){if("Aloraichium Z"===s)return"Stoked Sparksurfer";if("Pikashunium Z"===s)return"10,000,000 Volt Thunderbolt"}return n[t]}t.Move=r,t.getZMoveName=o;var n={Bug:"Savage Spin-Out",Dark:"Black Hole Eclipse",Dragon:"Devastating Drake",Electric:"Gigavolt Havoc",Fairy:"Twinkle Tackle",Fighting:"All-Out Pummeling",Fire:"Inferno Overdrive",Flying:"Supersonic Skystrike",Ghost:"Never-Ending Nightmare",Grass:"Bloom Doom",Ground:"Tectonic Rage",Ice:"Subzero Slammer",Normal:"Breakneck Blitz",Poison:"Acid Downpour",Psychic:"Shattered Psyche",Rock:"Continental Crush",Steel:"Corkscrew Crash",Water:"Hydro Vortex"};function l(e,t,s,a){if(s)return"Max Guard";if("Normalize"===a)return"Max Strike";if("Fire"===e){if("Charizard-Gmax"===t)return"G-Max Wildfire";if("Centiskorch-Gmax"===t)return"G-Max Centiferno";if("Cinderace-Gmax"===t)return"G-Max Fire Ball"}if("Normal"===e){if("Eevee-Gmax"===t)return"G-Max Cuddle";if("Meowth-Gmax"===t)return"G-Max Gold Rush";if("Snorlax-Gmax"===t)return"G-Max Replenish";if("Pixilate"===a)return"Max Starfall";if("Aerilate"===a)return"Max Airstream";if("Refrigerate"===a)return"Max Hailstorm";if("Galvanize"===a)return"Max Lightning"}if("Fairy"===e){if("Alcremie-Gmax"===t)return"G-Max Finale";if("Hatterene-Gmax"===t)return"G-Max Smite"}if("Steel"===e){if("Copperajah-Gmax"===t)return"G-Max Steelsurge";if("Melmetal-Gmax"===t)return"G-Max Meltdown"}if("Electric"===e){if("Pikachu-Gmax"===t)return"G-Max Volt Crash";if((null==t?void 0:t.startsWith("Toxtricity"))&&(null==t?void 0:t.endsWith("Gmax")))return"G-Max Stun Shock"}if("Grass"===e){if("Appletun-Gmax"===t)return"G-Max Sweetness";if("Flapple-Gmax"===t)return"G-Max Tartness";if("Rillaboom-Gmax"===t)return"G-Max Drum Solo";if("Venusaur-Gmax"===t)return"G-Max Vine Lash"}if("Water"===e){if("Blastoise-Gmax"===t)return"G-Max Cannonade";if("Drednaw-Gmax"===t)return"G-Max Stonesurge";if("Inteleon-Gmax"===t)return"G-Max Hydrosnipe";if("Kingler-Gmax"===t)return"G-Max Foam Burst";if("Urshifu-Rapid-Strike-Gmax"===t)return"G-Max Rapid Flow"}if("Dark"===e){if("Grimmsnarl-Gmax"===t)return"G-Max Snooze";if("Urshifu-Gmax"===t)return"G-Max One Blow"}return"Poison"===e&&"Garbodor-Gmax"===t?"G-Max Malodor":"Fighting"===e&&"Machamp-Gmax"===t?"G-Max Chi Strike":"Ghost"===e&&"Gengar-Gmax"===t?"G-Max Terror":"Ice"===e&&"Lapras-Gmax"===t?"G-Max Resonance":"Flying"===e&&"Corviknight-Gmax"===t?"G-Max Wind Rage":"Dragon"===e&&"Duraludon-Gmax"===t?"G-Max Depletion":"Psychic"===e&&"Orbeetle-Gmax"===t?"G-Max Gravitas":"Rock"===e&&"Coalossal-Gmax"===t?"G-Max Volcalith":"Ground"===e&&"Sandaconda-Gmax"===t?"G-Max Sandblast":"Dark"===e&&"Grimmsnarl-Gmax"===t?"G-Max Snooze":"Max "+f[e]}t.getMaxMoveName=l;var f={Bug:"Flutterby",Dark:"Darkness",Dragon:"Wyrmwind",Electric:"Lightning",Fairy:"Starfall",Fighting:"Knuckle",Fire:"Flare",Flying:"Airstream",Ghost:"Phantasm",Grass:"Overgrowth",Ground:"Quake",Ice:"Hailstorm",Normal:"Strike",Poison:"Ooze",Psychic:"Mindstorm",Rock:"Rockfall",Steel:"Steelspike",Water:"Geyser"}},4801:function(e,t,s){"use strict";var a=this&&this.__assign||function(){return a=Object.assign||function(e){for(var t,s=1,a=arguments.length;s<a;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},a.apply(this,arguments)},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,s=t&&e[t],a=0;if(s)return s.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};t.__esModule=!0,t.Pokemon=void 0;var r=s(7221),o=s(7094),n=["hp","atk","def","spa","spd","spe"],l=new Set(["spc"]),f=function(){function e(t,s,a){var l,f,c;void 0===a&&(a={}),this.species=(0,o.extend)(!0,{},t.species.get((0,o.toID)(s)),a.overrides),this.gen=t,this.name=a.name||s,this.types=this.species.types,this.weightkg=this.species.weightkg,this.level=a.level||100,this.gender=a.gender||this.species.gender||"M",this.ability=a.ability||(null===(c=this.species.abilities)||void 0===c?void 0:c[0])||void 0,this.abilityOn=!!a.abilityOn,this.isDynamaxed=!!a.isDynamaxed,this.dynamaxLevel=this.isDynamaxed?void 0===a.dynamaxLevel?10:a.dynamaxLevel:void 0,this.isSaltCure=!!a.isSaltCure,this.alliesFainted=a.alliesFainted,this.teraType=a.teraType,this.item=a.item,this.nature=a.nature||"Serious",this.ivs=e.withDefault(t,a.ivs,31),this.evs=e.withDefault(t,a.evs,t.num>=3?0:252),this.boosts=e.withDefault(t,a.boosts,0,!1),0===this.weightkg&&!this.isDynamaxed&&this.species.baseSpecies&&(this.weightkg=t.species.get((0,o.toID)(this.species.baseSpecies)).weightkg),t.num<3&&(this.ivs.hp=r.Stats.DVToIV(r.Stats.getHPDV({atk:this.ivs.atk,def:this.ivs.def,spe:this.ivs.spe,spc:this.ivs.spa}))),this.rawStats={},this.stats={};try{for(var u=i(n),p=u.next();!p.done;p=u.next()){var g=p.value,d=this.calcStat(t,g);this.rawStats[g]=d,this.stats[g]=d}}catch(e){l={error:e}}finally{try{p&&!p.done&&(f=u.return)&&f.call(u)}finally{if(l)throw l.error}}var h=a.curHP||a.originalCurHP;this.originalCurHP=h&&h<=this.rawStats.hp?h:this.rawStats.hp,this.status=a.status||"",this.toxicCounter=a.toxicCounter||0,this.moves=a.moves||[]}return e.prototype.maxHP=function(e){return void 0===e&&(e=!1),!e&&this.isDynamaxed&&1!==this.species.baseStats.hp?Math.floor(this.rawStats.hp*(150+5*this.dynamaxLevel)/100):this.rawStats.hp},e.prototype.curHP=function(e){return void 0===e&&(e=!1),!e&&this.isDynamaxed&&1!==this.species.baseStats.hp?Math.ceil(this.originalCurHP*(150+5*this.dynamaxLevel)/100):this.originalCurHP},e.prototype.hasAbility=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return!(!this.ability||!e.includes(this.ability))},e.prototype.hasItem=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return!(!this.item||!e.includes(this.item))},e.prototype.hasStatus=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return!(!this.status||!e.includes(this.status))},e.prototype.hasType=function(){for(var e,t,s=[],a=0;a<arguments.length;a++)s[a]=arguments[a];try{for(var r=i(s),o=r.next();!o.done;o=r.next()){var n=o.value;if(this.teraType?this.teraType===n:this.types.includes(n))return!0}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return!1},e.prototype.hasOriginalType=function(){for(var e,t,s=[],a=0;a<arguments.length;a++)s[a]=arguments[a];try{for(var r=i(s),o=r.next();!o.done;o=r.next()){var n=o.value;if(this.types.includes(n))return!0}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return!1},e.prototype.named=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e.includes(this.name)},e.prototype.clone=function(){return new e(this.gen,this.name,{level:this.level,ability:this.ability,abilityOn:this.abilityOn,isDynamaxed:this.isDynamaxed,dynamaxLevel:this.dynamaxLevel,isSaltCure:this.isSaltCure,alliesFainted:this.alliesFainted,item:this.item,gender:this.gender,nature:this.nature,ivs:(0,o.extend)(!0,{},this.ivs),evs:(0,o.extend)(!0,{},this.evs),boosts:(0,o.extend)(!0,{},this.boosts),originalCurHP:this.originalCurHP,status:this.status,teraType:this.teraType,toxicCounter:this.toxicCounter,moves:this.moves.slice(),overrides:this.species})},e.prototype.calcStat=function(e,t){return r.Stats.calcStat(e,t,this.species.baseStats[t],this.ivs[t],this.evs[t],this.level,this.nature)},e.getForme=function(e,t,s,a){var i=e.species.get((0,o.toID)(t));if(!(null==i?void 0:i.otherFormes))return t;var r=0;return s&&(s.includes("ite")&&!s.includes("ite Y")||"Groudon"===t&&"Red Orb"===s||"Kyogre"===t&&"Blue Orb"===s)||a&&"Meloetta"===t&&"Relic Song"===a||"Rayquaza"===t&&"Dragon Ascent"===a?r=1:(null==s?void 0:s.includes("ite Y"))&&(r=2),r?i.otherFormes[r-1]:i.name},e.withDefault=function(e,t,s,i){void 0===i&&(i=!0);var r={};if(t&&((0,o.assignWithout)(r,t,l),t.spc&&(r.spa=t.spc,r.spd=t.spc),i&&e.num<=2&&t.spa!==t.spd))throw new Error("Special Attack and Special Defense must match before Gen 3");return a({hp:s,atk:s,def:s,spa:s,spd:s,spe:s},r)},e}();t.Pokemon=f},6314:function(e,t,s){"use strict";var a=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var a,i,r=s.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(e){i={error:e}}finally{try{a&&!a.done&&(s=r.return)&&s.call(r)}finally{if(i)throw i.error}}return o},i=this&&this.__spreadArray||function(e,t,s){if(s||2===arguments.length)for(var a,i=0,r=t.length;i<r;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))};t.__esModule=!0,t.damageRange=t.Result=void 0;var r=s(1670),o=function(){function e(e,t,s,a,i,r,o){this.gen=e,this.attacker=t,this.defender=s,this.move=a,this.field=i,this.damage=r,this.rawDesc=o}return e.prototype.desc=function(){return this.fullDesc()},e.prototype.range=function(){var e=n(this.damage);if("number"==typeof e[0])return e;var t=e;return[t[0][0]+t[0][1],t[1][0]+t[1][1]]},e.prototype.fullDesc=function(e,t){return void 0===e&&(e="%"),void 0===t&&(t=!0),(0,r.display)(this.gen,this.attacker,this.defender,this.move,this.field,this.damage,this.rawDesc,e,t)},e.prototype.moveDesc=function(e){return void 0===e&&(e="%"),(0,r.displayMove)(this.gen,this.attacker,this.defender,this.move,this.damage,e)},e.prototype.recovery=function(e){return void 0===e&&(e="%"),(0,r.getRecovery)(this.gen,this.attacker,this.defender,this.move,this.damage,e)},e.prototype.recoil=function(e){return void 0===e&&(e="%"),(0,r.getRecoil)(this.gen,this.attacker,this.defender,this.move,this.damage,e)},e.prototype.kochance=function(e){return void 0===e&&(e=!0),(0,r.getKOChance)(this.gen,this.attacker,this.defender,this.move,this.field,this.damage,e)},e}();function n(e){if("number"==typeof e)return[e,e];if(e.length>2){var t=e;return t[0]>t[t.length-1]?[Math.min.apply(Math,i([],a(t),!1)),Math.max.apply(Math,i([],a(t),!1))]:[t[0],t[t.length-1]]}if("number"==typeof e[0]&&"number"==typeof e[1])return[[e[0],e[1]],[e[0],e[1]]];var s=e;return s[0][0]>s[0][s[0].length-1]&&(s[0]=s[0].slice().sort()),s[1][0]>s[1][s[1].length-1]&&(s[1]=s[1].slice().sort()),[[s[0][0],s[1][0]],[s[0][s[0].length-1],s[1][s[1].length-1]]]}t.Result=o,t.damageRange=n},7221:(e,t,s)=>{"use strict";t.__esModule=!0,t.Stats=t.STATS=void 0;var a=s(7094),i=["hp","atk","def","spa","spd","spe"],r=i,o=i,n=i,l=i,f=i,c=i,u=i;t.STATS=[[],["hp","atk","def","spc","spe"],i,r,o,n,l,f,c,u];var p=["Fighting","Flying","Poison","Ground","Rock","Bug","Ghost","Steel","Fire","Water","Grass","Electric","Psychic","Ice","Dragon","Dark"],g={Bug:{ivs:{atk:30,def:30,spd:30},dvs:{atk:13,def:13}},Dark:{ivs:{},dvs:{}},Dragon:{ivs:{atk:30},dvs:{def:14}},Electric:{ivs:{spa:30},dvs:{atk:14}},Fighting:{ivs:{def:30,spa:30,spd:30,spe:30},dvs:{atk:12,def:12}},Fire:{ivs:{atk:30,spa:30,spe:30},dvs:{atk:14,def:12}},Flying:{ivs:{hp:30,atk:30,def:30,spa:30,spd:30},dvs:{atk:12,def:13}},Ghost:{ivs:{def:30,spd:30},dvs:{atk:13,def:14}},Grass:{ivs:{atk:30,spa:30},dvs:{atk:14,def:14}},Ground:{ivs:{spa:30,spd:30},dvs:{atk:12}},Ice:{ivs:{atk:30,def:30},dvs:{def:13}},Poison:{ivs:{def:30,spa:30,spd:30},dvs:{atk:12,def:14}},Psychic:{ivs:{atk:30,spe:30},dvs:{def:12}},Rock:{ivs:{def:30,spd:30,spe:30},dvs:{atk:13,def:12}},Steel:{ivs:{spd:30},dvs:{atk:13}},Water:{ivs:{atk:30,def:30,spa:30},dvs:{atk:14,def:13}}};t.Stats=new(function(){function e(){}return e.prototype.displayStat=function(e){switch(e){case"hp":return"HP";case"atk":return"Atk";case"def":return"Def";case"spa":return"SpA";case"spd":return"SpD";case"spe":return"Spe";case"spc":return"Spc";default:throw new Error("unknown stat ".concat(e))}},e.prototype.shortForm=function(e){switch(e){case"hp":return"hp";case"atk":return"at";case"def":return"df";case"spa":return"sa";case"spd":return"sd";case"spe":return"sp";case"spc":return"sl"}},e.prototype.getHPDV=function(e){return this.IVToDV(e.atk)%2*8+this.IVToDV(e.def)%2*4+this.IVToDV(e.spe)%2*2+this.IVToDV(e.spc)%2},e.prototype.IVToDV=function(e){return Math.floor(e/2)},e.prototype.DVToIV=function(e){return 2*e},e.prototype.DVsToIVs=function(e){var s,a={};for(s in e)a[s]=t.Stats.DVToIV(e[s]);return a},e.prototype.calcStat=function(e,t,s,a,i,r,o){if(e.num<1||e.num>9)throw new Error("Invalid generation ".concat(e.num));return e.num<3?this.calcStatRBY(t,s,a,r):this.calcStatADV(e.natures,t,s,a,i,r,o)},e.prototype.calcStatADV=function(e,t,s,i,r,o,n){if("hp"===t)return 1===s?s:Math.floor((2*s+i+Math.floor(r/4))*o/100)+o+10;var l=[void 0,void 0];if(n){var f=e.get((0,a.toID)(n));l=[null==f?void 0:f.plus,null==f?void 0:f.minus]}var c=l[0]===t&&l[1]===t?1:l[0]===t?1.1:l[1]===t?.9:1;return Math.floor((Math.floor((2*s+i+Math.floor(r/4))*o/100)+5)*c)},e.prototype.calcStatRBY=function(e,t,s,a){return this.calcStatRBYFromDV(e,t,this.IVToDV(s),a)},e.prototype.calcStatRBYFromDV=function(e,t,s,a){return"hp"===e?Math.floor((2*(t+s)+63)*a/100)+a+10:Math.floor((2*(t+s)+63)*a/100)+5},e.prototype.getHiddenPowerIVs=function(e,s){var a=g[s];if(a)return 2===e.num?t.Stats.DVsToIVs(a.dvs):a.ivs},e.prototype.getHiddenPower=function(e,t){var s=function(e,t){return void 0===t&&(t=0),t?(e>>>0)%Math.pow(2,t):e>>>0};if(e.num<=2){var a=s(t.atk/2),i=s(t.def/2),r=s(t.spe/2),o=s(t.spa/2);return{type:p[a%4*4+i%4],power:s((5*((o>>3)+2*(r>>3)+4*(i>>3)+8*(a>>3))+o%4)/2+31)}}var n=0,l=0,f=1;for(var c in{hp:31,atk:31,def:31,spe:31,spa:31,spd:31})n+=f*(t[c]%2),l+=f*(s(t[c]/2)%2),f*=2;return{type:p[s(15*n/63)],power:e.num&&e.num<6?s(40*l/63)+30:60}},e}())},7094:(e,t)=>{"use strict";t.__esModule=!0,t.extend=t.assignWithout=t.error=t.toID=void 0,t.toID=function(e){return(""+e).toLowerCase().replace(/[^a-z0-9]+/g,"")},t.error=function(e,t){if(e)throw new Error(t);console.log(t)},t.assignWithout=function(e,t,s){for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&!s.has(a)&&(e[a]=t[a])};var s={"[object Boolean]":"boolean","[object Number]":"number","[object String]":"string","[object Function]":"function","[object Array]":"array","[object Date]":"date","[object RegExp]":"regexp","[object Object]":"object","[object Error]":"error"},a=s.toString,i=s.hasOwnProperty;function r(e){return null==e?String(e):"object"==typeof e||"function"==typeof e?s[a.call(e)]||"object":typeof e}function o(e){if("object"!==r(e)||e.nodeType||function(e){return null!=e&&e===e.window}(e))return!1;try{if(e.constructor&&!i.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(e){return!1}return!0}t.extend=function e(){for(var t,s,a,i,n,l,f=[],c=0;c<arguments.length;c++)f[c]=arguments[c];var u=f[0]||{},p=1,g=!1,d=f.length;for("boolean"==typeof u&&(g=u,u=f[1]||{},p=2),"object"!=typeof u&&"function"!==r(u)&&(u={}),d===p&&(u=this,--p);p<d;p++)if(null!=(t=f[p]))for(s in t)a=u[s],u!==(i=t[s])&&(g&&i&&(o(i)||(n=Array.isArray(i)))?(n?(n=!1,l=a&&Array.isArray(a)?a:[]):l=a&&o(a)?a:{},u[s]=e(g,l,i)):void 0!==i&&(u[s]=i));return u}},87:(e,t,s)=>{"use strict";s.d(t,{Gg:()=>b,H:()=>P,Ht:()=>m,LO:()=>B,M1:()=>r,MI:()=>n,NY:()=>M,Pp:()=>C,Rn:()=>c,Si:()=>v,Sq:()=>i,TV:()=>k,Tt:()=>o,U8:()=>T,Wi:()=>f,Zd:()=>F,ax:()=>p,dc:()=>N,ds:()=>x,fB:()=>y,iq:()=>A,mp:()=>D,ni:()=>h,qb:()=>O,r_:()=>g,rd:()=>w,uN:()=>S,wI:()=>u,y7:()=>d,zT:()=>l});var a=s(2909),i=function(e){return{type:a.JV,payload:e}},r=function(e,t){return{type:a.T5,payload:{pokemon:e,pokemonData:t}}},o=function(e){return{type:a.Dl,payload:e}},n=function(e){return{type:a.ve,payload:e}},l=function(e,t){return{type:a.g0,payload:{team:e,mon:t}}},f=function(e,t,s){return{type:a.fb,payload:{pokemonData:e,team:t,mon:s}}},c=function(){return{type:a.JF,payload:null}},u=function(e,t,s){return{type:a.Hr,payload:{yourTeam:e,enemeyTeam:t,key:s}}},p=function(e){return{type:a.gC,payload:{string:e}}},g=function(e,t){return{type:a.Bk,payload:{username:e,responseObj:t}}},d=function(e){return{type:a.uS,payload:{team:e}}},h=function(e){return{type:a.LZ,payload:{team:e}}},m=function(e){return{type:a.$4,payload:{team:e}}},y=function(e,t){return{type:a.No,payload:{key:e,team:t}}},v=function(e){return{type:a.Xf,payload:{key:e}}},b=function(){return{type:a.ae,payload:{}}},P=function(e){return{type:a.Th,payload:{ability:e}}},w=function(e,t,s){return{type:a.o1,payload:{item:e,description:t,url:s}}},S=function(e,t){return{type:a.GU,payload:{moveId:e,moveObj:t}}},k=function(e,t){return{type:a.Qo,payload:{moveId:e,moveObj:t}}},T=function(e){return{type:a.wl,payload:{savedTeams:e}}},x=function(e){return{type:a.ND,payload:{letter:e}}},M=function(e){return{type:a.G6,payload:e}},D=function(e,t,s,i){return{type:a.oE,payload:{evs:e,ivs:t,remainingEv:s,calcs:i}}},A=function(e){return{type:a.TV,payload:e}},B=function(e){return{type:a.s,payload:e}},O=function(e,t){return{type:a.eI,payload:{pokemonObj:e,team:t}}},C=function(e,t,s){return{type:a.WT,payload:{team:e,attributeName:t,attribute:s}}},F=function(e,t,s){return{type:a.uG,payload:{team:e,evs:t,results:s}}},N=function(e,t,s,i,r,o){return{type:a.U0,payload:{team:e,moveId:t,move:s,type:i,basepower:r,categoryUrl:o}}}},4202:(e,t,s)=>{"use strict";var a;function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function r(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==i(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==i(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===i(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}s.d(t,{Z:()=>o});const o={allItemsJSON:JSON.parse('{"abomasite":{"exists":true,"name":"Abomasite","spritenum":575,"megaStone":"Abomasnow-Mega","megaEvolves":"Abomasnow","itemUser":["Abomasnow"],"num":674,"gen":6,"isNonstandard":"Past","desc":"If held by an Abomasnow, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"abomasite","fullname":"item: Abomasite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"abomasite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/abomasite.png"},"absolite":{"exists":true,"name":"Absolite","spritenum":576,"megaStone":"Absol-Mega","megaEvolves":"Absol","itemUser":["Absol"],"num":677,"gen":6,"isNonstandard":"Past","desc":"If held by an Absol, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"absolite","fullname":"item: Absolite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"absolite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/absolite.png"},"absorb-bulb":{"exists":true,"name":"Absorb Bulb","spritenum":2,"fling":{"basePower":30},"boosts":{"spa":1},"num":545,"gen":5,"desc":"Raises holder\'s Sp. Atk by 1 stage if hit by a Water-type attack. Single use.","shortDesc":"","id":"absorbbulb","fullname":"item: Absorb Bulb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"absorb bulb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/absorb-bulb.png"},"adamant-orb":{"exists":true,"name":"Adamant Orb","spritenum":4,"fling":{"basePower":60},"onBasePowerPriority":15,"itemUser":["Dialga"],"num":135,"gen":4,"desc":"If held by a Dialga, its Steel- and Dragon-type attacks have 1.2x power.","shortDesc":"","id":"adamantorb","fullname":"item: Adamant Orb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"adamant orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/adamant-orb.png"},"adrenaline-orb":{"exists":true,"name":"Adrenaline Orb","spritenum":660,"fling":{"basePower":30},"onBoostPriority":1,"boosts":{"spe":1},"num":846,"gen":7,"desc":"Raises holder\'s Speed by 1 stage if it gets affected by Intimidate. Single use.","shortDesc":"","id":"adrenalineorb","fullname":"item: Adrenaline Orb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"adrenaline orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/adrenaline-orb.png"},"aerodactylite":{"exists":true,"name":"Aerodactylite","spritenum":577,"megaStone":"Aerodactyl-Mega","megaEvolves":"Aerodactyl","itemUser":["Aerodactyl"],"num":672,"gen":6,"isNonstandard":"Past","desc":"If held by an Aerodactyl, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"aerodactylite","fullname":"item: Aerodactylite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"aerodactylite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/aerodactylite.png"},"aggronite":{"exists":true,"name":"Aggronite","spritenum":578,"megaStone":"Aggron-Mega","megaEvolves":"Aggron","itemUser":["Aggron"],"num":667,"gen":6,"isNonstandard":"Past","desc":"If held by an Aggron, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"aggronite","fullname":"item: Aggronite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"aggronite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/aggronite.png"},"aguav-berry":{"exists":true,"name":"Aguav Berry","spritenum":5,"isBerry":true,"naturalGift":{"basePower":80,"type":"Dragon"},"num":162,"gen":3,"desc":"Restores 33% max HP at 1/4 max HP or less; confuses if -SpD Nature. Single use.","shortDesc":"","id":"aguavberry","fullname":"item: Aguav Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"aguav berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/aguav-berry.png"},"air-balloon":{"exists":true,"name":"Air Balloon","spritenum":6,"fling":{"basePower":10},"num":541,"gen":5,"desc":"Holder is immune to Ground-type attacks. Pops when holder is hit.","shortDesc":"","id":"airballoon","fullname":"item: Air Balloon","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"air balloon","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/air-balloon.png"},"alakazite":{"exists":true,"name":"Alakazite","spritenum":579,"megaStone":"Alakazam-Mega","megaEvolves":"Alakazam","itemUser":["Alakazam"],"num":679,"gen":6,"isNonstandard":"Past","desc":"If held by an Alakazam, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"alakazite","fullname":"item: Alakazite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"alakazite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/alakazite.png"},"altarianite":{"exists":true,"name":"Altarianite","spritenum":615,"megaStone":"Altaria-Mega","megaEvolves":"Altaria","itemUser":["Altaria"],"num":755,"gen":6,"isNonstandard":"Past","desc":"If held by an Altaria, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"altarianite","fullname":"item: Altarianite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"altarianite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/altarianite.png"},"ampharosite":{"exists":true,"name":"Ampharosite","spritenum":580,"megaStone":"Ampharos-Mega","megaEvolves":"Ampharos","itemUser":["Ampharos"],"num":658,"gen":6,"isNonstandard":"Past","desc":"If held by an Ampharos, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"ampharosite","fullname":"item: Ampharosite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"ampharosite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ampharosite.png"},"apicot-berry":{"exists":true,"name":"Apicot Berry","spritenum":10,"isBerry":true,"naturalGift":{"basePower":100,"type":"Ground"},"num":205,"gen":3,"desc":"Raises holder\'s Sp. Def by 1 stage when at 1/4 max HP or less. Single use.","shortDesc":"","id":"apicotberry","fullname":"item: Apicot Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"apicot berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/apicot-berry.png"},"armor-fossil":{"exists":true,"name":"Armor Fossil","spritenum":12,"fling":{"basePower":100},"num":104,"gen":4,"isNonstandard":"Past","desc":"Can be revived into Shieldon.","shortDesc":"","id":"armorfossil","fullname":"item: Armor Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"armor fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/armor-fossil.png"},"aspear-berry":{"exists":true,"name":"Aspear Berry","spritenum":13,"isBerry":true,"naturalGift":{"basePower":80,"type":"Ice"},"num":153,"gen":3,"desc":"Holder is cured if it is frozen. Single use.","shortDesc":"","id":"aspearberry","fullname":"item: Aspear Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"aspear berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/aspear-berry.png"},"assault-vest":{"exists":true,"name":"Assault Vest","spritenum":581,"fling":{"basePower":80},"onModifySpDPriority":1,"num":640,"gen":6,"desc":"Holder\'s Sp. Def is 1.5x, but it can only select damaging moves.","shortDesc":"","id":"assaultvest","fullname":"item: Assault Vest","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"assault vest","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/assault-vest.png"},"audinite":{"exists":true,"name":"Audinite","spritenum":617,"megaStone":"Audino-Mega","megaEvolves":"Audino","itemUser":["Audino"],"num":757,"gen":6,"isNonstandard":"Past","desc":"If held by an Audino, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"audinite","fullname":"item: Audinite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"audinite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/audinite.png"},"babiri-berry":{"exists":true,"name":"Babiri Berry","spritenum":17,"isBerry":true,"naturalGift":{"basePower":80,"type":"Steel"},"num":199,"gen":4,"desc":"Halves damage taken from a supereffective Steel-type attack. Single use.","shortDesc":"","id":"babiriberry","fullname":"item: Babiri Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"babiri berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/babiri-berry.png"},"banettite":{"exists":true,"name":"Banettite","spritenum":582,"megaStone":"Banette-Mega","megaEvolves":"Banette","itemUser":["Banette"],"num":668,"gen":6,"isNonstandard":"Past","desc":"If held by a Banette, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"banettite","fullname":"item: Banettite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"banettite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/banettite.png"},"beast-ball":{"exists":true,"name":"Beast Ball","spritenum":661,"num":851,"gen":7,"isPokeball":true,"desc":"A special Poke Ball designed to catch Ultra Beasts.","shortDesc":"","id":"beastball","fullname":"item: Beast Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"beast ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/beast-ball.png"},"beedrillite":{"exists":true,"name":"Beedrillite","spritenum":628,"megaStone":"Beedrill-Mega","megaEvolves":"Beedrill","itemUser":["Beedrill"],"num":770,"gen":6,"isNonstandard":"Past","desc":"If held by a Beedrill, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"beedrillite","fullname":"item: Beedrillite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"beedrillite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/beedrillite.png"},"belue-berry":{"exists":true,"name":"Belue Berry","spritenum":21,"isBerry":true,"naturalGift":{"basePower":100,"type":"Electric"},"onEat":false,"num":183,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"belueberry","fullname":"item: Belue Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"belue berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/belue-berry.png"},"berry-juice":{"exists":true,"name":"Berry Juice","spritenum":22,"fling":{"basePower":30},"num":43,"gen":2,"desc":"Restores 20 HP when at 1/2 max HP or less. Single use.","shortDesc":"","id":"berryjuice","fullname":"item: Berry Juice","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"berry juice","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/berry-juice.png"},"big-root":{"exists":true,"name":"Big Root","spritenum":29,"fling":{"basePower":10},"onTryHealPriority":1,"num":296,"gen":4,"desc":"Holder gains 1.3x HP from draining/Aqua Ring/Ingrain/Leech Seed/Strength Sap.","shortDesc":"","id":"bigroot","fullname":"item: Big Root","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"big root","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/big-root.png"},"binding-band":{"exists":true,"name":"Binding Band","spritenum":31,"fling":{"basePower":30},"num":544,"gen":5,"desc":"Holder\'s partial-trapping moves deal 1/6 max HP per turn instead of 1/8.","shortDesc":"","id":"bindingband","fullname":"item: Binding Band","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"binding band","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/binding-band.png"},"black-belt":{"exists":true,"name":"Black Belt","spritenum":32,"fling":{"basePower":30},"onBasePowerPriority":15,"num":241,"gen":2,"desc":"Holder\'s Fighting-type attacks have 1.2x power.","shortDesc":"","id":"blackbelt","fullname":"item: Black Belt","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"black belt","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/black-belt.png"},"black-sludge":{"exists":true,"name":"Black Sludge","spritenum":34,"fling":{"basePower":30},"onResidualOrder":5,"onResidualSubOrder":4,"num":281,"gen":4,"desc":"Each turn, if holder is a Poison type, restores 1/16 max HP; loses 1/8 if not.","shortDesc":"","id":"blacksludge","fullname":"item: Black Sludge","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"black sludge","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/black-sludge.png"},"black-glasses":{"exists":true,"name":"Black Glasses","spritenum":35,"fling":{"basePower":30},"onBasePowerPriority":15,"num":240,"gen":2,"desc":"Holder\'s Dark-type attacks have 1.2x power.","shortDesc":"","id":"blackglasses","fullname":"item: Black Glasses","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"black glasses","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/black-glasses.png"},"blastoisinite":{"exists":true,"name":"Blastoisinite","spritenum":583,"megaStone":"Blastoise-Mega","megaEvolves":"Blastoise","itemUser":["Blastoise"],"num":661,"gen":6,"isNonstandard":"Past","desc":"If held by a Blastoise, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"blastoisinite","fullname":"item: Blastoisinite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"blastoisinite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/blastoisinite.png"},"blazikenite":{"exists":true,"name":"Blazikenite","spritenum":584,"megaStone":"Blaziken-Mega","megaEvolves":"Blaziken","itemUser":["Blaziken"],"num":664,"gen":6,"isNonstandard":"Past","desc":"If held by a Blaziken, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"blazikenite","fullname":"item: Blazikenite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"blazikenite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/blazikenite.png"},"blue-orb":{"exists":true,"name":"Blue Orb","spritenum":41,"itemUser":["Kyogre"],"num":535,"gen":6,"isNonstandard":"Past","desc":"If held by a Kyogre, this item triggers its Primal Reversion in battle.","shortDesc":"","id":"blueorb","fullname":"item: Blue Orb","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"blue orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/blue-orb.png"},"bluk-berry":{"exists":true,"name":"Bluk Berry","spritenum":44,"isBerry":true,"naturalGift":{"basePower":90,"type":"Fire"},"onEat":false,"num":165,"gen":3,"desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"blukberry","fullname":"item: Bluk Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"bluk berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/bluk-berry.png"},"bottle-cap":{"exists":true,"name":"Bottle Cap","spritenum":696,"fling":{"basePower":30},"num":795,"gen":7,"desc":"Used for Hyper Training. One of a Pokemon\'s stats is calculated with an IV of 31.","shortDesc":"","id":"bottlecap","fullname":"item: Bottle Cap","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"bottle cap","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/bottle-cap.png"},"bright-powder":{"exists":true,"name":"Bright Powder","spritenum":51,"fling":{"basePower":10},"onModifyAccuracyPriority":-2,"num":213,"gen":2,"desc":"The accuracy of attacks against the holder is 0.9x.","shortDesc":"","id":"brightpowder","fullname":"item: Bright Powder","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"bright powder","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/bright-powder.png"},"bug-gem":{"exists":true,"name":"Bug Gem","spritenum":53,"isGem":true,"num":558,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Bug-type attack will have 1.3x power. Single use.","shortDesc":"","id":"buggem","fullname":"item: Bug Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"bug gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/bug-gem.png"},"bug-memory":{"exists":true,"name":"Bug Memory","spritenum":673,"onMemory":"Bug","forcedForme":"Silvally-Bug","itemUser":["Silvally-Bug"],"num":909,"gen":7,"desc":"Holder\'s Multi-Attack is Bug type.","shortDesc":"","id":"bugmemory","fullname":"item: Bug Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"bug memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/bug-memory.png"},"burn-drive":{"exists":true,"name":"Burn Drive","spritenum":54,"onDrive":"Fire","forcedForme":"Genesect-Burn","itemUser":["Genesect-Burn"],"num":118,"gen":5,"desc":"Holder\'s Techno Blast is Fire type.","shortDesc":"","id":"burndrive","fullname":"item: Burn Drive","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":70},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"burn drive","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/burn-drive.png"},"cameruptite":{"exists":true,"name":"Cameruptite","spritenum":625,"megaStone":"Camerupt-Mega","megaEvolves":"Camerupt","itemUser":["Camerupt"],"num":767,"gen":6,"isNonstandard":"Past","desc":"If held by a Camerupt, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"cameruptite","fullname":"item: Cameruptite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"cameruptite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/cameruptite.png"},"cell-battery":{"exists":true,"name":"Cell Battery","spritenum":60,"fling":{"basePower":30},"boosts":{"atk":1},"num":546,"gen":5,"desc":"Raises holder\'s Attack by 1 if hit by an Electric-type attack. Single use.","shortDesc":"","id":"cellbattery","fullname":"item: Cell Battery","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"cell battery","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/cell-battery.png"},"charcoal":{"exists":true,"name":"Charcoal","spritenum":61,"fling":{"basePower":30},"onBasePowerPriority":15,"num":249,"gen":2,"desc":"Holder\'s Fire-type attacks have 1.2x power.","shortDesc":"","id":"charcoal","fullname":"item: Charcoal","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"charcoal","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/charcoal.png"},"charizardite-x":{"exists":true,"name":"Charizardite X","spritenum":585,"megaStone":"Charizard-Mega-X","megaEvolves":"Charizard","itemUser":["Charizard"],"num":660,"gen":6,"isNonstandard":"Past","desc":"If held by a Charizard, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"charizarditex","fullname":"item: Charizardite X","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"charizardite x","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/charizardite-x.png"},"charizardite-y":{"exists":true,"name":"Charizardite Y","spritenum":586,"megaStone":"Charizard-Mega-Y","megaEvolves":"Charizard","itemUser":["Charizard"],"num":678,"gen":6,"isNonstandard":"Past","desc":"If held by a Charizard, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"charizarditey","fullname":"item: Charizardite Y","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"charizardite y","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/charizardite-y.png"},"charti-berry":{"exists":true,"name":"Charti Berry","spritenum":62,"isBerry":true,"naturalGift":{"basePower":80,"type":"Rock"},"num":195,"gen":4,"desc":"Halves damage taken from a supereffective Rock-type attack. Single use.","shortDesc":"","id":"chartiberry","fullname":"item: Charti Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"charti berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/charti-berry.png"},"cheri-berry":{"exists":true,"name":"Cheri Berry","spritenum":63,"isBerry":true,"naturalGift":{"basePower":80,"type":"Fire"},"num":149,"gen":3,"desc":"Holder cures itself if it is paralyzed. Single use.","shortDesc":"","id":"cheriberry","fullname":"item: Cheri Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"cheri berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/cheri-berry.png"},"cherish-ball":{"exists":true,"name":"Cherish Ball","spritenum":64,"num":16,"gen":4,"isPokeball":true,"desc":"A rare Poke Ball that has been crafted to commemorate an occasion.","shortDesc":"","id":"cherishball","fullname":"item: Cherish Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"cherish ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/cherish-ball.png"},"chesto-berry":{"exists":true,"name":"Chesto Berry","spritenum":65,"isBerry":true,"naturalGift":{"basePower":80,"type":"Water"},"num":150,"gen":3,"desc":"Holder wakes up if it is asleep. Single use.","shortDesc":"","id":"chestoberry","fullname":"item: Chesto Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"chesto berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/chesto-berry.png"},"chilan-berry":{"exists":true,"name":"Chilan Berry","spritenum":66,"isBerry":true,"naturalGift":{"basePower":80,"type":"Normal"},"num":200,"gen":4,"desc":"Halves damage taken from a Normal-type attack. Single use.","shortDesc":"","id":"chilanberry","fullname":"item: Chilan Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"chilan berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/chilan-berry.png"},"chill-drive":{"exists":true,"name":"Chill Drive","spritenum":67,"onDrive":"Ice","forcedForme":"Genesect-Chill","itemUser":["Genesect-Chill"],"num":119,"gen":5,"desc":"Holder\'s Techno Blast is Ice type.","shortDesc":"","id":"chilldrive","fullname":"item: Chill Drive","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":70},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"chill drive","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/chill-drive.png"},"choice-band":{"exists":true,"name":"Choice Band","spritenum":68,"fling":{"basePower":10},"onModifyAtkPriority":1,"isChoice":true,"num":220,"gen":3,"desc":"Holder\'s Attack is 1.5x, but it can only select the first move it executes.","shortDesc":"","id":"choiceband","fullname":"item: Choice Band","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"choice band","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/choice-band.png"},"choice-scarf":{"exists":true,"name":"Choice Scarf","spritenum":69,"fling":{"basePower":10},"isChoice":true,"num":287,"gen":4,"desc":"Holder\'s Speed is 1.5x, but it can only select the first move it executes.","shortDesc":"","id":"choicescarf","fullname":"item: Choice Scarf","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"choice scarf","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/choice-scarf.png"},"choice-specs":{"exists":true,"name":"Choice Specs","spritenum":70,"fling":{"basePower":10},"onModifySpAPriority":1,"isChoice":true,"num":297,"gen":4,"desc":"Holder\'s Sp. Atk is 1.5x, but it can only select the first move it executes.","shortDesc":"","id":"choicespecs","fullname":"item: Choice Specs","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"choice specs","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/choice-specs.png"},"chople-berry":{"exists":true,"name":"Chople Berry","spritenum":71,"isBerry":true,"naturalGift":{"basePower":80,"type":"Fighting"},"num":189,"gen":4,"desc":"Halves damage taken from a supereffective Fighting-type attack. Single use.","shortDesc":"","id":"chopleberry","fullname":"item: Chople Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"chople berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/chople-berry.png"},"claw-fossil":{"exists":true,"name":"Claw Fossil","spritenum":72,"fling":{"basePower":100},"num":100,"gen":3,"isNonstandard":"Past","desc":"Can be revived into Anorith.","shortDesc":"","id":"clawfossil","fullname":"item: Claw Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"claw fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/claw-fossil.png"},"coba-berry":{"exists":true,"name":"Coba Berry","spritenum":76,"isBerry":true,"naturalGift":{"basePower":80,"type":"Flying"},"num":192,"gen":4,"desc":"Halves damage taken from a supereffective Flying-type attack. Single use.","shortDesc":"","id":"cobaberry","fullname":"item: Coba Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"coba berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/coba-berry.png"},"colbur-berry":{"exists":true,"name":"Colbur Berry","spritenum":78,"isBerry":true,"naturalGift":{"basePower":80,"type":"Dark"},"num":198,"gen":4,"desc":"Halves damage taken from a supereffective Dark-type attack. Single use.","shortDesc":"","id":"colburberry","fullname":"item: Colbur Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"colbur berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/colbur-berry.png"},"cornn-berry":{"exists":true,"name":"Cornn Berry","spritenum":81,"isBerry":true,"naturalGift":{"basePower":90,"type":"Bug"},"onEat":false,"num":175,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"cornnberry","fullname":"item: Cornn Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"cornn berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/cornn-berry.png"},"cover-fossil":{"exists":true,"name":"Cover Fossil","spritenum":85,"fling":{"basePower":100},"num":572,"gen":5,"isNonstandard":"Past","desc":"Can be revived into Tirtouga.","shortDesc":"","id":"coverfossil","fullname":"item: Cover Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"cover fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/cover-fossil.png"},"custap-berry":{"exists":true,"name":"Custap Berry","spritenum":86,"isBerry":true,"naturalGift":{"basePower":100,"type":"Ghost"},"onFractionalPriorityPriority":-2,"num":210,"gen":4,"desc":"Holder moves first in its priority bracket when at 1/4 max HP or less. Single use.","shortDesc":"","id":"custapberry","fullname":"item: Custap Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"custap berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/custap-berry.png"},"damp-rock":{"exists":true,"name":"Damp Rock","spritenum":88,"fling":{"basePower":60},"num":285,"gen":4,"desc":"Holder\'s use of Rain Dance lasts 8 turns instead of 5.","shortDesc":"","id":"damprock","fullname":"item: Damp Rock","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"damp rock","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/damp-rock.png"},"dark-gem":{"exists":true,"name":"Dark Gem","spritenum":89,"isGem":true,"num":562,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Dark-type attack will have 1.3x power. Single use.","shortDesc":"","id":"darkgem","fullname":"item: Dark Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"dark gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dark-gem.png"},"dark-memory":{"exists":true,"name":"Dark Memory","spritenum":683,"onMemory":"Dark","forcedForme":"Silvally-Dark","itemUser":["Silvally-Dark"],"num":919,"gen":7,"desc":"Holder\'s Multi-Attack is Dark type.","shortDesc":"","id":"darkmemory","fullname":"item: Dark Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dark memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dark-memory.png"},"dawn-stone":{"exists":true,"name":"Dawn Stone","spritenum":92,"fling":{"basePower":80},"num":109,"gen":4,"desc":"Evolves male Kirlia into Gallade and female Snorunt into Froslass when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"dawnstone","fullname":"item: Dawn Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dawn stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dawn-stone.png"},"destiny-knot":{"exists":true,"name":"Destiny Knot","spritenum":95,"fling":{"basePower":10},"onAttractPriority":-100,"num":280,"gen":4,"desc":"If holder becomes infatuated, the other Pokemon also becomes infatuated.","shortDesc":"","id":"destinyknot","fullname":"item: Destiny Knot","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"destiny knot","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/destiny-knot.png"},"diancite":{"exists":true,"name":"Diancite","spritenum":624,"megaStone":"Diancie-Mega","megaEvolves":"Diancie","itemUser":["Diancie"],"num":764,"gen":6,"isNonstandard":"Past","desc":"If held by a Diancie, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"diancite","fullname":"item: Diancite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"diancite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/diancite.png"},"dive-ball":{"exists":true,"name":"Dive Ball","spritenum":101,"num":7,"gen":3,"isPokeball":true,"desc":"A Poke Ball that works especially well on Pokemon that live underwater.","shortDesc":"","id":"diveball","fullname":"item: Dive Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"dive ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dive-ball.png"},"dome-fossil":{"exists":true,"name":"Dome Fossil","spritenum":102,"fling":{"basePower":100},"num":102,"gen":3,"isNonstandard":"Past","desc":"Can be revived into Kabuto.","shortDesc":"","id":"domefossil","fullname":"item: Dome Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dome fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dome-fossil.png"},"douse-drive":{"exists":true,"name":"Douse Drive","spritenum":103,"onDrive":"Water","forcedForme":"Genesect-Douse","itemUser":["Genesect-Douse"],"num":116,"gen":5,"desc":"Holder\'s Techno Blast is Water type.","shortDesc":"","id":"dousedrive","fullname":"item: Douse Drive","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":70},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"douse drive","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/douse-drive.png"},"draco-plate":{"exists":true,"name":"Draco Plate","spritenum":105,"onPlate":"Dragon","onBasePowerPriority":15,"forcedForme":"Arceus-Dragon","num":311,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Dragon-type attacks have 1.2x power. Judgment is Dragon type.","shortDesc":"","id":"dracoplate","fullname":"item: Draco Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"draco plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/draco-plate.png"},"dragon-fang":{"exists":true,"name":"Dragon Fang","spritenum":106,"fling":{"basePower":70},"onBasePowerPriority":15,"num":250,"gen":2,"desc":"Holder\'s Dragon-type attacks have 1.2x power.","shortDesc":"","id":"dragonfang","fullname":"item: Dragon Fang","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dragon fang","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dragon-fang.png"},"dragon-gem":{"exists":true,"name":"Dragon Gem","spritenum":107,"isGem":true,"num":561,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Dragon-type attack will have 1.3x power. Single use.","shortDesc":"","id":"dragongem","fullname":"item: Dragon Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"dragon gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dragon-gem.png"},"dragon-memory":{"exists":true,"name":"Dragon Memory","spritenum":682,"onMemory":"Dragon","forcedForme":"Silvally-Dragon","itemUser":["Silvally-Dragon"],"num":918,"gen":7,"desc":"Holder\'s Multi-Attack is Dragon type.","shortDesc":"","id":"dragonmemory","fullname":"item: Dragon Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dragon memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dragon-memory.png"},"dragon-scale":{"exists":true,"name":"Dragon Scale","spritenum":108,"fling":{"basePower":30},"num":250,"gen":2,"desc":"Evolves Seadra into Kingdra when traded.","shortDesc":"","id":"dragonscale","fullname":"item: Dragon Scale","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dragon scale","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dragon-scale.png"},"dread-plate":{"exists":true,"name":"Dread Plate","spritenum":110,"onPlate":"Dark","onBasePowerPriority":15,"forcedForme":"Arceus-Dark","num":312,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Dark-type attacks have 1.2x power. Judgment is Dark type.","shortDesc":"","id":"dreadplate","fullname":"item: Dread Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dread plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dread-plate.png"},"dream-ball":{"exists":true,"name":"Dream Ball","spritenum":111,"num":576,"gen":5,"isPokeball":true,"desc":"A Poke Ball that makes it easier to catch wild Pokémon while they\'re asleep.","shortDesc":"","id":"dreamball","fullname":"item: Dream Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"dream ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dream-ball.png"},"dubious-disc":{"exists":true,"name":"Dubious Disc","spritenum":113,"fling":{"basePower":50},"num":324,"gen":4,"desc":"Evolves Porygon2 into Porygon-Z when traded.","shortDesc":"","id":"dubiousdisc","fullname":"item: Dubious Disc","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dubious disc","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dubious-disc.png"},"durin-berry":{"exists":true,"name":"Durin Berry","spritenum":114,"isBerry":true,"naturalGift":{"basePower":100,"type":"Water"},"onEat":false,"num":182,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"durinberry","fullname":"item: Durin Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"durin berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/durin-berry.png"},"dusk-ball":{"exists":true,"name":"Dusk Ball","spritenum":115,"num":13,"gen":4,"isPokeball":true,"desc":"A Poke Ball that makes it easier to catch wild Pokemon at night or in caves.","shortDesc":"","id":"duskball","fullname":"item: Dusk Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"dusk ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dusk-ball.png"},"dusk-stone":{"exists":true,"name":"Dusk Stone","spritenum":116,"fling":{"basePower":80},"num":108,"gen":4,"desc":"Evolves Murkrow into Honchkrow, Misdreavus into Mismagius, Lampent into Chandelure, and Doublade into Aegislash when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"duskstone","fullname":"item: Dusk Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"dusk stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dusk-stone.png"},"earth-plate":{"exists":true,"name":"Earth Plate","spritenum":117,"onPlate":"Ground","onBasePowerPriority":15,"forcedForme":"Arceus-Ground","num":305,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Ground-type attacks have 1.2x power. Judgment is Ground type.","shortDesc":"","id":"earthplate","fullname":"item: Earth Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"earth plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/earth-plate.png"},"eject-button":{"exists":true,"name":"Eject Button","spritenum":118,"fling":{"basePower":30},"onAfterMoveSecondaryPriority":2,"num":547,"gen":5,"desc":"If holder survives a hit, it immediately switches out to a chosen ally. Single use.","shortDesc":"","id":"ejectbutton","fullname":"item: Eject Button","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"eject button","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/eject-button.png"},"electirizer":{"exists":true,"name":"Electirizer","spritenum":119,"fling":{"basePower":80},"num":322,"gen":4,"desc":"Evolves Electabuzz into Electivire when traded.","shortDesc":"","id":"electirizer","fullname":"item: Electirizer","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"electirizer","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/electirizer.png"},"electric-gem":{"exists":true,"name":"Electric Gem","spritenum":120,"isGem":true,"num":550,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Electric-type attack will have 1.3x power. Single use.","shortDesc":"","id":"electricgem","fullname":"item: Electric Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"electric gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/electric-gem.png"},"electric-memory":{"exists":true,"name":"Electric Memory","spritenum":679,"onMemory":"Electric","forcedForme":"Silvally-Electric","itemUser":["Silvally-Electric"],"num":915,"gen":7,"desc":"Holder\'s Multi-Attack is Electric type.","shortDesc":"","id":"electricmemory","fullname":"item: Electric Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"electric memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/electric-memory.png"},"electric-seed":{"exists":true,"name":"Electric Seed","spritenum":664,"fling":{"basePower":10},"boosts":{"def":1},"num":881,"gen":7,"desc":"If the terrain is Electric Terrain, raises holder\'s Defense by 1 stage. Single use.","shortDesc":"","id":"electricseed","fullname":"item: Electric Seed","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"electric seed","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/electric-seed.png"},"energy-powder":{"exists":true,"name":"Energy Powder","spritenum":123,"fling":{"basePower":30},"num":34,"gen":2,"desc":"Restores 60 HP to one Pokemon.","shortDesc":"","id":"energypowder","fullname":"item: Energy Powder","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"energy powder","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/energy-powder.png"},"enigma-berry":{"exists":true,"name":"Enigma Berry","spritenum":124,"isBerry":true,"naturalGift":{"basePower":100,"type":"Bug"},"num":208,"gen":3,"desc":"Restores 1/4 max HP after holder is hit by a supereffective move. Single use.","shortDesc":"","id":"enigmaberry","fullname":"item: Enigma Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"enigma berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/enigma-berry.png"},"eviolite":{"exists":true,"name":"Eviolite","spritenum":130,"fling":{"basePower":40},"onModifyDefPriority":2,"onModifySpDPriority":2,"num":538,"gen":5,"desc":"If holder\'s species can evolve, its Defense and Sp. Def are 1.5x.","shortDesc":"","id":"eviolite","fullname":"item: Eviolite","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"eviolite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/eviolite.png"},"expert-belt":{"exists":true,"name":"Expert Belt","spritenum":132,"fling":{"basePower":10},"num":268,"gen":4,"desc":"Holder\'s attacks that are super effective against the target do 1.2x damage.","shortDesc":"","id":"expertbelt","fullname":"item: Expert Belt","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"expert belt","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/expert-belt.png"},"fairy-gem":{"exists":true,"name":"Fairy Gem","spritenum":611,"isGem":true,"num":715,"gen":6,"isNonstandard":"Past","desc":"Holder\'s first successful Fairy-type attack will have 1.3x power. Single use.","shortDesc":"","id":"fairygem","fullname":"item: Fairy Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"fairy gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fairy-gem.png"},"fairy-memory":{"exists":true,"name":"Fairy Memory","spritenum":684,"onMemory":"Fairy","forcedForme":"Silvally-Fairy","itemUser":["Silvally-Fairy"],"num":920,"gen":7,"desc":"Holder\'s Multi-Attack is Fairy type.","shortDesc":"","id":"fairymemory","fullname":"item: Fairy Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"fairy memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fairy-memory.png"},"fast-ball":{"exists":true,"name":"Fast Ball","spritenum":137,"num":492,"gen":2,"isPokeball":true,"desc":"A Poke Ball that makes it easier to catch Pokemon which are quick to run away.","shortDesc":"","id":"fastball","fullname":"item: Fast Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"fast ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fast-ball.png"},"fighting-gem":{"exists":true,"name":"Fighting Gem","spritenum":139,"isGem":true,"num":553,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Fighting-type attack will have 1.3x power. Single use.","shortDesc":"","id":"fightinggem","fullname":"item: Fighting Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"fighting gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fighting-gem.png"},"fighting-memory":{"exists":true,"name":"Fighting Memory","spritenum":668,"onMemory":"Fighting","forcedForme":"Silvally-Fighting","itemUser":["Silvally-Fighting"],"num":904,"gen":7,"desc":"Holder\'s Multi-Attack is Fighting type.","shortDesc":"","id":"fightingmemory","fullname":"item: Fighting Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"fighting memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fighting-memory.png"},"figy-berry":{"exists":true,"name":"Figy Berry","spritenum":140,"isBerry":true,"naturalGift":{"basePower":80,"type":"Bug"},"num":159,"gen":3,"desc":"Restores 33% max HP at 1/4 max HP or less; confuses if -Atk Nature. Single use.","shortDesc":"","id":"figyberry","fullname":"item: Figy Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"figy berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/figy-berry.png"},"fire-gem":{"exists":true,"name":"Fire Gem","spritenum":141,"isGem":true,"num":548,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Fire-type attack will have 1.3x power. Single use.","shortDesc":"","id":"firegem","fullname":"item: Fire Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"fire gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fire-gem.png"},"fire-memory":{"exists":true,"name":"Fire Memory","spritenum":676,"onMemory":"Fire","forcedForme":"Silvally-Fire","itemUser":["Silvally-Fire"],"num":912,"gen":7,"desc":"Holder\'s Multi-Attack is Fire type.","shortDesc":"","id":"firememory","fullname":"item: Fire Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"fire memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fire-memory.png"},"fire-stone":{"exists":true,"name":"Fire Stone","spritenum":142,"fling":{"basePower":30},"num":82,"gen":1,"desc":"Evolves Vulpix into Ninetales, Growlithe into Arcanine, Eevee into Flareon, and Pansear into Simisear when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"firestone","fullname":"item: Fire Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"fire stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fire-stone.png"},"fist-plate":{"exists":true,"name":"Fist Plate","spritenum":143,"onPlate":"Fighting","onBasePowerPriority":15,"forcedForme":"Arceus-Fighting","num":303,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Fighting-type attacks have 1.2x power. Judgment is Fighting type.","shortDesc":"","id":"fistplate","fullname":"item: Fist Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"fist plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fist-plate.png"},"flame-orb":{"exists":true,"name":"Flame Orb","spritenum":145,"fling":{"basePower":30,"status":"brn"},"onResidualOrder":28,"onResidualSubOrder":3,"num":273,"gen":4,"desc":"At the end of every turn, this item attempts to burn the holder.","shortDesc":"","id":"flameorb","fullname":"item: Flame Orb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"flame orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/flame-orb.png"},"flame-plate":{"exists":true,"name":"Flame Plate","spritenum":146,"onPlate":"Fire","onBasePowerPriority":15,"forcedForme":"Arceus-Fire","num":298,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Fire-type attacks have 1.2x power. Judgment is Fire type.","shortDesc":"","id":"flameplate","fullname":"item: Flame Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"flame plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/flame-plate.png"},"float-stone":{"exists":true,"name":"Float Stone","spritenum":147,"fling":{"basePower":30},"num":539,"gen":5,"desc":"Holder\'s weight is halved.","shortDesc":"","id":"floatstone","fullname":"item: Float Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"float stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/float-stone.png"},"flying-gem":{"exists":true,"name":"Flying Gem","spritenum":149,"isGem":true,"num":556,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Flying-type attack will have 1.3x power. Single use.","shortDesc":"","id":"flyinggem","fullname":"item: Flying Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"flying gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/flying-gem.png"},"flying-memory":{"exists":true,"name":"Flying Memory","spritenum":669,"onMemory":"Flying","forcedForme":"Silvally-Flying","itemUser":["Silvally-Flying"],"num":905,"gen":7,"desc":"Holder\'s Multi-Attack is Flying type.","shortDesc":"","id":"flyingmemory","fullname":"item: Flying Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"flying memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/flying-memory.png"},"focus-band":{"exists":true,"name":"Focus Band","spritenum":150,"fling":{"basePower":10},"onDamagePriority":-40,"num":230,"gen":2,"desc":"Holder has a 10% chance to survive an attack that would KO it with 1 HP.","shortDesc":"","id":"focusband","fullname":"item: Focus Band","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"focus band","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/focus-band.png"},"focus-sash":{"exists":true,"name":"Focus Sash","spritenum":151,"fling":{"basePower":10},"onDamagePriority":-40,"num":275,"gen":4,"desc":"If holder\'s HP is full, will survive an attack that would KO it with 1 HP. Single use.","shortDesc":"","id":"focussash","fullname":"item: Focus Sash","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"focus sash","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/focus-sash.png"},"friend-ball":{"exists":true,"name":"Friend Ball","spritenum":153,"num":497,"gen":2,"isPokeball":true,"desc":"A Poke Ball that makes caught Pokemon more friendly.","shortDesc":"","id":"friendball","fullname":"item: Friend Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"friend ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/friend-ball.png"},"full-incense":{"exists":true,"name":"Full Incense","spritenum":155,"fling":{"basePower":10},"onFractionalPriority":-0.1,"num":316,"gen":4,"desc":"Holder moves last in its priority bracket.","shortDesc":"","id":"fullincense","fullname":"item: Full Incense","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"full incense","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/full-incense.png"},"galladite":{"exists":true,"name":"Galladite","spritenum":616,"megaStone":"Gallade-Mega","megaEvolves":"Gallade","itemUser":["Gallade"],"num":756,"gen":6,"isNonstandard":"Past","desc":"If held by a Gallade, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"galladite","fullname":"item: Galladite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"galladite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/galladite.png"},"ganlon-berry":{"exists":true,"name":"Ganlon Berry","spritenum":158,"isBerry":true,"naturalGift":{"basePower":100,"type":"Ice"},"num":202,"gen":3,"desc":"Raises holder\'s Defense by 1 stage when at 1/4 max HP or less. Single use.","shortDesc":"","id":"ganlonberry","fullname":"item: Ganlon Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"ganlon berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ganlon-berry.png"},"garchompite":{"exists":true,"name":"Garchompite","spritenum":589,"megaStone":"Garchomp-Mega","megaEvolves":"Garchomp","itemUser":["Garchomp"],"num":683,"gen":6,"isNonstandard":"Past","desc":"If held by a Garchomp, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"garchompite","fullname":"item: Garchompite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"garchompite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/garchompite.png"},"gardevoirite":{"exists":true,"name":"Gardevoirite","spritenum":587,"megaStone":"Gardevoir-Mega","megaEvolves":"Gardevoir","itemUser":["Gardevoir"],"num":657,"gen":6,"isNonstandard":"Past","desc":"If held by a Gardevoir, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"gardevoirite","fullname":"item: Gardevoirite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"gardevoirite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/gardevoirite.png"},"gengarite":{"exists":true,"name":"Gengarite","spritenum":588,"megaStone":"Gengar-Mega","megaEvolves":"Gengar","itemUser":["Gengar"],"num":656,"gen":6,"isNonstandard":"Past","desc":"If held by a Gengar, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"gengarite","fullname":"item: Gengarite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"gengarite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/gengarite.png"},"ghost-gem":{"exists":true,"name":"Ghost Gem","spritenum":161,"isGem":true,"num":560,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Ghost-type attack will have 1.3x power. Single use.","shortDesc":"","id":"ghostgem","fullname":"item: Ghost Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"ghost gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ghost-gem.png"},"ghost-memory":{"exists":true,"name":"Ghost Memory","spritenum":674,"onMemory":"Ghost","forcedForme":"Silvally-Ghost","itemUser":["Silvally-Ghost"],"num":910,"gen":7,"desc":"Holder\'s Multi-Attack is Ghost type.","shortDesc":"","id":"ghostmemory","fullname":"item: Ghost Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"ghost memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ghost-memory.png"},"glalitite":{"exists":true,"name":"Glalitite","spritenum":623,"megaStone":"Glalie-Mega","megaEvolves":"Glalie","itemUser":["Glalie"],"num":763,"gen":6,"isNonstandard":"Past","desc":"If held by a Glalie, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"glalitite","fullname":"item: Glalitite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"glalitite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/glalitite.png"},"grass-gem":{"exists":true,"name":"Grass Gem","spritenum":172,"isGem":true,"num":551,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Grass-type attack will have 1.3x power. Single use.","shortDesc":"","id":"grassgem","fullname":"item: Grass Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"grass gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/grass-gem.png"},"grass-memory":{"exists":true,"name":"Grass Memory","spritenum":678,"onMemory":"Grass","forcedForme":"Silvally-Grass","itemUser":["Silvally-Grass"],"num":914,"gen":7,"desc":"Holder\'s Multi-Attack is Grass type.","shortDesc":"","id":"grassmemory","fullname":"item: Grass Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"grass memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/grass-memory.png"},"grassy-seed":{"exists":true,"name":"Grassy Seed","spritenum":667,"fling":{"basePower":10},"boosts":{"def":1},"num":884,"gen":7,"desc":"If the terrain is Grassy Terrain, raises holder\'s Defense by 1 stage. Single use.","shortDesc":"","id":"grassyseed","fullname":"item: Grassy Seed","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"grassy seed","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/grassy-seed.png"},"great-ball":{"exists":true,"name":"Great Ball","spritenum":174,"num":3,"gen":1,"isPokeball":true,"desc":"A high-performance Ball that provides a higher catch rate than a Poke Ball.","shortDesc":"","id":"greatball","fullname":"item: Great Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"great ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/great-ball.png"},"grepa-berry":{"exists":true,"name":"Grepa Berry","spritenum":178,"isBerry":true,"naturalGift":{"basePower":90,"type":"Flying"},"onEat":false,"num":173,"gen":3,"desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"grepaberry","fullname":"item: Grepa Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"grepa berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/grepa-berry.png"},"grip-claw":{"exists":true,"name":"Grip Claw","spritenum":179,"fling":{"basePower":90},"num":286,"gen":4,"desc":"Holder\'s partial-trapping moves always last 7 turns.","shortDesc":"","id":"gripclaw","fullname":"item: Grip Claw","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"grip claw","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/grip-claw.png"},"griseous-orb":{"exists":true,"name":"Griseous Orb","spritenum":180,"fling":{"basePower":60},"onBasePowerPriority":15,"forcedForme":"Giratina-Origin","itemUser":["Giratina-Origin"],"num":112,"gen":4,"desc":"If held by a Giratina, its Ghost- and Dragon-type attacks have 1.2x power.","shortDesc":"","id":"griseousorb","fullname":"item: Griseous Orb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"griseous orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/griseous-orb.png"},"ground-gem":{"exists":true,"name":"Ground Gem","spritenum":182,"isGem":true,"num":555,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Ground-type attack will have 1.3x power. Single use.","shortDesc":"","id":"groundgem","fullname":"item: Ground Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"ground gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ground-gem.png"},"ground-memory":{"exists":true,"name":"Ground Memory","spritenum":671,"onMemory":"Ground","forcedForme":"Silvally-Ground","itemUser":["Silvally-Ground"],"num":907,"gen":7,"desc":"Holder\'s Multi-Attack is Ground type.","shortDesc":"","id":"groundmemory","fullname":"item: Ground Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"ground memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ground-memory.png"},"gyaradosite":{"exists":true,"name":"Gyaradosite","spritenum":589,"megaStone":"Gyarados-Mega","megaEvolves":"Gyarados","itemUser":["Gyarados"],"num":676,"gen":6,"isNonstandard":"Past","desc":"If held by a Gyarados, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"gyaradosite","fullname":"item: Gyaradosite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"gyaradosite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/gyaradosite.png"},"haban-berry":{"exists":true,"name":"Haban Berry","spritenum":185,"isBerry":true,"naturalGift":{"basePower":80,"type":"Dragon"},"num":197,"gen":4,"desc":"Halves damage taken from a supereffective Dragon-type attack. Single use.","shortDesc":"","id":"habanberry","fullname":"item: Haban Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"haban berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/haban-berry.png"},"hard-stone":{"exists":true,"name":"Hard Stone","spritenum":187,"fling":{"basePower":100},"onBasePowerPriority":15,"num":238,"gen":2,"desc":"Holder\'s Rock-type attacks have 1.2x power.","shortDesc":"","id":"hardstone","fullname":"item: Hard Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"hard stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/hard-stone.png"},"heal-ball":{"exists":true,"name":"Heal Ball","spritenum":188,"num":14,"gen":4,"isPokeball":true,"desc":"A remedial Poke Ball that restores the caught Pokemon\'s HP and status problem.","shortDesc":"","id":"healball","fullname":"item: Heal Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"heal ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/heal-ball.png"},"heat-rock":{"exists":true,"name":"Heat Rock","spritenum":193,"fling":{"basePower":60},"num":284,"gen":4,"desc":"Holder\'s use of Sunny Day lasts 8 turns instead of 5.","shortDesc":"","id":"heatrock","fullname":"item: Heat Rock","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"heat rock","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/heat-rock.png"},"heavy-ball":{"exists":true,"name":"Heavy Ball","spritenum":194,"num":495,"gen":2,"isPokeball":true,"desc":"A Poke Ball for catching very heavy Pokemon.","shortDesc":"","id":"heavyball","fullname":"item: Heavy Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"heavy ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/heavy-ball.png"},"helix-fossil":{"exists":true,"name":"Helix Fossil","spritenum":195,"fling":{"basePower":100},"num":101,"gen":3,"isNonstandard":"Past","desc":"Can be revived into Omanyte.","shortDesc":"","id":"helixfossil","fullname":"item: Helix Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"helix fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/helix-fossil.png"},"heracronite":{"exists":true,"name":"Heracronite","spritenum":590,"megaStone":"Heracross-Mega","megaEvolves":"Heracross","itemUser":["Heracross"],"num":680,"gen":6,"isNonstandard":"Past","desc":"If held by a Heracross, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"heracronite","fullname":"item: Heracronite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"heracronite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/heracronite.png"},"hondew-berry":{"exists":true,"name":"Hondew Berry","spritenum":213,"isBerry":true,"naturalGift":{"basePower":90,"type":"Ground"},"onEat":false,"num":172,"gen":3,"desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"hondewberry","fullname":"item: Hondew Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"hondew berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/hondew-berry.png"},"houndoominite":{"exists":true,"name":"Houndoominite","spritenum":591,"megaStone":"Houndoom-Mega","megaEvolves":"Houndoom","itemUser":["Houndoom"],"num":666,"gen":6,"isNonstandard":"Past","desc":"If held by a Houndoom, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"houndoominite","fullname":"item: Houndoominite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"houndoominite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/houndoominite.png"},"iapapa-berry":{"exists":true,"name":"Iapapa Berry","spritenum":217,"isBerry":true,"naturalGift":{"basePower":80,"type":"Dark"},"num":163,"gen":3,"desc":"Restores 33% max HP at 1/4 max HP or less; confuses if -Def Nature. Single use.","shortDesc":"","id":"iapapaberry","fullname":"item: Iapapa Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"iapapa berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/iapapa-berry.png"},"ice-gem":{"exists":true,"name":"Ice Gem","spritenum":218,"isGem":true,"num":552,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Ice-type attack will have 1.3x power. Single use.","shortDesc":"","id":"icegem","fullname":"item: Ice Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"ice gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ice-gem.png"},"ice-memory":{"exists":true,"name":"Ice Memory","spritenum":681,"onMemory":"Ice","forcedForme":"Silvally-Ice","itemUser":["Silvally-Ice"],"num":917,"gen":7,"desc":"Holder\'s Multi-Attack is Ice type.","shortDesc":"","id":"icememory","fullname":"item: Ice Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"ice memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ice-memory.png"},"ice-stone":{"exists":true,"name":"Ice Stone","spritenum":693,"fling":{"basePower":30},"num":849,"gen":7,"desc":"Evolves Alolan Sandshrew into Alolan Sandslash, Alolan Vulpix into Alolan Ninetales, Eevee into Glaceon, and Galarian Darumaka into Galarian Darmanitan when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"icestone","fullname":"item: Ice Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"ice stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ice-stone.png"},"icicle-plate":{"exists":true,"name":"Icicle Plate","spritenum":220,"onPlate":"Ice","onBasePowerPriority":15,"forcedForme":"Arceus-Ice","num":302,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Ice-type attacks have 1.2x power. Judgment is Ice type.","shortDesc":"","id":"icicleplate","fullname":"item: Icicle Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"icicle plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/icicle-plate.png"},"icy-rock":{"exists":true,"name":"Icy Rock","spritenum":221,"fling":{"basePower":40},"num":282,"gen":4,"desc":"Holder\'s use of Hail lasts 8 turns instead of 5.","shortDesc":"","id":"icyrock","fullname":"item: Icy Rock","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"icy rock","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/icy-rock.png"},"insect-plate":{"exists":true,"name":"Insect Plate","spritenum":223,"onPlate":"Bug","onBasePowerPriority":15,"forcedForme":"Arceus-Bug","num":308,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Bug-type attacks have 1.2x power. Judgment is Bug type.","shortDesc":"","id":"insectplate","fullname":"item: Insect Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"insect plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/insect-plate.png"},"iron-ball":{"exists":true,"name":"Iron Ball","spritenum":224,"fling":{"basePower":130},"num":278,"gen":4,"desc":"Holder is grounded, Speed halved. If Flying type, takes neutral Ground damage.","shortDesc":"","id":"ironball","fullname":"item: Iron Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"iron ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/iron-ball.png"},"iron-plate":{"exists":true,"name":"Iron Plate","spritenum":225,"onPlate":"Steel","onBasePowerPriority":15,"forcedForme":"Arceus-Steel","num":313,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Steel-type attacks have 1.2x power. Judgment is Steel type.","shortDesc":"","id":"ironplate","fullname":"item: Iron Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"iron plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/iron-plate.png"},"jaboca-berry":{"exists":true,"name":"Jaboca Berry","spritenum":230,"isBerry":true,"naturalGift":{"basePower":100,"type":"Dragon"},"num":211,"gen":4,"desc":"If holder is hit by a physical move, attacker loses 1/8 of its max HP. Single use.","shortDesc":"","id":"jabocaberry","fullname":"item: Jaboca Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"jaboca berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/jaboca-berry.png"},"jaw-fossil":{"exists":true,"name":"Jaw Fossil","spritenum":694,"fling":{"basePower":100},"num":710,"gen":6,"isNonstandard":"Past","desc":"Can be revived into Tyrunt.","shortDesc":"","id":"jawfossil","fullname":"item: Jaw Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"jaw fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/jaw-fossil.png"},"kasib-berry":{"exists":true,"name":"Kasib Berry","spritenum":233,"isBerry":true,"naturalGift":{"basePower":80,"type":"Ghost"},"num":196,"gen":4,"desc":"Halves damage taken from a supereffective Ghost-type attack. Single use.","shortDesc":"","id":"kasibberry","fullname":"item: Kasib Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"kasib berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/kasib-berry.png"},"kebia-berry":{"exists":true,"name":"Kebia Berry","spritenum":234,"isBerry":true,"naturalGift":{"basePower":80,"type":"Poison"},"num":190,"gen":4,"desc":"Halves damage taken from a supereffective Poison-type attack. Single use.","shortDesc":"","id":"kebiaberry","fullname":"item: Kebia Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"kebia berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/kebia-berry.png"},"kee-berry":{"exists":true,"name":"Kee Berry","spritenum":593,"isBerry":true,"naturalGift":{"basePower":100,"type":"Fairy"},"num":687,"gen":6,"desc":"Raises holder\'s Defense by 1 stage after it is hit by a physical attack. Single use.","shortDesc":"","id":"keeberry","fullname":"item: Kee Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"kee berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/kee-berry.png"},"kelpsy-berry":{"exists":true,"name":"Kelpsy Berry","spritenum":235,"isBerry":true,"naturalGift":{"basePower":90,"type":"Fighting"},"onEat":false,"num":170,"gen":3,"desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"kelpsyberry","fullname":"item: Kelpsy Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"kelpsy berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/kelpsy-berry.png"},"kangaskhanite":{"exists":true,"name":"Kangaskhanite","spritenum":592,"megaStone":"Kangaskhan-Mega","megaEvolves":"Kangaskhan","itemUser":["Kangaskhan"],"num":675,"gen":6,"isNonstandard":"Past","desc":"If held by a Kangaskhan, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"kangaskhanite","fullname":"item: Kangaskhanite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"kangaskhanite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/kangaskhanite.png"},"lagging-tail":{"exists":true,"name":"Lagging Tail","spritenum":237,"fling":{"basePower":10},"onFractionalPriority":-0.1,"num":279,"gen":4,"desc":"Holder moves last in its priority bracket.","shortDesc":"","id":"laggingtail","fullname":"item: Lagging Tail","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"lagging tail","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lagging-tail.png"},"lansat-berry":{"exists":true,"name":"Lansat Berry","spritenum":238,"isBerry":true,"naturalGift":{"basePower":100,"type":"Flying"},"num":206,"gen":3,"desc":"Holder gains the Focus Energy effect when at 1/4 max HP or less. Single use.","shortDesc":"","id":"lansatberry","fullname":"item: Lansat Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"lansat berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lansat-berry.png"},"latiasite":{"exists":true,"name":"Latiasite","spritenum":629,"megaStone":"Latias-Mega","megaEvolves":"Latias","itemUser":["Latias"],"num":684,"gen":6,"isNonstandard":"Past","desc":"If held by a Latias, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"latiasite","fullname":"item: Latiasite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"latiasite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/latiasite.png"},"latiosite":{"exists":true,"name":"Latiosite","spritenum":630,"megaStone":"Latios-Mega","megaEvolves":"Latios","itemUser":["Latios"],"num":685,"gen":6,"isNonstandard":"Past","desc":"If held by a Latios, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"latiosite","fullname":"item: Latiosite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"latiosite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/latiosite.png"},"lax-incense":{"exists":true,"name":"Lax Incense","spritenum":240,"fling":{"basePower":10},"onModifyAccuracyPriority":-2,"num":255,"gen":3,"desc":"The accuracy of attacks against the holder is 0.9x.","shortDesc":"","id":"laxincense","fullname":"item: Lax Incense","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"lax incense","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lax-incense.png"},"leaf-stone":{"exists":true,"name":"Leaf Stone","spritenum":241,"fling":{"basePower":30},"num":85,"gen":1,"desc":"Evolves Gloom into Vileplume, Weepinbell into Victreebel, Exeggcute into Exeggutor or Alolan Exeggutor, Eevee into Leafeon, Nuzleaf into Shiftry, and Pansage into Simisage when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"leafstone","fullname":"item: Leaf Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"leaf stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/leaf-stone.png"},"leftovers":{"exists":true,"name":"Leftovers","spritenum":242,"fling":{"basePower":10},"onResidualOrder":5,"onResidualSubOrder":4,"num":234,"gen":2,"desc":"At the end of every turn, holder restores 1/16 of its max HP.","shortDesc":"","id":"leftovers","fullname":"item: Leftovers","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"leftovers","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/leftovers.png"},"leppa-berry":{"exists":true,"name":"Leppa Berry","spritenum":244,"isBerry":true,"naturalGift":{"basePower":80,"type":"Fighting"},"num":154,"gen":3,"desc":"Restores 10 PP to the first of the holder\'s moves to reach 0 PP. Single use.","shortDesc":"","id":"leppaberry","fullname":"item: Leppa Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"leppa berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/leppa-berry.png"},"level-ball":{"exists":true,"name":"Level Ball","spritenum":246,"num":493,"gen":2,"isPokeball":true,"desc":"A Poke Ball for catching Pokemon that are a lower level than your own.","shortDesc":"","id":"levelball","fullname":"item: Level Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"level ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/level-ball.png"},"liechi-berry":{"exists":true,"name":"Liechi Berry","spritenum":248,"isBerry":true,"naturalGift":{"basePower":100,"type":"Grass"},"num":201,"gen":3,"desc":"Raises holder\'s Attack by 1 stage when at 1/4 max HP or less. Single use.","shortDesc":"","id":"liechiberry","fullname":"item: Liechi Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"liechi berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/liechi-berry.png"},"life-orb":{"exists":true,"name":"Life Orb","spritenum":249,"fling":{"basePower":30},"num":270,"gen":4,"desc":"Holder\'s attacks do 1.3x damage, and it loses 1/10 its max HP after the attack.","shortDesc":"","id":"lifeorb","fullname":"item: Life Orb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"life orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/life-orb.png"},"light-ball":{"exists":true,"name":"Light Ball","spritenum":251,"fling":{"basePower":30,"status":"par"},"onModifyAtkPriority":1,"onModifySpAPriority":1,"itemUser":["Pikachu"],"num":236,"gen":2,"desc":"If held by a Pikachu, its Attack and Sp. Atk are doubled.","shortDesc":"","id":"lightball","fullname":"item: Light Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"light ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/light-ball.png"},"light-clay":{"exists":true,"name":"Light Clay","spritenum":252,"fling":{"basePower":30},"num":269,"gen":4,"desc":"Holder\'s use of Aurora Veil, Light Screen, or Reflect lasts 8 turns instead of 5.","shortDesc":"","id":"lightclay","fullname":"item: Light Clay","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"light clay","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/light-clay.png"},"lopunnite":{"exists":true,"name":"Lopunnite","spritenum":626,"megaStone":"Lopunny-Mega","megaEvolves":"Lopunny","itemUser":["Lopunny"],"num":768,"gen":6,"isNonstandard":"Past","desc":"If held by a Lopunny, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"lopunnite","fullname":"item: Lopunnite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"lopunnite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lopunnite.png"},"love-ball":{"exists":true,"name":"Love Ball","spritenum":258,"num":496,"gen":2,"isPokeball":true,"desc":"Poke Ball for catching Pokemon that are the opposite gender of your Pokemon.","shortDesc":"","id":"loveball","fullname":"item: Love Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"love ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/love-ball.png"},"lucarionite":{"exists":true,"name":"Lucarionite","spritenum":594,"megaStone":"Lucario-Mega","megaEvolves":"Lucario","itemUser":["Lucario"],"num":673,"gen":6,"isNonstandard":"Past","desc":"If held by a Lucario, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"lucarionite","fullname":"item: Lucarionite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"lucarionite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lucarionite.png"},"lucky-punch":{"exists":true,"name":"Lucky Punch","spritenum":261,"fling":{"basePower":40},"itemUser":["Chansey"],"num":256,"gen":2,"isNonstandard":"Past","desc":"If held by a Chansey, its critical hit ratio is raised by 2 stages.","shortDesc":"","id":"luckypunch","fullname":"item: Lucky Punch","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"lucky punch","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lucky-punch.png"},"lum-berry":{"exists":true,"name":"Lum Berry","spritenum":262,"isBerry":true,"naturalGift":{"basePower":80,"type":"Flying"},"onAfterSetStatusPriority":-1,"num":157,"gen":3,"desc":"Holder cures itself if it has a non-volatile status or is confused. Single use.","shortDesc":"","id":"lumberry","fullname":"item: Lum Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"lum berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lum-berry.png"},"luminous-moss":{"exists":true,"name":"Luminous Moss","spritenum":595,"fling":{"basePower":30},"boosts":{"spd":1},"num":648,"gen":6,"desc":"Raises holder\'s Sp. Def by 1 stage if hit by a Water-type attack. Single use.","shortDesc":"","id":"luminousmoss","fullname":"item: Luminous Moss","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"luminous moss","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/luminous-moss.png"},"lure-ball":{"exists":true,"name":"Lure Ball","spritenum":264,"num":494,"gen":2,"isPokeball":true,"desc":"A Poke Ball for catching Pokemon hooked by a Rod when fishing.","shortDesc":"","id":"lureball","fullname":"item: Lure Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"lure ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lure-ball.png"},"lustrous-orb":{"exists":true,"name":"Lustrous Orb","spritenum":265,"fling":{"basePower":60},"onBasePowerPriority":15,"itemUser":["Palkia"],"num":136,"gen":4,"desc":"If held by a Palkia, its Water- and Dragon-type attacks have 1.2x power.","shortDesc":"","id":"lustrousorb","fullname":"item: Lustrous Orb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"lustrous orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lustrous-orb.png"},"luxury-ball":{"exists":true,"name":"Luxury Ball","spritenum":266,"num":11,"gen":3,"isPokeball":true,"desc":"A comfortable Poke Ball that makes a caught wild Pokemon quickly grow friendly.","shortDesc":"","id":"luxuryball","fullname":"item: Luxury Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"luxury ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/luxury-ball.png"},"macho-brace":{"exists":true,"name":"Macho Brace","spritenum":269,"ignoreKlutz":true,"fling":{"basePower":60},"num":215,"gen":3,"desc":"Holder\'s Speed is halved. The Klutz Ability does not ignore this effect.","shortDesc":"","id":"machobrace","fullname":"item: Macho Brace","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"isGem":false,"isPokeball":false,"nameLowerCase":"macho brace","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/macho-brace.png"},"magmarizer":{"exists":true,"name":"Magmarizer","spritenum":272,"fling":{"basePower":80},"num":323,"gen":4,"desc":"Evolves Magmar into Magmortar when traded.","shortDesc":"","id":"magmarizer","fullname":"item: Magmarizer","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"magmarizer","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/magmarizer.png"},"magnet":{"exists":true,"name":"Magnet","spritenum":273,"fling":{"basePower":30},"onBasePowerPriority":15,"num":242,"gen":2,"desc":"Holder\'s Electric-type attacks have 1.2x power.","shortDesc":"","id":"magnet","fullname":"item: Magnet","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"magnet","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/magnet.png"},"mago-berry":{"exists":true,"name":"Mago Berry","spritenum":274,"isBerry":true,"naturalGift":{"basePower":80,"type":"Ghost"},"num":161,"gen":3,"desc":"Restores 33% max HP at 1/4 max HP or less; confuses if -Spe Nature. Single use.","shortDesc":"","id":"magoberry","fullname":"item: Mago Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"mago berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/mago-berry.png"},"magost-berry":{"exists":true,"name":"Magost Berry","spritenum":275,"isBerry":true,"naturalGift":{"basePower":90,"type":"Rock"},"onEat":false,"num":176,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"magostberry","fullname":"item: Magost Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"magost berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/magost-berry.png"},"manectite":{"exists":true,"name":"Manectite","spritenum":596,"megaStone":"Manectric-Mega","megaEvolves":"Manectric","itemUser":["Manectric"],"num":682,"gen":6,"isNonstandard":"Past","desc":"If held by a Manectric, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"manectite","fullname":"item: Manectite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"manectite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/manectite.png"},"maranga-berry":{"exists":true,"name":"Maranga Berry","spritenum":597,"isBerry":true,"naturalGift":{"basePower":100,"type":"Dark"},"num":688,"gen":6,"desc":"Raises holder\'s Sp. Def by 1 stage after it is hit by a special attack. Single use.","shortDesc":"","id":"marangaberry","fullname":"item: Maranga Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"maranga berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/maranga-berry.png"},"master-ball":{"exists":true,"name":"Master Ball","spritenum":276,"num":1,"gen":1,"isPokeball":true,"desc":"The best Ball with the ultimate performance. It will catch any wild Pokemon.","shortDesc":"","id":"masterball","fullname":"item: Master Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"master ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/master-ball.png"},"mawilite":{"exists":true,"name":"Mawilite","spritenum":598,"megaStone":"Mawile-Mega","megaEvolves":"Mawile","itemUser":["Mawile"],"num":681,"gen":6,"isNonstandard":"Past","desc":"If held by a Mawile, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"mawilite","fullname":"item: Mawilite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"mawilite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/mawilite.png"},"meadow-plate":{"exists":true,"name":"Meadow Plate","spritenum":282,"onPlate":"Grass","onBasePowerPriority":15,"forcedForme":"Arceus-Grass","num":301,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Grass-type attacks have 1.2x power. Judgment is Grass type.","shortDesc":"","id":"meadowplate","fullname":"item: Meadow Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"meadow plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/meadow-plate.png"},"medichamite":{"exists":true,"name":"Medichamite","spritenum":599,"megaStone":"Medicham-Mega","megaEvolves":"Medicham","itemUser":["Medicham"],"num":665,"gen":6,"isNonstandard":"Past","desc":"If held by a Medicham, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"medichamite","fullname":"item: Medichamite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"medichamite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/medichamite.png"},"mental-herb":{"exists":true,"name":"Mental Herb","spritenum":285,"fling":{"basePower":10},"num":219,"gen":3,"desc":"Cures holder of Attract, Disable, Encore, Heal Block, Taunt, Torment. Single use.","shortDesc":"","id":"mentalherb","fullname":"item: Mental Herb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"mental herb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/mental-herb.png"},"metagrossite":{"exists":true,"name":"Metagrossite","spritenum":618,"megaStone":"Metagross-Mega","megaEvolves":"Metagross","itemUser":["Metagross"],"num":758,"gen":6,"isNonstandard":"Past","desc":"If held by a Metagross, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"metagrossite","fullname":"item: Metagrossite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"metagrossite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/metagrossite.png"},"metal-coat":{"exists":true,"name":"Metal Coat","spritenum":286,"fling":{"basePower":30},"onBasePowerPriority":15,"num":233,"gen":2,"desc":"Holder\'s Steel-type attacks have 1.2x power. Evolves Onix into Steelix and Scyther into Scizor when traded.","shortDesc":"Holder\'s Steel-type attacks have 1.2x power.","id":"metalcoat","fullname":"item: Metal Coat","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"metal coat","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/metal-coat.png"},"metal-powder":{"exists":true,"name":"Metal Powder","fling":{"basePower":10},"spritenum":287,"onModifyDefPriority":2,"itemUser":["Ditto"],"num":257,"gen":2,"desc":"If held by a Ditto that hasn\'t Transformed, its Defense is doubled.","shortDesc":"","id":"metalpowder","fullname":"item: Metal Powder","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"metal powder","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/metal-powder.png"},"metronome":{"exists":true,"name":"Metronome","spritenum":289,"fling":{"basePower":30},"condition":{"onTryMovePriority":-2},"num":277,"gen":4,"desc":"Damage of moves used on consecutive turns is increased. Max 2x after 5 turns.","shortDesc":"","id":"metronome","fullname":"item: Metronome","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"metronome","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/metronome.png"},"mewtwonite-x":{"exists":true,"name":"Mewtwonite X","spritenum":600,"megaStone":"Mewtwo-Mega-X","megaEvolves":"Mewtwo","itemUser":["Mewtwo"],"num":662,"gen":6,"isNonstandard":"Past","desc":"If held by a Mewtwo, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"mewtwonitex","fullname":"item: Mewtwonite X","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"mewtwonite x","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/mewtwonite-x.png"},"mewtwonite-y":{"exists":true,"name":"Mewtwonite Y","spritenum":601,"megaStone":"Mewtwo-Mega-Y","megaEvolves":"Mewtwo","itemUser":["Mewtwo"],"num":663,"gen":6,"isNonstandard":"Past","desc":"If held by a Mewtwo, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"mewtwonitey","fullname":"item: Mewtwonite Y","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"mewtwonite y","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/mewtwonite-y.png"},"micle-berry":{"exists":true,"name":"Micle Berry","spritenum":290,"isBerry":true,"naturalGift":{"basePower":100,"type":"Rock"},"condition":{"duration":2},"num":209,"gen":4,"desc":"Holder\'s next move has 1.2x accuracy when at 1/4 max HP or less. Single use.","shortDesc":"","id":"micleberry","fullname":"item: Micle Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"micle berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/micle-berry.png"},"mind-plate":{"exists":true,"name":"Mind Plate","spritenum":291,"onPlate":"Psychic","onBasePowerPriority":15,"forcedForme":"Arceus-Psychic","num":307,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Psychic-type attacks have 1.2x power. Judgment is Psychic type.","shortDesc":"","id":"mindplate","fullname":"item: Mind Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"mind plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/mind-plate.png"},"miracle-seed":{"exists":true,"name":"Miracle Seed","fling":{"basePower":30},"spritenum":292,"onBasePowerPriority":15,"num":239,"gen":2,"desc":"Holder\'s Grass-type attacks have 1.2x power.","shortDesc":"","id":"miracleseed","fullname":"item: Miracle Seed","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"miracle seed","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/miracle-seed.png"},"misty-seed":{"exists":true,"name":"Misty Seed","spritenum":666,"fling":{"basePower":10},"boosts":{"spd":1},"num":883,"gen":7,"desc":"If the terrain is Misty Terrain, raises holder\'s Sp. Def by 1 stage. Single use.","shortDesc":"","id":"mistyseed","fullname":"item: Misty Seed","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"misty seed","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/misty-seed.png"},"moon-ball":{"exists":true,"name":"Moon Ball","spritenum":294,"num":498,"gen":2,"isPokeball":true,"desc":"A Poke Ball for catching Pokemon that evolve using the Moon Stone.","shortDesc":"","id":"moonball","fullname":"item: Moon Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"moon ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/moon-ball.png"},"moon-stone":{"exists":true,"name":"Moon Stone","spritenum":295,"fling":{"basePower":30},"num":81,"gen":1,"desc":"Evolves Nidorina into Nidoqueen, Nidorino into Nidoking, Clefairy into Clefable, Jigglypuff into Wigglytuff, Skitty into Delcatty, and Munna into Musharna when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"moonstone","fullname":"item: Moon Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"moon stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/moon-stone.png"},"muscle-band":{"exists":true,"name":"Muscle Band","spritenum":297,"fling":{"basePower":10},"onBasePowerPriority":16,"num":266,"gen":4,"desc":"Holder\'s physical attacks have 1.1x power.","shortDesc":"","id":"muscleband","fullname":"item: Muscle Band","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"muscle band","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/muscle-band.png"},"mystic-water":{"exists":true,"name":"Mystic Water","spritenum":300,"fling":{"basePower":30},"onBasePowerPriority":15,"num":243,"gen":2,"desc":"Holder\'s Water-type attacks have 1.2x power.","shortDesc":"","id":"mysticwater","fullname":"item: Mystic Water","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"mystic water","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/mystic-water.png"},"nanab-berry":{"exists":true,"name":"Nanab Berry","spritenum":302,"isBerry":true,"naturalGift":{"basePower":90,"type":"Water"},"onEat":false,"num":166,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"nanabberry","fullname":"item: Nanab Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"nanab berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/nanab-berry.png"},"nest-ball":{"exists":true,"name":"Nest Ball","spritenum":303,"num":8,"gen":3,"isPokeball":true,"desc":"A Poke Ball that works especially well on weaker Pokemon in the wild.","shortDesc":"","id":"nestball","fullname":"item: Nest Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"nest ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/nest-ball.png"},"net-ball":{"exists":true,"name":"Net Ball","spritenum":304,"num":6,"gen":3,"isPokeball":true,"desc":"A Poke Ball that works especially well on Water- and Bug-type Pokemon.","shortDesc":"","id":"netball","fullname":"item: Net Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"net ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/net-ball.png"},"never-melt-ice":{"exists":true,"name":"Never-Melt Ice","spritenum":305,"fling":{"basePower":30},"onBasePowerPriority":15,"num":246,"gen":2,"desc":"Holder\'s Ice-type attacks have 1.2x power.","shortDesc":"","id":"nevermeltice","fullname":"item: Never-Melt Ice","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"never-melt ice","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/never-melt-ice.png"},"nomel-berry":{"exists":true,"name":"Nomel Berry","spritenum":306,"isBerry":true,"naturalGift":{"basePower":90,"type":"Dragon"},"onEat":false,"num":178,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"nomelberry","fullname":"item: Nomel Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"nomel berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/nomel-berry.png"},"normal-gem":{"exists":true,"name":"Normal Gem","spritenum":307,"isGem":true,"num":564,"gen":5,"desc":"Holder\'s first successful Normal-type attack will have 1.3x power. Single use.","shortDesc":"","id":"normalgem","fullname":"item: Normal Gem","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"normal gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/normal-gem.png"},"occa-berry":{"exists":true,"name":"Occa Berry","spritenum":311,"isBerry":true,"naturalGift":{"basePower":80,"type":"Fire"},"num":184,"gen":4,"desc":"Halves damage taken from a supereffective Fire-type attack. Single use.","shortDesc":"","id":"occaberry","fullname":"item: Occa Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"occa berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/occa-berry.png"},"odd-incense":{"exists":true,"name":"Odd Incense","spritenum":312,"fling":{"basePower":10},"onBasePowerPriority":15,"num":314,"gen":4,"desc":"Holder\'s Psychic-type attacks have 1.2x power.","shortDesc":"","id":"oddincense","fullname":"item: Odd Incense","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"odd incense","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/odd-incense.png"},"old-amber":{"exists":true,"name":"Old Amber","spritenum":314,"fling":{"basePower":100},"num":103,"gen":3,"isNonstandard":"Past","desc":"Can be revived into Aerodactyl.","shortDesc":"","id":"oldamber","fullname":"item: Old Amber","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"old amber","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/old-amber.png"},"oran-berry":{"exists":true,"name":"Oran Berry","spritenum":319,"isBerry":true,"naturalGift":{"basePower":80,"type":"Poison"},"num":155,"gen":3,"desc":"Restores 10 HP when at 1/2 max HP or less. Single use.","shortDesc":"","id":"oranberry","fullname":"item: Oran Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"oran berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/oran-berry.png"},"oval-stone":{"exists":true,"name":"Oval Stone","spritenum":321,"fling":{"basePower":80},"num":110,"gen":4,"desc":"Evolves Happiny into Chansey when held and leveled up during the day.","shortDesc":"","id":"ovalstone","fullname":"item: Oval Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"oval stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/oval-stone.png"},"pamtre-berry":{"exists":true,"name":"Pamtre Berry","spritenum":323,"isBerry":true,"naturalGift":{"basePower":90,"type":"Steel"},"onEat":false,"num":180,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"pamtreberry","fullname":"item: Pamtre Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"pamtre berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pamtre-berry.png"},"park-ball":{"exists":true,"name":"Park Ball","spritenum":325,"num":500,"gen":4,"isPokeball":true,"desc":"A special Poke Ball for the Pal Park.","shortDesc":"","id":"parkball","fullname":"item: Park Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"park ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/park-ball.png"},"passho-berry":{"exists":true,"name":"Passho Berry","spritenum":329,"isBerry":true,"naturalGift":{"basePower":80,"type":"Water"},"num":185,"gen":4,"desc":"Halves damage taken from a supereffective Water-type attack. Single use.","shortDesc":"","id":"passhoberry","fullname":"item: Passho Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"passho berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/passho-berry.png"},"payapa-berry":{"exists":true,"name":"Payapa Berry","spritenum":330,"isBerry":true,"naturalGift":{"basePower":80,"type":"Psychic"},"num":193,"gen":4,"desc":"Halves damage taken from a supereffective Psychic-type attack. Single use.","shortDesc":"","id":"payapaberry","fullname":"item: Payapa Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"payapa berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/payapa-berry.png"},"pecha-berry":{"exists":true,"name":"Pecha Berry","spritenum":333,"isBerry":true,"naturalGift":{"basePower":80,"type":"Electric"},"num":151,"gen":3,"desc":"Holder is cured if it is poisoned. Single use.","shortDesc":"","id":"pechaberry","fullname":"item: Pecha Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"pecha berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pecha-berry.png"},"persim-berry":{"exists":true,"name":"Persim Berry","spritenum":334,"isBerry":true,"naturalGift":{"basePower":80,"type":"Ground"},"num":156,"gen":3,"desc":"Holder is cured if it is confused. Single use.","shortDesc":"","id":"persimberry","fullname":"item: Persim Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"persim berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/persim-berry.png"},"petaya-berry":{"exists":true,"name":"Petaya Berry","spritenum":335,"isBerry":true,"naturalGift":{"basePower":100,"type":"Poison"},"num":204,"gen":3,"desc":"Raises holder\'s Sp. Atk by 1 stage when at 1/4 max HP or less. Single use.","shortDesc":"","id":"petayaberry","fullname":"item: Petaya Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"petaya berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/petaya-berry.png"},"pidgeotite":{"exists":true,"name":"Pidgeotite","spritenum":622,"megaStone":"Pidgeot-Mega","megaEvolves":"Pidgeot","itemUser":["Pidgeot"],"num":762,"gen":6,"isNonstandard":"Past","desc":"If held by a Pidgeot, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"pidgeotite","fullname":"item: Pidgeotite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"pidgeotite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pidgeotite.png"},"pinap-berry":{"exists":true,"name":"Pinap Berry","spritenum":337,"isBerry":true,"naturalGift":{"basePower":90,"type":"Grass"},"onEat":false,"num":168,"gen":3,"desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"pinapberry","fullname":"item: Pinap Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"pinap berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pinap-berry.png"},"pinsirite":{"exists":true,"name":"Pinsirite","spritenum":602,"megaStone":"Pinsir-Mega","megaEvolves":"Pinsir","itemUser":["Pinsir"],"num":671,"gen":6,"isNonstandard":"Past","desc":"If held by a Pinsir, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"pinsirite","fullname":"item: Pinsirite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"pinsirite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pinsirite.png"},"pixie-plate":{"exists":true,"name":"Pixie Plate","spritenum":610,"onPlate":"Fairy","onBasePowerPriority":15,"forcedForme":"Arceus-Fairy","num":644,"gen":6,"desc":"Holder\'s Fairy-type attacks have 1.2x power. Judgment is Fairy type.","shortDesc":"","id":"pixieplate","fullname":"item: Pixie Plate","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"pixie plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pixie-plate.png"},"plume-fossil":{"exists":true,"name":"Plume Fossil","spritenum":339,"fling":{"basePower":100},"num":573,"gen":5,"isNonstandard":"Past","desc":"Can be revived into Archen.","shortDesc":"","id":"plumefossil","fullname":"item: Plume Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"plume fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/plume-fossil.png"},"poison-barb":{"exists":true,"name":"Poison Barb","spritenum":343,"fling":{"basePower":70,"status":"psn"},"onBasePowerPriority":15,"num":245,"gen":2,"desc":"Holder\'s Poison-type attacks have 1.2x power.","shortDesc":"","id":"poisonbarb","fullname":"item: Poison Barb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"poison barb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poison-barb.png"},"poison-gem":{"exists":true,"name":"Poison Gem","spritenum":344,"isGem":true,"num":554,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Poison-type attack will have 1.3x power. Single use.","shortDesc":"","id":"poisongem","fullname":"item: Poison Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"poison gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poison-gem.png"},"poison-memory":{"exists":true,"name":"Poison Memory","spritenum":670,"onMemory":"Poison","forcedForme":"Silvally-Poison","itemUser":["Silvally-Poison"],"num":906,"gen":7,"desc":"Holder\'s Multi-Attack is Poison type.","shortDesc":"","id":"poisonmemory","fullname":"item: Poison Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"poison memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poison-memory.png"},"poke-ball":{"exists":true,"name":"Poke Ball","spritenum":345,"num":4,"gen":1,"isPokeball":true,"desc":"A device for catching wild Pokemon. It is designed as a capsule system.","shortDesc":"","id":"pokeball","fullname":"item: Poke Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"poke ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png"},"pomeg-berry":{"exists":true,"name":"Pomeg Berry","spritenum":351,"isBerry":true,"naturalGift":{"basePower":90,"type":"Ice"},"onEat":false,"num":169,"gen":3,"desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"pomegberry","fullname":"item: Pomeg Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"pomeg berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pomeg-berry.png"},"power-anklet":{"exists":true,"name":"Power Anklet","spritenum":354,"ignoreKlutz":true,"fling":{"basePower":70},"num":293,"gen":4,"desc":"Holder\'s Speed is halved. The Klutz Ability does not ignore this effect.","shortDesc":"","id":"poweranklet","fullname":"item: Power Anklet","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"isGem":false,"isPokeball":false,"nameLowerCase":"power anklet","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/power-anklet.png"},"power-band":{"exists":true,"name":"Power Band","spritenum":355,"ignoreKlutz":true,"fling":{"basePower":70},"num":292,"gen":4,"desc":"Holder\'s Speed is halved. The Klutz Ability does not ignore this effect.","shortDesc":"","id":"powerband","fullname":"item: Power Band","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"isGem":false,"isPokeball":false,"nameLowerCase":"power band","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/power-band.png"},"power-belt":{"exists":true,"name":"Power Belt","spritenum":356,"ignoreKlutz":true,"fling":{"basePower":70},"num":290,"gen":4,"desc":"Holder\'s Speed is halved. The Klutz Ability does not ignore this effect.","shortDesc":"","id":"powerbelt","fullname":"item: Power Belt","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"isGem":false,"isPokeball":false,"nameLowerCase":"power belt","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/power-belt.png"},"power-bracer":{"exists":true,"name":"Power Bracer","spritenum":357,"ignoreKlutz":true,"fling":{"basePower":70},"num":289,"gen":4,"desc":"Holder\'s Speed is halved. The Klutz Ability does not ignore this effect.","shortDesc":"","id":"powerbracer","fullname":"item: Power Bracer","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"isGem":false,"isPokeball":false,"nameLowerCase":"power bracer","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/power-bracer.png"},"power-herb":{"exists":true,"name":"Power Herb","spritenum":358,"fling":{"basePower":10},"num":271,"gen":4,"desc":"Holder\'s two-turn moves complete in one turn (except Sky Drop). Single use.","shortDesc":"","id":"powerherb","fullname":"item: Power Herb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"power herb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/power-herb.png"},"power-lens":{"exists":true,"name":"Power Lens","spritenum":359,"ignoreKlutz":true,"fling":{"basePower":70},"num":291,"gen":4,"desc":"Holder\'s Speed is halved. The Klutz Ability does not ignore this effect.","shortDesc":"","id":"powerlens","fullname":"item: Power Lens","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"isGem":false,"isPokeball":false,"nameLowerCase":"power lens","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/power-lens.png"},"power-weight":{"exists":true,"name":"Power Weight","spritenum":360,"ignoreKlutz":true,"fling":{"basePower":70},"num":294,"gen":4,"desc":"Holder\'s Speed is halved. The Klutz Ability does not ignore this effect.","shortDesc":"","id":"powerweight","fullname":"item: Power Weight","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"isGem":false,"isPokeball":false,"nameLowerCase":"power weight","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/power-weight.png"},"premier-ball":{"exists":true,"name":"Premier Ball","spritenum":363,"num":12,"gen":3,"isPokeball":true,"desc":"A rare Poke Ball that has been crafted to commemorate an event.","shortDesc":"","id":"premierball","fullname":"item: Premier Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"premier ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/premier-ball.png"},"prism-scale":{"exists":true,"name":"Prism Scale","spritenum":365,"fling":{"basePower":30},"num":537,"gen":5,"desc":"Evolves Feebas into Milotic when traded.","shortDesc":"","id":"prismscale","fullname":"item: Prism Scale","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"prism scale","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/prism-scale.png"},"protective-pads":{"exists":true,"name":"Protective Pads","spritenum":663,"fling":{"basePower":30},"num":880,"gen":7,"desc":"Holder\'s moves are protected from adverse contact effects, except Pickpocket.","shortDesc":"","id":"protectivepads","fullname":"item: Protective Pads","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"protective pads","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/protective-pads.png"},"protector":{"exists":true,"name":"Protector","spritenum":367,"fling":{"basePower":80},"num":321,"gen":4,"desc":"Evolves Rhydon into Rhyperior when traded.","shortDesc":"","id":"protector","fullname":"item: Protector","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"protector","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/protector.png"},"psychic-gem":{"exists":true,"name":"Psychic Gem","spritenum":369,"isGem":true,"num":557,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Psychic-type attack will have 1.3x power. Single use.","shortDesc":"","id":"psychicgem","fullname":"item: Psychic Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"psychic gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/psychic-gem.png"},"psychic-memory":{"exists":true,"name":"Psychic Memory","spritenum":680,"onMemory":"Psychic","forcedForme":"Silvally-Psychic","itemUser":["Silvally-Psychic"],"num":916,"gen":7,"desc":"Holder\'s Multi-Attack is Psychic type.","shortDesc":"","id":"psychicmemory","fullname":"item: Psychic Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"psychic memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/psychic-memory.png"},"psychic-seed":{"exists":true,"name":"Psychic Seed","spritenum":665,"fling":{"basePower":10},"boosts":{"spd":1},"num":882,"gen":7,"desc":"If the terrain is Psychic Terrain, raises holder\'s Sp. Def by 1 stage. Single use.","shortDesc":"","id":"psychicseed","fullname":"item: Psychic Seed","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"psychic seed","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/psychic-seed.png"},"qualot-berry":{"exists":true,"name":"Qualot Berry","spritenum":371,"isBerry":true,"naturalGift":{"basePower":90,"type":"Poison"},"onEat":false,"num":171,"gen":3,"desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"qualotberry","fullname":"item: Qualot Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"qualot berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/qualot-berry.png"},"quick-ball":{"exists":true,"name":"Quick Ball","spritenum":372,"num":15,"gen":4,"isPokeball":true,"desc":"A Poke Ball that provides a better catch rate at the start of a wild encounter.","shortDesc":"","id":"quickball","fullname":"item: Quick Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"quick ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/quick-ball.png"},"quick-claw":{"exists":true,"name":"Quick Claw","onFractionalPriorityPriority":-2,"spritenum":373,"fling":{"basePower":80},"num":217,"gen":2,"desc":"Each turn, holder has a 20% chance to move first in its priority bracket.","shortDesc":"","id":"quickclaw","fullname":"item: Quick Claw","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"quick claw","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/quick-claw.png"},"quick-powder":{"exists":true,"name":"Quick Powder","spritenum":374,"fling":{"basePower":10},"itemUser":["Ditto"],"num":274,"gen":4,"desc":"If held by a Ditto that hasn\'t Transformed, its Speed is doubled.","shortDesc":"","id":"quickpowder","fullname":"item: Quick Powder","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"quick powder","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/quick-powder.png"},"rabuta-berry":{"exists":true,"name":"Rabuta Berry","spritenum":375,"isBerry":true,"naturalGift":{"basePower":90,"type":"Ghost"},"onEat":false,"num":177,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"rabutaberry","fullname":"item: Rabuta Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rabuta berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rabuta-berry.png"},"rare-bone":{"exists":true,"name":"Rare Bone","spritenum":379,"fling":{"basePower":100},"num":106,"gen":4,"desc":"No competitive use other than when used with Fling.","shortDesc":"","id":"rarebone","fullname":"item: Rare Bone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rare bone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rare-bone.png"},"rawst-berry":{"exists":true,"name":"Rawst Berry","spritenum":381,"isBerry":true,"naturalGift":{"basePower":80,"type":"Grass"},"num":152,"gen":3,"desc":"Holder is cured if it is burned. Single use.","shortDesc":"","id":"rawstberry","fullname":"item: Rawst Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rawst berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rawst-berry.png"},"razor-claw":{"exists":true,"name":"Razor Claw","spritenum":382,"fling":{"basePower":80},"num":326,"gen":4,"desc":"Holder\'s critical hit ratio is raised by 1 stage. Evolves Sneasel into Weavile when held and leveled up during the night.","shortDesc":"Holder\'s critical hit ratio is raised by 1 stage.","id":"razorclaw","fullname":"item: Razor Claw","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"razor claw","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/razor-claw.png"},"razor-fang":{"exists":true,"name":"Razor Fang","spritenum":383,"fling":{"basePower":30,"volatileStatus":"flinch"},"onModifyMovePriority":-1,"num":327,"gen":4,"isNonstandard":"Past","desc":"Holder\'s attacks without a chance to make the target flinch gain a 10% chance to make the target flinch. Evolves Gligar into Gliscor when held and leveled up during the night.","shortDesc":"Holder\'s attacks without a chance to flinch gain a 10% chance to flinch.","id":"razorfang","fullname":"item: Razor Fang","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"razor fang","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/razor-fang.png"},"razz-berry":{"exists":true,"name":"Razz Berry","spritenum":384,"isBerry":true,"naturalGift":{"basePower":80,"type":"Steel"},"onEat":false,"num":164,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"razzberry","fullname":"item: Razz Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"razz berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/razz-berry.png"},"reaper-cloth":{"exists":true,"name":"Reaper Cloth","spritenum":385,"fling":{"basePower":10},"num":325,"gen":4,"desc":"Evolves Dusclops into Dusknoir when traded.","shortDesc":"","id":"reapercloth","fullname":"item: Reaper Cloth","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"reaper cloth","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/reaper-cloth.png"},"red-card":{"exists":true,"name":"Red Card","spritenum":387,"fling":{"basePower":10},"num":542,"gen":5,"desc":"If holder survives a hit, attacker is forced to switch to a random ally. Single use.","shortDesc":"","id":"redcard","fullname":"item: Red Card","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"red card","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/red-card.png"},"red-orb":{"exists":true,"name":"Red Orb","spritenum":390,"itemUser":["Groudon"],"num":534,"gen":6,"isNonstandard":"Past","desc":"If held by a Groudon, this item triggers its Primal Reversion in battle.","shortDesc":"","id":"redorb","fullname":"item: Red Orb","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"red orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/red-orb.png"},"repeat-ball":{"exists":true,"name":"Repeat Ball","spritenum":401,"num":9,"gen":3,"isPokeball":true,"desc":"A Poke Ball that works well on Pokemon species that were previously caught.","shortDesc":"","id":"repeatball","fullname":"item: Repeat Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"repeat ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/repeat-ball.png"},"rindo-berry":{"exists":true,"name":"Rindo Berry","spritenum":409,"isBerry":true,"naturalGift":{"basePower":80,"type":"Grass"},"num":187,"gen":4,"desc":"Halves damage taken from a supereffective Grass-type attack. Single use.","shortDesc":"","id":"rindoberry","fullname":"item: Rindo Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rindo berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rindo-berry.png"},"ring-target":{"exists":true,"name":"Ring Target","spritenum":410,"fling":{"basePower":10},"onNegateImmunity":false,"num":543,"gen":5,"desc":"The holder\'s type immunities granted solely by its typing are negated.","shortDesc":"","id":"ringtarget","fullname":"item: Ring Target","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"ring target","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ring-target.png"},"rock-gem":{"exists":true,"name":"Rock Gem","spritenum":415,"isGem":true,"num":559,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Rock-type attack will have 1.3x power. Single use.","shortDesc":"","id":"rockgem","fullname":"item: Rock Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"rock gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rock-gem.png"},"rock-incense":{"exists":true,"name":"Rock Incense","spritenum":416,"fling":{"basePower":10},"onBasePowerPriority":15,"num":315,"gen":4,"desc":"Holder\'s Rock-type attacks have 1.2x power.","shortDesc":"","id":"rockincense","fullname":"item: Rock Incense","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rock incense","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rock-incense.png"},"rock-memory":{"exists":true,"name":"Rock Memory","spritenum":672,"onMemory":"Rock","forcedForme":"Silvally-Rock","itemUser":["Silvally-Rock"],"num":908,"gen":7,"desc":"Holder\'s Multi-Attack is Rock type.","shortDesc":"","id":"rockmemory","fullname":"item: Rock Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rock memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rock-memory.png"},"rocky-helmet":{"exists":true,"name":"Rocky Helmet","spritenum":417,"fling":{"basePower":60},"onDamagingHitOrder":2,"num":540,"gen":5,"desc":"If holder is hit by a contact move, the attacker loses 1/6 of its max HP.","shortDesc":"","id":"rockyhelmet","fullname":"item: Rocky Helmet","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rocky helmet","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rocky-helmet.png"},"root-fossil":{"exists":true,"name":"Root Fossil","spritenum":418,"fling":{"basePower":100},"num":99,"gen":3,"isNonstandard":"Past","desc":"Can be revived into Lileep.","shortDesc":"","id":"rootfossil","fullname":"item: Root Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"root fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/root-fossil.png"},"rose-incense":{"exists":true,"name":"Rose Incense","spritenum":419,"fling":{"basePower":10},"onBasePowerPriority":15,"num":318,"gen":4,"desc":"Holder\'s Grass-type attacks have 1.2x power.","shortDesc":"","id":"roseincense","fullname":"item: Rose Incense","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rose incense","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rose-incense.png"},"roseli-berry":{"exists":true,"name":"Roseli Berry","spritenum":603,"isBerry":true,"naturalGift":{"basePower":80,"type":"Fairy"},"num":686,"gen":6,"desc":"Halves damage taken from a supereffective Fairy-type attack. Single use.","shortDesc":"","id":"roseliberry","fullname":"item: Roseli Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"roseli berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/roseli-berry.png"},"rowap-berry":{"exists":true,"name":"Rowap Berry","spritenum":420,"isBerry":true,"naturalGift":{"basePower":100,"type":"Dark"},"num":212,"gen":4,"desc":"If holder is hit by a special move, attacker loses 1/8 of its max HP. Single use.","shortDesc":"","id":"rowapberry","fullname":"item: Rowap Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"rowap berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rowap-berry.png"},"sablenite":{"exists":true,"name":"Sablenite","spritenum":614,"megaStone":"Sableye-Mega","megaEvolves":"Sableye","itemUser":["Sableye"],"num":754,"gen":6,"isNonstandard":"Past","desc":"If held by a Sableye, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"sablenite","fullname":"item: Sablenite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sablenite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sablenite.png"},"sachet":{"exists":true,"name":"Sachet","spritenum":691,"fling":{"basePower":80},"num":647,"gen":6,"desc":"Evolves Spritzee into Aromatisse when traded.","shortDesc":"","id":"sachet","fullname":"item: Sachet","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sachet","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sachet.png"},"safari-ball":{"exists":true,"name":"Safari Ball","spritenum":425,"num":5,"gen":1,"isPokeball":true,"desc":"A special Poke Ball that is used only in the Safari Zone and Great Marsh.","shortDesc":"","id":"safariball","fullname":"item: Safari Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"safari ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/safari-ball.png"},"safety-goggles":{"exists":true,"name":"Safety Goggles","spritenum":604,"fling":{"basePower":80},"num":650,"gen":6,"desc":"Holder is immune to powder moves and damage from Sandstorm or Hail.","shortDesc":"","id":"safetygoggles","fullname":"item: Safety Goggles","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"safety goggles","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/safety-goggles.png"},"sail-fossil":{"exists":true,"name":"Sail Fossil","spritenum":695,"fling":{"basePower":100},"num":711,"gen":6,"isNonstandard":"Past","desc":"Can be revived into Amaura.","shortDesc":"","id":"sailfossil","fullname":"item: Sail Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sail fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sail-fossil.png"},"salac-berry":{"exists":true,"name":"Salac Berry","spritenum":426,"isBerry":true,"naturalGift":{"basePower":100,"type":"Fighting"},"num":203,"gen":3,"desc":"Raises holder\'s Speed by 1 stage when at 1/4 max HP or less. Single use.","shortDesc":"","id":"salacberry","fullname":"item: Salac Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"salac berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/salac-berry.png"},"salamencite":{"exists":true,"name":"Salamencite","spritenum":627,"megaStone":"Salamence-Mega","megaEvolves":"Salamence","itemUser":["Salamence"],"num":769,"gen":6,"isNonstandard":"Past","desc":"If held by a Salamence, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"salamencite","fullname":"item: Salamencite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"salamencite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/salamencite.png"},"sceptilite":{"exists":true,"name":"Sceptilite","spritenum":613,"megaStone":"Sceptile-Mega","megaEvolves":"Sceptile","itemUser":["Sceptile"],"num":753,"gen":6,"isNonstandard":"Past","desc":"If held by a Sceptile, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"sceptilite","fullname":"item: Sceptilite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sceptilite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sceptilite.png"},"scizorite":{"exists":true,"name":"Scizorite","spritenum":605,"megaStone":"Scizor-Mega","megaEvolves":"Scizor","itemUser":["Scizor"],"num":670,"gen":6,"isNonstandard":"Past","desc":"If held by a Scizor, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"scizorite","fullname":"item: Scizorite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"scizorite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/scizorite.png"},"scope-lens":{"exists":true,"name":"Scope Lens","spritenum":429,"fling":{"basePower":30},"num":232,"gen":2,"desc":"Holder\'s critical hit ratio is raised by 1 stage.","shortDesc":"","id":"scopelens","fullname":"item: Scope Lens","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"scope lens","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/scope-lens.png"},"sea-incense":{"exists":true,"name":"Sea Incense","spritenum":430,"fling":{"basePower":10},"onBasePowerPriority":15,"num":254,"gen":3,"desc":"Holder\'s Water-type attacks have 1.2x power.","shortDesc":"","id":"seaincense","fullname":"item: Sea Incense","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sea incense","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sea-incense.png"},"sharp-beak":{"exists":true,"name":"Sharp Beak","spritenum":436,"fling":{"basePower":50},"onBasePowerPriority":15,"num":244,"gen":2,"desc":"Holder\'s Flying-type attacks have 1.2x power.","shortDesc":"","id":"sharpbeak","fullname":"item: Sharp Beak","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sharp beak","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sharp-beak.png"},"sharpedonite":{"exists":true,"name":"Sharpedonite","spritenum":619,"megaStone":"Sharpedo-Mega","megaEvolves":"Sharpedo","itemUser":["Sharpedo"],"num":759,"gen":6,"isNonstandard":"Past","desc":"If held by a Sharpedo, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"sharpedonite","fullname":"item: Sharpedonite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sharpedonite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sharpedonite.png"},"shed-shell":{"exists":true,"name":"Shed Shell","spritenum":437,"fling":{"basePower":10},"onTrapPokemonPriority":-10,"num":295,"gen":4,"desc":"Holder may switch out even when trapped by another Pokemon, or by Ingrain.","shortDesc":"","id":"shedshell","fullname":"item: Shed Shell","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"shed shell","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/shed-shell.png"},"shell-bell":{"exists":true,"name":"Shell Bell","spritenum":438,"fling":{"basePower":30},"onAfterMoveSecondarySelfPriority":-1,"num":253,"gen":3,"desc":"After an attack, holder gains 1/8 of the damage in HP dealt to other Pokemon.","shortDesc":"","id":"shellbell","fullname":"item: Shell Bell","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"shell bell","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/shell-bell.png"},"shiny-stone":{"exists":true,"name":"Shiny Stone","spritenum":439,"fling":{"basePower":80},"num":107,"gen":4,"desc":"Evolves Togetic into Togekiss, Roselia into Roserade, Minccino into Cinccino, and Floette into Florges when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"shinystone","fullname":"item: Shiny Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"shiny stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/shiny-stone.png"},"shock-drive":{"exists":true,"name":"Shock Drive","spritenum":442,"onDrive":"Electric","forcedForme":"Genesect-Shock","itemUser":["Genesect-Shock"],"num":117,"gen":5,"desc":"Holder\'s Techno Blast is Electric type.","shortDesc":"","id":"shockdrive","fullname":"item: Shock Drive","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":70},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"shock drive","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/shock-drive.png"},"shuca-berry":{"exists":true,"name":"Shuca Berry","spritenum":443,"isBerry":true,"naturalGift":{"basePower":80,"type":"Ground"},"num":191,"gen":4,"desc":"Halves damage taken from a supereffective Ground-type attack. Single use.","shortDesc":"","id":"shucaberry","fullname":"item: Shuca Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"shuca berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/shuca-berry.png"},"silk-scarf":{"exists":true,"name":"Silk Scarf","spritenum":444,"fling":{"basePower":10},"onBasePowerPriority":15,"num":251,"gen":3,"desc":"Holder\'s Normal-type attacks have 1.2x power.","shortDesc":"","id":"silkscarf","fullname":"item: Silk Scarf","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"silk scarf","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/silk-scarf.png"},"silver-powder":{"exists":true,"name":"Silver Powder","spritenum":447,"fling":{"basePower":10},"onBasePowerPriority":15,"num":222,"gen":2,"desc":"Holder\'s Bug-type attacks have 1.2x power.","shortDesc":"","id":"silverpowder","fullname":"item: Silver Powder","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"silver powder","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/silver-powder.png"},"sitrus-berry":{"exists":true,"name":"Sitrus Berry","spritenum":448,"isBerry":true,"naturalGift":{"basePower":80,"type":"Psychic"},"num":158,"gen":3,"desc":"Restores 1/4 max HP when at 1/2 max HP or less. Single use.","shortDesc":"","id":"sitrusberry","fullname":"item: Sitrus Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sitrus berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sitrus-berry.png"},"skull-fossil":{"exists":true,"name":"Skull Fossil","spritenum":449,"fling":{"basePower":100},"num":105,"gen":4,"isNonstandard":"Past","desc":"Can be revived into Cranidos.","shortDesc":"","id":"skullfossil","fullname":"item: Skull Fossil","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"skull fossil","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/skull-fossil.png"},"sky-plate":{"exists":true,"name":"Sky Plate","spritenum":450,"onPlate":"Flying","onBasePowerPriority":15,"forcedForme":"Arceus-Flying","num":306,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Flying-type attacks have 1.2x power. Judgment is Flying type.","shortDesc":"","id":"skyplate","fullname":"item: Sky Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sky plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sky-plate.png"},"slowbronite":{"exists":true,"name":"Slowbronite","spritenum":620,"megaStone":"Slowbro-Mega","megaEvolves":"Slowbro","itemUser":["Slowbro"],"num":760,"gen":6,"isNonstandard":"Past","desc":"If held by a Slowbro, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"slowbronite","fullname":"item: Slowbronite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"slowbronite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/slowbronite.png"},"smooth-rock":{"exists":true,"name":"Smooth Rock","spritenum":453,"fling":{"basePower":10},"num":283,"gen":4,"desc":"Holder\'s use of Sandstorm lasts 8 turns instead of 5.","shortDesc":"","id":"smoothrock","fullname":"item: Smooth Rock","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"smooth rock","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/smooth-rock.png"},"snowball":{"exists":true,"name":"Snowball","spritenum":606,"fling":{"basePower":30},"boosts":{"atk":1},"num":649,"gen":6,"desc":"Raises holder\'s Attack by 1 if hit by an Ice-type attack. Single use.","shortDesc":"","id":"snowball","fullname":"item: Snowball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"snowball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/snowball.png"},"soft-sand":{"exists":true,"name":"Soft Sand","spritenum":456,"fling":{"basePower":10},"onBasePowerPriority":15,"num":237,"gen":2,"desc":"Holder\'s Ground-type attacks have 1.2x power.","shortDesc":"","id":"softsand","fullname":"item: Soft Sand","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"soft sand","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/soft-sand.png"},"soul-dew":{"exists":true,"name":"Soul Dew","spritenum":459,"fling":{"basePower":30},"onBasePowerPriority":15,"itemUser":["Latios","Latias"],"num":225,"gen":3,"desc":"If held by a Latias/Latios, its Dragon- and Psychic-type moves have 1.2x power.","shortDesc":"","id":"souldew","fullname":"item: Soul Dew","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"soul dew","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/soul-dew.png"},"spell-tag":{"exists":true,"name":"Spell Tag","spritenum":461,"fling":{"basePower":30},"onBasePowerPriority":15,"num":247,"gen":2,"desc":"Holder\'s Ghost-type attacks have 1.2x power.","shortDesc":"","id":"spelltag","fullname":"item: Spell Tag","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"spell tag","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/spell-tag.png"},"spelon-berry":{"exists":true,"name":"Spelon Berry","spritenum":462,"isBerry":true,"naturalGift":{"basePower":90,"type":"Dark"},"onEat":false,"num":179,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"spelonberry","fullname":"item: Spelon Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"spelon berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/spelon-berry.png"},"splash-plate":{"exists":true,"name":"Splash Plate","spritenum":463,"onPlate":"Water","onBasePowerPriority":15,"forcedForme":"Arceus-Water","num":299,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Water-type attacks have 1.2x power. Judgment is Water type.","shortDesc":"","id":"splashplate","fullname":"item: Splash Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"splash plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/splash-plate.png"},"spooky-plate":{"exists":true,"name":"Spooky Plate","spritenum":464,"onPlate":"Ghost","onBasePowerPriority":15,"forcedForme":"Arceus-Ghost","num":310,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Ghost-type attacks have 1.2x power. Judgment is Ghost type.","shortDesc":"","id":"spookyplate","fullname":"item: Spooky Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"spooky plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/spooky-plate.png"},"sport-ball":{"exists":true,"name":"Sport Ball","spritenum":465,"num":499,"gen":2,"isPokeball":true,"desc":"A special Poke Ball for the Bug-Catching Contest.","shortDesc":"","id":"sportball","fullname":"item: Sport Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"sport ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sport-ball.png"},"starf-berry":{"exists":true,"name":"Starf Berry","spritenum":472,"isBerry":true,"naturalGift":{"basePower":100,"type":"Psychic"},"num":207,"gen":3,"desc":"Raises a random stat by 2 when at 1/4 max HP or less (not acc/eva). Single use.","shortDesc":"","id":"starfberry","fullname":"item: Starf Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"starf berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/starf-berry.png"},"steelixite":{"exists":true,"name":"Steelixite","spritenum":621,"megaStone":"Steelix-Mega","megaEvolves":"Steelix","itemUser":["Steelix"],"num":761,"gen":6,"isNonstandard":"Past","desc":"If held by a Steelix, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"steelixite","fullname":"item: Steelixite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"steelixite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/steelixite.png"},"steel-gem":{"exists":true,"name":"Steel Gem","spritenum":473,"isGem":true,"num":563,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Steel-type attack will have 1.3x power. Single use.","shortDesc":"","id":"steelgem","fullname":"item: Steel Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"steel gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/steel-gem.png"},"steel-memory":{"exists":true,"name":"Steel Memory","spritenum":675,"onMemory":"Steel","forcedForme":"Silvally-Steel","itemUser":["Silvally-Steel"],"num":911,"gen":7,"desc":"Holder\'s Multi-Attack is Steel type.","shortDesc":"","id":"steelmemory","fullname":"item: Steel Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"steel memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/steel-memory.png"},"stick":{"exists":true,"name":"Stick","fling":{"basePower":60},"spritenum":475,"itemUser":["Farfetch’d"],"num":259,"gen":2,"isNonstandard":"Past","desc":"If held by a Farfetch’d, its critical hit ratio is raised by 2 stages.","shortDesc":"","id":"stick","fullname":"item: Stick","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"stick","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/stick.png"},"sticky-barb":{"exists":true,"name":"Sticky Barb","spritenum":476,"fling":{"basePower":80},"onResidualOrder":28,"onResidualSubOrder":3,"num":288,"gen":4,"desc":"Each turn, holder loses 1/8 max HP. An attacker making contact can receive it.","shortDesc":"","id":"stickybarb","fullname":"item: Sticky Barb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sticky barb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sticky-barb.png"},"stone-plate":{"exists":true,"name":"Stone Plate","spritenum":477,"onPlate":"Rock","onBasePowerPriority":15,"forcedForme":"Arceus-Rock","num":309,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Rock-type attacks have 1.2x power. Judgment is Rock type.","shortDesc":"","id":"stoneplate","fullname":"item: Stone Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"stone plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/stone-plate.png"},"sun-stone":{"exists":true,"name":"Sun Stone","spritenum":480,"fling":{"basePower":30},"num":80,"gen":2,"desc":"Evolves Gloom into Bellossom, Sunkern into Sunflora, Cottonee into Whimsicott, Petilil into Lilligant, and Helioptile into Heliolisk when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"sunstone","fullname":"item: Sun Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"sun stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sun-stone.png"},"swampertite":{"exists":true,"name":"Swampertite","spritenum":612,"megaStone":"Swampert-Mega","megaEvolves":"Swampert","itemUser":["Swampert"],"num":752,"gen":6,"isNonstandard":"Past","desc":"If held by a Swampert, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"swampertite","fullname":"item: Swampertite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"swampertite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/swampertite.png"},"tamato-berry":{"exists":true,"name":"Tamato Berry","spritenum":486,"isBerry":true,"naturalGift":{"basePower":90,"type":"Psychic"},"onEat":false,"num":174,"gen":3,"desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"tamatoberry","fullname":"item: Tamato Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"tamato berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tamato-berry.png"},"tanga-berry":{"exists":true,"name":"Tanga Berry","spritenum":487,"isBerry":true,"naturalGift":{"basePower":80,"type":"Bug"},"num":194,"gen":4,"desc":"Halves damage taken from a supereffective Bug-type attack. Single use.","shortDesc":"","id":"tangaberry","fullname":"item: Tanga Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"tanga berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tanga-berry.png"},"terrain-extender":{"exists":true,"name":"Terrain Extender","spritenum":662,"fling":{"basePower":60},"num":879,"gen":7,"desc":"Holder\'s use of Electric/Grassy/Misty/Psychic Terrain lasts 8 turns instead of 5.","shortDesc":"","id":"terrainextender","fullname":"item: Terrain Extender","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"terrain extender","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/terrain-extender.png"},"thick-club":{"exists":true,"name":"Thick Club","spritenum":491,"fling":{"basePower":90},"onModifyAtkPriority":1,"itemUser":["Marowak","Cubone"],"num":258,"gen":2,"desc":"If held by a Cubone or a Marowak, its Attack is doubled.","shortDesc":"","id":"thickclub","fullname":"item: Thick Club","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"thick club","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/thick-club.png"},"thunder-stone":{"exists":true,"name":"Thunder Stone","spritenum":492,"fling":{"basePower":30},"num":83,"gen":1,"desc":"Evolves Pikachu into Raichu or Alolan Raichu, Eevee into Jolteon, Eelektrik into Eelektross, and Charjabug into Vikavolt when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"thunderstone","fullname":"item: Thunder Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"thunder stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/thunder-stone.png"},"timer-ball":{"exists":true,"name":"Timer Ball","spritenum":494,"num":10,"gen":3,"isPokeball":true,"desc":"A Poke Ball that becomes better the more turns there are in a battle.","shortDesc":"","id":"timerball","fullname":"item: Timer Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"timer ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/timer-ball.png"},"toxic-orb":{"exists":true,"name":"Toxic Orb","spritenum":515,"fling":{"basePower":30,"status":"tox"},"onResidualOrder":28,"onResidualSubOrder":3,"num":272,"gen":4,"desc":"At the end of every turn, this item attempts to badly poison the holder.","shortDesc":"","id":"toxicorb","fullname":"item: Toxic Orb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"toxic orb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/toxic-orb.png"},"toxic-plate":{"exists":true,"name":"Toxic Plate","spritenum":516,"onPlate":"Poison","onBasePowerPriority":15,"forcedForme":"Arceus-Poison","num":304,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Poison-type attacks have 1.2x power. Judgment is Poison type.","shortDesc":"","id":"toxicplate","fullname":"item: Toxic Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"toxic plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/toxic-plate.png"},"twisted-spoon":{"exists":true,"name":"Twisted Spoon","spritenum":520,"fling":{"basePower":30},"onBasePowerPriority":15,"num":248,"gen":2,"desc":"Holder\'s Psychic-type attacks have 1.2x power.","shortDesc":"","id":"twistedspoon","fullname":"item: Twisted Spoon","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"twisted spoon","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/twisted-spoon.png"},"tyranitarite":{"exists":true,"name":"Tyranitarite","spritenum":607,"megaStone":"Tyranitar-Mega","megaEvolves":"Tyranitar","itemUser":["Tyranitar"],"num":669,"gen":6,"isNonstandard":"Past","desc":"If held by a Tyranitar, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"tyranitarite","fullname":"item: Tyranitarite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"tyranitarite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tyranitarite.png"},"ultra-ball":{"exists":true,"name":"Ultra Ball","spritenum":521,"num":2,"gen":1,"isPokeball":true,"desc":"An ultra-performance Ball that provides a higher catch rate than a Great Ball.","shortDesc":"","id":"ultraball","fullname":"item: Ultra Ball","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"nameLowerCase":"ultra ball","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ultra-ball.png"},"up-grade":{"exists":true,"name":"Up-Grade","spritenum":523,"fling":{"basePower":30},"num":252,"gen":2,"desc":"Evolves Porygon into Porygon2 when traded.","shortDesc":"","id":"upgrade","fullname":"item: Up-Grade","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"up-grade","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/up-grade.png"},"venusaurite":{"exists":true,"name":"Venusaurite","spritenum":608,"megaStone":"Venusaur-Mega","megaEvolves":"Venusaur","itemUser":["Venusaur"],"num":659,"gen":6,"isNonstandard":"Past","desc":"If held by a Venusaur, this item allows it to Mega Evolve in battle.","shortDesc":"","id":"venusaurite","fullname":"item: Venusaurite","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":80},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"venusaurite","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/venusaurite.png"},"wacan-berry":{"exists":true,"name":"Wacan Berry","spritenum":526,"isBerry":true,"naturalGift":{"basePower":80,"type":"Electric"},"num":186,"gen":4,"desc":"Halves damage taken from a supereffective Electric-type attack. Single use.","shortDesc":"","id":"wacanberry","fullname":"item: Wacan Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"wacan berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/wacan-berry.png"},"water-gem":{"exists":true,"name":"Water Gem","spritenum":528,"isGem":true,"num":549,"gen":5,"isNonstandard":"Past","desc":"Holder\'s first successful Water-type attack will have 1.3x power. Single use.","shortDesc":"","id":"watergem","fullname":"item: Water Gem","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isPokeball":false,"nameLowerCase":"water gem","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/water-gem.png"},"water-memory":{"exists":true,"name":"Water Memory","spritenum":677,"onMemory":"Water","forcedForme":"Silvally-Water","itemUser":["Silvally-Water"],"num":913,"gen":7,"desc":"Holder\'s Multi-Attack is Water type.","shortDesc":"","id":"watermemory","fullname":"item: Water Memory","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":50},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"water memory","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/water-memory.png"},"water-stone":{"exists":true,"name":"Water Stone","spritenum":529,"fling":{"basePower":30},"num":84,"gen":1,"desc":"Evolves Poliwhirl into Poliwrath, Shellder into Cloyster, Staryu into Starmie, Eevee into Vaporeon, Lombre into Ludicolo, and Panpour into Simipour when used.","shortDesc":"Evolves certain species of Pokemon when used.","id":"waterstone","fullname":"item: Water Stone","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"water stone","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/water-stone.png"},"watmel-berry":{"exists":true,"name":"Watmel Berry","spritenum":530,"isBerry":true,"naturalGift":{"basePower":100,"type":"Fire"},"onEat":false,"num":181,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"watmelberry","fullname":"item: Watmel Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"watmel berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/watmel-berry.png"},"wave-incense":{"exists":true,"name":"Wave Incense","spritenum":531,"fling":{"basePower":10},"onBasePowerPriority":15,"num":317,"gen":4,"desc":"Holder\'s Water-type attacks have 1.2x power.","shortDesc":"","id":"waveincense","fullname":"item: Wave Incense","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"wave incense","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/wave-incense.png"},"weakness-policy":{"exists":true,"name":"Weakness Policy","spritenum":609,"fling":{"basePower":80},"boosts":{"atk":2,"spa":2},"num":639,"gen":6,"desc":"If holder is hit super effectively, raises Attack, Sp. Atk by 2 stages. Single use.","shortDesc":"","id":"weaknesspolicy","fullname":"item: Weakness Policy","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"weakness policy","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/weakness-policy.png"},"wepear-berry":{"exists":true,"name":"Wepear Berry","spritenum":533,"isBerry":true,"naturalGift":{"basePower":90,"type":"Electric"},"onEat":false,"num":167,"gen":3,"isNonstandard":"Past","desc":"Cannot be eaten by the holder. No effect when eaten with Bug Bite or Pluck.","shortDesc":"","id":"wepearberry","fullname":"item: Wepear Berry","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"wepear berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/wepear-berry.png"},"whipped-dream":{"exists":true,"name":"Whipped Dream","spritenum":692,"fling":{"basePower":80},"num":646,"gen":6,"desc":"Evolves Swirlix into Slurpuff when traded.","shortDesc":"","id":"whippeddream","fullname":"item: Whipped Dream","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"whipped dream","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/whipped-dream.png"},"white-herb":{"exists":true,"name":"White Herb","spritenum":535,"fling":{"basePower":10},"num":214,"gen":3,"desc":"Restores all lowered stat stages to 0 when one is less than 0. Single use.","shortDesc":"","id":"whiteherb","fullname":"item: White Herb","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"white herb","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/white-herb.png"},"wide-lens":{"exists":true,"name":"Wide Lens","spritenum":537,"fling":{"basePower":10},"onSourceModifyAccuracyPriority":-2,"num":265,"gen":4,"desc":"The accuracy of attacks by the holder is 1.1x.","shortDesc":"","id":"widelens","fullname":"item: Wide Lens","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"wide lens","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/wide-lens.png"},"wiki-berry":{"exists":true,"name":"Wiki Berry","spritenum":538,"isBerry":true,"naturalGift":{"basePower":80,"type":"Rock"},"num":160,"gen":3,"desc":"Restores 33% max HP at 1/4 max HP or less; confuses if -SpA Nature. Single use.","shortDesc":"","id":"wikiberry","fullname":"item: Wiki Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"wiki berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/wiki-berry.png"},"wise-glasses":{"exists":true,"name":"Wise Glasses","spritenum":539,"fling":{"basePower":10},"onBasePowerPriority":16,"num":267,"gen":4,"desc":"Holder\'s special attacks have 1.1x power.","shortDesc":"","id":"wiseglasses","fullname":"item: Wise Glasses","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"wise glasses","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/wise-glasses.png"},"yache-berry":{"exists":true,"name":"Yache Berry","spritenum":567,"isBerry":true,"naturalGift":{"basePower":80,"type":"Ice"},"num":188,"gen":4,"desc":"Halves damage taken from a supereffective Ice-type attack. Single use.","shortDesc":"","id":"yacheberry","fullname":"item: Yache Berry","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":10},"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"yache berry","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/yache-berry.png"},"zap-plate":{"exists":true,"name":"Zap Plate","spritenum":572,"onPlate":"Electric","onBasePowerPriority":15,"forcedForme":"Arceus-Electric","num":300,"gen":4,"isNonstandard":"Unobtainable","desc":"Holder\'s Electric-type attacks have 1.2x power. Judgment is Electric type.","shortDesc":"","id":"zapplate","fullname":"item: Zap Plate","effectType":"Item","noCopy":false,"affectsFainted":false,"sourceEffect":"","fling":{"basePower":90},"isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"zap plate","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/zap-plate.png"},"zoom-lens":{"exists":true,"name":"Zoom Lens","spritenum":574,"fling":{"basePower":10},"onSourceModifyAccuracyPriority":-2,"num":276,"gen":4,"desc":"The accuracy of attacks by the holder is 1.2x if it moves after its target.","shortDesc":"","id":"zoomlens","fullname":"item: Zoom Lens","effectType":"Item","isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","isBerry":false,"ignoreKlutz":false,"isGem":false,"isPokeball":false,"nameLowerCase":"zoom lens","spriteUrl":"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/zoom-lens.png"}}'),allMovesJSON:JSON.parse('{"10,000,000 volt thunderbolt":{"exists":true,"name":"10,000,000 Volt Thunderbolt","num":719,"accuracy":true,"basePower":195,"category":"Special","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"pikashuniumz","critRatio":3,"secondary":null,"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a very high chance for a critical hit.","shortDesc":"Very high critical hit ratio.","id":"10000000voltthunderbolt","fullname":"move: 10,000,000 Volt Thunderbolt","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"absorb":{"exists":true,"name":"Absorb","num":71,"accuracy":100,"basePower":20,"category":"Special","pp":25,"priority":0,"flags":{"protect":1,"mirror":1,"heal":1},"drain":[1,2],"secondary":null,"target":"normal","type":"Grass","contestType":"Clever","desc":"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 50% of the damage dealt.","id":"absorb","fullname":"move: Absorb","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"accelerock":{"exists":true,"name":"Accelerock","num":709,"accuracy":100,"basePower":40,"category":"Physical","pp":20,"priority":1,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Rock","contestType":"Cool","desc":"No additional effect.","shortDesc":"Usually goes first.","id":"accelerock","fullname":"move: Accelerock","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"acid":{"exists":true,"name":"Acid","num":51,"accuracy":100,"basePower":40,"category":"Special","pp":30,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"spd":-1}},"target":"allAdjacentFoes","type":"Poison","contestType":"Clever","desc":"Has a 10% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"10% chance to lower the foe(s) Sp. Def by 1.","id":"acid","fullname":"move: Acid","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":10,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"acid armor":{"exists":true,"name":"Acid Armor","num":151,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"def":2},"secondary":null,"target":"self","type":"Poison","zMove":{"effect":"clearnegativeboost"},"contestType":"Tough","desc":"Raises the user\'s Defense by 2 stages.","shortDesc":"Raises the user\'s Defense by 2.","id":"acidarmor","fullname":"move: Acid Armor","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"acid downpour":{"exists":true,"name":"Acid Downpour","num":628,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"poisoniumz","secondary":null,"target":"normal","type":"Poison","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"aciddownpour","fullname":"move: Acid Downpour","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"acid spray":{"exists":true,"name":"Acid Spray","num":491,"accuracy":100,"basePower":40,"category":"Special","pp":20,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spd":-2}},"target":"normal","type":"Poison","contestType":"Beautiful","desc":"Has a 100% chance to lower the target\'s Special Defense by 2 stages.","shortDesc":"100% chance to lower the target\'s Sp. Def by 2.","id":"acidspray","fullname":"move: Acid Spray","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":100,"boosts":{"spd":-2}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"acrobatics":{"exists":true,"name":"Acrobatics","num":512,"accuracy":100,"basePower":55,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Flying","contestType":"Cool","desc":"Power doubles if the user has no held item.","shortDesc":"Power doubles if the user has no held item.","id":"acrobatics","fullname":"move: Acrobatics","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":100}},"acupressure":{"exists":true,"name":"Acupressure","num":367,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{},"secondary":null,"target":"adjacentAllyOrSelf","type":"Normal","zMove":{"effect":"crit2"},"contestType":"Tough","desc":"Raises a random stat by 2 stages as long as the stat is not already at stage 6. The user can choose to use this move on itself or an adjacent ally. Fails if no stat stage can be raised or if used on an ally with a substitute.","shortDesc":"Raises a random stat of the user or an ally by 2.","id":"acupressure","fullname":"move: Acupressure","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"aerial ace":{"exists":true,"name":"Aerial Ace","num":332,"accuracy":true,"basePower":60,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Flying","contestType":"Cool","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"aerialace","fullname":"move: Aerial Ace","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"aeroblast":{"exists":true,"name":"Aeroblast","num":177,"accuracy":95,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"distance":1},"critRatio":2,"secondary":null,"target":"any","type":"Flying","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"aeroblast","fullname":"move: Aeroblast","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"after you":{"exists":true,"name":"After You","num":495,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Cute","desc":"The target makes its move immediately after the user this turn, no matter the priority of its selected move. Fails if the target would have moved next anyway, or if the target already moved this turn.","shortDesc":"The target makes its move right after the user.","id":"afteryou","fullname":"move: After You","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"agility":{"exists":true,"name":"Agility","num":97,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"snatch":1},"boosts":{"spe":2},"secondary":null,"target":"self","type":"Psychic","zMove":{"effect":"clearnegativeboost"},"contestType":"Cool","desc":"Raises the user\'s Speed by 2 stages.","shortDesc":"Raises the user\'s Speed by 2.","id":"agility","fullname":"move: Agility","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"air cutter":{"exists":true,"name":"Air Cutter","num":314,"accuracy":95,"basePower":60,"category":"Special","pp":25,"priority":0,"flags":{"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"allAdjacentFoes","type":"Flying","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio. Hits adjacent foes.","id":"aircutter","fullname":"move: Air Cutter","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"air slash":{"exists":true,"name":"Air Slash","num":403,"accuracy":95,"basePower":75,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"distance":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"any","type":"Flying","contestType":"Cool","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"airslash","fullname":"move: Air Slash","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"all out pummeling":{"exists":true,"name":"All-Out Pummeling","num":624,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"fightiniumz","secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"alloutpummeling","fullname":"move: All-Out Pummeling","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"ally switch":{"exists":true,"name":"Ally Switch","num":502,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":2,"flags":{},"secondary":null,"target":"self","type":"Psychic","zMove":{"boost":{"spe":2}},"contestType":"Clever","desc":"The user swaps positions with its ally. Fails if the user is the only Pokemon on its side.","shortDesc":"The user swaps positions with its ally.","id":"allyswitch","fullname":"move: Ally Switch","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"amnesia":{"exists":true,"name":"Amnesia","num":133,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"spd":2},"secondary":null,"target":"self","type":"Psychic","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"Raises the user\'s Special Defense by 2 stages.","shortDesc":"Raises the user\'s Sp. Def by 2.","id":"amnesia","fullname":"move: Amnesia","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"anchor shot":{"exists":true,"name":"Anchor Shot","num":677,"accuracy":100,"basePower":80,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100},"target":"normal","type":"Steel","contestType":"Tough","desc":"Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.","shortDesc":"Prevents the target from switching out.","id":"anchorshot","fullname":"move: Anchor Shot","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":100}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"ancient power":{"exists":true,"name":"Ancient Power","num":246,"accuracy":100,"basePower":60,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"self":{"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}}},"target":"normal","type":"Rock","contestType":"Tough","desc":"Has a 10% chance to raise the user\'s Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.","shortDesc":"10% chance to raise all stats by 1 (not acc/eva).","id":"ancientpower","fullname":"move: Ancient Power","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":[{"chance":10,"self":{"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"apple acid":{"exists":true,"name":"Apple Acid","num":787,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spd":-1}},"target":"normal","type":"Grass","desc":"Has a 100% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"100% chance to lower the target\'s Sp. Def by 1.","id":"appleacid","fullname":"move: Apple Acid","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":[{"chance":100,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"aqua jet":{"exists":true,"name":"Aqua Jet","num":453,"accuracy":100,"basePower":40,"category":"Physical","pp":20,"priority":1,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Water","contestType":"Cool","desc":"No additional effect.","shortDesc":"Usually goes first.","id":"aquajet","fullname":"move: Aqua Jet","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"aqua ring":{"exists":true,"name":"Aqua Ring","num":392,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"volatileStatus":"aquaring","condition":{"onResidualOrder":6},"secondary":null,"target":"self","type":"Water","zMove":{"boost":{"def":1}},"contestType":"Beautiful","desc":"The user has 1/16 of its maximum HP, rounded down, restored at the end of each turn while it remains active. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. If the user uses Baton Pass, the replacement will receive the healing effect.","shortDesc":"User recovers 1/16 max HP per turn.","id":"aquaring","fullname":"move: Aqua Ring","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"aqua tail":{"exists":true,"name":"Aqua Tail","num":401,"accuracy":90,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Water","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect.","id":"aquatail","fullname":"move: Aqua Tail","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"arm thrust":{"exists":true,"name":"Arm Thrust","num":292,"accuracy":100,"basePower":15,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"armthrust","fullname":"move: Arm Thrust","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"aromatherapy":{"exists":true,"name":"Aromatherapy","num":312,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"snatch":1,"distance":1},"target":"allyTeam","type":"Grass","zMove":{"effect":"heal"},"contestType":"Clever","desc":"Every Pokemon in the user\'s party is cured of its non-volatile status condition. Active Pokemon with the Sap Sipper Ability are not cured, unless they are the user.","shortDesc":"Cures the user\'s party of all status conditions.","id":"aromatherapy","fullname":"move: Aromatherapy","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"aromatic mist":{"exists":true,"name":"Aromatic Mist","num":597,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"authentic":1},"boosts":{"spd":1},"secondary":null,"target":"adjacentAlly","type":"Fairy","zMove":{"boost":{"spd":2}},"contestType":"Beautiful","desc":"Raises the target\'s Special Defense by 1 stage. Fails if there is no ally adjacent to the user.","shortDesc":"Raises an ally\'s Sp. Def by 1.","id":"aromaticmist","fullname":"move: Aromatic Mist","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"assist":{"exists":true,"name":"Assist","num":274,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{},"secondary":null,"target":"self","type":"Normal","contestType":"Cute","desc":"A random move among those known by the user\'s party members is selected for use. Does not select Assist, Baneful Bunker, Beak Blast, Belch, Bestow, Bounce, Celebrate, Chatter, Circle Throw, Copycat, Counter, Covet, Destiny Bond, Detect, Dig, Dive, Dragon Tail, Endure, Feint, Fly, Focus Punch, Follow Me, Helping Hand, Hold Hands, King\'s Shield, Mat Block, Me First, Metronome, Mimic, Mirror Coat, Mirror Move, Nature Power, Phantom Force, Protect, Rage Powder, Roar, Shadow Force, Shell Trap, Sketch, Sky Drop, Sleep Talk, Snatch, Spiky Shield, Spotlight, Struggle, Switcheroo, Thief, Transform, Trick, Whirlwind, or any Z-Move.","shortDesc":"Uses a random move known by a team member.","id":"assist","fullname":"move: Assist","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"assurance":{"exists":true,"name":"Assurance","num":372,"accuracy":100,"basePower":60,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"Power doubles if the target has already taken damage this turn, other than direct damage from Belly Drum, confusion, Curse, or Pain Split.","shortDesc":"Power doubles if target was damaged this turn.","id":"assurance","fullname":"move: Assurance","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"astonish":{"exists":true,"name":"Astonish","num":310,"accuracy":100,"basePower":30,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Ghost","contestType":"Cute","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"astonish","fullname":"move: Astonish","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"astral barrage":{"exists":true,"name":"Astral Barrage","num":825,"accuracy":100,"basePower":120,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Ghost","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent foes.","id":"astralbarrage","fullname":"move: Astral Barrage","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"attack order":{"exists":true,"name":"Attack Order","num":454,"accuracy":100,"basePower":90,"category":"Physical","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Bug","contestType":"Clever","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"attackorder","fullname":"move: Attack Order","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"attract":{"exists":true,"name":"Attract","num":213,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"volatileStatus":"attract","condition":{"noCopy":true,"onBeforeMovePriority":2},"secondary":null,"target":"normal","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"Causes the target to become infatuated, making it unable to attack 50% of the time. Fails if both the user and the target are the same gender, if either is genderless, or if the target is already infatuated. The effect ends when either the user or the target is no longer active. Pokemon with the Oblivious Ability or protected by the Aroma Veil Ability are immune.","shortDesc":"A target of the opposite gender gets infatuated.","id":"attract","fullname":"move: Attract","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"aura sphere":{"exists":true,"name":"Aura Sphere","num":396,"accuracy":true,"basePower":80,"category":"Special","pp":20,"priority":0,"flags":{"bullet":1,"protect":1,"pulse":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Fighting","contestType":"Beautiful","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"aurasphere","fullname":"move: Aura Sphere","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":160}},"aura wheel":{"exists":true,"name":"Aura Wheel","num":783,"accuracy":100,"basePower":110,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"self":{"boosts":{"spe":1}}},"target":"normal","type":"Electric","desc":"Has a 100% chance to raise the user\'s Speed by 1 stage. If the user is a Morpeko in Full Belly Mode, this move is Electric type. If the user is a Morpeko in Hangry Mode, this move is Dark type. This move cannot be used successfully unless the user\'s current form, while considering Transform, is Full Belly or Hangry Mode Morpeko.","shortDesc":"Morpeko: Electric; Hangry: Dark; 100% +1 Spe.","id":"aurawheel","fullname":"move: Aura Wheel","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":100,"self":{"boosts":{"spe":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"aurora beam":{"exists":true,"name":"Aurora Beam","num":62,"accuracy":100,"basePower":65,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"atk":-1}},"target":"normal","type":"Ice","contestType":"Beautiful","desc":"Has a 10% chance to lower the target\'s Attack by 1 stage.","shortDesc":"10% chance to lower the target\'s Attack by 1.","id":"aurorabeam","fullname":"move: Aurora Beam","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":10,"boosts":{"atk":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"aurora veil":{"exists":true,"name":"Aurora Veil","num":694,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"sideCondition":"auroraveil","condition":{"duration":5,"onSideResidualOrder":26,"onSideResidualSubOrder":10},"secondary":null,"target":"allySide","type":"Ice","zMove":{"boost":{"spe":1}},"contestType":"Beautiful","desc":"For 5 turns, the user and its party members take 0.5x damage from physical and special attacks, or 0.66x damage if in a Double Battle; does not reduce damage further with Reflect or Light Screen. Critical hits ignore this protection. It is removed from the user\'s side if the user or an ally is successfully hit by Brick Break, Psychic Fangs, or Defog. Brick Break and Psychic Fangs remove the effect before damage is calculated. Lasts for 8 turns if the user is holding Light Clay. Fails unless the weather is Hail.","shortDesc":"For 5 turns, damage to allies is halved. Hail only.","id":"auroraveil","fullname":"move: Aurora Veil","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"autotomize":{"exists":true,"name":"Autotomize","num":475,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"snatch":1},"boosts":{"spe":2},"secondary":null,"target":"self","type":"Steel","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"Raises the user\'s Speed by 2 stages. If the user\'s Speed was changed, the user\'s weight is reduced by 100 kg as long as it remains active. This effect is stackable but cannot reduce the user\'s weight to less than 0.1 kg.","shortDesc":"Raises the user\'s Speed by 2; user loses 100 kg.","id":"autotomize","fullname":"move: Autotomize","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"avalanche":{"exists":true,"name":"Avalanche","num":419,"accuracy":100,"basePower":60,"category":"Physical","pp":10,"priority":-4,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ice","contestType":"Beautiful","desc":"Power doubles if the user was hit by the target this turn.","shortDesc":"Power doubles if user is damaged by the target.","id":"avalanche","fullname":"move: Avalanche","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"baby doll eyes":{"exists":true,"name":"Baby-Doll Eyes","num":608,"accuracy":100,"basePower":0,"category":"Status","pp":30,"priority":1,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"boosts":{"atk":-1},"secondary":null,"target":"normal","type":"Fairy","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Lowers the target\'s Attack by 1 stage.","shortDesc":"Lowers the target\'s Attack by 1.","id":"babydolleyes","fullname":"move: Baby-Doll Eyes","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"baddy bad":{"exists":true,"name":"Baddy Bad","num":737,"accuracy":95,"basePower":80,"category":"Special","isNonstandard":"LGPE","pp":15,"priority":0,"flags":{"protect":1},"self":{"sideCondition":"reflect"},"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"This move summons Reflect for 5 turns upon use.","shortDesc":"Summons Reflect.","id":"baddybad","fullname":"move: Baddy Bad","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"baneful bunker":{"exists":true,"name":"Baneful Bunker","num":661,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":4,"flags":{},"stallingMove":true,"volatileStatus":"banefulbunker","condition":{"duration":1,"onTryHitPriority":3},"secondary":null,"target":"self","type":"Poison","zMove":{"boost":{"def":1}},"contestType":"Tough","desc":"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon making contact with the user become poisoned. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn.","shortDesc":"Protects from moves. Contact: poison.","id":"banefulbunker","fullname":"move: Baneful Bunker","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"barrage":{"exists":true,"name":"Barrage","num":140,"accuracy":85,"basePower":15,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Normal","contestType":"Cute","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"barrage","fullname":"move: Barrage","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"barrier":{"exists":true,"name":"Barrier","num":112,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"def":2},"secondary":null,"target":"self","type":"Psychic","zMove":{"effect":"clearnegativeboost"},"contestType":"Cool","desc":"Raises the user\'s Defense by 2 stages.","shortDesc":"Raises the user\'s Defense by 2.","id":"barrier","fullname":"move: Barrier","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"baton pass":{"exists":true,"name":"Baton Pass","num":226,"accuracy":true,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{},"self":{},"selfSwitch":"copyvolatile","secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"The user is replaced with another Pokemon in its party. The selected Pokemon has the user\'s stat stage changes, confusion, and certain move effects transferred to it.","shortDesc":"User switches, passing stat changes and more.","id":"batonpass","fullname":"move: Baton Pass","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"beak blast":{"exists":true,"name":"Beak Blast","num":690,"accuracy":100,"basePower":100,"category":"Physical","isNonstandard":"Past","pp":15,"priority":-3,"flags":{"bullet":1,"protect":1},"condition":{"duration":1},"secondary":null,"target":"normal","type":"Flying","contestType":"Tough","desc":"If the user is hit by a contact move this turn before it can execute this move, the attacker is burned.","shortDesc":"Burns on contact with the user before it moves.","id":"beakblast","fullname":"move: Beak Blast","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"beat up":{"exists":true,"name":"Beat Up","num":251,"accuracy":100,"basePower":0,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"Hits one time for the user and one time for each unfainted Pokemon without a non-volatile status condition in the user\'s party. The power of each hit is equal to 5+(X/10), where X is each participating Pokemon\'s base Attack; each hit is considered to come from the user.","shortDesc":"All healthy allies aid in damaging the target.","id":"beatup","fullname":"move: Beat Up","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"behemoth bash":{"exists":true,"name":"Behemoth Bash","num":782,"accuracy":100,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Steel","desc":"Damage doubles if the target is Dynamaxed.","shortDesc":"Damage doubles if the target is Dynamaxed.","id":"behemothbash","fullname":"move: Behemoth Bash","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"behemoth blade":{"exists":true,"name":"Behemoth Blade","num":781,"accuracy":100,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Steel","desc":"Damage doubles if the target is Dynamaxed.","shortDesc":"Damage doubles if the target is Dynamaxed.","id":"behemothblade","fullname":"move: Behemoth Blade","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"belch":{"exists":true,"name":"Belch","num":562,"accuracy":90,"basePower":120,"category":"Special","pp":10,"priority":0,"flags":{"protect":1},"secondary":null,"target":"normal","type":"Poison","contestType":"Tough","desc":"This move cannot be selected until the user eats a Berry, either by eating one that was held, stealing and eating one off another Pokemon with Bug Bite or Pluck, or eating one that was thrown at it with Fling. Once the condition is met, this move can be selected and used for the rest of the battle even if the user gains or uses another item or switches out. Consuming a Berry with Natural Gift does not count for the purposes of eating one.","shortDesc":"Cannot be selected until the user eats a Berry.","id":"belch","fullname":"move: Belch","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":95},"zMove":{"basePower":190}},"belly drum":{"exists":true,"name":"Belly Drum","num":187,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"heal"},"contestType":"Cute","desc":"Raises the user\'s Attack by 12 stages in exchange for the user losing 1/2 of its maximum HP, rounded down. Fails if the user would faint or if its Attack stat stage is 6.","shortDesc":"User loses 50% max HP. Maximizes Attack.","id":"bellydrum","fullname":"move: Belly Drum","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"bestow":{"exists":true,"name":"Bestow","num":516,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":0,"flags":{"mirror":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":2}},"contestType":"Cute","desc":"The target receives the user\'s held item. Fails if the user has no item or is holding a Mail or Z-Crystal, if the target is already holding an item, if the user is a Kyogre holding a Blue Orb, a Groudon holding a Red Orb, a Giratina holding a Griseous Orb, an Arceus holding a Plate, a Genesect holding a Drive, a Silvally holding a Memory, a Pokemon that can Mega Evolve holding the Mega Stone for its species, or if the target is one of those Pokemon and the user is holding the respective item.","shortDesc":"User passes its held item to the target.","id":"bestow","fullname":"move: Bestow","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"bide":{"exists":true,"name":"Bide","num":117,"accuracy":true,"basePower":0,"category":"Physical","isNonstandard":"Past","pp":10,"priority":1,"flags":{"contact":1,"protect":1},"volatileStatus":"bide","ignoreImmunity":true,"condition":{"duration":3,"onLockMove":"bide","onDamagePriority":-101},"secondary":null,"target":"self","type":"Normal","contestType":"Tough","desc":"The user spends two turns locked into this move and then, on the second turn after using this move, the user attacks the last Pokemon that hit it, inflicting double the damage in HP it lost to attacks during the two turns. If the last Pokemon that hit it is no longer active, the user attacks a random opposing Pokemon instead. If the user is prevented from moving during this move\'s use, the effect ends. This move does not check accuracy and does not ignore type immunity.","shortDesc":"Waits 2 turns; deals double the damage taken.","id":"bide","fullname":"move: Bide","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"bind":{"exists":true,"name":"Bind","num":20,"accuracy":85,"basePower":15,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"bind","fullname":"move: Bind","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"bite":{"exists":true,"name":"Bite","num":44,"accuracy":100,"basePower":60,"category":"Physical","pp":25,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Dark","contestType":"Tough","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"bite","fullname":"move: Bite","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"black hole eclipse":{"exists":true,"name":"Black Hole Eclipse","num":654,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"darkiniumz","secondary":null,"target":"normal","type":"Dark","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"blackholeeclipse","fullname":"move: Black Hole Eclipse","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"blast burn":{"exists":true,"name":"Blast Burn","num":307,"accuracy":90,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"recharge":1,"protect":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Fire","contestType":"Beautiful","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"blastburn","fullname":"move: Blast Burn","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"blaze kick":{"exists":true,"name":"Blaze Kick","num":299,"accuracy":90,"basePower":85,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":{"chance":10,"status":"brn"},"target":"normal","type":"Fire","contestType":"Cool","desc":"Has a 10% chance to burn the target and a higher chance for a critical hit.","shortDesc":"High critical hit ratio. 10% chance to burn.","id":"blazekick","fullname":"move: Blaze Kick","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"blizzard":{"exists":true,"name":"Blizzard","num":59,"accuracy":70,"basePower":110,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"frz"},"target":"allAdjacentFoes","type":"Ice","contestType":"Beautiful","desc":"Has a 10% chance to freeze the target. If the weather is Hail, this move does not check accuracy.","shortDesc":"10% chance to freeze foe(s). Can\'t miss in hail.","id":"blizzard","fullname":"move: Blizzard","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":10,"status":"frz"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"block":{"exists":true,"name":"Block","num":335,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"reflectable":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.","shortDesc":"Prevents the target from switching out.","id":"block","fullname":"move: Block","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"bloom doom":{"exists":true,"name":"Bloom Doom","num":644,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"grassiumz","secondary":null,"target":"normal","type":"Grass","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"bloomdoom","fullname":"move: Bloom Doom","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"blue flare":{"exists":true,"name":"Blue Flare","num":551,"accuracy":85,"basePower":130,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":20,"status":"brn"},"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Has a 20% chance to burn the target.","shortDesc":"20% chance to burn the target.","id":"blueflare","fullname":"move: Blue Flare","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":20,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"body press":{"exists":true,"name":"Body Press","num":776,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"useSourceDefensiveAsOffensive":true,"secondary":null,"target":"normal","type":"Fighting","desc":"Damage is calculated using the user\'s Defense stat as its Attack, including stat stage changes. Other effects that modify the Attack stat are used as normal.","shortDesc":"Uses user\'s Def stat as Atk in damage calculation.","id":"bodypress","fullname":"move: Body Press","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":160}},"body slam":{"exists":true,"name":"Body Slam","num":34,"accuracy":100,"basePower":85,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"nonsky":1},"secondary":{"chance":30,"status":"par"},"target":"normal","type":"Normal","contestType":"Tough","desc":"Has a 30% chance to paralyze the target. Damage doubles and no accuracy check is done if the target has used Minimize while active.","shortDesc":"30% chance to paralyze the target.","id":"bodyslam","fullname":"move: Body Slam","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"bolt beak":{"exists":true,"name":"Bolt Beak","num":754,"accuracy":100,"basePower":85,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Electric","desc":"Power doubles if the user moves before the target.","shortDesc":"Power doubles if user moves before the target.","id":"boltbeak","fullname":"move: Bolt Beak","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"bolt strike":{"exists":true,"name":"Bolt Strike","num":550,"accuracy":85,"basePower":130,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":20,"status":"par"},"target":"normal","type":"Electric","contestType":"Beautiful","desc":"Has a 20% chance to paralyze the target.","shortDesc":"20% chance to paralyze the target.","id":"boltstrike","fullname":"move: Bolt Strike","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":20,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"bone club":{"exists":true,"name":"Bone Club","num":125,"accuracy":85,"basePower":65,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"volatileStatus":"flinch"},"target":"normal","type":"Ground","contestType":"Tough","desc":"Has a 10% chance to make the target flinch.","shortDesc":"10% chance to make the target flinch.","id":"boneclub","fullname":"move: Bone Club","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":[{"chance":10,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"bonemerang":{"exists":true,"name":"Bonemerang","num":155,"accuracy":90,"basePower":50,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"multihit":2,"secondary":null,"target":"normal","type":"Ground","maxMove":{"basePower":130},"contestType":"Tough","desc":"Hits twice. If the first hit breaks the target\'s substitute, it will take damage for the second hit.","shortDesc":"Hits 2 times in one turn.","id":"bonemerang","fullname":"move: Bonemerang","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"bone rush":{"exists":true,"name":"Bone Rush","num":198,"accuracy":90,"basePower":25,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Ground","zMove":{"basePower":140},"maxMove":{"basePower":130},"contestType":"Tough","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"bonerush","fullname":"move: Bone Rush","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"boomburst":{"exists":true,"name":"Boomburst","num":586,"accuracy":100,"basePower":140,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":null,"target":"allAdjacent","type":"Normal","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent Pokemon.","id":"boomburst","fullname":"move: Boomburst","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"bounce":{"exists":true,"name":"Bounce","num":340,"accuracy":85,"basePower":85,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"charge":1,"protect":1,"mirror":1,"gravity":1,"distance":1},"condition":{"duration":2},"secondary":{"chance":30,"status":"par"},"target":"any","type":"Flying","contestType":"Cute","desc":"Has a 30% chance to paralyze the target. This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thousand Arrows, Thunder, and Twister, and Gust and Twister have doubled power when used against it. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Bounces turn 1. Hits turn 2. 30% paralyze.","id":"bounce","fullname":"move: Bounce","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"bouncy bubble":{"exists":true,"name":"Bouncy Bubble","num":733,"accuracy":100,"basePower":60,"category":"Special","isNonstandard":"LGPE","pp":20,"priority":0,"flags":{"protect":1,"heal":1},"drain":[1,2],"secondary":null,"target":"normal","type":"Water","contestType":"Clever","desc":"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 50% of the damage dealt.","id":"bouncybubble","fullname":"move: Bouncy Bubble","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"branch poke":{"exists":true,"name":"Branch Poke","num":785,"accuracy":100,"basePower":40,"category":"Physical","pp":40,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","desc":"No additional effect.","shortDesc":"No additional effect.","id":"branchpoke","fullname":"move: Branch Poke","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"brave bird":{"exists":true,"name":"Brave Bird","num":413,"accuracy":100,"basePower":120,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"distance":1},"recoil":[33,100],"secondary":null,"target":"any","type":"Flying","contestType":"Cool","desc":"If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 33% recoil.","id":"bravebird","fullname":"move: Brave Bird","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"breaking swipe":{"exists":true,"name":"Breaking Swipe","num":784,"accuracy":100,"basePower":60,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"atk":-1}},"target":"allAdjacentFoes","type":"Dragon","desc":"Has a 100% chance to lower the target\'s Attack by 1 stage.","shortDesc":"100% chance to lower the foe(s) Attack by 1.","id":"breakingswipe","fullname":"move: Breaking Swipe","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":[{"chance":100,"boosts":{"atk":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"breakneck blitz":{"exists":true,"name":"Breakneck Blitz","num":622,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"normaliumz","secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"breakneckblitz","fullname":"move: Breakneck Blitz","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"brick break":{"exists":true,"name":"Brick Break","num":280,"accuracy":100,"basePower":75,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"If this attack does not miss, the effects of Reflect, Light Screen, and Aurora Veil end for the target\'s side of the field before damage is calculated.","shortDesc":"Destroys screens, unless the target is immune.","id":"brickbreak","fullname":"move: Brick Break","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":140}},"brine":{"exists":true,"name":"Brine","num":362,"accuracy":100,"basePower":65,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Water","contestType":"Tough","desc":"Power doubles if the target has less than or equal to half of its maximum HP remaining.","shortDesc":"Power doubles if the target\'s HP is 50% or less.","id":"brine","fullname":"move: Brine","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"brutal swing":{"exists":true,"name":"Brutal Swing","num":693,"accuracy":100,"basePower":60,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"allAdjacent","type":"Dark","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent Pokemon.","id":"brutalswing","fullname":"move: Brutal Swing","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"bubble":{"exists":true,"name":"Bubble","num":145,"accuracy":100,"basePower":40,"category":"Special","isNonstandard":"Past","pp":30,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"spe":-1}},"target":"allAdjacentFoes","type":"Water","contestType":"Cute","desc":"Has a 10% chance to lower the target\'s Speed by 1 stage.","shortDesc":"10% chance to lower the foe(s) Speed by 1.","id":"bubble","fullname":"move: Bubble","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":10,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"bubble beam":{"exists":true,"name":"Bubble Beam","num":61,"accuracy":100,"basePower":65,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"spe":-1}},"target":"normal","type":"Water","contestType":"Beautiful","desc":"Has a 10% chance to lower the target\'s Speed by 1 stage.","shortDesc":"10% chance to lower the target\'s Speed by 1.","id":"bubblebeam","fullname":"move: Bubble Beam","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":10,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"bug bite":{"exists":true,"name":"Bug Bite","num":450,"accuracy":100,"basePower":60,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Bug","contestType":"Cute","desc":"If this move is successful and the user has not fainted, it steals the target\'s held Berry if it is holding one and eats it immediately, gaining its effects even if the user\'s item is being ignored. Items lost to this move cannot be regained with Recycle or the Harvest Ability.","shortDesc":"User steals and eats the target\'s Berry.","id":"bugbite","fullname":"move: Bug Bite","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"bug buzz":{"exists":true,"name":"Bug Buzz","num":405,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":{"chance":10,"boosts":{"spd":-1}},"target":"normal","type":"Bug","contestType":"Beautiful","desc":"Has a 10% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"10% chance to lower the target\'s Sp. Def by 1.","id":"bugbuzz","fullname":"move: Bug Buzz","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":[{"chance":10,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"bulk up":{"exists":true,"name":"Bulk Up","num":339,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"atk":1,"def":1},"secondary":null,"target":"self","type":"Fighting","zMove":{"boost":{"atk":1}},"contestType":"Cool","desc":"Raises the user\'s Attack and Defense by 1 stage.","shortDesc":"Raises the user\'s Attack and Defense by 1.","id":"bulkup","fullname":"move: Bulk Up","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"bulldoze":{"exists":true,"name":"Bulldoze","num":523,"accuracy":100,"basePower":60,"category":"Physical","pp":20,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"secondary":{"chance":100,"boosts":{"spe":-1}},"target":"allAdjacent","type":"Ground","contestType":"Tough","desc":"Has a 100% chance to lower the target\'s Speed by 1 stage.","shortDesc":"100% chance lower adjacent Pkmn Speed by 1.","id":"bulldoze","fullname":"move: Bulldoze","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":[{"chance":100,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"bullet punch":{"exists":true,"name":"Bullet Punch","num":418,"accuracy":100,"basePower":40,"category":"Physical","pp":30,"priority":1,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":null,"target":"normal","type":"Steel","contestType":"Tough","desc":"No additional effect.","shortDesc":"Usually goes first.","id":"bulletpunch","fullname":"move: Bullet Punch","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"bullet seed":{"exists":true,"name":"Bullet Seed","num":331,"accuracy":100,"basePower":25,"category":"Physical","pp":30,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Grass","zMove":{"basePower":140},"maxMove":{"basePower":130},"contestType":"Cool","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"bulletseed","fullname":"move: Bullet Seed","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"burning jealousy":{"exists":true,"name":"Burning Jealousy","num":807,"accuracy":100,"basePower":70,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100},"target":"allAdjacentFoes","type":"Fire","contestType":"Tough","desc":"Has a 100% chance to burn the target if it had a stat stage raised this turn.","shortDesc":"100% burns a target that had a stat rise this turn.","id":"burningjealousy","fullname":"move: Burning Jealousy","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":100}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"burn up":{"exists":true,"name":"Burn Up","num":682,"accuracy":100,"basePower":130,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"defrost":1},"self":{},"secondary":null,"target":"normal","type":"Fire","contestType":"Clever","desc":"Fails unless the user is a Fire type. If this move is successful, the user\'s Fire type becomes typeless as long as it remains active.","shortDesc":"User\'s Fire type becomes typeless; must be Fire.","id":"burnup","fullname":"move: Burn Up","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"buzzy buzz":{"exists":true,"name":"Buzzy Buzz","num":734,"accuracy":100,"basePower":60,"category":"Special","isNonstandard":"LGPE","pp":20,"priority":0,"flags":{"protect":1},"secondary":{"chance":100,"status":"par"},"target":"normal","type":"Electric","contestType":"Clever","desc":"Has a 100% chance to paralyze the foe.","shortDesc":"100% chance to paralyze the foe.","id":"buzzybuzz","fullname":"move: Buzzy Buzz","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":100,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"calm mind":{"exists":true,"name":"Calm Mind","num":347,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"spa":1,"spd":1},"secondary":null,"target":"self","type":"Psychic","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"Raises the user\'s Special Attack and Special Defense by 1 stage.","shortDesc":"Raises the user\'s Sp. Atk and Sp. Def by 1.","id":"calmmind","fullname":"move: Calm Mind","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"camouflage":{"exists":true,"name":"Camouflage","num":293,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{"snatch":1},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"evasion":1}},"contestType":"Clever","desc":"The user\'s type changes based on the battle terrain. Normal type on the regular Wi-Fi terrain, Electric type during Electric Terrain, Fairy type during Misty Terrain, Grass type during Grassy Terrain, and Psychic type during Psychic Terrain. Fails if the user\'s type cannot be changed or if the user is already purely that type.","shortDesc":"Changes user\'s type by terrain (default Normal).","id":"camouflage","fullname":"move: Camouflage","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"captivate":{"exists":true,"name":"Captivate","num":445,"accuracy":100,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"spa":-2},"secondary":null,"target":"allAdjacentFoes","type":"Normal","zMove":{"boost":{"spd":2}},"contestType":"Cute","desc":"Lowers the target\'s Special Attack by 2 stages. The target is unaffected if both the user and the target are the same gender, or if either is genderless. Pokemon with the Oblivious Ability are immune.","shortDesc":"Lowers the foe(s) Sp. Atk by 2 if opposite gender.","id":"captivate","fullname":"move: Captivate","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"catastropika":{"exists":true,"name":"Catastropika","num":658,"accuracy":true,"basePower":210,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{"contact":1},"isZ":"pikaniumz","secondary":null,"target":"normal","type":"Electric","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"catastropika","fullname":"move: Catastropika","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"celebrate":{"exists":true,"name":"Celebrate","num":606,"accuracy":true,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Cute","desc":"No competitive use.","shortDesc":"No competitive use.","id":"celebrate","fullname":"move: Celebrate","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"charge":{"exists":true,"name":"Charge","num":268,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"volatileStatus":"charge","condition":{"duration":2,"onBasePowerPriority":9},"boosts":{"spd":1},"secondary":null,"target":"self","type":"Electric","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"Raises the user\'s Special Defense by 1 stage. If the user uses an Electric-type attack on the next turn, its power will be doubled.","shortDesc":"+1 SpD, user\'s Electric move next turn 2x power.","id":"charge","fullname":"move: Charge","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"charge beam":{"exists":true,"name":"Charge Beam","num":451,"accuracy":90,"basePower":50,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":70,"self":{"boosts":{"spa":1}}},"target":"normal","type":"Electric","contestType":"Beautiful","desc":"Has a 70% chance to raise the user\'s Special Attack by 1 stage.","shortDesc":"70% chance to raise the user\'s Sp. Atk by 1.","id":"chargebeam","fullname":"move: Charge Beam","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":70,"self":{"boosts":{"spa":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"charm":{"exists":true,"name":"Charm","num":204,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"boosts":{"atk":-2},"secondary":null,"target":"normal","type":"Fairy","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Lowers the target\'s Attack by 2 stages.","shortDesc":"Lowers the target\'s Attack by 2.","id":"charm","fullname":"move: Charm","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"chatter":{"exists":true,"name":"Chatter","num":448,"accuracy":100,"basePower":65,"category":"Special","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"distance":1,"authentic":1},"noSketch":true,"secondary":{"chance":100,"volatileStatus":"confusion"},"target":"any","type":"Flying","contestType":"Cute","desc":"Has a 100% chance to confuse the target.","shortDesc":"100% chance to confuse the target.","id":"chatter","fullname":"move: Chatter","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":[{"chance":100,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"chip away":{"exists":true,"name":"Chip Away","num":498,"accuracy":100,"basePower":70,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"ignoreDefensive":true,"ignoreEvasion":true,"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"Ignores the target\'s stat stage changes, including evasiveness.","shortDesc":"Ignores the target\'s stat stage changes.","id":"chipaway","fullname":"move: Chip Away","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"circle throw":{"exists":true,"name":"Circle Throw","num":509,"accuracy":90,"basePower":60,"category":"Physical","pp":10,"priority":-6,"flags":{"contact":1,"protect":1,"mirror":1},"forceSwitch":true,"target":"normal","type":"Fighting","contestType":"Cool","desc":"If both the user and the target have not fainted, the target is forced to switch out and be replaced with a random unfainted ally. This effect fails if the target is under the effect of Ingrain, has the Suction Cups Ability, or this move hit a substitute.","shortDesc":"Forces the target to switch to a random ally.","id":"circlethrow","fullname":"move: Circle Throw","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":80},"zMove":{"basePower":120}},"clamp":{"exists":true,"name":"Clamp","num":128,"accuracy":85,"basePower":35,"category":"Physical","isNonstandard":"Past","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Water","contestType":"Tough","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"clamp","fullname":"move: Clamp","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"clanging scales":{"exists":true,"name":"Clanging Scales","num":691,"accuracy":100,"basePower":110,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"selfBoost":{"boosts":{"def":-1}},"secondary":null,"target":"allAdjacentFoes","type":"Dragon","contestType":"Tough","desc":"Lowers the user\'s Defense by 1 stage.","shortDesc":"Lowers the user\'s Defense by 1.","id":"clangingscales","fullname":"move: Clanging Scales","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"clangorous soul":{"exists":true,"name":"Clangorous Soul","num":775,"accuracy":100,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"snatch":1,"sound":1,"dance":1},"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1},"secondary":null,"target":"self","type":"Dragon","desc":"Raises the user\'s Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage in exchange for the user losing 33% of its maximum HP, rounded down. Fails if the user would faint or if its Attack, Defense, Special Attack, Special Defense, and Speed stat stages would not change.","shortDesc":"User loses 33% of its max HP. +1 to all stats.","id":"clangoroussoul","fullname":"move: Clangorous Soul","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"clangorous soulblaze":{"exists":true,"name":"Clangorous Soulblaze","num":728,"accuracy":true,"basePower":185,"category":"Special","isNonstandard":"Past","pp":1,"priority":0,"flags":{"sound":1,"authentic":1},"selfBoost":{"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"isZ":"kommoniumz","secondary":{},"target":"allAdjacentFoes","type":"Dragon","contestType":"Cool","desc":"Raises the user\'s Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.","shortDesc":"Raises the user\'s Atk/Def/SpAtk/SpDef/Spe by 1.","id":"clangoroussoulblaze","fullname":"move: Clangorous Soulblaze","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":[{}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"clear smog":{"exists":true,"name":"Clear Smog","num":499,"accuracy":true,"basePower":50,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Poison","contestType":"Beautiful","desc":"Resets all of the target\'s stat stages to 0.","shortDesc":"Resets all of the target\'s stat stages to 0.","id":"clearsmog","fullname":"move: Clear Smog","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":75},"zMove":{"basePower":100}},"close combat":{"exists":true,"name":"Close Combat","num":370,"accuracy":100,"basePower":120,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"self":{"boosts":{"def":-1,"spd":-1}},"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"Lowers the user\'s Defense and Special Defense by 1 stage.","shortDesc":"Lowers the user\'s Defense and Sp. Def by 1.","id":"closecombat","fullname":"move: Close Combat","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":95},"zMove":{"basePower":190}},"coaching":{"exists":true,"name":"Coaching","num":811,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"authentic":1},"secondary":null,"boosts":{"atk":1,"def":1},"target":"adjacentAlly","type":"Fighting","desc":"Raises the target\'s Attack and Defense by 1 stage. Fails if there is no ally adjacent to the user.","shortDesc":"Raises an ally\'s Attack and Defense by 1.","id":"coaching","fullname":"move: Coaching","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"coil":{"exists":true,"name":"Coil","num":489,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"atk":1,"def":1,"accuracy":1},"secondary":null,"target":"self","type":"Poison","zMove":{"effect":"clearnegativeboost"},"contestType":"Tough","desc":"Raises the user\'s Attack, Defense, and accuracy by 1 stage.","shortDesc":"Raises user\'s Attack, Defense, accuracy by 1.","id":"coil","fullname":"move: Coil","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"comet punch":{"exists":true,"name":"Comet Punch","num":4,"accuracy":85,"basePower":18,"category":"Physical","isNonstandard":"Past","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Normal","maxMove":{"basePower":100},"contestType":"Tough","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"cometpunch","fullname":"move: Comet Punch","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"confide":{"exists":true,"name":"Confide","num":590,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"reflectable":1,"mirror":1,"sound":1,"authentic":1},"boosts":{"spa":-1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spd":1}},"contestType":"Cute","desc":"Lowers the target\'s Special Attack by 1 stage.","shortDesc":"Lowers the target\'s Sp. Atk by 1.","id":"confide","fullname":"move: Confide","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"confuse ray":{"exists":true,"name":"Confuse Ray","num":109,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"volatileStatus":"confusion","secondary":null,"target":"normal","type":"Ghost","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"Causes the target to become confused.","shortDesc":"Confuses the target.","id":"confuseray","fullname":"move: Confuse Ray","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"confusion":{"exists":true,"name":"Confusion","num":93,"accuracy":100,"basePower":50,"category":"Special","pp":25,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"volatileStatus":"confusion"},"target":"normal","type":"Psychic","contestType":"Clever","desc":"Has a 10% chance to confuse the target.","shortDesc":"10% chance to confuse the target.","id":"confusion","fullname":"move: Confusion","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":10,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"constrict":{"exists":true,"name":"Constrict","num":132,"accuracy":100,"basePower":10,"category":"Physical","isNonstandard":"Past","pp":35,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"spe":-1}},"target":"normal","type":"Normal","contestType":"Tough","desc":"Has a 10% chance to lower the target\'s Speed by 1 stage.","shortDesc":"10% chance to lower the target\'s Speed by 1.","id":"constrict","fullname":"move: Constrict","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":10,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"continental crush":{"exists":true,"name":"Continental Crush","num":632,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"rockiumz","secondary":null,"target":"normal","type":"Rock","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"continentalcrush","fullname":"move: Continental Crush","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"conversion":{"exists":true,"name":"Conversion","num":160,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"snatch":1},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Beautiful","desc":"The user\'s type changes to match the original type of the move in its first move slot. Fails if the user cannot change its type, or if the type is one of the user\'s current types.","shortDesc":"Changes user\'s type to match its first move.","id":"conversion","fullname":"move: Conversion","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"conversion 2":{"exists":true,"name":"Conversion 2","num":176,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"authentic":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"effect":"heal"},"contestType":"Beautiful","desc":"The user\'s type changes to match a type that resists or is immune to the type of the last move used by the target, but not either of its current types. The determined type of the move is used rather than the original type. Fails if the target has not made a move, if the user cannot change its type, or if this move would only be able to select one of the user\'s current types.","shortDesc":"Changes user\'s type to resist target\'s last move.","id":"conversion2","fullname":"move: Conversion 2","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"copycat":{"exists":true,"name":"Copycat","num":383,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"accuracy":1}},"contestType":"Cute","desc":"The user uses the last move used by any Pokemon, including itself. The base move of Max and G-Max Moves is considered for this purpose. Fails if no move has been used, or if the last move used was Assist, Baneful Bunker, Beak Blast, Behemoth Bash, Behemoth Blade, Belch, Bestow, Celebrate, Chatter, Circle Throw, Copycat, Counter, Covet, Crafty Shield, Destiny Bond, Detect, Dragon Tail, Dynamax Cannon, Endure, Feint, Focus Punch, Follow Me, Helping Hand, Hold Hands, King\'s Shield, Mat Block, Me First, Metronome, Mimic, Mirror Coat, Mirror Move, Nature Power, Obstruct, Protect, Rage Powder, Roar, Shell Trap, Sketch, Sleep Talk, Snatch, Spiky Shield, Spotlight, Struggle, Switcheroo, Thief, Transform, Trick, or Whirlwind.","shortDesc":"Uses the last move used in the battle.","id":"copycat","fullname":"move: Copycat","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"core enforcer":{"exists":true,"name":"Core Enforcer","num":687,"accuracy":100,"basePower":100,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Dragon","zMove":{"basePower":140},"contestType":"Tough","desc":"If the user moves after the target, the target\'s Ability is rendered ineffective as long as it remains active. If the target uses Baton Pass, the replacement will remain under this effect. If the target\'s Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, or Zen Mode, this effect does not happen, and receiving the effect through Baton Pass ends the effect immediately.","shortDesc":"Nullifies the foe(s) Ability if the foe(s) move first.","id":"coreenforcer","fullname":"move: Core Enforcer","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130}},"corkscrew crash":{"exists":true,"name":"Corkscrew Crash","num":638,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"steeliumz","secondary":null,"target":"normal","type":"Steel","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"corkscrewcrash","fullname":"move: Corkscrew Crash","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"corrosive gas":{"exists":true,"name":"Corrosive Gas","num":810,"accuracy":100,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"allAdjacent","type":"Poison","desc":"The target loses its held item. This move cannot cause Pokemon with the Sticky Hold Ability to lose their held item or cause a Kyogre, a Groudon, a Giratina, an Arceus, a Genesect, a Silvally, a Zacian, or a Zamazenta to lose their Blue Orb, Red Orb, Griseous Orb, Plate, Drive, Memory, Rusted Sword, or Rusted Shield respectively. Items lost to this move cannot be regained with Recycle or the Harvest Ability.","shortDesc":"Removes adjacent Pokemon\'s held items.","id":"corrosivegas","fullname":"move: Corrosive Gas","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"cosmic power":{"exists":true,"name":"Cosmic Power","num":322,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"def":1,"spd":1},"secondary":null,"target":"self","type":"Psychic","zMove":{"boost":{"spd":1}},"contestType":"Beautiful","desc":"Raises the user\'s Defense and Special Defense by 1 stage.","shortDesc":"Raises the user\'s Defense and Sp. Def by 1.","id":"cosmicpower","fullname":"move: Cosmic Power","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"cotton guard":{"exists":true,"name":"Cotton Guard","num":538,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1},"boosts":{"def":3},"secondary":null,"target":"self","type":"Grass","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"Raises the user\'s Defense by 3 stages.","shortDesc":"Raises the user\'s Defense by 3.","id":"cottonguard","fullname":"move: Cotton Guard","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"cotton spore":{"exists":true,"name":"Cotton Spore","num":178,"accuracy":100,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"powder":1,"protect":1,"reflectable":1,"mirror":1},"boosts":{"spe":-2},"secondary":null,"target":"allAdjacentFoes","type":"Grass","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"Lowers the target\'s Speed by 2 stages.","shortDesc":"Lowers the target\'s Speed by 2.","id":"cottonspore","fullname":"move: Cotton Spore","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"counter":{"exists":true,"name":"Counter","num":68,"accuracy":100,"basePower":0,"category":"Physical","pp":20,"priority":-5,"flags":{"contact":1,"protect":1},"condition":{"duration":1,"noCopy":true,"onRedirectTargetPriority":-1},"secondary":null,"target":"scripted","type":"Fighting","maxMove":{"basePower":75},"contestType":"Tough","desc":"Deals damage to the last opposing Pokemon to hit the user with a physical attack this turn equal to twice the HP lost by the user from that attack. If the user did not lose HP from the attack, this move deals 1 HP of damage instead. If that opposing Pokemon\'s position is no longer in use and there is another opposing Pokemon on the field, the damage is done to it instead. Only the last hit of a multi-hit attack is counted. Fails if the user was not hit by an opposing Pokemon\'s physical attack this turn.","shortDesc":"If hit by physical attack, returns double damage.","id":"counter","fullname":"move: Counter","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"court change":{"exists":true,"name":"Court Change","num":756,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"mirror":1},"secondary":null,"target":"all","type":"Normal","desc":"Switches the Mist, Light Screen, Reflect, Spikes, Safeguard, Tailwind, Toxic Spikes, Stealth Rock, Water Pledge, Fire Pledge, Grass Pledge, Sticky Web, Aurora Veil, G-Max Steelsurge, G-Max Cannonade, G-Max Vine Lash, and G-Max Wildfire effects from the user\'s side to the opposing side and vice versa.","shortDesc":"Swaps user\'s field effects with the opposing side.","id":"courtchange","fullname":"move: Court Change","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"covet":{"exists":true,"name":"Covet","num":343,"accuracy":100,"basePower":60,"category":"Physical","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cute","desc":"If this attack was successful and the user has not fainted, it steals the target\'s held item if the user is not holding one. The target\'s item is not stolen if it is a Mail or Z-Crystal, or if the target is a Kyogre holding a Blue Orb, a Groudon holding a Red Orb, a Giratina holding a Griseous Orb, an Arceus holding a Plate, a Genesect holding a Drive, a Silvally holding a Memory, or a Pokemon that can Mega Evolve holding the Mega Stone for its species. Items lost to this move cannot be regained with Recycle or the Harvest Ability.","shortDesc":"If the user has no item, it steals the target\'s.","id":"covet","fullname":"move: Covet","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"crabhammer":{"exists":true,"name":"Crabhammer","num":152,"accuracy":90,"basePower":100,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Water","contestType":"Tough","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"crabhammer","fullname":"move: Crabhammer","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"crafty shield":{"exists":true,"name":"Crafty Shield","num":578,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":3,"flags":{},"sideCondition":"craftyshield","condition":{"duration":1,"onTryHitPriority":3},"secondary":null,"target":"allySide","type":"Fairy","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"The user and its party members are protected from non-damaging attacks made by other Pokemon, including allies, during this turn. Fails if the user moves last this turn or if this move is already in effect for the user\'s side.","shortDesc":"Protects allies from Status moves this turn.","id":"craftyshield","fullname":"move: Crafty Shield","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"cross chop":{"exists":true,"name":"Cross Chop","num":238,"accuracy":80,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"crosschop","fullname":"move: Cross Chop","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":180}},"cross poison":{"exists":true,"name":"Cross Poison","num":440,"accuracy":100,"basePower":70,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":10,"status":"psn"},"critRatio":2,"target":"normal","type":"Poison","contestType":"Cool","desc":"Has a 10% chance to poison the target and a higher chance for a critical hit.","shortDesc":"High critical hit ratio. 10% chance to poison.","id":"crosspoison","fullname":"move: Cross Poison","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Poison","secondaries":[{"chance":10,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":85},"zMove":{"basePower":140}},"crunch":{"exists":true,"name":"Crunch","num":242,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondary":{"chance":20,"boosts":{"def":-1}},"target":"normal","type":"Dark","contestType":"Tough","desc":"Has a 20% chance to lower the target\'s Defense by 1 stage.","shortDesc":"20% chance to lower the target\'s Defense by 1.","id":"crunch","fullname":"move: Crunch","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":[{"chance":20,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"crush claw":{"exists":true,"name":"Crush Claw","num":306,"accuracy":95,"basePower":75,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":50,"boosts":{"def":-1}},"target":"normal","type":"Normal","contestType":"Cool","desc":"Has a 50% chance to lower the target\'s Defense by 1 stage.","shortDesc":"50% chance to lower the target\'s Defense by 1.","id":"crushclaw","fullname":"move: Crush Claw","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":50,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"crush grip":{"exists":true,"name":"Crush Grip","num":462,"accuracy":100,"basePower":0,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":190},"maxMove":{"basePower":140},"contestType":"Tough","desc":"Power is equal to 120 * (target\'s current HP / target\'s maximum HP), rounded half down, but not less than 1.","shortDesc":"More power the more HP the target has left.","id":"crushgrip","fullname":"move: Crush Grip","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"curse":{"exists":true,"name":"Curse","num":174,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"authentic":1},"volatileStatus":"curse","condition":{"onResidualOrder":12},"secondary":null,"target":"randomNormal","nonGhostTarget":"self","type":"Ghost","zMove":{"effect":"curse"},"contestType":"Tough","desc":"If the user is not a Ghost type, lowers the user\'s Speed by 1 stage and raises the user\'s Attack and Defense by 1 stage. If the user is a Ghost type, the user loses 1/2 of its maximum HP, rounded down and even if it would cause fainting, in exchange for the target losing 1/4 of its maximum HP, rounded down, at the end of each turn while it is active. If the target uses Baton Pass, the replacement will continue to be affected. Fails if there is no target or if the target is already affected.","shortDesc":"Curses if Ghost, else -1 Spe, +1 Atk, +1 Def.","id":"curse","fullname":"move: Curse","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"cut":{"exists":true,"name":"Cut","num":15,"accuracy":95,"basePower":50,"category":"Physical","pp":30,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"cut","fullname":"move: Cut","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"darkest lariat":{"exists":true,"name":"Darkest Lariat","num":663,"accuracy":100,"basePower":85,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"ignoreEvasion":true,"ignoreDefensive":true,"secondary":null,"target":"normal","type":"Dark","contestType":"Cool","desc":"Ignores the target\'s stat stage changes, including evasiveness.","shortDesc":"Ignores the target\'s stat stage changes.","id":"darkestlariat","fullname":"move: Darkest Lariat","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"dark pulse":{"exists":true,"name":"Dark Pulse","num":399,"accuracy":100,"basePower":80,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"pulse":1,"mirror":1,"distance":1},"secondary":{"chance":20,"volatileStatus":"flinch"},"target":"any","type":"Dark","contestType":"Cool","desc":"Has a 20% chance to make the target flinch.","shortDesc":"20% chance to make the target flinch.","id":"darkpulse","fullname":"move: Dark Pulse","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":[{"chance":20,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"dark void":{"exists":true,"name":"Dark Void","num":464,"accuracy":50,"basePower":0,"category":"Status","isNonstandard":"Past","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"slp","secondary":null,"target":"allAdjacentFoes","type":"Dark","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"Causes the target to fall asleep. This move cannot be used successfully unless the user\'s current form, while considering Transform, is Darkrai.","shortDesc":"Darkrai: Causes the foe(s) to fall asleep.","id":"darkvoid","fullname":"move: Dark Void","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"dazzling gleam":{"exists":true,"name":"Dazzling Gleam","num":605,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Fairy","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent foes.","id":"dazzlinggleam","fullname":"move: Dazzling Gleam","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"decorate":{"exists":true,"name":"Decorate","num":777,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"mystery":1},"secondary":null,"boosts":{"atk":2,"spa":2},"target":"normal","type":"Fairy","desc":"Raises the target\'s Attack and Special Attack by 2 stages.","shortDesc":"Raises the target\'s Attack and Sp. Atk by 2.","id":"decorate","fullname":"move: Decorate","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"defend order":{"exists":true,"name":"Defend Order","num":455,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1},"boosts":{"def":1,"spd":1},"secondary":null,"target":"self","type":"Bug","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Raises the user\'s Defense and Special Defense by 1 stage.","shortDesc":"Raises the user\'s Defense and Sp. Def by 1.","id":"defendorder","fullname":"move: Defend Order","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"defense curl":{"exists":true,"name":"Defense Curl","num":111,"accuracy":true,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"snatch":1},"boosts":{"def":1},"volatileStatus":"defensecurl","condition":{"noCopy":true},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"accuracy":1}},"contestType":"Cute","desc":"Raises the user\'s Defense by 1 stage. As long as the user remains active, the power of the user\'s Ice Ball and Rollout will be doubled (this effect is not stackable).","shortDesc":"Raises the user\'s Defense by 1.","id":"defensecurl","fullname":"move: Defense Curl","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"defog":{"exists":true,"name":"Defog","num":432,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"secondary":null,"target":"normal","type":"Flying","zMove":{"boost":{"accuracy":1}},"contestType":"Cool","desc":"Lowers the target\'s evasiveness by 1 stage. If this move is successful and whether or not the target\'s evasiveness was affected, the effects of Reflect, Light Screen, Aurora Veil, Safeguard, Mist, Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the target\'s side, and the effects of Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the user\'s side. Ignores a target\'s substitute, although a substitute will still block the lowering of evasiveness. If there is a terrain active and this move is successful, the terrain will be cleared.","shortDesc":"-1 evasion; clears terrain and hazards on both sides.","id":"defog","fullname":"move: Defog","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"destiny bond":{"exists":true,"name":"Destiny Bond","num":194,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"authentic":1},"volatileStatus":"destinybond","condition":{"onBeforeMovePriority":-1},"secondary":null,"target":"self","type":"Ghost","zMove":{"effect":"redirect"},"contestType":"Clever","desc":"Until the user\'s next move, if an opposing Pokemon\'s attack knocks the user out, that Pokemon faints as well, unless the attack was Doom Desire or Future Sight. Fails if the user used this move successfully as its last move, disregarding moves used through the Dancer Ability.","shortDesc":"If an opponent knocks out the user, it also faints.","id":"destinybond","fullname":"move: Destiny Bond","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"detect":{"exists":true,"name":"Detect","num":197,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":4,"flags":{},"stallingMove":true,"volatileStatus":"protect","secondary":null,"target":"self","type":"Fighting","zMove":{"boost":{"evasion":1}},"contestType":"Cool","desc":"The user is protected from most attacks made by other Pokemon during this turn. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn.","shortDesc":"Prevents moves from affecting the user this turn.","id":"detect","fullname":"move: Detect","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"devastating drake":{"exists":true,"name":"Devastating Drake","num":652,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"dragoniumz","secondary":null,"target":"normal","type":"Dragon","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"devastatingdrake","fullname":"move: Devastating Drake","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"diamond storm":{"exists":true,"name":"Diamond Storm","num":591,"accuracy":95,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"self":{"chance":50,"boosts":{"def":2}},"secondary":{},"target":"allAdjacentFoes","type":"Rock","contestType":"Beautiful","desc":"Has a 50% chance to raise the user\'s Defense by 2 stages.","shortDesc":"50% chance to raise user\'s Defense by 2.","id":"diamondstorm","fullname":"move: Diamond Storm","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":[{}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"dig":{"exists":true,"name":"Dig","num":91,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"charge":1,"protect":1,"mirror":1,"nonsky":1},"condition":{"duration":2},"secondary":null,"target":"normal","type":"Ground","contestType":"Tough","desc":"This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Earthquake and Magnitude but takes double damage from them, and is also unaffected by weather. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Digs underground turn 1, strikes turn 2.","id":"dig","fullname":"move: Dig","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"disable":{"exists":true,"name":"Disable","num":50,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"volatileStatus":"disable","condition":{"duration":5,"noCopy":true,"onResidualOrder":17,"onBeforeMovePriority":7},"secondary":null,"target":"normal","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"For 4 turns, the target\'s last move used becomes disabled. Fails if one of the target\'s moves is already disabled, if the target has not made a move, if the target no longer knows the move, or if the move was a Max or G-Max Move.","shortDesc":"For 4 turns, disables the target\'s last move used.","id":"disable","fullname":"move: Disable","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"disarming voice":{"exists":true,"name":"Disarming Voice","num":574,"accuracy":true,"basePower":40,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":null,"target":"allAdjacentFoes","type":"Fairy","contestType":"Cute","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy. Hits foes.","id":"disarmingvoice","fullname":"move: Disarming Voice","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"discharge":{"exists":true,"name":"Discharge","num":435,"accuracy":100,"basePower":80,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"status":"par"},"target":"allAdjacent","type":"Electric","contestType":"Beautiful","desc":"Has a 30% chance to paralyze the target.","shortDesc":"30% chance to paralyze adjacent Pokemon.","id":"discharge","fullname":"move: Discharge","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"dive":{"exists":true,"name":"Dive","num":291,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"charge":1,"protect":1,"mirror":1,"nonsky":1},"condition":{"duration":2},"secondary":null,"target":"normal","type":"Water","contestType":"Beautiful","desc":"This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Surf and Whirlpool but takes double damage from them, and is also unaffected by weather. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Dives underwater turn 1, strikes turn 2.","id":"dive","fullname":"move: Dive","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"dizzy punch":{"exists":true,"name":"Dizzy Punch","num":146,"accuracy":100,"basePower":70,"category":"Physical","isNonstandard":"Past","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":{"chance":20,"volatileStatus":"confusion"},"target":"normal","type":"Normal","contestType":"Cute","desc":"Has a 20% chance to confuse the target.","shortDesc":"20% chance to confuse the target.","id":"dizzypunch","fullname":"move: Dizzy Punch","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":20,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"doom desire":{"exists":true,"name":"Doom Desire","num":353,"accuracy":100,"basePower":140,"category":"Special","pp":5,"priority":0,"flags":{},"isFutureMove":true,"secondary":null,"target":"normal","type":"Steel","contestType":"Beautiful","desc":"Deals damage two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user\'s natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Future Sight is already in effect for the target\'s position.","shortDesc":"Hits two turns after being used.","id":"doomdesire","fullname":"move: Doom Desire","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"double edge":{"exists":true,"name":"Double-Edge","num":38,"accuracy":100,"basePower":120,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"recoil":[33,100],"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 33% recoil.","id":"doubleedge","fullname":"move: Double-Edge","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"double hit":{"exists":true,"name":"Double Hit","num":458,"accuracy":90,"basePower":35,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":2,"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":140},"maxMove":{"basePower":120},"contestType":"Cool","desc":"Hits twice. If the first hit breaks the target\'s substitute, it will take damage for the second hit.","shortDesc":"Hits 2 times in one turn.","id":"doublehit","fullname":"move: Double Hit","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"double iron bash":{"exists":true,"name":"Double Iron Bash","num":742,"accuracy":100,"basePower":60,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"multihit":2,"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Steel","zMove":{"basePower":180},"maxMove":{"basePower":140},"contestType":"Clever","desc":"Hits twice. If the first hit breaks the target\'s substitute, it will take damage for the second hit. Has a 30% chance to make the target flinch.","shortDesc":"Hits twice. 30% chance to make the target flinch.","id":"doubleironbash","fullname":"move: Double Iron Bash","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"double kick":{"exists":true,"name":"Double Kick","num":24,"accuracy":100,"basePower":30,"category":"Physical","pp":30,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":2,"secondary":null,"target":"normal","type":"Fighting","maxMove":{"basePower":80},"contestType":"Cool","desc":"Hits twice. If the first hit breaks the target\'s substitute, it will take damage for the second hit.","shortDesc":"Hits 2 times in one turn.","id":"doublekick","fullname":"move: Double Kick","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"double slap":{"exists":true,"name":"Double Slap","num":3,"accuracy":85,"basePower":15,"category":"Physical","isNonstandard":"Past","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Normal","contestType":"Cute","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"doubleslap","fullname":"move: Double Slap","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"double team":{"exists":true,"name":"Double Team","num":104,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"snatch":1},"boosts":{"evasion":1},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cool","desc":"Raises the user\'s evasiveness by 1 stage.","shortDesc":"Raises the user\'s evasiveness by 1.","id":"doubleteam","fullname":"move: Double Team","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"draco meteor":{"exists":true,"name":"Draco Meteor","num":434,"accuracy":90,"basePower":130,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"self":{"boosts":{"spa":-2}},"secondary":null,"target":"normal","type":"Dragon","contestType":"Beautiful","desc":"Lowers the user\'s Special Attack by 2 stages.","shortDesc":"Lowers the user\'s Sp. Atk by 2.","id":"dracometeor","fullname":"move: Draco Meteor","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"dragon ascent":{"exists":true,"name":"Dragon Ascent","num":620,"accuracy":100,"basePower":120,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"distance":1},"self":{"boosts":{"def":-1,"spd":-1}},"target":"any","type":"Flying","contestType":"Beautiful","desc":"Lowers the user\'s Defense and Special Defense by 1 stage.","shortDesc":"Lowers the user\'s Defense and Sp. Def by 1.","id":"dragonascent","fullname":"move: Dragon Ascent","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"dragon breath":{"exists":true,"name":"Dragon Breath","num":225,"accuracy":100,"basePower":60,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"status":"par"},"target":"normal","type":"Dragon","contestType":"Cool","desc":"Has a 30% chance to paralyze the target.","shortDesc":"30% chance to paralyze the target.","id":"dragonbreath","fullname":"move: Dragon Breath","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"dragon claw":{"exists":true,"name":"Dragon Claw","num":337,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dragon","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"dragonclaw","fullname":"move: Dragon Claw","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"dragon dance":{"exists":true,"name":"Dragon Dance","num":349,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1,"dance":1},"boosts":{"atk":1,"spe":1},"secondary":null,"target":"self","type":"Dragon","zMove":{"effect":"clearnegativeboost"},"contestType":"Cool","desc":"Raises the user\'s Attack and Speed by 1 stage.","shortDesc":"Raises the user\'s Attack and Speed by 1.","id":"dragondance","fullname":"move: Dragon Dance","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"dragon darts":{"exists":true,"name":"Dragon Darts","num":751,"accuracy":100,"basePower":50,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"multihit":2,"smartTarget":true,"secondary":null,"target":"normal","type":"Dragon","maxMove":{"basePower":130},"desc":"Hits twice. If the first hit breaks the target\'s substitute, it will take damage for the second hit. In Double Battles, this move attempts to hit the targeted Pokemon and its ally once each. If hitting one of these Pokemon would be prevented by immunity, protection, semi-invulnerability, an Ability, or accuracy, it attempts to hit the other Pokemon twice instead. If this move is redirected, it hits that target twice.","shortDesc":"Hits twice. Doubles: Tries to hit each foe once.","id":"dragondarts","fullname":"move: Dragon Darts","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"dragon energy":{"exists":true,"name":"Dragon Energy","num":820,"accuracy":100,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Dragon","desc":"Power is equal to (user\'s current HP * 150 / user\'s maximum HP), rounded down, but not less than 1.","shortDesc":"Less power as user\'s HP decreases. Hits foe(s).","id":"dragonenergy","fullname":"move: Dragon Energy","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"dragon hammer":{"exists":true,"name":"Dragon Hammer","num":692,"accuracy":100,"basePower":90,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dragon","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"dragonhammer","fullname":"move: Dragon Hammer","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"dragon pulse":{"exists":true,"name":"Dragon Pulse","num":406,"accuracy":100,"basePower":85,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"pulse":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Dragon","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect.","id":"dragonpulse","fullname":"move: Dragon Pulse","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"dragon rage":{"exists":true,"name":"Dragon Rage","num":82,"accuracy":100,"basePower":0,"damage":40,"category":"Special","isNonstandard":"Past","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dragon","contestType":"Cool","desc":"Deals 40 HP of damage to the target.","shortDesc":"Deals 40 HP of damage to the target.","id":"dragonrage","fullname":"move: Dragon Rage","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"dragon rush":{"exists":true,"name":"Dragon Rush","num":407,"accuracy":75,"basePower":100,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":20,"volatileStatus":"flinch"},"target":"normal","type":"Dragon","contestType":"Tough","desc":"Has a 20% chance to make the target flinch. Damage doubles and no accuracy check is done if the target has used Minimize while active.","shortDesc":"20% chance to make the target flinch.","id":"dragonrush","fullname":"move: Dragon Rush","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":[{"chance":20,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"dragon tail":{"exists":true,"name":"Dragon Tail","num":525,"accuracy":90,"basePower":60,"category":"Physical","pp":10,"priority":-6,"flags":{"contact":1,"protect":1,"mirror":1},"forceSwitch":true,"target":"normal","type":"Dragon","contestType":"Tough","desc":"If both the user and the target have not fainted, the target is forced to switch out and be replaced with a random unfainted ally. This effect fails if the target used Ingrain previously, has the Suction Cups Ability, or this move hit a substitute.","shortDesc":"Forces the target to switch to a random ally.","id":"dragontail","fullname":"move: Dragon Tail","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"draining kiss":{"exists":true,"name":"Draining Kiss","num":577,"accuracy":100,"basePower":50,"category":"Special","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"heal":1},"drain":[3,4],"secondary":null,"target":"normal","type":"Fairy","contestType":"Cute","desc":"The user recovers 3/4 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 75% of the damage dealt.","id":"drainingkiss","fullname":"move: Draining Kiss","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"drain punch":{"exists":true,"name":"Drain Punch","num":409,"accuracy":100,"basePower":75,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1,"heal":1},"drain":[1,2],"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 50% of the damage dealt.","id":"drainpunch","fullname":"move: Drain Punch","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":140}},"dream eater":{"exists":true,"name":"Dream Eater","num":138,"accuracy":100,"basePower":100,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"heal":1},"drain":[1,2],"secondary":null,"target":"normal","type":"Psychic","contestType":"Clever","desc":"The target is unaffected by this move unless it is asleep. The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User gains 1/2 HP inflicted. Sleeping target only.","id":"dreameater","fullname":"move: Dream Eater","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"drill peck":{"exists":true,"name":"Drill Peck","num":65,"accuracy":100,"basePower":80,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Flying","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"drillpeck","fullname":"move: Drill Peck","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"drill run":{"exists":true,"name":"Drill Run","num":529,"accuracy":95,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Ground","contestType":"Tough","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"drillrun","fullname":"move: Drill Run","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"drum beating":{"exists":true,"name":"Drum Beating","num":778,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spe":-1}},"target":"normal","type":"Grass","desc":"Has a 100% chance to lower the target\'s Speed by 1 stage.","shortDesc":"100% chance to lower the target\'s Speed by 1.","id":"drumbeating","fullname":"move: Drum Beating","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":[{"chance":100,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"dual chop":{"exists":true,"name":"Dual Chop","num":530,"accuracy":90,"basePower":40,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":2,"secondary":null,"target":"normal","type":"Dragon","maxMove":{"basePower":130},"contestType":"Tough","desc":"Hits twice. If the first hit breaks the target\'s substitute, it will take damage for the second hit.","shortDesc":"Hits 2 times in one turn.","id":"dualchop","fullname":"move: Dual Chop","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"dual wingbeat":{"exists":true,"name":"Dual Wingbeat","num":814,"accuracy":90,"basePower":40,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":2,"secondary":null,"target":"normal","type":"Flying","maxMove":{"basePower":130},"desc":"Hits twice. If the first hit breaks the target\'s substitute, it will take damage for the second hit.","shortDesc":"Hits 2 times in one turn.","id":"dualwingbeat","fullname":"move: Dual Wingbeat","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"dynamax cannon":{"exists":true,"name":"Dynamax Cannon","num":744,"accuracy":100,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1},"secondary":null,"target":"normal","type":"Dragon","desc":"Damage doubles if the target is Dynamaxed.","shortDesc":"Damage doubles if the target is Dynamaxed.","id":"dynamaxcannon","fullname":"move: Dynamax Cannon","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"dynamic punch":{"exists":true,"name":"Dynamic Punch","num":223,"accuracy":50,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":{"chance":100,"volatileStatus":"confusion"},"target":"normal","type":"Fighting","contestType":"Cool","desc":"Has a 100% chance to confuse the target.","shortDesc":"100% chance to confuse the target.","id":"dynamicpunch","fullname":"move: Dynamic Punch","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":[{"chance":100,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":180}},"earth power":{"exists":true,"name":"Earth Power","num":414,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"secondary":{"chance":10,"boosts":{"spd":-1}},"target":"normal","type":"Ground","contestType":"Beautiful","desc":"Has a 10% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"10% chance to lower the target\'s Sp. Def by 1.","id":"earthpower","fullname":"move: Earth Power","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":[{"chance":10,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"earthquake":{"exists":true,"name":"Earthquake","num":89,"accuracy":100,"basePower":100,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"allAdjacent","type":"Ground","contestType":"Tough","desc":"Damage doubles if the target is using Dig.","shortDesc":"Hits adjacent Pokemon. Double damage on Dig.","id":"earthquake","fullname":"move: Earthquake","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"echoed voice":{"exists":true,"name":"Echoed Voice","num":497,"accuracy":100,"basePower":40,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"condition":{"duration":2},"secondary":null,"target":"normal","type":"Normal","contestType":"Beautiful","desc":"For every consecutive turn that this move is used by at least one Pokemon, this move\'s power is multiplied by the number of turns to pass, but not more than 5.","shortDesc":"Power increases when used on consecutive turns.","id":"echoedvoice","fullname":"move: Echoed Voice","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"eerie impulse":{"exists":true,"name":"Eerie Impulse","num":598,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"spa":-2},"secondary":null,"target":"normal","type":"Electric","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"Lowers the target\'s Special Attack by 2 stages.","shortDesc":"Lowers the target\'s Sp. Atk by 2.","id":"eerieimpulse","fullname":"move: Eerie Impulse","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"eerie spell":{"exists":true,"name":"Eerie Spell","num":826,"accuracy":100,"basePower":80,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":{"chance":100},"target":"normal","type":"Psychic","desc":"If this move is successful and the user has not fainted, the target loses 3 PP from its last move.","shortDesc":"Removes 3 PP from the target\'s last move.","id":"eeriespell","fullname":"move: Eerie Spell","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":100}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"egg bomb":{"exists":true,"name":"Egg Bomb","num":121,"accuracy":75,"basePower":100,"category":"Physical","isNonstandard":"Past","pp":10,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cute","desc":"No additional effect.","shortDesc":"No additional effect.","id":"eggbomb","fullname":"move: Egg Bomb","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"electric terrain":{"exists":true,"name":"Electric Terrain","num":604,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"nonsky":1},"terrain":"electricterrain","condition":{"duration":5,"onBasePowerPriority":6,"onFieldResidualOrder":27,"onFieldResidualSubOrder":7},"secondary":null,"target":"all","type":"Electric","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"For 5 turns, the terrain becomes Electric Terrain. During the effect, the power of Electric-type attacks made by grounded Pokemon is multiplied by 1.3 and grounded Pokemon cannot fall asleep; Pokemon already asleep do not wake up. Grounded Pokemon cannot become affected by Yawn or fall asleep from its effect. Camouflage transforms the user into an Electric type, Nature Power becomes Thunderbolt, and Secret Power has a 30% chance to cause paralysis. Fails if the current terrain is Electric Terrain.","shortDesc":"5 turns. Grounded: +Electric power, can\'t sleep.","id":"electricterrain","fullname":"move: Electric Terrain","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"electrify":{"exists":true,"name":"Electrify","num":582,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"mirror":1,"mystery":1},"volatileStatus":"electrify","condition":{"duration":1,"onModifyTypePriority":-2},"secondary":null,"target":"normal","type":"Electric","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"Causes the target\'s move to become Electric type this turn. Among effects that can change a move\'s type, this effect happens last. Fails if the target already moved this turn.","shortDesc":"Changes the target\'s move to Electric this turn.","id":"electrify","fullname":"move: Electrify","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"electro ball":{"exists":true,"name":"Electro Ball","num":486,"accuracy":100,"basePower":0,"category":"Special","pp":10,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Electric","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Cool","desc":"The power of this move depends on (user\'s current Speed / target\'s current Speed), rounded down. Power is equal to 150 if the result is 4 or more, 120 if 3, 80 if 2, 60 if 1, 40 if less than 1. If the target\'s current Speed is 0, this move\'s power is 40.","shortDesc":"More power the faster the user is than the target.","id":"electroball","fullname":"move: Electro Ball","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"electroweb":{"exists":true,"name":"Electroweb","num":527,"accuracy":95,"basePower":55,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spe":-1}},"target":"allAdjacentFoes","type":"Electric","contestType":"Beautiful","desc":"Has a 100% chance to lower the target\'s Speed by 1 stage.","shortDesc":"100% chance to lower the foe(s) Speed by 1.","id":"electroweb","fullname":"move: Electroweb","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":100,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":100}},"embargo":{"exists":true,"name":"Embargo","num":373,"accuracy":100,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"volatileStatus":"embargo","condition":{"duration":5,"onResidualOrder":21},"secondary":null,"target":"normal","type":"Dark","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"For 5 turns, the target\'s held item has no effect. An item\'s effect of causing forme changes is unaffected, but any other effects from such items are negated. During the effect, Fling and Natural Gift are prevented from being used by the target. Items thrown at the target with Fling will still activate for it. If the target uses Baton Pass, the replacement will remain unable to use items.","shortDesc":"For 5 turns, the target\'s item has no effect.","id":"embargo","fullname":"move: Embargo","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"ember":{"exists":true,"name":"Ember","num":52,"accuracy":100,"basePower":40,"category":"Special","pp":25,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"brn"},"target":"normal","type":"Fire","contestType":"Cute","desc":"Has a 10% chance to burn the target.","shortDesc":"10% chance to burn the target.","id":"ember","fullname":"move: Ember","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"encore":{"exists":true,"name":"Encore","num":227,"accuracy":100,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"volatileStatus":"encore","condition":{"duration":3,"noCopy":true,"onResidualOrder":16},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Cute","desc":"For its next 3 turns, the target is forced to repeat its last move used. If the affected move runs out of PP, the effect ends. Fails if the target is already under this effect, if it has not made a move, if the move has 0 PP, if the move is Assist, Copycat, Encore, Me First, Metronome, Mimic, Mirror Move, Nature Power, Sketch, Sleep Talk, Struggle, or Transform, or if the target is Dynamaxed.","shortDesc":"Target repeats its last move for its next 3 turns.","id":"encore","fullname":"move: Encore","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"endeavor":{"exists":true,"name":"Endeavor","num":283,"accuracy":100,"basePower":0,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Tough","desc":"Deals damage to the target equal to (target\'s current HP - user\'s current HP). The target is unaffected if its current HP is less than or equal to the user\'s current HP.","shortDesc":"Lowers the target\'s HP to the user\'s HP.","id":"endeavor","fullname":"move: Endeavor","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"endure":{"exists":true,"name":"Endure","num":203,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":4,"flags":{},"stallingMove":true,"volatileStatus":"endure","condition":{"duration":1,"onDamagePriority":-10},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Tough","desc":"The user will survive attacks made by other Pokemon during this turn with at least 1 HP. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn.","shortDesc":"User survives attacks this turn with at least 1 HP.","id":"endure","fullname":"move: Endure","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"energy ball":{"exists":true,"name":"Energy Ball","num":412,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"spd":-1}},"target":"normal","type":"Grass","contestType":"Beautiful","desc":"Has a 10% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"10% chance to lower the target\'s Sp. Def by 1.","id":"energyball","fullname":"move: Energy Ball","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":[{"chance":10,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"entrainment":{"exists":true,"name":"Entrainment","num":494,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spd":1}},"contestType":"Cute","desc":"Causes the target\'s Ability to become the same as the user\'s. Fails if the target\'s Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Truant, or Zen Mode, or the same Ability as the user, or if the user\'s Ability is As One, Battle Bond, Comatose, Disguise, Flower Gift, Forecast, Gulp Missile, Hunger Switch, Ice Face, Illusion, Imposter, Multitype, Neutralizing Gas, Power Construct, Power of Alchemy, Receiver, RKS System, Schooling, Shields Down, Stance Change, Trace, or Zen Mode.","shortDesc":"The target\'s Ability changes to match the user\'s.","id":"entrainment","fullname":"move: Entrainment","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"eruption":{"exists":true,"name":"Eruption","num":284,"accuracy":100,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Fire","contestType":"Beautiful","desc":"Power is equal to (user\'s current HP * 150 / user\'s maximum HP), rounded down, but not less than 1.","shortDesc":"Less power as user\'s HP decreases. Hits foe(s).","id":"eruption","fullname":"move: Eruption","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"eternabeam":{"exists":true,"name":"Eternabeam","num":795,"accuracy":90,"basePower":160,"category":"Special","pp":5,"priority":0,"flags":{"recharge":1,"protect":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Dragon","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"eternabeam","fullname":"move: Eternabeam","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"expanding force":{"exists":true,"name":"Expanding Force","num":797,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Psychic","desc":"If the current terrain is Psychic Terrain and the user is grounded, this move hits all opposing Pokemon and has its power multiplied by 1.5.","shortDesc":"User on Psychic Terrain: 1.5x power, hits foes.","id":"expandingforce","fullname":"move: Expanding Force","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"explosion":{"exists":true,"name":"Explosion","num":153,"accuracy":100,"basePower":250,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"selfdestruct":"always","secondary":null,"target":"allAdjacent","type":"Normal","contestType":"Beautiful","desc":"The user faints after using this move, even if this move fails for having no target. This move is prevented from executing if any active Pokemon has the Damp Ability.","shortDesc":"Hits adjacent Pokemon. The user faints.","id":"explosion","fullname":"move: Explosion","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"extrasensory":{"exists":true,"name":"Extrasensory","num":326,"accuracy":100,"basePower":80,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"volatileStatus":"flinch"},"target":"normal","type":"Psychic","contestType":"Cool","desc":"Has a 10% chance to make the target flinch.","shortDesc":"10% chance to make the target flinch.","id":"extrasensory","fullname":"move: Extrasensory","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":10,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"extreme evoboost":{"exists":true,"name":"Extreme Evoboost","num":702,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"eeviumz","boosts":{"atk":2,"def":2,"spa":2,"spd":2,"spe":2},"secondary":null,"target":"self","type":"Normal","contestType":"Beautiful","desc":"Raises the user\'s Attack, Defense, Special Attack, Special Defense, and Speed by 2 stages.","shortDesc":"Raises user\'s Atk, Def, SpA, SpD, and Spe by 2.","id":"extremeevoboost","fullname":"move: Extreme Evoboost","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"extreme speed":{"exists":true,"name":"Extreme Speed","num":245,"accuracy":100,"basePower":80,"category":"Physical","pp":5,"priority":2,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"No additional effect.","shortDesc":"Nearly always goes first.","id":"extremespeed","fullname":"move: Extreme Speed","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"facade":{"exists":true,"name":"Facade","num":263,"accuracy":100,"basePower":70,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cute","desc":"Power doubles if the user is burned, paralyzed, or poisoned. The physical damage halving effect from the user\'s burn is ignored.","shortDesc":"Power doubles if user is burn/poison/paralyzed.","id":"facade","fullname":"move: Facade","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"fairy lock":{"exists":true,"name":"Fairy Lock","num":587,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"mirror":1,"authentic":1},"pseudoWeather":"fairylock","condition":{"duration":2},"secondary":null,"target":"all","type":"Fairy","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Prevents all active Pokemon from switching next turn. A Pokemon can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. Fails if the effect is already active.","shortDesc":"Prevents all Pokemon from switching next turn.","id":"fairylock","fullname":"move: Fairy Lock","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"fairy wind":{"exists":true,"name":"Fairy Wind","num":584,"accuracy":100,"basePower":40,"category":"Special","pp":30,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fairy","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect.","id":"fairywind","fullname":"move: Fairy Wind","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"fake out":{"exists":true,"name":"Fake Out","num":252,"accuracy":100,"basePower":40,"category":"Physical","pp":10,"priority":3,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"volatileStatus":"flinch"},"target":"normal","type":"Normal","contestType":"Cute","desc":"Has a 100% chance to make the target flinch. Fails unless it is the user\'s first turn on the field.","shortDesc":"Hits first. First turn out only. 100% flinch chance.","id":"fakeout","fullname":"move: Fake Out","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":100,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"fake tears":{"exists":true,"name":"Fake Tears","num":313,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"boosts":{"spd":-2},"secondary":null,"target":"normal","type":"Dark","zMove":{"boost":{"spa":1}},"contestType":"Cute","desc":"Lowers the target\'s Special Defense by 2 stages.","shortDesc":"Lowers the target\'s Sp. Def by 2.","id":"faketears","fullname":"move: Fake Tears","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"false surrender":{"exists":true,"name":"False Surrender","num":793,"accuracy":true,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"falsesurrender","fullname":"move: False Surrender","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"false swipe":{"exists":true,"name":"False Swipe","num":206,"accuracy":100,"basePower":40,"category":"Physical","pp":40,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"onDamagePriority":-20,"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"Leaves the target with at least 1 HP.","shortDesc":"Always leaves the target with at least 1 HP.","id":"falseswipe","fullname":"move: False Swipe","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"feather dance":{"exists":true,"name":"Feather Dance","num":297,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1,"dance":1},"boosts":{"atk":-2},"secondary":null,"target":"normal","type":"Flying","zMove":{"boost":{"def":1}},"contestType":"Beautiful","desc":"Lowers the target\'s Attack by 2 stages.","shortDesc":"Lowers the target\'s Attack by 2.","id":"featherdance","fullname":"move: Feather Dance","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"feint":{"exists":true,"name":"Feint","num":364,"accuracy":100,"basePower":30,"category":"Physical","pp":10,"priority":2,"flags":{"mirror":1},"breaksProtect":true,"secondary":null,"target":"normal","type":"Normal","contestType":"Clever","desc":"If this move is successful, it breaks through the target\'s Baneful Bunker, Detect, King\'s Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target\'s side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target\'s side normally.","shortDesc":"Nullifies Detect, Protect, and Quick/Wide Guard.","id":"feint","fullname":"move: Feint","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"feint attack":{"exists":true,"name":"Feint Attack","num":185,"accuracy":true,"basePower":60,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"feintattack","fullname":"move: Feint Attack","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"fell stinger":{"exists":true,"name":"Fell Stinger","num":565,"accuracy":100,"basePower":50,"category":"Physical","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Bug","contestType":"Cool","desc":"Raises the user\'s Attack by 3 stages if this move knocks out the target.","shortDesc":"Raises user\'s Attack by 3 if this KOes the target.","id":"fellstinger","fullname":"move: Fell Stinger","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"fiery dance":{"exists":true,"name":"Fiery Dance","num":552,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"dance":1},"secondary":{"chance":50,"self":{"boosts":{"spa":1}}},"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Has a 50% chance to raise the user\'s Special Attack by 1 stage.","shortDesc":"50% chance to raise the user\'s Sp. Atk by 1.","id":"fierydance","fullname":"move: Fiery Dance","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":50,"self":{"boosts":{"spa":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"fiery wrath":{"exists":true,"name":"Fiery Wrath","num":822,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":20,"volatileStatus":"flinch"},"target":"allAdjacentFoes","type":"Dark","desc":"Has a 20% chance to make the target flinch.","shortDesc":"20% chance to make the foe(s) flinch.","id":"fierywrath","fullname":"move: Fiery Wrath","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":[{"chance":20,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"final gambit":{"exists":true,"name":"Final Gambit","num":515,"accuracy":100,"basePower":0,"category":"Special","pp":5,"priority":0,"flags":{"protect":1},"selfdestruct":"ifHit","secondary":null,"target":"normal","type":"Fighting","zMove":{"basePower":180},"contestType":"Tough","desc":"Deals damage to the target equal to the user\'s current HP. If this move is successful, the user faints.","shortDesc":"Does damage equal to the user\'s HP. User faints.","id":"finalgambit","fullname":"move: Final Gambit","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100}},"fire blast":{"exists":true,"name":"Fire Blast","num":126,"accuracy":85,"basePower":110,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"brn"},"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Has a 10% chance to burn the target.","shortDesc":"10% chance to burn the target.","id":"fireblast","fullname":"move: Fire Blast","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"fire fang":{"exists":true,"name":"Fire Fang","num":424,"accuracy":95,"basePower":65,"category":"Physical","pp":15,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondaries":[{"chance":10,"status":"brn"},{"chance":10,"volatileStatus":"flinch"}],"target":"normal","type":"Fire","contestType":"Cool","desc":"Has a 10% chance to burn the target and a 10% chance to make it flinch.","shortDesc":"10% chance to burn. 10% chance to flinch.","id":"firefang","fullname":"move: Fire Fang","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondary":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"fire lash":{"exists":true,"name":"Fire Lash","num":680,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"def":-1}},"target":"normal","type":"Fire","contestType":"Cute","desc":"Has a 100% chance to lower the target\'s Defense by 1 stage.","shortDesc":"100% chance to lower the target\'s Defense by 1.","id":"firelash","fullname":"move: Fire Lash","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":100,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"fire pledge":{"exists":true,"name":"Fire Pledge","num":519,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"condition":{"duration":4,"onResidualOrder":5,"onResidualSubOrder":1,"onSideResidualOrder":26,"onSideResidualSubOrder":8},"secondary":null,"target":"normal","type":"Fire","contestType":"Beautiful","desc":"If one of the user\'s allies chose to use Grass Pledge or Water Pledge this turn and has not moved yet, it takes its turn immediately after the user and the user\'s move does nothing. If combined with Grass Pledge, the ally uses Fire Pledge with 150 power and a sea of fire appears on the target\'s side for 4 turns, which causes damage to non-Fire types equal to 1/8 of their maximum HP, rounded down, at the end of each turn during effect, including the last turn. If combined with Water Pledge, the ally uses Water Pledge with 150 power and a rainbow appears on the user\'s side for 4 turns, which doubles secondary effect chances and stacks with the Serene Grace Ability, except effects that cause flinching can only have their chance doubled once. When used as a combined move, this move gains STAB no matter what the user\'s type is. This move does not consume the user\'s Fire Gem.","shortDesc":"Use with Grass or Water Pledge for added effect.","id":"firepledge","fullname":"move: Fire Pledge","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"fire punch":{"exists":true,"name":"Fire Punch","num":7,"accuracy":100,"basePower":75,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":{"chance":10,"status":"brn"},"target":"normal","type":"Fire","contestType":"Tough","desc":"Has a 10% chance to burn the target.","shortDesc":"10% chance to burn the target.","id":"firepunch","fullname":"move: Fire Punch","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"fire spin":{"exists":true,"name":"Fire Spin","num":83,"accuracy":85,"basePower":35,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"firespin","fullname":"move: Fire Spin","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"first impression":{"exists":true,"name":"First Impression","num":660,"accuracy":100,"basePower":90,"category":"Physical","pp":10,"priority":2,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Bug","contestType":"Cute","desc":"Fails unless it is the user\'s first turn on the field.","shortDesc":"Hits first. First turn out only.","id":"firstimpression","fullname":"move: First Impression","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"fishious rend":{"exists":true,"name":"Fishious Rend","num":755,"accuracy":100,"basePower":85,"category":"Physical","pp":10,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Water","desc":"Power doubles if the user moves before the target.","shortDesc":"Power doubles if user moves before the target.","id":"fishiousrend","fullname":"move: Fishious Rend","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"fissure":{"exists":true,"name":"Fissure","num":90,"accuracy":30,"basePower":0,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"ohko":true,"secondary":null,"target":"normal","type":"Ground","zMove":{"basePower":180},"maxMove":{"basePower":130},"contestType":"Tough","desc":"Deals damage to the target equal to the target\'s maximum HP. Ignores accuracy and evasiveness modifiers. This attack\'s accuracy is equal to (user\'s level - target\'s level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.","shortDesc":"OHKOs the target. Fails if user is a lower level.","id":"fissure","fullname":"move: Fissure","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"flail":{"exists":true,"name":"Flail","num":175,"accuracy":100,"basePower":0,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Cute","desc":"The power of this move is 20 if X is 33 to 48, 40 if X is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if X is 2 to 4, and 200 if X is 0 or 1, where X is equal to (user\'s current HP * 48 / user\'s maximum HP), rounded down.","shortDesc":"More power the less HP the user has left.","id":"flail","fullname":"move: Flail","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"flame burst":{"exists":true,"name":"Flame Burst","num":481,"accuracy":100,"basePower":70,"category":"Special","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fire","contestType":"Beautiful","desc":"If this move is successful, the target\'s ally loses 1/16 of its maximum HP, rounded down, unless it has the Magic Guard Ability.","shortDesc":"Damages Pokemon next to the target as well.","id":"flameburst","fullname":"move: Flame Burst","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"flame charge":{"exists":true,"name":"Flame Charge","num":488,"accuracy":100,"basePower":50,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"self":{"boosts":{"spe":1}}},"target":"normal","type":"Fire","contestType":"Cool","desc":"Has a 100% chance to raise the user\'s Speed by 1 stage.","shortDesc":"100% chance to raise the user\'s Speed by 1.","id":"flamecharge","fullname":"move: Flame Charge","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":100,"self":{"boosts":{"spe":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"flame wheel":{"exists":true,"name":"Flame Wheel","num":172,"accuracy":100,"basePower":60,"category":"Physical","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"defrost":1},"secondary":{"chance":10,"status":"brn"},"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Has a 10% chance to burn the target.","shortDesc":"10% chance to burn the target. Thaws user.","id":"flamewheel","fullname":"move: Flame Wheel","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"flamethrower":{"exists":true,"name":"Flamethrower","num":53,"accuracy":100,"basePower":90,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"brn"},"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Has a 10% chance to burn the target.","shortDesc":"10% chance to burn the target.","id":"flamethrower","fullname":"move: Flamethrower","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"flare blitz":{"exists":true,"name":"Flare Blitz","num":394,"accuracy":100,"basePower":120,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"defrost":1},"recoil":[33,100],"secondary":{"chance":10,"status":"brn"},"target":"normal","type":"Fire","contestType":"Cool","desc":"Has a 10% chance to burn the target. If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 33% recoil. 10% chance to burn. Thaws user.","id":"flareblitz","fullname":"move: Flare Blitz","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"flash":{"exists":true,"name":"Flash","num":148,"accuracy":100,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"accuracy":-1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"evasion":1}},"contestType":"Beautiful","desc":"Lowers the target\'s accuracy by 1 stage.","shortDesc":"Lowers the target\'s accuracy by 1.","id":"flash","fullname":"move: Flash","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"flash cannon":{"exists":true,"name":"Flash Cannon","num":430,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"spd":-1}},"target":"normal","type":"Steel","contestType":"Beautiful","desc":"Has a 10% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"10% chance to lower the target\'s Sp. Def by 1.","id":"flashcannon","fullname":"move: Flash Cannon","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":10,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"flatter":{"exists":true,"name":"Flatter","num":260,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"volatileStatus":"confusion","boosts":{"spa":1},"secondary":null,"target":"normal","type":"Dark","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"Raises the target\'s Special Attack by 1 stage and confuses it.","shortDesc":"Raises the target\'s Sp. Atk by 1 and confuses it.","id":"flatter","fullname":"move: Flatter","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"fleur cannon":{"exists":true,"name":"Fleur Cannon","num":705,"accuracy":90,"basePower":130,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"self":{"boosts":{"spa":-2}},"secondary":null,"target":"normal","type":"Fairy","contestType":"Beautiful","desc":"Lowers the user\'s Special Attack by 2 stages.","shortDesc":"Lowers the user\'s Sp. Atk by 2.","id":"fleurcannon","fullname":"move: Fleur Cannon","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"fling":{"exists":true,"name":"Fling","num":374,"accuracy":100,"basePower":0,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"mystery":1},"condition":{},"secondary":null,"target":"normal","type":"Dark","contestType":"Cute","desc":"The power of this move is based on the user\'s held item. The held item is lost and it activates for the target if applicable. If there is no target or the target avoids this move by protecting itself, the user\'s held item is still lost. The user can regain a thrown item with Recycle or the Harvest Ability. Fails if the user has no held item, if the held item cannot be thrown, if the user is under the effect of Embargo or Magic Room, or if the user has the Klutz Ability.","shortDesc":"Flings the user\'s item at the target. Power varies.","id":"fling","fullname":"move: Fling","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"flip turn":{"exists":true,"name":"Flip Turn","num":812,"accuracy":100,"basePower":60,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"selfSwitch":true,"secondary":null,"target":"normal","type":"Water","desc":"If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button or through the effect of the Emergency Exit or Wimp Out Abilities.","shortDesc":"User switches out after damaging the target.","id":"flipturn","fullname":"move: Flip Turn","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"floaty fall":{"exists":true,"name":"Floaty Fall","num":731,"accuracy":95,"basePower":90,"category":"Physical","isNonstandard":"LGPE","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"gravity":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Flying","contestType":"Cool","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"floatyfall","fullname":"move: Floaty Fall","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"floral healing":{"exists":true,"name":"Floral Healing","num":666,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"heal":1,"mystery":1},"secondary":null,"target":"normal","type":"Fairy","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"The target restores 1/2 of its maximum HP, rounded half up. If the terrain is Grassy Terrain, the target instead restores 2/3 of its maximum HP, rounded half down.","shortDesc":"Heals the target by 50% of its max HP.","id":"floralhealing","fullname":"move: Floral Healing","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"flower shield":{"exists":true,"name":"Flower Shield","num":579,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"distance":1},"secondary":null,"target":"all","type":"Fairy","zMove":{"boost":{"def":1}},"contestType":"Beautiful","desc":"Raises the Defense of all active Grass-type Pokemon by 1 stage. Fails if there are no active Grass-type Pokemon.","shortDesc":"Raises Defense by 1 of all active Grass types.","id":"flowershield","fullname":"move: Flower Shield","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"fly":{"exists":true,"name":"Fly","num":19,"accuracy":95,"basePower":90,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"charge":1,"protect":1,"mirror":1,"gravity":1,"distance":1},"condition":{"duration":2},"secondary":null,"target":"any","type":"Flying","contestType":"Clever","desc":"This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thousand Arrows, Thunder, and Twister, and Gust and Twister have doubled power when used against it. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Flies up on first turn, then strikes the next turn.","id":"fly","fullname":"move: Fly","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"flying press":{"exists":true,"name":"Flying Press","num":560,"accuracy":95,"basePower":100,"category":"Physical","pp":10,"flags":{"contact":1,"protect":1,"mirror":1,"gravity":1,"distance":1,"nonsky":1},"priority":0,"secondary":null,"target":"any","type":"Fighting","zMove":{"basePower":170},"contestType":"Tough","desc":"This move combines Flying in its type effectiveness against the target. Damage doubles and no accuracy check is done if the target has used Minimize while active.","shortDesc":"Combines Flying in its type effectiveness.","id":"flyingpress","fullname":"move: Flying Press","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90}},"focus blast":{"exists":true,"name":"Focus Blast","num":411,"accuracy":70,"basePower":120,"category":"Special","pp":5,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"spd":-1}},"target":"normal","type":"Fighting","contestType":"Cool","desc":"Has a 10% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"10% chance to lower the target\'s Sp. Def by 1.","id":"focusblast","fullname":"move: Focus Blast","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":[{"chance":10,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":95},"zMove":{"basePower":190}},"focus energy":{"exists":true,"name":"Focus Energy","num":116,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"snatch":1},"volatileStatus":"focusenergy","condition":{},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"accuracy":1}},"contestType":"Cool","desc":"Raises the user\'s chance for a critical hit by 2 stages. Fails if the user already has the effect. Baton Pass can be used to transfer this effect to an ally.","shortDesc":"Raises the user\'s critical hit ratio by 2.","id":"focusenergy","fullname":"move: Focus Energy","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"focus punch":{"exists":true,"name":"Focus Punch","num":264,"accuracy":100,"basePower":150,"category":"Physical","pp":20,"priority":-3,"flags":{"contact":1,"protect":1,"punch":1},"condition":{"duration":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"The user loses its focus and does nothing if it is hit by a damaging attack this turn before it can execute the move.","shortDesc":"Fails if the user takes damage before it hits.","id":"focuspunch","fullname":"move: Focus Punch","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":200}},"follow me":{"exists":true,"name":"Follow Me","num":266,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":2,"flags":{},"volatileStatus":"followme","condition":{"duration":1,"onFoeRedirectTargetPriority":1},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"Until the end of the turn, all single-target attacks from the opposing side are redirected to the user. Such attacks are redirected to the user before they can be reflected by Magic Coat or the Magic Bounce Ability, or drawn in by the Lightning Rod or Storm Drain Abilities. Fails if it is not a Double Battle or Battle Royal. This effect is ignored while the user is under the effect of Sky Drop.","shortDesc":"The foes\' moves target the user on the turn used.","id":"followme","fullname":"move: Follow Me","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"force palm":{"exists":true,"name":"Force Palm","num":395,"accuracy":100,"basePower":60,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"status":"par"},"target":"normal","type":"Fighting","contestType":"Cool","desc":"Has a 30% chance to paralyze the target.","shortDesc":"30% chance to paralyze the target.","id":"forcepalm","fullname":"move: Force Palm","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":80},"zMove":{"basePower":120}},"foresight":{"exists":true,"name":"Foresight","num":193,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"volatileStatus":"foresight","condition":{"noCopy":true},"secondary":null,"target":"normal","type":"Normal","zMove":{"effect":"crit2"},"contestType":"Clever","desc":"As long as the target remains active, its evasiveness stat stage is ignored during accuracy checks against it if it is greater than 0, and Normal- and Fighting-type attacks can hit the target if it is a Ghost type. Fails if the target is already affected, or affected by Miracle Eye or Odor Sleuth.","shortDesc":"Fighting, Normal hit Ghost. Evasiveness ignored.","id":"foresight","fullname":"move: Foresight","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"forest\'s curse":{"exists":true,"name":"Forest\'s Curse","num":571,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Grass","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Clever","desc":"Causes the Grass type to be added to the target, effectively making it have two or three types. Fails if the target is already a Grass type. If Trick-or-Treat adds a type to the target, it replaces the type added by this move and vice versa.","shortDesc":"Adds Grass to the target\'s type(s).","id":"forestscurse","fullname":"move: Forest\'s Curse","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"foul play":{"exists":true,"name":"Foul Play","num":492,"accuracy":100,"basePower":95,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"useTargetOffensive":true,"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"Damage is calculated using the target\'s Attack stat, including stat stage changes. The user\'s Ability, item, and burn are used as normal.","shortDesc":"Uses target\'s Attack stat in damage calculation.","id":"foulplay","fullname":"move: Foul Play","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"freeze dry":{"exists":true,"name":"Freeze-Dry","num":573,"accuracy":100,"basePower":70,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"frz"},"target":"normal","type":"Ice","contestType":"Beautiful","desc":"Has a 10% chance to freeze the target. This move\'s type effectiveness against Water is changed to be super effective no matter what this move\'s type is.","shortDesc":"10% chance to freeze. Super effective on Water.","id":"freezedry","fullname":"move: Freeze-Dry","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":10,"status":"frz"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"freeze shock":{"exists":true,"name":"Freeze Shock","num":553,"accuracy":90,"basePower":140,"category":"Physical","pp":5,"priority":0,"flags":{"charge":1,"protect":1,"mirror":1},"secondary":{"chance":30,"status":"par"},"target":"normal","type":"Ice","contestType":"Beautiful","desc":"Has a 30% chance to paralyze the target. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Charges turn 1. Hits turn 2. 30% paralyze.","id":"freezeshock","fullname":"move: Freeze Shock","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"freezing glare":{"exists":true,"name":"Freezing Glare","num":821,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"frz"},"target":"normal","type":"Psychic","desc":"Has a 10% chance to freeze the target.","shortDesc":"10% chance to freeze the target.","id":"freezingglare","fullname":"move: Freezing Glare","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":10,"status":"frz"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"freezy frost":{"exists":true,"name":"Freezy Frost","num":739,"accuracy":90,"basePower":100,"category":"Special","isNonstandard":"LGPE","pp":10,"priority":0,"flags":{"protect":1},"secondary":null,"target":"normal","type":"Ice","contestType":"Clever","desc":"Resets the stat stages of all active Pokemon to 0.","shortDesc":"Eliminates all stat changes.","id":"freezyfrost","fullname":"move: Freezy Frost","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"frenzy plant":{"exists":true,"name":"Frenzy Plant","num":338,"accuracy":90,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"recharge":1,"protect":1,"mirror":1,"nonsky":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Grass","contestType":"Cool","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"frenzyplant","fullname":"move: Frenzy Plant","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"frost breath":{"exists":true,"name":"Frost Breath","num":524,"accuracy":90,"basePower":60,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"willCrit":true,"secondary":null,"target":"normal","type":"Ice","contestType":"Beautiful","desc":"This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Battle Armor or Shell Armor Abilities.","shortDesc":"Always results in a critical hit.","id":"frostbreath","fullname":"move: Frost Breath","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"frustration":{"exists":true,"name":"Frustration","num":218,"accuracy":100,"basePower":0,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Cute","desc":"Power is equal to the greater of ((255 - user\'s Happiness) * 2/5), rounded down, or 1.","shortDesc":"Max 102 power at minimum Happiness.","id":"frustration","fullname":"move: Frustration","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"fury attack":{"exists":true,"name":"Fury Attack","num":31,"accuracy":85,"basePower":15,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"furyattack","fullname":"move: Fury Attack","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"fury cutter":{"exists":true,"name":"Fury Cutter","num":210,"accuracy":95,"basePower":40,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"condition":{"duration":2},"secondary":null,"target":"normal","type":"Bug","contestType":"Cool","desc":"Power doubles with each successful hit, up to a maximum of 160 power. The power is reset if this move misses or another move is used.","shortDesc":"Power doubles with each hit, up to 160.","id":"furycutter","fullname":"move: Fury Cutter","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"fury swipes":{"exists":true,"name":"Fury Swipes","num":154,"accuracy":80,"basePower":18,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Normal","maxMove":{"basePower":100},"contestType":"Tough","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"furyswipes","fullname":"move: Fury Swipes","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"fusion bolt":{"exists":true,"name":"Fusion Bolt","num":559,"accuracy":100,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Electric","contestType":"Cool","desc":"Power doubles if the last move used by any Pokemon this turn was Fusion Flare.","shortDesc":"Power doubles if used after Fusion Flare this turn.","id":"fusionbolt","fullname":"move: Fusion Bolt","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"fusion flare":{"exists":true,"name":"Fusion Flare","num":558,"accuracy":100,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"defrost":1},"secondary":null,"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Power doubles if the last move used by any Pokemon this turn was Fusion Bolt.","shortDesc":"Power doubles if used after Fusion Bolt this turn.","id":"fusionflare","fullname":"move: Fusion Flare","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"future sight":{"exists":true,"name":"Future Sight","num":248,"accuracy":100,"basePower":120,"category":"Special","pp":10,"priority":0,"flags":{},"ignoreImmunity":true,"isFutureMove":true,"secondary":null,"target":"normal","type":"Psychic","contestType":"Clever","desc":"Deals damage two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user\'s natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Doom Desire is already in effect for the target\'s position.","shortDesc":"Hits two turns after being used.","id":"futuresight","fullname":"move: Future Sight","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"gastro acid":{"exists":true,"name":"Gastro Acid","num":380,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"volatileStatus":"gastroacid","condition":{},"secondary":null,"target":"normal","type":"Poison","zMove":{"boost":{"spe":1}},"contestType":"Tough","desc":"Causes the target\'s Ability to be rendered ineffective as long as it remains active. If the target uses Baton Pass, the replacement will remain under this effect. If the target\'s Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, or Zen Mode, this move fails, and receiving the effect through Baton Pass ends the effect immediately.","shortDesc":"Nullifies the target\'s Ability.","id":"gastroacid","fullname":"move: Gastro Acid","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"gear grind":{"exists":true,"name":"Gear Grind","num":544,"accuracy":85,"basePower":50,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":2,"secondary":null,"target":"normal","type":"Steel","zMove":{"basePower":180},"maxMove":{"basePower":130},"contestType":"Clever","desc":"Hits twice. If the first hit breaks the target\'s substitute, it will take damage for the second hit.","shortDesc":"Hits 2 times in one turn.","id":"geargrind","fullname":"move: Gear Grind","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"gear up":{"exists":true,"name":"Gear Up","num":674,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1,"authentic":1},"secondary":null,"target":"allySide","type":"Steel","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"Raises the Attack and Special Attack of Pokemon on the user\'s side with the Plus or Minus Abilities by 1 stage.","shortDesc":"Raises Atk, Sp. Atk of allies with Plus/Minus by 1.","id":"gearup","fullname":"move: Gear Up","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"genesis supernova":{"exists":true,"name":"Genesis Supernova","num":703,"accuracy":true,"basePower":185,"category":"Special","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"mewniumz","secondary":{"chance":100,"self":{}},"target":"normal","type":"Psychic","contestType":"Cool","desc":"If this move is successful, the terrain becomes Psychic Terrain.","shortDesc":"Summons Psychic Terrain.","id":"genesissupernova","fullname":"move: Genesis Supernova","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":100,"self":{}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"geomancy":{"exists":true,"name":"Geomancy","num":601,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"charge":1,"nonsky":1},"boosts":{"spa":2,"spd":2,"spe":2},"secondary":null,"target":"self","type":"Fairy","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Beautiful","desc":"Raises the user\'s Special Attack, Special Defense, and Speed by 2 stages. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Charges, then raises SpA, SpD, Spe by 2 turn 2.","id":"geomancy","fullname":"move: Geomancy","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"giga drain":{"exists":true,"name":"Giga Drain","num":202,"accuracy":100,"basePower":75,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"heal":1},"drain":[1,2],"secondary":null,"target":"normal","type":"Grass","contestType":"Clever","desc":"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 50% of the damage dealt.","id":"gigadrain","fullname":"move: Giga Drain","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"giga impact":{"exists":true,"name":"Giga Impact","num":416,"accuracy":90,"basePower":150,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"recharge":1,"protect":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"gigaimpact","fullname":"move: Giga Impact","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"gigavolt havoc":{"exists":true,"name":"Gigavolt Havoc","num":646,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"electriumz","secondary":null,"target":"normal","type":"Electric","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"gigavolthavoc","fullname":"move: Gigavolt Havoc","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"glacial lance":{"exists":true,"name":"Glacial Lance","num":824,"accuracy":100,"basePower":130,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Ice","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent foes.","id":"glaciallance","fullname":"move: Glacial Lance","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"glaciate":{"exists":true,"name":"Glaciate","num":549,"accuracy":95,"basePower":65,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spe":-1}},"target":"allAdjacentFoes","type":"Ice","contestType":"Beautiful","desc":"Has a 100% chance to lower the target\'s Speed by 1 stage.","shortDesc":"100% chance to lower the foe(s) Speed by 1.","id":"glaciate","fullname":"move: Glaciate","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":100,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"glare":{"exists":true,"name":"Glare","num":137,"accuracy":100,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"par","secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spd":1}},"contestType":"Tough","desc":"Paralyzes the target.","shortDesc":"Paralyzes the target.","id":"glare","fullname":"move: Glare","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"glitzy glow":{"exists":true,"name":"Glitzy Glow","num":736,"accuracy":95,"basePower":80,"category":"Special","isNonstandard":"LGPE","pp":15,"priority":0,"flags":{"protect":1},"self":{"sideCondition":"lightscreen"},"secondary":null,"target":"normal","type":"Psychic","contestType":"Clever","desc":"This move summons Light Screen for 5 turns upon use.","shortDesc":"Summons Light Screen.","id":"glitzyglow","fullname":"move: Glitzy Glow","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"g max befuddle":{"exists":true,"name":"G-Max Befuddle","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Butterfree","self":{},"target":"adjacentFoe","type":"Bug","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side either falls asleep, becomes poisoned, or becomes paralyzed, even if they have a substitute.","shortDesc":"Base move affects power. Foes: slp or psn or par.","id":"gmaxbefuddle","fullname":"move: G-Max Befuddle","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max cannonade":{"exists":true,"name":"G-Max Cannonade","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Blastoise","self":{},"condition":{"duration":4,"onResidualOrder":5,"onResidualSubOrder":1,"onSideResidualOrder":26,"onSideResidualSubOrder":11},"secondary":null,"target":"adjacentFoe","type":"Water","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, for 4 turns each non-Water-type Pokemon on the opposing side takes damage equal to 1/6 of its maximum HP, rounded down, at the end of each turn during effect, including the last turn.","shortDesc":"Base move affects power. Foes: -1/6 HP, 4 turns.","id":"gmaxcannonade","fullname":"move: G-Max Cannonade","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max centiferno":{"exists":true,"name":"G-Max Centiferno","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Centiskorch","self":{},"secondary":null,"target":"adjacentFoe","type":"Fire","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side is prevented from switching for four or five turns (seven turns if the user is holding Grip Claw), even if they have a substitute. Causes damage equal to 1/8 of their maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. They can still switch out if they are holding Shed Shell or use Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends for a target if it leaves the field, or if it uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Base move affects power. Foes: bound 4-5 turns.","id":"gmaxcentiferno","fullname":"move: G-Max Centiferno","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max chi strike":{"exists":true,"name":"G-Max Chi Strike","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Machamp","self":{},"condition":{"noCopy":true},"secondary":null,"target":"adjacentFoe","type":"Fighting","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the user\'s side has their critical hit ratio raised by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Allies: Crit Ratio +1.","id":"gmaxchistrike","fullname":"move: G-Max Chi Strike","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max cuddle":{"exists":true,"name":"G-Max Cuddle","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Eevee","self":{},"secondary":null,"target":"adjacentFoe","type":"Normal","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side becomes infatuated, even if they have a substitute. This effect does not happen for a target if both it and the user are the same gender, if either is genderless, or if the target is already infatuated.","shortDesc":"Base move affects power. Foes: infatuated.","id":"gmaxcuddle","fullname":"move: G-Max Cuddle","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max depletion":{"exists":true,"name":"G-Max Depletion","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Duraludon","self":{},"secondary":null,"target":"adjacentFoe","type":"Dragon","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side loses 2 PP from its last move used, even if they have a substitute.","shortDesc":"Base move affects power. Foes: last move -2 PP.","id":"gmaxdepletion","fullname":"move: G-Max Depletion","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max drum solo":{"exists":true,"name":"G-Max Drum Solo","num":1000,"accuracy":true,"basePower":160,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Rillaboom","ignoreAbility":true,"secondary":null,"target":"adjacentFoe","type":"Grass","contestType":"Cool","desc":"Power is 160 regardless of the base move\'s Max Move power. This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Always 160 power. Ignores Abilities.","id":"gmaxdrumsolo","fullname":"move: G-Max Drum Solo","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max finale":{"exists":true,"name":"G-Max Finale","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Alcremie","self":{},"secondary":null,"target":"adjacentFoe","type":"Fairy","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the user\'s side restores 1/6 of its current maximum HP, even if they have a substitute.","shortDesc":"Base move affects power. Allies: +1/6 max HP.","id":"gmaxfinale","fullname":"move: G-Max Finale","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max fireball":{"exists":true,"name":"G-Max Fireball","num":1000,"accuracy":true,"basePower":160,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Cinderace","ignoreAbility":true,"secondary":null,"target":"adjacentFoe","type":"Fire","contestType":"Cool","desc":"Power is 160 regardless of the base move\'s Max Move power. This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Always 160 power. Ignores Abilities.","id":"gmaxfireball","fullname":"move: G-Max Fireball","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max foam burst":{"exists":true,"name":"G-Max Foam Burst","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Kingler","self":{},"secondary":null,"target":"adjacentFoe","type":"Water","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Speed of each Pokemon on the opposing side is lowered by 2 stages, even if they have a substitute.","shortDesc":"Base move affects power. Foes: -2 Speed.","id":"gmaxfoamburst","fullname":"move: G-Max Foam Burst","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max gold rush":{"exists":true,"name":"G-Max Gold Rush","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Meowth","self":{},"secondary":null,"target":"adjacentFoe","type":"Normal","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side becomes confused, even if they have a substitute.","shortDesc":"Base move affects power. Foes: confused.","id":"gmaxgoldrush","fullname":"move: G-Max Gold Rush","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max gravitas":{"exists":true,"name":"G-Max Gravitas","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Orbeetle","self":{"pseudoWeather":"gravity"},"target":"adjacentFoe","type":"Psychic","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Gravity begins.","shortDesc":"Base move affects power. Starts Gravity.","id":"gmaxgravitas","fullname":"move: G-Max Gravitas","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max hydrosnipe":{"exists":true,"name":"G-Max Hydrosnipe","num":1000,"accuracy":true,"basePower":160,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Inteleon","ignoreAbility":true,"secondary":null,"target":"adjacentFoe","type":"Water","contestType":"Cool","desc":"Power is 160 regardless of the base move\'s Max Move power. This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Always 160 power. Ignores Abilities.","id":"gmaxhydrosnipe","fullname":"move: G-Max Hydrosnipe","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max malodor":{"exists":true,"name":"G-Max Malodor","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Garbodor","self":{},"target":"adjacentFoe","type":"Poison","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side becomes poisoned, even if they have a substitute.","shortDesc":"Base move affects power. Foes: poisoned.","id":"gmaxmalodor","fullname":"move: G-Max Malodor","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max meltdown":{"exists":true,"name":"G-Max Meltdown","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Melmetal","self":{},"secondary":null,"target":"adjacentFoe","type":"Steel","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Torment begins for each Pokemon on the opposing side, even if they have a substitute.","shortDesc":"Base move affects power. Foes: Tormented.","id":"gmaxmeltdown","fullname":"move: G-Max Meltdown","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max one blow":{"exists":true,"name":"G-Max One Blow","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Urshifu","secondary":null,"target":"adjacentFoe","type":"Dark","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. This move bypasses all protection effects, including Max Guard.","shortDesc":"Base move affects power. Bypasses Max Guard.","id":"gmaxoneblow","fullname":"move: G-Max One Blow","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max rapid flow":{"exists":true,"name":"G-Max Rapid Flow","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Urshifu-Rapid-Strike","secondary":null,"target":"adjacentFoe","type":"Water","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. This move bypasses all protection effects, including Max Guard.","shortDesc":"Base move affects power. Bypasses Max Guard.","id":"gmaxrapidflow","fullname":"move: G-Max Rapid Flow","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max replenish":{"exists":true,"name":"G-Max Replenish","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Snorlax","self":{},"secondary":null,"target":"adjacentFoe","type":"Normal","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, there is a 50% chance every Pokemon on the user\'s side has its Berry restored, even if they have a substitute.","shortDesc":"Base move affects power. 50% restores Berries.","id":"gmaxreplenish","fullname":"move: G-Max Replenish","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max resonance":{"exists":true,"name":"G-Max Resonance","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Lapras","self":{"sideCondition":"auroraveil"},"secondary":null,"target":"adjacentFoe","type":"Ice","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Aurora Veil begins on the user\'s side.","shortDesc":"Base move affects power. Allies: Aurora Veil.","id":"gmaxresonance","fullname":"move: G-Max Resonance","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max sandblast":{"exists":true,"name":"G-Max Sandblast","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Sandaconda","self":{},"secondary":null,"target":"adjacentFoe","type":"Ground","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side is prevented from switching for four or five turns (seven turns if the user is holding Grip Claw), even if they have a substitute. Causes damage equal to 1/8 of their maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. They can still switch out if they are holding Shed Shell or use Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends for a target if it leaves the field, or if it uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Base move affects power. Foes: bound 4-5 turns.","id":"gmaxsandblast","fullname":"move: G-Max Sandblast","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max smite":{"exists":true,"name":"G-Max Smite","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Hatterene","self":{},"secondary":null,"target":"adjacentFoe","type":"Fairy","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side becomes confused, even if they have a substitute.","shortDesc":"Base move affects power. Foes: confused.","id":"gmaxsmite","fullname":"move: G-Max Smite","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max snooze":{"exists":true,"name":"G-Max Snooze","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Grimmsnarl","secondary":null,"target":"adjacentFoe","type":"Dark","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, there is a 50% chance the effect of Yawn begins on the target, even if it has a substitute.","shortDesc":"Base move affects power. Target: 50% Yawn.","id":"gmaxsnooze","fullname":"move: G-Max Snooze","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max steelsurge":{"exists":true,"name":"G-Max Steelsurge","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Copperajah","self":{},"condition":{},"secondary":null,"target":"adjacentFoe","type":"Steel","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, it sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in. Foes lose 1/32, 1/16, 1/8, 1/4, or 1/2 of their maximum HP, rounded down, based on their weakness to the Steel type; 0.25x, 0.5x, neutral, 2x, or 4x, respectively. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, or is hit by Defog.","shortDesc":"Base move affects power. Foes: Steel hazard.","id":"gmaxsteelsurge","fullname":"move: G-Max Steelsurge","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max stonesurge":{"exists":true,"name":"G-Max Stonesurge","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":5,"priority":0,"flags":{},"isMax":"Drednaw","self":{},"secondary":null,"target":"adjacentFoe","type":"Water","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, it sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in. Foes lose 1/32, 1/16, 1/8, 1/4, or 1/2 of their maximum HP, rounded down, based on their weakness to the Rock type; 0.25x, 0.5x, neutral, 2x, or 4x, respectively. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, or is hit by Defog.","shortDesc":"Base move affects power. Foes: Stealth Rock.","id":"gmaxstonesurge","fullname":"move: G-Max Stonesurge","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max stun shock":{"exists":true,"name":"G-Max Stun Shock","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Toxtricity","self":{},"secondary":null,"target":"adjacentFoe","type":"Electric","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side either becomes poisoned or paralyzed, even if they have a substitute.","shortDesc":"Base move affects power. Foes: psn or par.","id":"gmaxstunshock","fullname":"move: G-Max Stun Shock","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max sweetness":{"exists":true,"name":"G-Max Sweetness","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Appletun","self":{},"secondary":null,"target":"adjacentFoe","type":"Grass","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the user\'s side has its status condition cured, even if they have a substitute.","shortDesc":"Base move affects power. Allies: status cured.","id":"gmaxsweetness","fullname":"move: G-Max Sweetness","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max tartness":{"exists":true,"name":"G-Max Tartness","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Flapple","self":{},"secondary":null,"target":"adjacentFoe","type":"Grass","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the evasiveness of each Pokemon on the opposing side is lowered by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Foes: -1 evasiveness.","id":"gmaxtartness","fullname":"move: G-Max Tartness","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max terror":{"exists":true,"name":"G-Max Terror","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Gengar","self":{},"secondary":null,"target":"adjacentFoe","type":"Ghost","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side is prevented from switching out, even if they have a substitute. They can still switch out if they are holding Shed Shell or use Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If a target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.","shortDesc":"Base move affects power. Foes: trapped.","id":"gmaxterror","fullname":"move: G-Max Terror","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max vine lash":{"exists":true,"name":"G-Max Vine Lash","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Venusaur","self":{},"condition":{"duration":4,"onResidualOrder":5,"onResidualSubOrder":1,"onSideResidualOrder":26,"onSideResidualSubOrder":11},"secondary":null,"target":"adjacentFoe","type":"Grass","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, for 4 turns each non-Grass-type Pokemon on the opposing side takes damage equal to 1/6 of its maximum HP, rounded down, at the end of each turn during effect, including the last turn.","shortDesc":"Base move affects power. Foes: -1/6 HP, 4 turns.","id":"gmaxvinelash","fullname":"move: G-Max Vine Lash","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max volcalith":{"exists":true,"name":"G-Max Volcalith","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Coalossal","self":{},"condition":{"duration":4,"onResidualOrder":5,"onResidualSubOrder":1,"onSideResidualOrder":26,"onSideResidualSubOrder":11},"secondary":null,"target":"adjacentFoe","type":"Rock","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, for 4 turns each non-Rock-type Pokemon on the opposing side takes damage equal to 1/6 of its maximum HP, rounded down, at the end of each turn during effect, including the last turn.","shortDesc":"Base move affects power. Foes: -1/6 HP, 4 turns.","id":"gmaxvolcalith","fullname":"move: G-Max Volcalith","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max volt crash":{"exists":true,"name":"G-Max Volt Crash","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Pikachu","self":{},"secondary":null,"target":"adjacentFoe","type":"Electric","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, each Pokemon on the opposing side becomes paralyzed, even if they have a substitute.","shortDesc":"Base move affects power. Foes: paralyzed.","id":"gmaxvoltcrash","fullname":"move: G-Max Volt Crash","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max wildfire":{"exists":true,"name":"G-Max Wildfire","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Charizard","self":{},"condition":{"duration":4,"onResidualOrder":5,"onResidualSubOrder":1,"onSideResidualOrder":26,"onSideResidualSubOrder":11},"secondary":null,"target":"adjacentFoe","type":"Fire","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, for 4 turns each non-Fire-type Pokemon on the opposing side takes damage equal to 1/6 of its maximum HP, rounded down, at the end of each turn during effect, including the last turn.","shortDesc":"Base move affects power. Foes: -1/6 HP, 4 turns.","id":"gmaxwildfire","fullname":"move: G-Max Wildfire","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"g max wind rage":{"exists":true,"name":"G-Max Wind Rage","num":1000,"accuracy":true,"basePower":10,"category":"Physical","isNonstandard":"Gigantamax","pp":10,"priority":0,"flags":{},"isMax":"Corviknight","self":{},"secondary":null,"target":"adjacentFoe","type":"Flying","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effects of Electric Terrain, Grassy Terrain, Misty Terrain, and Psychic Terrain end, the effects of Reflect, Light Screen, Aurora Veil, Safeguard, Mist, G-Max Steelsurge, Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the target\'s side, and the effects of G-Max Steelsurge, Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the user\'s side.","shortDesc":"Base move affects power. Ends Terrain, hazards.","id":"gmaxwindrage","fullname":"move: G-Max Wind Rage","effectType":"Move","gen":8,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"grass knot":{"exists":true,"name":"Grass Knot","num":447,"accuracy":100,"basePower":0,"category":"Special","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"normal","type":"Grass","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Cute","desc":"This move\'s power is 20 if the target weighs less than 10 kg, 40 if less than 25 kg, 60 if less than 50 kg, 80 if less than 100 kg, 100 if less than 200 kg, and 120 if greater than or equal to 200 kg.","shortDesc":"More power the heavier the target.","id":"grassknot","fullname":"move: Grass Knot","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"grass pledge":{"exists":true,"name":"Grass Pledge","num":520,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"condition":{"duration":4,"onSideResidualOrder":26,"onSideResidualSubOrder":9},"secondary":null,"target":"normal","type":"Grass","contestType":"Beautiful","desc":"If one of the user\'s allies chose to use Fire Pledge or Water Pledge this turn and has not moved yet, it takes its turn immediately after the user and the user\'s move does nothing. If combined with Fire Pledge, the ally uses Fire Pledge with 150 power and a sea of fire appears on the target\'s side for 4 turns, which causes damage to non-Fire types equal to 1/8 of their maximum HP, rounded down, at the end of each turn during effect, including the last turn. If combined with Water Pledge, the ally uses Grass Pledge with 150 power and a swamp appears on the target\'s side for 4 turns, which quarters the Speed of each Pokemon on that side. When used as a combined move, this move gains STAB no matter what the user\'s type is. This move does not consume the user\'s Grass Gem.","shortDesc":"Use with Fire or Water Pledge for added effect.","id":"grasspledge","fullname":"move: Grass Pledge","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"grass whistle":{"exists":true,"name":"Grass Whistle","num":320,"accuracy":55,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"sound":1,"authentic":1},"status":"slp","secondary":null,"target":"normal","type":"Grass","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"Causes the target to fall asleep.","shortDesc":"Causes the target to fall asleep.","id":"grasswhistle","fullname":"move: Grass Whistle","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"grassy glide":{"exists":true,"name":"Grassy Glide","num":803,"accuracy":100,"basePower":70,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mystery":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Cool","desc":"If the current terrain is Grassy Terrain and the user is grounded, this move has its priority increased by 1.","shortDesc":"User on Grassy Terrain: +1 priority.","id":"grassyglide","fullname":"move: Grassy Glide","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"grassy terrain":{"exists":true,"name":"Grassy Terrain","num":580,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"nonsky":1},"terrain":"grassyterrain","condition":{"duration":5,"onBasePowerPriority":6,"onResidualOrder":5,"onResidualSubOrder":2,"onFieldResidualOrder":27,"onFieldResidualSubOrder":7},"secondary":null,"target":"all","type":"Grass","zMove":{"boost":{"def":1}},"contestType":"Beautiful","desc":"For 5 turns, the terrain becomes Grassy Terrain. During the effect, the power of Grass-type attacks used by grounded Pokemon is multiplied by 1.3, the power of Bulldoze, Earthquake, and Magnitude used against grounded Pokemon is multiplied by 0.5, and grounded Pokemon have 1/16 of their maximum HP, rounded down, restored at the end of each turn, including the last turn. Camouflage transforms the user into a Grass type, Nature Power becomes Energy Ball, and Secret Power has a 30% chance to cause sleep. Fails if the current terrain is Grassy Terrain.","shortDesc":"5 turns. Grounded: +Grass power, +1/16 max HP.","id":"grassyterrain","fullname":"move: Grassy Terrain","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"grav apple":{"exists":true,"name":"Grav Apple","num":788,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"def":-1}},"target":"normal","type":"Grass","desc":"Has a 100% chance to lower the target\'s Defense by 1 stage. Power is multiplied by 1.5 during Gravity\'s effect.","shortDesc":"Target: 100% -1 Def. During Gravity: 1.5x power.","id":"gravapple","fullname":"move: Grav Apple","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":[{"chance":100,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"gravity":{"exists":true,"name":"Gravity","num":356,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"nonsky":1},"pseudoWeather":"gravity","condition":{"duration":5,"onBeforeMovePriority":6,"onFieldResidualOrder":27,"onFieldResidualSubOrder":2},"secondary":null,"target":"all","type":"Psychic","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"For 5 turns, the evasiveness of all active Pokemon is multiplied by 0.6. At the time of use, Bounce, Fly, Magnet Rise, Sky Drop, and Telekinesis end immediately for all active Pokemon. During the effect, Bounce, Fly, Flying Press, High Jump Kick, Jump Kick, Magnet Rise, Sky Drop, Splash, and Telekinesis are prevented from being used by all active Pokemon. Ground-type attacks, Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability can affect Flying types or Pokemon with the Levitate Ability. Fails if this move is already in effect.","shortDesc":"5 turns: no Ground immunities, 1.67x accuracy.","id":"gravity","fullname":"move: Gravity","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"growl":{"exists":true,"name":"Growl","num":45,"accuracy":100,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"sound":1,"authentic":1},"boosts":{"atk":-1},"secondary":null,"target":"allAdjacentFoes","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Lowers the target\'s Attack by 1 stage.","shortDesc":"Lowers the foe(s) Attack by 1.","id":"growl","fullname":"move: Growl","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"growth":{"exists":true,"name":"Growth","num":74,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"atk":1,"spa":1},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"spa":1}},"contestType":"Beautiful","desc":"Raises the user\'s Attack and Special Attack by 1 stage. If the weather is Sunny Day or Desolate Land, this move raises the user\'s Attack and Special Attack by 2 stages. If the user is holding Utility Umbrella, this move will only raise the user\'s Attack and Special Attack by 1 stage, even if the weather is Sunny Day or Desolate Land.","shortDesc":"Raises user\'s Attack and Sp. Atk by 1; 2 in Sun.","id":"growth","fullname":"move: Growth","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"grudge":{"exists":true,"name":"Grudge","num":288,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"authentic":1},"volatileStatus":"grudge","condition":{"onBeforeMovePriority":100},"secondary":null,"target":"self","type":"Ghost","zMove":{"effect":"redirect"},"contestType":"Tough","desc":"Until the user\'s next turn, if an opposing Pokemon\'s attack knocks the user out, that move loses all its remaining PP.","shortDesc":"If the user faints, the attack used loses all its PP.","id":"grudge","fullname":"move: Grudge","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"guardian of alola":{"exists":true,"name":"Guardian of Alola","num":698,"accuracy":true,"basePower":0,"category":"Special","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"tapuniumz","secondary":null,"target":"normal","type":"Fairy","contestType":"Tough","desc":"Deals damage to the target equal to 3/4 of its current HP, rounded down, but not less than 1 HP.","shortDesc":"Does damage equal to 3/4 target\'s current HP.","id":"guardianofalola","fullname":"move: Guardian of Alola","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"guard split":{"exists":true,"name":"Guard Split","num":470,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"The user and the target have their Defense and Special Defense stats set to be equal to the average of the user and the target\'s Defense and Special Defense stats, respectively, rounded down. Stat stage changes are unaffected.","shortDesc":"Averages Defense and Sp. Def stats with target.","id":"guardsplit","fullname":"move: Guard Split","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"guard swap":{"exists":true,"name":"Guard Swap","num":385,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"The user swaps its Defense and Special Defense stat stage changes with the target.","shortDesc":"Swaps Defense and Sp. Def changes with target.","id":"guardswap","fullname":"move: Guard Swap","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"guillotine":{"exists":true,"name":"Guillotine","num":12,"accuracy":30,"basePower":0,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"ohko":true,"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":180},"maxMove":{"basePower":130},"contestType":"Cool","desc":"Deals damage to the target equal to the target\'s maximum HP. Ignores accuracy and evasiveness modifiers. This attack\'s accuracy is equal to (user\'s level - target\'s level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.","shortDesc":"OHKOs the target. Fails if user is a lower level.","id":"guillotine","fullname":"move: Guillotine","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"gunk shot":{"exists":true,"name":"Gunk Shot","num":441,"accuracy":80,"basePower":120,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"status":"psn"},"target":"normal","type":"Poison","contestType":"Tough","desc":"Has a 30% chance to poison the target.","shortDesc":"30% chance to poison the target.","id":"gunkshot","fullname":"move: Gunk Shot","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":30,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":95},"zMove":{"basePower":190}},"gust":{"exists":true,"name":"Gust","num":16,"accuracy":100,"basePower":40,"category":"Special","pp":35,"priority":0,"flags":{"protect":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Flying","contestType":"Clever","desc":"Power doubles if the target is using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop.","shortDesc":"Power doubles during Bounce, Fly, and Sky Drop.","id":"gust","fullname":"move: Gust","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"gyro ball":{"exists":true,"name":"Gyro Ball","num":360,"accuracy":100,"basePower":0,"category":"Physical","pp":5,"priority":0,"flags":{"bullet":1,"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Steel","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Cool","desc":"Power is equal to (25 * target\'s current Speed / user\'s current Speed) + 1, rounded down, but not more than 150. If the user\'s current Speed is 0, this move\'s power is 1.","shortDesc":"More power the slower the user than the target.","id":"gyroball","fullname":"move: Gyro Ball","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"hail":{"exists":true,"name":"Hail","num":258,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{},"weather":"hail","secondary":null,"target":"all","type":"Ice","zMove":{"boost":{"spe":1}},"contestType":"Beautiful","desc":"For 5 turns, the weather becomes Hail. At the end of each turn except the last, all active Pokemon lose 1/16 of their maximum HP, rounded down, unless they are an Ice type or have the Ice Body, Magic Guard, Overcoat, or Snow Cloak Abilities. Lasts for 8 turns if the user is holding Icy Rock. Fails if the current weather is Hail.","shortDesc":"For 5 turns, hail crashes down.","id":"hail","fullname":"move: Hail","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"hammer arm":{"exists":true,"name":"Hammer Arm","num":359,"accuracy":90,"basePower":100,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"self":{"boosts":{"spe":-1}},"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"Lowers the user\'s Speed by 1 stage.","shortDesc":"Lowers the user\'s Speed by 1.","id":"hammerarm","fullname":"move: Hammer Arm","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":180}},"happy hour":{"exists":true,"name":"Happy Hour","num":603,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{},"secondary":null,"target":"allySide","type":"Normal","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Cute","desc":"No competitive use.","shortDesc":"No competitive use.","id":"happyhour","fullname":"move: Happy Hour","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"harden":{"exists":true,"name":"Harden","num":106,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"snatch":1},"boosts":{"def":1},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Tough","desc":"Raises the user\'s Defense by 1 stage.","shortDesc":"Raises the user\'s Defense by 1.","id":"harden","fullname":"move: Harden","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"haze":{"exists":true,"name":"Haze","num":114,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"authentic":1},"secondary":null,"target":"all","type":"Ice","zMove":{"effect":"heal"},"contestType":"Beautiful","desc":"Resets the stat stages of all active Pokemon to 0.","shortDesc":"Eliminates all stat changes.","id":"haze","fullname":"move: Haze","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"headbutt":{"exists":true,"name":"Headbutt","num":29,"accuracy":100,"basePower":70,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Normal","contestType":"Tough","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"headbutt","fullname":"move: Headbutt","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"head charge":{"exists":true,"name":"Head Charge","num":543,"accuracy":100,"basePower":120,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"recoil":[1,4],"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 1/4 recoil.","id":"headcharge","fullname":"move: Head Charge","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"head smash":{"exists":true,"name":"Head Smash","num":457,"accuracy":80,"basePower":150,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"recoil":[1,2],"secondary":null,"target":"normal","type":"Rock","contestType":"Tough","desc":"If the target lost HP, the user takes recoil damage equal to 1/2 the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 1/2 recoil.","id":"headsmash","fullname":"move: Head Smash","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"heal bell":{"exists":true,"name":"Heal Bell","num":215,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"snatch":1,"sound":1,"distance":1,"authentic":1},"target":"allyTeam","type":"Normal","zMove":{"effect":"heal"},"contestType":"Beautiful","desc":"Every Pokemon in the user\'s party is cured of its non-volatile status condition. Active Pokemon with the Soundproof Ability are not cured, unless they are the user.","shortDesc":"Cures the user\'s party of all status conditions.","id":"healbell","fullname":"move: Heal Bell","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"heal block":{"exists":true,"name":"Heal Block","num":377,"accuracy":100,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"volatileStatus":"healblock","condition":{"duration":5,"onBeforeMovePriority":6,"onResidualOrder":20},"secondary":null,"target":"allAdjacentFoes","type":"Psychic","zMove":{"boost":{"spa":2}},"contestType":"Clever","desc":"For 5 turns, the target is prevented from restoring any HP as long as it remains active. During the effect, healing and draining moves are unusable, and Abilities and items that grant healing will not heal the user. If an affected Pokemon uses Baton Pass, the replacement will remain unable to restore its HP. Pain Split and the Regenerator Ability are unaffected.","shortDesc":"For 5 turns, the foe(s) is prevented from healing.","id":"healblock","fullname":"move: Heal Block","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"healing wish":{"exists":true,"name":"Healing Wish","num":361,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"selfdestruct":"ifHit","slotCondition":"healingwish","condition":{},"secondary":null,"target":"self","type":"Psychic","contestType":"Beautiful","desc":"The user faints, and if the Pokemon brought out to replace it does not have full HP or has a non-volatile status condition, its HP is fully restored along with having any non-volatile status condition cured. The replacement is sent out at the end of the turn, and the healing happens before hazards take effect. This effect continues until a Pokemon that meets either of these conditions switches in at the user\'s position or gets swapped into the position with Ally Switch. Fails if the user is the last unfainted Pokemon in its party.","shortDesc":"User faints. Next hurt Pokemon is fully healed.","id":"healingwish","fullname":"move: Healing Wish","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"heal order":{"exists":true,"name":"Heal Order","num":456,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"heal":[1,2],"secondary":null,"target":"self","type":"Bug","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"The user restores 1/2 of its maximum HP, rounded half up.","shortDesc":"Heals the user by 50% of its max HP.","id":"healorder","fullname":"move: Heal Order","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"heal pulse":{"exists":true,"name":"Heal Pulse","num":505,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"pulse":1,"reflectable":1,"distance":1,"heal":1,"mystery":1},"secondary":null,"target":"any","type":"Psychic","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"The target restores 1/2 of its maximum HP, rounded half up. If the user has the Mega Launcher Ability, the target instead restores 3/4 of its maximum HP, rounded half down.","shortDesc":"Heals the target by 50% of its max HP.","id":"healpulse","fullname":"move: Heal Pulse","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"heart stamp":{"exists":true,"name":"Heart Stamp","num":531,"accuracy":100,"basePower":60,"category":"Physical","isNonstandard":"Past","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Psychic","contestType":"Cute","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"heartstamp","fullname":"move: Heart Stamp","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"heart swap":{"exists":true,"name":"Heart Swap","num":391,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"effect":"crit2"},"contestType":"Clever","desc":"The user swaps all its stat stage changes with the target.","shortDesc":"Swaps all stat changes with target.","id":"heartswap","fullname":"move: Heart Swap","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"heat crash":{"exists":true,"name":"Heat Crash","num":535,"accuracy":100,"basePower":0,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"normal","type":"Fire","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Tough","desc":"The power of this move depends on (user\'s weight / target\'s weight), rounded down. Power is equal to 120 if the result is 5 or more, 100 if 4, 80 if 3, 60 if 2, and 40 if 1 or less. Damage doubles and no accuracy check is done if the target has used Minimize while active.","shortDesc":"More power the heavier the user than the target.","id":"heatcrash","fullname":"move: Heat Crash","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"heat wave":{"exists":true,"name":"Heat Wave","num":257,"accuracy":90,"basePower":95,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"brn"},"target":"allAdjacentFoes","type":"Fire","contestType":"Beautiful","desc":"Has a 10% chance to burn the target.","shortDesc":"10% chance to burn the foe(s).","id":"heatwave","fullname":"move: Heat Wave","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"heavy slam":{"exists":true,"name":"Heavy Slam","num":484,"accuracy":100,"basePower":0,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"normal","type":"Steel","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Tough","desc":"The power of this move depends on (user\'s weight / target\'s weight), rounded down. Power is equal to 120 if the result is 5 or more, 100 if 4, 80 if 3, 60 if 2, and 40 if 1 or less. Damage doubles and no accuracy check is done if the target has used Minimize while active.","shortDesc":"More power the heavier the user than the target.","id":"heavyslam","fullname":"move: Heavy Slam","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"helping hand":{"exists":true,"name":"Helping Hand","num":270,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":5,"flags":{"authentic":1},"volatileStatus":"helpinghand","condition":{"duration":1,"onBasePowerPriority":10},"secondary":null,"target":"adjacentAlly","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"The power of the target\'s attack this turn is multiplied by 1.5 (this effect is stackable). Fails if there is no ally adjacent to the user or if the ally already moved this turn, but does not fail if the ally is using a two-turn move.","shortDesc":"One adjacent ally\'s move power is 1.5x this turn.","id":"helpinghand","fullname":"move: Helping Hand","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"hex":{"exists":true,"name":"Hex","num":506,"accuracy":100,"basePower":65,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ghost","zMove":{"basePower":160},"contestType":"Clever","desc":"Power doubles if the target has a non-volatile status condition.","shortDesc":"Power doubles if the target has a status ailment.","id":"hex","fullname":"move: Hex","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120}},"hidden power":{"exists":true,"name":"Hidden Power","num":237,"accuracy":100,"basePower":60,"category":"Special","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Clever","desc":"This move\'s type depends on the user\'s individual values (IVs), and can be any type but Fairy and Normal.","shortDesc":"Varies in type based on the user\'s IVs.","id":"hiddenpower","fullname":"move: Hidden Power","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power bug":{"exists":true,"name":"Hidden Power Bug","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Bug","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Bug","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power dark":{"exists":true,"name":"Hidden Power Dark","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Dark","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power dragon":{"exists":true,"name":"Hidden Power Dragon","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dragon","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Dragon","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power electric":{"exists":true,"name":"Hidden Power Electric","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Electric","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Electric","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power fighting":{"exists":true,"name":"Hidden Power Fighting","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Fighting","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":80},"zMove":{"basePower":120}},"hidden power fire":{"exists":true,"name":"Hidden Power Fire","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fire","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Fire","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power flying":{"exists":true,"name":"Hidden Power Flying","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Flying","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Flying","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power ghost":{"exists":true,"name":"Hidden Power Ghost","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ghost","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Ghost","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power grass":{"exists":true,"name":"Hidden Power Grass","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Grass","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power ground":{"exists":true,"name":"Hidden Power Ground","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ground","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Ground","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power ice":{"exists":true,"name":"Hidden Power Ice","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ice","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Ice","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power poison":{"exists":true,"name":"Hidden Power Poison","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Poison","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Poison","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":80},"zMove":{"basePower":120}},"hidden power psychic":{"exists":true,"name":"Hidden Power Psychic","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Psychic","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Psychic","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power rock":{"exists":true,"name":"Hidden Power Rock","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Rock","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Rock","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power steel":{"exists":true,"name":"Hidden Power Steel","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Steel","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Steel","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"hidden power water":{"exists":true,"name":"Hidden Power Water","num":237,"accuracy":100,"basePower":60,"category":"Special","realMove":"Hidden Power","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Water","contestType":"Clever","desc":"","shortDesc":"","id":"hiddenpower","fullname":"move: Hidden Power Water","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"high horsepower":{"exists":true,"name":"High Horsepower","num":667,"accuracy":95,"basePower":95,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ground","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"highhorsepower","fullname":"move: High Horsepower","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"high jump kick":{"exists":true,"name":"High Jump Kick","num":136,"accuracy":90,"basePower":130,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"gravity":1},"hasCrashDamage":true,"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"If this attack is not successful, the user loses half of its maximum HP, rounded down, as crash damage. Pokemon with the Magic Guard Ability are unaffected by crash damage.","shortDesc":"User is hurt by 50% of its max HP if it misses.","id":"highjumpkick","fullname":"move: High Jump Kick","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":95},"zMove":{"basePower":195}},"hold back":{"exists":true,"name":"Hold Back","num":610,"accuracy":100,"basePower":40,"category":"Physical","pp":40,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"onDamagePriority":-20,"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"Leaves the target with at least 1 HP.","shortDesc":"Always leaves the target with at least 1 HP.","id":"holdback","fullname":"move: Hold Back","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"hold hands":{"exists":true,"name":"Hold Hands","num":607,"accuracy":true,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"authentic":1},"secondary":null,"target":"adjacentAlly","type":"Normal","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Cute","desc":"No competitive use. Fails if there is no ally adjacent to the user.","shortDesc":"No competitive use.","id":"holdhands","fullname":"move: Hold Hands","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"hone claws":{"exists":true,"name":"Hone Claws","num":468,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"snatch":1},"boosts":{"atk":1,"accuracy":1},"secondary":null,"target":"self","type":"Dark","zMove":{"boost":{"atk":1}},"contestType":"Cute","desc":"Raises the user\'s Attack and accuracy by 1 stage.","shortDesc":"Raises the user\'s Attack and accuracy by 1.","id":"honeclaws","fullname":"move: Hone Claws","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"horn attack":{"exists":true,"name":"Horn Attack","num":30,"accuracy":100,"basePower":65,"category":"Physical","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"hornattack","fullname":"move: Horn Attack","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"horn drill":{"exists":true,"name":"Horn Drill","num":32,"accuracy":30,"basePower":0,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"ohko":true,"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":180},"maxMove":{"basePower":130},"contestType":"Cool","desc":"Deals damage to the target equal to the target\'s maximum HP. Ignores accuracy and evasiveness modifiers. This attack\'s accuracy is equal to (user\'s level - target\'s level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.","shortDesc":"OHKOs the target. Fails if user is a lower level.","id":"horndrill","fullname":"move: Horn Drill","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"horn leech":{"exists":true,"name":"Horn Leech","num":532,"accuracy":100,"basePower":75,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"heal":1},"drain":[1,2],"secondary":null,"target":"normal","type":"Grass","contestType":"Tough","desc":"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 50% of the damage dealt.","id":"hornleech","fullname":"move: Horn Leech","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"howl":{"exists":true,"name":"Howl","num":336,"accuracy":true,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"snatch":1,"sound":1},"boosts":{"atk":1},"secondary":null,"target":"allies","type":"Normal","zMove":{"boost":{"atk":1}},"contestType":"Cool","desc":"Raises the Attack of the user and all allies 1 stage.","shortDesc":"Raises the user\'s and ally\'s Attack by 1.","id":"howl","fullname":"move: Howl","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"hurricane":{"exists":true,"name":"Hurricane","num":542,"accuracy":70,"basePower":110,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"distance":1},"secondary":{"chance":30,"volatileStatus":"confusion"},"target":"any","type":"Flying","contestType":"Tough","desc":"Has a 30% chance to confuse the target. This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If the weather is Primordial Sea or Rain Dance, this move does not check accuracy. If the weather is Desolate Land or Sunny Day, this move\'s accuracy is 50%. If this move is used against a Pokemon holding Utility Umbrella, this move\'s accuracy remains at 70%.","shortDesc":"30% chance to confuse target. Can\'t miss in rain.","id":"hurricane","fullname":"move: Hurricane","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":[{"chance":30,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"hydro cannon":{"exists":true,"name":"Hydro Cannon","num":308,"accuracy":90,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"recharge":1,"protect":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Water","contestType":"Beautiful","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"hydrocannon","fullname":"move: Hydro Cannon","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"hydro pump":{"exists":true,"name":"Hydro Pump","num":56,"accuracy":80,"basePower":110,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Water","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect.","id":"hydropump","fullname":"move: Hydro Pump","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"hydro vortex":{"exists":true,"name":"Hydro Vortex","num":642,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"wateriumz","secondary":null,"target":"normal","type":"Water","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"hydrovortex","fullname":"move: Hydro Vortex","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"hyper beam":{"exists":true,"name":"Hyper Beam","num":63,"accuracy":90,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"recharge":1,"protect":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"hyperbeam","fullname":"move: Hyper Beam","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"hyper fang":{"exists":true,"name":"Hyper Fang","num":158,"accuracy":90,"basePower":80,"category":"Physical","isNonstandard":"Past","pp":15,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondary":{"chance":10,"volatileStatus":"flinch"},"target":"normal","type":"Normal","contestType":"Cool","desc":"Has a 10% chance to make the target flinch.","shortDesc":"10% chance to make the target flinch.","id":"hyperfang","fullname":"move: Hyper Fang","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":10,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"hyperspace fury":{"exists":true,"name":"Hyperspace Fury","num":621,"accuracy":true,"basePower":100,"category":"Physical","isNonstandard":"Past","pp":5,"priority":0,"flags":{"mirror":1,"authentic":1},"breaksProtect":true,"self":{"boosts":{"def":-1}},"secondary":null,"target":"normal","type":"Dark","contestType":"Tough","desc":"Lowers the user\'s Defense by 1 stage. This move cannot be used successfully unless the user\'s current form, while considering Transform, is Hoopa Unbound. If this move is successful, it breaks through the target\'s Baneful Bunker, Detect, King\'s Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target\'s side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target\'s side normally.","shortDesc":"Hoopa-U: Lowers user\'s Def by 1; breaks protect.","id":"hyperspacefury","fullname":"move: Hyperspace Fury","effectType":"Move","gen":6,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"hyperspace hole":{"exists":true,"name":"Hyperspace Hole","num":593,"accuracy":true,"basePower":80,"category":"Special","isNonstandard":"Past","pp":5,"priority":0,"flags":{"mirror":1,"authentic":1},"breaksProtect":true,"secondary":null,"target":"normal","type":"Psychic","contestType":"Clever","desc":"If this move is successful, it breaks through the target\'s Baneful Bunker, Detect, King\'s Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target\'s side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target\'s side normally.","shortDesc":"Breaks the target\'s protection for this turn.","id":"hyperspacehole","fullname":"move: Hyperspace Hole","effectType":"Move","gen":6,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"hyper voice":{"exists":true,"name":"Hyper Voice","num":304,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":null,"target":"allAdjacentFoes","type":"Normal","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent foes.","id":"hypervoice","fullname":"move: Hyper Voice","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"hypnosis":{"exists":true,"name":"Hypnosis","num":95,"accuracy":60,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"slp","secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"Causes the target to fall asleep.","shortDesc":"Causes the target to fall asleep.","id":"hypnosis","fullname":"move: Hypnosis","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"ice ball":{"exists":true,"name":"Ice Ball","num":301,"accuracy":90,"basePower":30,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"bullet":1,"contact":1,"protect":1,"mirror":1},"condition":{"duration":2,"onLockMove":"iceball"},"secondary":null,"target":"normal","type":"Ice","contestType":"Beautiful","desc":"If this move is successful, the user is locked into this move and cannot make another move until it misses, 5 turns have passed, or the attack cannot be used. Power doubles with each successful hit of this move and doubles again if Defense Curl was used previously by the user. If this move is called by Sleep Talk, the move is used for one turn. If this move hits an active Disguise during the effect, the power multiplier is paused but the turn counter is not, potentially allowing the multiplier to be used on the user\'s next move after this effect ends.","shortDesc":"Power doubles with each hit. Repeats for 5 turns.","id":"iceball","fullname":"move: Ice Ball","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"ice beam":{"exists":true,"name":"Ice Beam","num":58,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"frz"},"target":"normal","type":"Ice","contestType":"Beautiful","desc":"Has a 10% chance to freeze the target.","shortDesc":"10% chance to freeze the target.","id":"icebeam","fullname":"move: Ice Beam","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":10,"status":"frz"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"ice burn":{"exists":true,"name":"Ice Burn","num":554,"accuracy":90,"basePower":140,"category":"Special","pp":5,"priority":0,"flags":{"charge":1,"protect":1,"mirror":1},"secondary":{"chance":30,"status":"brn"},"target":"normal","type":"Ice","contestType":"Beautiful","desc":"Has a 30% chance to burn the target. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Charges turn 1. Hits turn 2. 30% burn.","id":"iceburn","fullname":"move: Ice Burn","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":30,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"ice fang":{"exists":true,"name":"Ice Fang","num":423,"accuracy":95,"basePower":65,"category":"Physical","pp":15,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondaries":[{"chance":10,"status":"frz"},{"chance":10,"volatileStatus":"flinch"}],"target":"normal","type":"Ice","contestType":"Cool","desc":"Has a 10% chance to freeze the target and a 10% chance to make it flinch.","shortDesc":"10% chance to freeze. 10% chance to flinch.","id":"icefang","fullname":"move: Ice Fang","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondary":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"ice hammer":{"exists":true,"name":"Ice Hammer","num":665,"accuracy":90,"basePower":100,"category":"Physical","isNonstandard":"Past","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"self":{"boosts":{"spe":-1}},"secondary":null,"target":"normal","type":"Ice","contestType":"Tough","desc":"Lowers the user\'s Speed by 1 stage.","shortDesc":"Lowers the user\'s Speed by 1.","id":"icehammer","fullname":"move: Ice Hammer","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"ice punch":{"exists":true,"name":"Ice Punch","num":8,"accuracy":100,"basePower":75,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":{"chance":10,"status":"frz"},"target":"normal","type":"Ice","contestType":"Beautiful","desc":"Has a 10% chance to freeze the target.","shortDesc":"10% chance to freeze the target.","id":"icepunch","fullname":"move: Ice Punch","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":10,"status":"frz"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"ice shard":{"exists":true,"name":"Ice Shard","num":420,"accuracy":100,"basePower":40,"category":"Physical","pp":30,"priority":1,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ice","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"Usually goes first.","id":"iceshard","fullname":"move: Ice Shard","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"icicle crash":{"exists":true,"name":"Icicle Crash","num":556,"accuracy":90,"basePower":85,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Ice","contestType":"Beautiful","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"iciclecrash","fullname":"move: Icicle Crash","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"icicle spear":{"exists":true,"name":"Icicle Spear","num":333,"accuracy":100,"basePower":25,"category":"Physical","pp":30,"priority":0,"flags":{"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Ice","zMove":{"basePower":140},"maxMove":{"basePower":130},"contestType":"Beautiful","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"iciclespear","fullname":"move: Icicle Spear","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"icy wind":{"exists":true,"name":"Icy Wind","num":196,"accuracy":95,"basePower":55,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spe":-1}},"target":"allAdjacentFoes","type":"Ice","contestType":"Beautiful","desc":"Has a 100% chance to lower the target\'s Speed by 1 stage.","shortDesc":"100% chance to lower the foe(s) Speed by 1.","id":"icywind","fullname":"move: Icy Wind","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":100,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":100}},"imprison":{"exists":true,"name":"Imprison","num":286,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"authentic":1},"volatileStatus":"imprison","condition":{"noCopy":true,"onFoeBeforeMovePriority":4},"secondary":null,"pressureTarget":"foeSide","target":"self","type":"Psychic","zMove":{"boost":{"spd":2}},"contestType":"Clever","desc":"The user prevents all opposing Pokemon from using any moves that the user also knows as long as the user remains active.","shortDesc":"No foe can use any move known by the user.","id":"imprison","fullname":"move: Imprison","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"incinerate":{"exists":true,"name":"Incinerate","num":510,"accuracy":100,"basePower":60,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Fire","contestType":"Tough","desc":"The target loses its held item if it is a Berry or a Gem. This move cannot cause Pokemon with the Sticky Hold Ability to lose their held item. Items lost to this move cannot be regained with Recycle or the Harvest Ability.","shortDesc":"Destroys the foe(s) Berry/Gem.","id":"incinerate","fullname":"move: Incinerate","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"inferno":{"exists":true,"name":"Inferno","num":517,"accuracy":50,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"status":"brn"},"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Has a 100% chance to burn the target.","shortDesc":"100% chance to burn the target.","id":"inferno","fullname":"move: Inferno","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":100,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"inferno overdrive":{"exists":true,"name":"Inferno Overdrive","num":640,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"firiumz","secondary":null,"target":"normal","type":"Fire","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"infernooverdrive","fullname":"move: Inferno Overdrive","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"infestation":{"exists":true,"name":"Infestation","num":611,"accuracy":100,"basePower":20,"category":"Special","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Bug","contestType":"Cute","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"infestation","fullname":"move: Infestation","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"ingrain":{"exists":true,"name":"Ingrain","num":275,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1,"nonsky":1},"volatileStatus":"ingrain","condition":{"onResidualOrder":7},"secondary":null,"target":"self","type":"Grass","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"The user has 1/16 of its maximum HP restored at the end of each turn, but it is prevented from switching out and other Pokemon cannot force the user to switch out. The user can still switch out if it uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the user leaves the field using Baton Pass, the replacement will remain trapped and still receive the healing effect. During the effect, the user can be hit normally by Ground-type attacks and be affected by Spikes, Toxic Spikes, and Sticky Web, even if the user is a Flying type or has the Levitate Ability.","shortDesc":"Traps/grounds user; heals 1/16 max HP per turn.","id":"ingrain","fullname":"move: Ingrain","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"instruct":{"exists":true,"name":"Instruct","num":689,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"The target immediately uses its last used move. Fails if the target has not made a move, if the move has 0 PP, if the target is Dynamaxed, if the target is preparing to use Beak Blast, Focus Punch, or Shell Trap, or if the move is Assist, Beak Blast, Belch, Bide, Celebrate, Copycat, Dynamax Cannon, Focus Punch, Ice Ball, Instruct, King\'s Shield, Me First, Metronome, Mimic, Mirror Move, Nature Power, Obstruct, Outrage, Petal Dance, Rollout, Shell Trap, Sketch, Sleep Talk, Struggle, Thrash, Transform, Uproar, any two-turn move, any recharge move, any Z-Move, or any Max or G-Max Move.","shortDesc":"The target immediately uses its last used move.","id":"instruct","fullname":"move: Instruct","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"ion deluge":{"exists":true,"name":"Ion Deluge","num":569,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":25,"priority":1,"flags":{},"pseudoWeather":"iondeluge","condition":{"duration":1,"onModifyTypePriority":-2},"secondary":null,"target":"all","type":"Electric","zMove":{"boost":{"spa":1}},"contestType":"Beautiful","desc":"Causes Normal-type moves to become Electric type this turn. The effect happens after other effects that change a move\'s type.","shortDesc":"Normal moves become Electric type this turn.","id":"iondeluge","fullname":"move: Ion Deluge","effectType":"Move","gen":6,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"iron defense":{"exists":true,"name":"Iron Defense","num":334,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"snatch":1},"boosts":{"def":2},"secondary":null,"target":"self","type":"Steel","zMove":{"effect":"clearnegativeboost"},"contestType":"Tough","desc":"Raises the user\'s Defense by 2 stages.","shortDesc":"Raises the user\'s Defense by 2.","id":"irondefense","fullname":"move: Iron Defense","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"iron head":{"exists":true,"name":"Iron Head","num":442,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Steel","contestType":"Tough","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"ironhead","fullname":"move: Iron Head","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"iron tail":{"exists":true,"name":"Iron Tail","num":231,"accuracy":75,"basePower":100,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"boosts":{"def":-1}},"target":"normal","type":"Steel","contestType":"Cool","desc":"Has a 30% chance to lower the target\'s Defense by 1 stage.","shortDesc":"30% chance to lower the target\'s Defense by 1.","id":"irontail","fullname":"move: Iron Tail","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":30,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"jaw lock":{"exists":true,"name":"Jaw Lock","num":746,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","desc":"Prevents the user and the target from switching out. The user and the target can still switch out if either of them is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field.","shortDesc":"Prevents both user and target from switching out.","id":"jawlock","fullname":"move: Jaw Lock","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"judgment":{"exists":true,"name":"Judgment","num":449,"accuracy":100,"basePower":100,"category":"Special","isNonstandard":"Past","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Beautiful","desc":"This move\'s type depends on the user\'s held Plate.","shortDesc":"Type varies based on the held Plate.","id":"judgment","fullname":"move: Judgment","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"jump kick":{"exists":true,"name":"Jump Kick","num":26,"accuracy":95,"basePower":100,"category":"Physical","isNonstandard":"Past","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"gravity":1},"hasCrashDamage":true,"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"If this attack is not successful, the user loses half of its maximum HP, rounded down, as crash damage. Pokemon with the Magic Guard Ability are unaffected by crash damage.","shortDesc":"User is hurt by 50% of its max HP if it misses.","id":"jumpkick","fullname":"move: Jump Kick","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":180}},"jungle healing":{"exists":true,"name":"Jungle Healing","num":816,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"heal":1,"authentic":1,"mystery":1},"secondary":null,"target":"allies","type":"Grass","desc":"Each Pokemon on the user\'s side restores 1/4 of its maximum HP, rounded half up, and has its status condition cured.","shortDesc":"User and allies: healed 1/4 max HP, status cured.","id":"junglehealing","fullname":"move: Jungle Healing","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"karate chop":{"exists":true,"name":"Karate Chop","num":2,"accuracy":100,"basePower":50,"category":"Physical","isNonstandard":"Past","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"karatechop","fullname":"move: Karate Chop","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":75},"zMove":{"basePower":100}},"kinesis":{"exists":true,"name":"Kinesis","num":134,"accuracy":80,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"accuracy":-1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"evasion":1}},"contestType":"Clever","desc":"Lowers the target\'s accuracy by 1 stage.","shortDesc":"Lowers the target\'s accuracy by 1.","id":"kinesis","fullname":"move: Kinesis","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"king\'s shield":{"exists":true,"name":"King\'s Shield","num":588,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":4,"flags":{},"stallingMove":true,"volatileStatus":"kingsshield","condition":{"duration":1,"onTryHitPriority":3},"secondary":null,"target":"self","type":"Steel","zMove":{"effect":"clearnegativeboost"},"contestType":"Cool","desc":"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon trying to make contact with the user have their Attack lowered by 1 stage. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn.","shortDesc":"Protects from damaging attacks. Contact: -1 Atk.","id":"kingsshield","fullname":"move: King\'s Shield","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"knock off":{"exists":true,"name":"Knock Off","num":282,"accuracy":100,"basePower":65,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"If the target is holding an item that can be removed from it, ignoring the Sticky Hold Ability, this move\'s power is multiplied by 1.5. If the user has not fainted, the target loses its held item. This move cannot cause Pokemon with the Sticky Hold Ability to lose their held item or cause a Kyogre, a Groudon, a Giratina, an Arceus, a Genesect, a Silvally, a Zacian, or a Zamazenta to lose their Blue Orb, Red Orb, Griseous Orb, Plate, Drive, Memory, Rusted Sword, or Rusted Shield respectively. Items lost to this move cannot be regained with Recycle or the Harvest Ability.","shortDesc":"1.5x damage if foe holds an item. Removes item.","id":"knockoff","fullname":"move: Knock Off","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"land\'s wrath":{"exists":true,"name":"Land\'s Wrath","num":616,"accuracy":100,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"allAdjacentFoes","type":"Ground","zMove":{"basePower":185},"contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent foes.","id":"landswrath","fullname":"move: Land\'s Wrath","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130}},"laser focus":{"exists":true,"name":"Laser Focus","num":673,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"snatch":1},"volatileStatus":"laserfocus","condition":{"duration":2},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"atk":1}},"contestType":"Cool","desc":"Until the end of the next turn, the user\'s attacks will be critical hits.","shortDesc":"Until the end of the next turn, user\'s moves crit.","id":"laserfocus","fullname":"move: Laser Focus","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"lash out":{"exists":true,"name":"Lash Out","num":808,"accuracy":100,"basePower":75,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","desc":"Power doubles if the user had a stat stage lowered this turn.","shortDesc":"2x power if the user had a stat lowered this turn.","id":"lashout","fullname":"move: Lash Out","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"last resort":{"exists":true,"name":"Last Resort","num":387,"accuracy":100,"basePower":140,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cute","desc":"This move fails unless the user knows this move and at least one other move, and has used all the other moves it knows at least once each since it became active or Transformed.","shortDesc":"Fails unless each known move has been used.","id":"lastresort","fullname":"move: Last Resort","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"lava plume":{"exists":true,"name":"Lava Plume","num":436,"accuracy":100,"basePower":80,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"status":"brn"},"target":"allAdjacent","type":"Fire","contestType":"Tough","desc":"Has a 30% chance to burn the target.","shortDesc":"30% chance to burn adjacent Pokemon.","id":"lavaplume","fullname":"move: Lava Plume","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":30,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"leafage":{"exists":true,"name":"Leafage","num":670,"accuracy":100,"basePower":40,"category":"Physical","pp":40,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"leafage","fullname":"move: Leafage","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"leaf blade":{"exists":true,"name":"Leaf Blade","num":348,"accuracy":100,"basePower":90,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Grass","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"leafblade","fullname":"move: Leaf Blade","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"leaf storm":{"exists":true,"name":"Leaf Storm","num":437,"accuracy":90,"basePower":130,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"self":{"boosts":{"spa":-2}},"secondary":null,"target":"normal","type":"Grass","contestType":"Beautiful","desc":"Lowers the user\'s Special Attack by 2 stages.","shortDesc":"Lowers the user\'s Sp. Atk by 2.","id":"leafstorm","fullname":"move: Leaf Storm","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"leaf tornado":{"exists":true,"name":"Leaf Tornado","num":536,"accuracy":90,"basePower":65,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":50,"boosts":{"accuracy":-1}},"target":"normal","type":"Grass","contestType":"Cool","desc":"Has a 50% chance to lower the target\'s accuracy by 1 stage.","shortDesc":"50% chance to lower the target\'s accuracy by 1.","id":"leaftornado","fullname":"move: Leaf Tornado","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":[{"chance":50,"boosts":{"accuracy":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"leech life":{"exists":true,"name":"Leech Life","num":141,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"heal":1},"drain":[1,2],"secondary":null,"target":"normal","type":"Bug","contestType":"Clever","desc":"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 50% of the damage dealt.","id":"leechlife","fullname":"move: Leech Life","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"leech seed":{"exists":true,"name":"Leech Seed","num":73,"accuracy":90,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"volatileStatus":"leechseed","condition":{"onResidualOrder":8},"secondary":null,"target":"normal","type":"Grass","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"The Pokemon at the user\'s position steals 1/8 of the target\'s maximum HP, rounded down, at the end of each turn. If Big Root is held by the recipient, the HP recovered is 1.3x normal, rounded half down. If the target uses Baton Pass, the replacement will continue being leeched. If the target switches out or uses Rapid Spin successfully, the effect ends. Grass-type Pokemon are immune to this move on use, but not its effect.","shortDesc":"1/8 of target\'s HP is restored to user every turn.","id":"leechseed","fullname":"move: Leech Seed","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"leer":{"exists":true,"name":"Leer","num":43,"accuracy":100,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"def":-1},"secondary":null,"target":"allAdjacentFoes","type":"Normal","zMove":{"boost":{"atk":1}},"contestType":"Cool","desc":"Lowers the target\'s Defense by 1 stage.","shortDesc":"Lowers the foe(s) Defense by 1.","id":"leer","fullname":"move: Leer","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"let\'s snuggle forever":{"exists":true,"name":"Let\'s Snuggle Forever","num":726,"accuracy":true,"basePower":190,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{"contact":1},"isZ":"mimikiumz","secondary":null,"target":"normal","type":"Fairy","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"letssnuggleforever","fullname":"move: Let\'s Snuggle Forever","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"lick":{"exists":true,"name":"Lick","num":122,"accuracy":100,"basePower":30,"category":"Physical","pp":30,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"status":"par"},"target":"normal","type":"Ghost","contestType":"Cute","desc":"Has a 30% chance to paralyze the target.","shortDesc":"30% chance to paralyze the target.","id":"lick","fullname":"move: Lick","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"life dew":{"exists":true,"name":"Life Dew","num":791,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1,"authentic":1},"heal":[1,4],"secondary":null,"target":"allies","type":"Water","desc":"Each Pokemon on the user\'s side restores 1/4 of its maximum HP, rounded half up.","shortDesc":"Heals the user and its allies by 1/4 their max HP.","id":"lifedew","fullname":"move: Life Dew","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"light of ruin":{"exists":true,"name":"Light of Ruin","num":617,"accuracy":90,"basePower":140,"category":"Special","isNonstandard":"Past","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"recoil":[1,2],"secondary":null,"target":"normal","type":"Fairy","contestType":"Beautiful","desc":"If the target lost HP, the user takes recoil damage equal to 1/2 the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 1/2 recoil.","id":"lightofruin","fullname":"move: Light of Ruin","effectType":"Move","gen":6,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"light screen":{"exists":true,"name":"Light Screen","num":113,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"snatch":1},"sideCondition":"lightscreen","condition":{"duration":5,"onSideResidualOrder":26,"onSideResidualSubOrder":2},"secondary":null,"target":"allySide","type":"Psychic","zMove":{"boost":{"spd":1}},"contestType":"Beautiful","desc":"For 5 turns, the user and its party members take 0.5x damage from special attacks, or 0.66x damage if in a Double Battle. Damage is not reduced further with Aurora Veil. Critical hits ignore this effect. It is removed from the user\'s side if the user or an ally is successfully hit by Brick Break, Psychic Fangs, or Defog. Lasts for 8 turns if the user is holding Light Clay. Fails if the effect is already active on the user\'s side.","shortDesc":"For 5 turns, special damage to allies is halved.","id":"lightscreen","fullname":"move: Light Screen","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"light that burns the sky":{"exists":true,"name":"Light That Burns the Sky","num":723,"accuracy":true,"basePower":200,"category":"Special","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"ignoreAbility":true,"isZ":"ultranecroziumz","secondary":null,"target":"normal","type":"Psychic","contestType":"Cool","desc":"This move becomes a physical attack if the user\'s Attack is greater than its Special Attack, including stat stage changes. This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Physical if user\'s Atk > Sp. Atk. Ignores Abilities.","id":"lightthatburnsthesky","fullname":"move: Light That Burns the Sky","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"liquidation":{"exists":true,"name":"Liquidation","num":710,"accuracy":100,"basePower":85,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":20,"boosts":{"def":-1}},"target":"normal","type":"Water","contestType":"Cool","desc":"Has a 20% chance to lower the target\'s Defense by 1 stage.","shortDesc":"20% chance to lower the target\'s Defense by 1.","id":"liquidation","fullname":"move: Liquidation","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":20,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"lock on":{"exists":true,"name":"Lock-On","num":199,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"condition":{"noCopy":true,"duration":2,"onSourceInvulnerabilityPriority":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"Until the end of the next turn, the target cannot avoid the user\'s moves, even if the target is in the middle of a two-turn move. The effect ends if either the user or the target leaves the field. Fails if this effect is active for the user.","shortDesc":"User\'s next move will not miss the target.","id":"lockon","fullname":"move: Lock-On","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"lovely kiss":{"exists":true,"name":"Lovely Kiss","num":142,"accuracy":75,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"slp","secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Beautiful","desc":"Causes the target to fall asleep.","shortDesc":"Causes the target to fall asleep.","id":"lovelykiss","fullname":"move: Lovely Kiss","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"low kick":{"exists":true,"name":"Low Kick","num":67,"accuracy":100,"basePower":0,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","zMove":{"basePower":160},"contestType":"Tough","desc":"This move\'s power is 20 if the target weighs less than 10 kg, 40 if less than 25 kg, 60 if less than 50 kg, 80 if less than 100 kg, 100 if less than 200 kg, and 120 if greater than or equal to 200 kg.","shortDesc":"More power the heavier the target.","id":"lowkick","fullname":"move: Low Kick","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100}},"low sweep":{"exists":true,"name":"Low Sweep","num":490,"accuracy":100,"basePower":65,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spe":-1}},"target":"normal","type":"Fighting","contestType":"Clever","desc":"Has a 100% chance to lower the target\'s Speed by 1 stage.","shortDesc":"100% chance to lower the target\'s Speed by 1.","id":"lowsweep","fullname":"move: Low Sweep","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":[{"chance":100,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":85},"zMove":{"basePower":120}},"lucky chant":{"exists":true,"name":"Lucky Chant","num":381,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":30,"priority":0,"flags":{"snatch":1},"sideCondition":"luckychant","condition":{"duration":5,"onCriticalHit":false,"onSideResidualOrder":26,"onSideResidualSubOrder":6},"secondary":null,"target":"allySide","type":"Normal","zMove":{"boost":{"evasion":1}},"contestType":"Cute","desc":"For 5 turns, the user and its party members cannot be struck by a critical hit. Fails if the effect is already active on the user\'s side.","shortDesc":"For 5 turns, shields user\'s party from critical hits.","id":"luckychant","fullname":"move: Lucky Chant","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"lunar dance":{"exists":true,"name":"Lunar Dance","num":461,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1,"dance":1},"selfdestruct":"ifHit","slotCondition":"lunardance","condition":{},"secondary":null,"target":"self","type":"Psychic","contestType":"Beautiful","desc":"The user faints, and if the Pokemon brought out to replace it does not have full HP or PP, or has a non-volatile status condition, its HP and PP are fully restored along with having any non-volatile status condition cured. The replacement is sent out at the end of the turn, and the healing happens before hazards take effect. This effect continues until a Pokemon that meets any of these conditions switches in at the user\'s position or gets swapped into the position with Ally Switch. Fails if the user is the last unfainted Pokemon in its party.","shortDesc":"User faints. Next hurt Pkmn is cured, max HP/PP.","id":"lunardance","fullname":"move: Lunar Dance","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"lunge":{"exists":true,"name":"Lunge","num":679,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"atk":-1}},"target":"normal","type":"Bug","contestType":"Cute","desc":"Has a 100% chance to lower the target\'s Attack by 1 stage.","shortDesc":"100% chance to lower the target\'s Attack by 1.","id":"lunge","fullname":"move: Lunge","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":[{"chance":100,"boosts":{"atk":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"luster purge":{"exists":true,"name":"Luster Purge","num":295,"accuracy":100,"basePower":70,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":50,"boosts":{"spd":-1}},"target":"normal","type":"Psychic","contestType":"Clever","desc":"Has a 50% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"50% chance to lower the target\'s Sp. Def by 1.","id":"lusterpurge","fullname":"move: Luster Purge","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":50,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"mach punch":{"exists":true,"name":"Mach Punch","num":183,"accuracy":100,"basePower":40,"category":"Physical","pp":30,"priority":1,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"No additional effect.","shortDesc":"Usually goes first.","id":"machpunch","fullname":"move: Mach Punch","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"magical leaf":{"exists":true,"name":"Magical Leaf","num":345,"accuracy":true,"basePower":60,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Beautiful","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"magicalleaf","fullname":"move: Magical Leaf","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"magic coat":{"exists":true,"name":"Magic Coat","num":277,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":4,"flags":{},"volatileStatus":"magiccoat","condition":{"duration":1,"onTryHitPriority":2},"secondary":null,"target":"self","type":"Psychic","zMove":{"boost":{"spd":2}},"contestType":"Beautiful","desc":"Until the end of the turn, the user is unaffected by certain non-damaging moves directed at it and will instead use such moves against the original user. Moves reflected in this way are unable to be reflected again by this or the Magic Bounce Ability\'s effect. Spikes, Stealth Rock, Sticky Web, and Toxic Spikes can only be reflected once per side, by the leftmost Pokemon under this or the Magic Bounce Ability\'s effect. The Lightning Rod and Storm Drain Abilities redirect their respective moves before this move takes effect.","shortDesc":"Bounces back certain non-damaging moves.","id":"magiccoat","fullname":"move: Magic Coat","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"magic powder":{"exists":true,"name":"Magic Powder","num":750,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"powder":1,"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","desc":"Causes the target to become a Psychic type. Fails if the target is an Arceus or a Silvally, or if the target is already purely Psychic type.","shortDesc":"Changes the target\'s type to Psychic.","id":"magicpowder","fullname":"move: Magic Powder","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"magic room":{"exists":true,"name":"Magic Room","num":478,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"mirror":1},"pseudoWeather":"magicroom","condition":{"duration":5,"onFieldResidualOrder":27,"onFieldResidualSubOrder":6},"secondary":null,"target":"all","type":"Psychic","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"For 5 turns, the held items of all active Pokemon have no effect. An item\'s effect of causing forme changes is unaffected, but any other effects from such items are negated. During the effect, Fling and Natural Gift are prevented from being used by all active Pokemon. If this move is used during the effect, the effect ends.","shortDesc":"For 5 turns, all held items have no effect.","id":"magicroom","fullname":"move: Magic Room","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"magma storm":{"exists":true,"name":"Magma Storm","num":463,"accuracy":75,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Fire","contestType":"Tough","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"magmastorm","fullname":"move: Magma Storm","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"magnet bomb":{"exists":true,"name":"Magnet Bomb","num":443,"accuracy":true,"basePower":60,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Steel","contestType":"Cool","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"magnetbomb","fullname":"move: Magnet Bomb","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"magnetic flux":{"exists":true,"name":"Magnetic Flux","num":602,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1,"distance":1,"authentic":1},"secondary":null,"target":"allySide","type":"Electric","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"Raises the Defense and Special Defense of Pokemon on the user\'s side with the Plus or Minus Abilities by 1 stage.","shortDesc":"Raises Def, Sp. Def of allies with Plus/Minus by 1.","id":"magneticflux","fullname":"move: Magnetic Flux","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"magnet rise":{"exists":true,"name":"Magnet Rise","num":393,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"gravity":1},"volatileStatus":"magnetrise","condition":{"duration":5,"onResidualOrder":18},"secondary":null,"target":"self","type":"Electric","zMove":{"boost":{"evasion":1}},"contestType":"Clever","desc":"For 5 turns, the user is immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability as long as it remains active. If the user uses Baton Pass, the replacement will gain the effect. Ingrain, Smack Down, Thousand Arrows, and Iron Ball override this move if the user is under any of their effects. Fails if the user is already under this effect or the effects of Ingrain, Smack Down, or Thousand Arrows.","shortDesc":"For 5 turns, the user has immunity to Ground.","id":"magnetrise","fullname":"move: Magnet Rise","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"magnitude":{"exists":true,"name":"Magnitude","num":222,"accuracy":100,"basePower":0,"category":"Physical","isNonstandard":"Past","pp":30,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"allAdjacent","type":"Ground","zMove":{"basePower":140},"maxMove":{"basePower":140},"contestType":"Tough","desc":"The power of this move varies; 5% chances for 10 and 150 power, 10% chances for 30 and 110 power, 20% chances for 50 and 90 power, and 30% chance for 70 power. Damage doubles if the target is using Dig.","shortDesc":"Hits adjacent Pokemon. Power varies; 2x on Dig.","id":"magnitude","fullname":"move: Magnitude","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"malicious moonsault":{"exists":true,"name":"Malicious Moonsault","num":696,"accuracy":true,"basePower":180,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{"contact":1},"isZ":"inciniumz","secondary":null,"target":"normal","type":"Dark","contestType":"Cool","desc":"Damage doubles and no accuracy check is done if the target has used Minimize while active.","shortDesc":"Damage doubles if the target used Minimize.","id":"maliciousmoonsault","fullname":"move: Malicious Moonsault","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"mat block":{"exists":true,"name":"Mat Block","num":561,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"nonsky":1},"stallingMove":true,"sideCondition":"matblock","condition":{"duration":1,"onTryHitPriority":3},"secondary":null,"target":"allySide","type":"Fighting","zMove":{"boost":{"def":1}},"contestType":"Cool","desc":"The user and its party members are protected from damaging attacks made by other Pokemon, including allies, during this turn. Fails unless it is the user\'s first turn on the field, if the user moves last this turn, or if this move is already in effect for the user\'s side.","shortDesc":"Protects allies from damaging attacks. Turn 1 only.","id":"matblock","fullname":"move: Mat Block","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"max airstream":{"exists":true,"name":"Max Airstream","num":766,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Flying","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Speed of each Pokemon on the user\'s side is raised by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Allies: +1 Speed.","id":"maxairstream","fullname":"move: Max Airstream","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max darkness":{"exists":true,"name":"Max Darkness","num":772,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Dark","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Special Defense of each Pokemon on the opposing side is lowered by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Foes: -1 Sp. Def.","id":"maxdarkness","fullname":"move: Max Darkness","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max flare":{"exists":true,"name":"Max Flare","num":757,"accuracy":true,"basePower":100,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Fire","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Sunny Day begins.","shortDesc":"Base move affects power. Starts Sunny Day.","id":"maxflare","fullname":"move: Max Flare","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max flutterby":{"exists":true,"name":"Max Flutterby","num":758,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Bug","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Special Attack of each Pokemon on the opposing side is lowered by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Foes: -1 Sp. Atk.","id":"maxflutterby","fullname":"move: Max Flutterby","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max geyser":{"exists":true,"name":"Max Geyser","num":765,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Water","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Rain Dance begins.","shortDesc":"Base move affects power. Starts Rain Dance.","id":"maxgeyser","fullname":"move: Max Geyser","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max guard":{"exists":true,"name":"Max Guard","num":743,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":4,"flags":{},"isMax":true,"stallingMove":true,"volatileStatus":"maxguard","condition":{"duration":1,"onTryHitPriority":3},"secondary":null,"target":"self","type":"Normal","contestType":"Cool","desc":"The user is protected from nearly all attacks made by other Pokemon during this turn, including Max and G-Max Moves. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Max Guard, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn.","shortDesc":"Protects user from moves & Max Moves this turn.","id":"maxguard","fullname":"move: Max Guard","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"max hailstorm":{"exists":true,"name":"Max Hailstorm","num":763,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Ice","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Hail begins.","shortDesc":"Base move affects power. Starts Hail.","id":"maxhailstorm","fullname":"move: Max Hailstorm","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max knuckle":{"exists":true,"name":"Max Knuckle","num":761,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Fighting","contestType":"Cool","desc":"Boosts the user and its allies\' Attack by 1 stage. BP scales with the base move\'s BP.","shortDesc":"Base move affects power. Allies: +1 Attack.","id":"maxknuckle","fullname":"move: Max Knuckle","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max lightning":{"exists":true,"name":"Max Lightning","num":759,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Electric","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Electric Terrain begins.","shortDesc":"Base move affects power. Starts Electric Terrain.","id":"maxlightning","fullname":"move: Max Lightning","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max mindstorm":{"exists":true,"name":"Max Mindstorm","num":769,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Psychic","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Psychic Terrain begins.","shortDesc":"Base move affects power. Starts Psychic Terrain.","id":"maxmindstorm","fullname":"move: Max Mindstorm","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max ooze":{"exists":true,"name":"Max Ooze","num":764,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Poison","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Special Attack of each Pokemon on the user\'s side is raised by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Allies: +1 Sp. Atk.","id":"maxooze","fullname":"move: Max Ooze","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max overgrowth":{"exists":true,"name":"Max Overgrowth","num":773,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Grass","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Grassy Terrain begins.","shortDesc":"Base move affects power. Starts Grassy Terrain.","id":"maxovergrowth","fullname":"move: Max Overgrowth","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max phantasm":{"exists":true,"name":"Max Phantasm","num":762,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Ghost","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Defense of each Pokemon on the opposing side is lowered by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Foes: -1 Defense.","id":"maxphantasm","fullname":"move: Max Phantasm","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max quake":{"exists":true,"name":"Max Quake","num":771,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Ground","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Special Defense of each Pokemon on the user\'s side is raised by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Allies: +1 Sp. Def.","id":"maxquake","fullname":"move: Max Quake","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max rockfall":{"exists":true,"name":"Max Rockfall","num":770,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Rock","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Sandstorm begins.","shortDesc":"Base move affects power. Starts Sandstorm.","id":"maxrockfall","fullname":"move: Max Rockfall","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max starfall":{"exists":true,"name":"Max Starfall","num":767,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Fairy","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the effect of Misty Terrain begins.","shortDesc":"Base move affects power. Starts Misty Terrain.","id":"maxstarfall","fullname":"move: Max Starfall","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max steelspike":{"exists":true,"name":"Max Steelspike","num":774,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Steel","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Defense of each Pokemon on the user\'s side is raised by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Allies: +1 Defense.","id":"maxsteelspike","fullname":"move: Max Steelspike","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max strike":{"exists":true,"name":"Max Strike","num":760,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Normal","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Speed of each Pokemon on the opposing side is lowered by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Foes: -1 Speed.","id":"maxstrike","fullname":"move: Max Strike","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"max wyrmwind":{"exists":true,"name":"Max Wyrmwind","num":768,"accuracy":true,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{},"isMax":true,"self":{},"target":"adjacentFoe","type":"Dragon","contestType":"Cool","desc":"Power is equal to the base move\'s Max Move power. If this move is successful, the Attack of each Pokemon on the opposing side is lowered by 1 stage, even if they have a substitute.","shortDesc":"Base move affects power. Foes: -1 Attack.","id":"maxwyrmwind","fullname":"move: Max Wyrmwind","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"mean look":{"exists":true,"name":"Mean Look","num":212,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"reflectable":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spd":1}},"contestType":"Beautiful","desc":"Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.","shortDesc":"Prevents the target from switching out.","id":"meanlook","fullname":"move: Mean Look","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"meditate":{"exists":true,"name":"Meditate","num":96,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":40,"priority":0,"flags":{"snatch":1},"boosts":{"atk":1},"secondary":null,"target":"self","type":"Psychic","zMove":{"boost":{"atk":1}},"contestType":"Beautiful","desc":"Raises the user\'s Attack by 1 stage.","shortDesc":"Raises the user\'s Attack by 1.","id":"meditate","fullname":"move: Meditate","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"me first":{"exists":true,"name":"Me First","num":382,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"authentic":1},"condition":{"duration":1,"onBasePowerPriority":12},"secondary":null,"target":"adjacentFoe","type":"Normal","zMove":{"boost":{"spe":2}},"contestType":"Clever","desc":"The user uses the move the target chose for use this turn against it, if possible, with its power multiplied by 1.5. The move must be a damaging move other than Beak Blast, Chatter, Counter, Covet, Focus Punch, Me First, Metal Burst, Mirror Coat, Shell Trap, Struggle, Thief, or any Z-Move. Fails if the target moves before the user. Ignores the target\'s substitute for the purpose of copying the move.","shortDesc":"Copies a foe at 1.5x power. User must be faster.","id":"mefirst","fullname":"move: Me First","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"mega drain":{"exists":true,"name":"Mega Drain","num":72,"accuracy":100,"basePower":40,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"heal":1},"drain":[1,2],"secondary":null,"target":"normal","type":"Grass","zMove":{"basePower":120},"contestType":"Clever","desc":"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 50% of the damage dealt.","id":"megadrain","fullname":"move: Mega Drain","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90}},"megahorn":{"exists":true,"name":"Megahorn","num":224,"accuracy":85,"basePower":120,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Bug","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"megahorn","fullname":"move: Megahorn","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"mega kick":{"exists":true,"name":"Mega Kick","num":25,"accuracy":75,"basePower":120,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"megakick","fullname":"move: Mega Kick","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"mega punch":{"exists":true,"name":"Mega Punch","num":5,"accuracy":85,"basePower":80,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"megapunch","fullname":"move: Mega Punch","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"memento":{"exists":true,"name":"Memento","num":262,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"boosts":{"atk":-2,"spa":-2},"selfdestruct":"ifHit","secondary":null,"target":"normal","type":"Dark","zMove":{"effect":"healreplacement"},"contestType":"Tough","desc":"Lowers the target\'s Attack and Special Attack by 2 stages. The user faints unless this move misses or there is no target. Fails entirely if this move hits a substitute, but does not fail if the target\'s stats cannot be changed.","shortDesc":"Lowers target\'s Attack, Sp. Atk by 2. User faints.","id":"memento","fullname":"move: Memento","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"menacing moonraze maelstrom":{"exists":true,"name":"Menacing Moonraze Maelstrom","num":725,"accuracy":true,"basePower":200,"category":"Special","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"lunaliumz","ignoreAbility":true,"secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Ignores the Abilities of other Pokemon.","id":"menacingmoonrazemaelstrom","fullname":"move: Menacing Moonraze Maelstrom","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"metal burst":{"exists":true,"name":"Metal Burst","num":368,"accuracy":100,"basePower":0,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"scripted","type":"Steel","contestType":"Cool","desc":"Deals damage to the last opposing Pokemon to hit the user with a physical or special attack this turn equal to 1.5 times the HP lost by the user from that attack, rounded down. If the user did not lose HP from that attack, this move deals 1 HP of damage instead. If that opposing Pokemon\'s position is no longer in use and there is another opposing Pokemon on the field, the damage is done to it instead. Only the last hit of a multi-hit attack is counted. Fails if the user was not hit by an opposing Pokemon\'s physical or special attack this turn.","shortDesc":"If hit by an attack, returns 1.5x damage.","id":"metalburst","fullname":"move: Metal Burst","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"metal claw":{"exists":true,"name":"Metal Claw","num":232,"accuracy":95,"basePower":50,"category":"Physical","pp":35,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":10,"self":{"boosts":{"atk":1}}},"target":"normal","type":"Steel","contestType":"Cool","desc":"Has a 10% chance to raise the user\'s Attack by 1 stage.","shortDesc":"10% chance to raise the user\'s Attack by 1.","id":"metalclaw","fullname":"move: Metal Claw","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":10,"self":{"boosts":{"atk":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"metal sound":{"exists":true,"name":"Metal Sound","num":319,"accuracy":85,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"sound":1,"authentic":1,"mystery":1},"boosts":{"spd":-2},"secondary":null,"target":"normal","type":"Steel","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"Lowers the target\'s Special Defense by 2 stages.","shortDesc":"Lowers the target\'s Sp. Def by 2.","id":"metalsound","fullname":"move: Metal Sound","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"meteor assault":{"exists":true,"name":"Meteor Assault","num":794,"accuracy":100,"basePower":150,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"recharge":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Fighting","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"meteorassault","fullname":"move: Meteor Assault","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":200}},"meteor beam":{"exists":true,"name":"Meteor Beam","num":800,"accuracy":90,"basePower":120,"category":"Special","pp":10,"priority":0,"flags":{"charge":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Rock","desc":"This attack charges on the first turn and executes on the second. Raises the user\'s Special Attack by 1 stage on the first turn. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Raises user\'s Sp. Atk by 1 on turn 1. Hits turn 2.","id":"meteorbeam","fullname":"move: Meteor Beam","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"meteor mash":{"exists":true,"name":"Meteor Mash","num":309,"accuracy":90,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":{"chance":20,"self":{"boosts":{"atk":1}}},"target":"normal","type":"Steel","contestType":"Cool","desc":"Has a 20% chance to raise the user\'s Attack by 1 stage.","shortDesc":"20% chance to raise the user\'s Attack by 1.","id":"meteormash","fullname":"move: Meteor Mash","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":20,"self":{"boosts":{"atk":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"metronome":{"exists":true,"name":"Metronome","num":118,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{},"noMetronome":["After You","Apple Acid","Assist","Astral Barrage","Aura Wheel","Baneful Bunker","Beak Blast","Behemoth Bash","Behemoth Blade","Belch","Bestow","Body Press","Branch Poke","Breaking Swipe","Celebrate","Chatter","Clangorous Soul","Copycat","Counter","Covet","Crafty Shield","Decorate","Destiny Bond","Detect","Diamond Storm","Double Iron Bash","Dragon Ascent","Dragon Energy","Drum Beating","Dynamax Cannon","Endure","Eternabeam","False Surrender","Feint","Fiery Wrath","Fleur Cannon","Focus Punch","Follow Me","Freeze Shock","Freezing Glare","Glacial Lance","Grav Apple","Helping Hand","Hold Hands","Hyperspace Fury","Hyperspace Hole","Ice Burn","Instruct","Jungle Healing","King\'s Shield","Life Dew","Light of Ruin","Mat Block","Me First","Meteor Assault","Metronome","Mimic","Mind Blown","Mirror Coat","Mirror Move","Moongeist Beam","Nature Power","Nature\'s Madness","Obstruct","Origin Pulse","Overdrive","Photon Geyser","Plasma Fists","Precipice Blades","Protect","Pyro Ball","Quash","Quick Guard","Rage Powder","Relic Song","Secret Sword","Shell Trap","Sketch","Sleep Talk","Snap Trap","Snarl","Snatch","Snore","Spectral Thief","Spiky Shield","Spirit Break","Spotlight","Steam Eruption","Steel Beam","Strange Steam","Struggle","Sunsteel Strike","Surging Strikes","Switcheroo","Techno Blast","Thief","Thousand Arrows","Thousand Waves","Thunder Cage","Thunderous Kick","Transform","Trick","V-create","Wicked Blow","Wide Guard"],"secondary":null,"target":"self","type":"Normal","contestType":"Cute","desc":"A random move is selected for use, other than After You, Apple Acid, Assist, Astral Barrage, Aura Wheel, Baneful Bunker, Beak Blast, Behemoth Bash, Behemoth Blade, Belch, Bestow, Body Press, Branch Poke, Breaking Swipe, Celebrate, Chatter, Clangorous Soul, Copycat, Counter, Covet, Crafty Shield, Decorate, Destiny Bond, Detect, Diamond Storm, Double Iron Bash, Dragon Ascent, Dragon Energy, Drum Beating, Dynamax Cannon, Endure, Eternabeam, False Surrender, Feint, Fiery Wrath, Fleur Cannon, Focus Punch, Follow Me, Freeze Shock, Freezing Glare, Glacial Lance, Grav Apple, Helping Hand, Hold Hands, Hyperspace Fury, Hyperspace Hole, Ice Burn, Instruct, Jungle Healing, King\'s Shield, Life Dew, Light of Ruin, Mat Block, Me First, Meteor Assault, Metronome, Mimic, Mind Blown, Mirror Coat, Mirror Move, Moongeist Beam, Nature Power, Nature\'s Madness, Obstruct, Origin Pulse, Overdrive, Photon Geyser, Plasma Fists, Precipice Blades, Protect, Pyro Ball, Quash, Quick Guard, Rage Powder, Relic Song, Secret Sword, Shell Trap, Sketch, Sleep Talk, Snap Trap, Snarl, Snatch, Snore, Spectral Thief, Spiky Shield, Spirit Break, Spotlight, Steam Eruption, Steel Beam, Strange Steam, Struggle, Sunsteel Strike, Surging Strikes, Switcheroo, Techno Blast, Thief, Thousand Arrows, Thousand Waves, Thunder Cage, Thunderous Kick, Transform, Trick, V-create, Wicked Blow, or Wide Guard.","shortDesc":"Picks a random move.","id":"metronome","fullname":"move: Metronome","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"milk drink":{"exists":true,"name":"Milk Drink","num":208,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"heal":[1,2],"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"The user restores 1/2 of its maximum HP, rounded half up.","shortDesc":"Heals the user by 50% of its max HP.","id":"milkdrink","fullname":"move: Milk Drink","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"mimic":{"exists":true,"name":"Mimic","num":102,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"accuracy":1}},"contestType":"Cute","desc":"While the user remains active, this move is replaced by the last move used by the target. The copied move has the maximum PP for that move. Fails if the target has not made a move, if the user has Transformed, if the user already knows the move, or if the move is Chatter, Mimic, Sketch, Struggle, Transform, or any Z-Move.","shortDesc":"The last move the target used replaces this one.","id":"mimic","fullname":"move: Mimic","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"mind blown":{"exists":true,"name":"Mind Blown","num":720,"accuracy":100,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"mindBlownRecoil":true,"secondary":null,"target":"allAdjacent","type":"Fire","contestType":"Cool","desc":"Whether or not this move is successful and even if it would cause fainting, the user loses 1/2 of its maximum HP, rounded up, unless the user has the Magic Guard Ability. This move is prevented from executing and the user does not lose HP if any active Pokemon has the Damp Ability, or if this move is Fire type and the user is affected by Powder or the weather is Primordial Sea.","shortDesc":"User loses 50% max HP. Hits adjacent Pokemon.","id":"mindblown","fullname":"move: Mind Blown","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"mind reader":{"exists":true,"name":"Mind Reader","num":170,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"Until the end of the next turn, the target cannot avoid the user\'s moves, even if the target is in the middle of a two-turn move. The effect ends if either the user or the target leaves the field. Fails if this effect is active for the user.","shortDesc":"User\'s next move will not miss the target.","id":"mindreader","fullname":"move: Mind Reader","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"minimize":{"exists":true,"name":"Minimize","num":107,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1},"volatileStatus":"minimize","condition":{"noCopy":true},"boosts":{"evasion":2},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"Raises the user\'s evasiveness by 2 stages. Whether or not the user\'s evasiveness was changed, Body Slam, Dragon Rush, Flying Press, Heat Crash, Heavy Slam, Malicious Moonsault, Steamroller, and Stomp will not check accuracy and have their damage doubled if used against the user while it is active.","shortDesc":"Raises the user\'s evasiveness by 2.","id":"minimize","fullname":"move: Minimize","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"miracle eye":{"exists":true,"name":"Miracle Eye","num":357,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"volatileStatus":"miracleeye","condition":{"noCopy":true},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"As long as the target remains active, its evasiveness stat stage is ignored during accuracy checks against it if it is greater than 0, and Psychic-type attacks can hit the target if it is a Dark type. Fails if the target is already affected, or affected by Foresight or Odor Sleuth.","shortDesc":"Psychic hits Dark. Evasiveness ignored.","id":"miracleeye","fullname":"move: Miracle Eye","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"mirror coat":{"exists":true,"name":"Mirror Coat","num":243,"accuracy":100,"basePower":0,"category":"Special","pp":20,"priority":-5,"flags":{"protect":1},"condition":{"duration":1,"noCopy":true,"onRedirectTargetPriority":-1},"secondary":null,"target":"scripted","type":"Psychic","contestType":"Beautiful","desc":"Deals damage to the last opposing Pokemon to hit the user with a special attack this turn equal to twice the HP lost by the user from that attack. If the user did not lose HP from the attack, this move deals 1 HP of damage instead. If that opposing Pokemon\'s position is no longer in use and there is another opposing Pokemon on the field, the damage is done to it instead. Only the last hit of a multi-hit attack is counted. Fails if the user was not hit by an opposing Pokemon\'s special attack this turn.","shortDesc":"If hit by special attack, returns double damage.","id":"mirrorcoat","fullname":"move: Mirror Coat","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"mirror move":{"exists":true,"name":"Mirror Move","num":119,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{},"secondary":null,"target":"normal","type":"Flying","zMove":{"boost":{"atk":2}},"contestType":"Clever","desc":"The user uses the last move used by the target. The copied move is used against that target, if possible. Fails if the target has not made a move, or if the last move used cannot be copied by this move.","shortDesc":"User uses the target\'s last used move against it.","id":"mirrormove","fullname":"move: Mirror Move","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"mirror shot":{"exists":true,"name":"Mirror Shot","num":429,"accuracy":85,"basePower":65,"category":"Special","isNonstandard":"Past","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"boosts":{"accuracy":-1}},"target":"normal","type":"Steel","contestType":"Beautiful","desc":"Has a 30% chance to lower the target\'s accuracy by 1 stage.","shortDesc":"30% chance to lower the target\'s accuracy by 1.","id":"mirrorshot","fullname":"move: Mirror Shot","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":30,"boosts":{"accuracy":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"mist":{"exists":true,"name":"Mist","num":54,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"snatch":1},"sideCondition":"mist","condition":{"duration":5,"onSideResidualOrder":26,"onSideResidualSubOrder":4},"secondary":null,"target":"allySide","type":"Ice","zMove":{"effect":"heal"},"contestType":"Beautiful","desc":"For 5 turns, the user and its party members are protected from having their stat stages lowered by other Pokemon. Fails if the effect is already active on the user\'s side.","shortDesc":"For 5 turns, protects user\'s party from stat drops.","id":"mist","fullname":"move: Mist","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"mist ball":{"exists":true,"name":"Mist Ball","num":296,"accuracy":100,"basePower":70,"category":"Special","pp":5,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":50,"boosts":{"spa":-1}},"target":"normal","type":"Psychic","contestType":"Clever","desc":"Has a 50% chance to lower the target\'s Special Attack by 1 stage.","shortDesc":"50% chance to lower the target\'s Sp. Atk by 1.","id":"mistball","fullname":"move: Mist Ball","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":50,"boosts":{"spa":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"misty explosion":{"exists":true,"name":"Misty Explosion","num":802,"accuracy":100,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"selfdestruct":"always","secondary":null,"target":"allAdjacent","type":"Fairy","desc":"If the current terrain is Misty Terrain and the user is grounded, this move\'s power is multiplied by 1.5. The user faints after using this move, even if this move fails for having no target. This move is prevented from executing if any active Pokemon has the Damp Ability.","shortDesc":"User faints. User on Misty Terrain: 1.5x power.","id":"mistyexplosion","fullname":"move: Misty Explosion","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"misty terrain":{"exists":true,"name":"Misty Terrain","num":581,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"nonsky":1},"terrain":"mistyterrain","condition":{"duration":5,"onBasePowerPriority":6,"onFieldResidualOrder":27,"onFieldResidualSubOrder":7},"secondary":null,"target":"all","type":"Fairy","zMove":{"boost":{"spd":1}},"contestType":"Beautiful","desc":"For 5 turns, the terrain becomes Misty Terrain. During the effect, the power of Dragon-type attacks used against grounded Pokemon is multiplied by 0.5 and grounded Pokemon cannot be inflicted with a non-volatile status condition nor confusion. Grounded Pokemon can become affected by Yawn but cannot fall asleep from its effect. Camouflage transforms the user into a Fairy type, Nature Power becomes Moonblast, and Secret Power has a 30% chance to lower Special Attack by 1 stage. Fails if the current terrain is Misty Terrain.","shortDesc":"5 turns. Can\'t status,-Dragon power vs grounded.","id":"mistyterrain","fullname":"move: Misty Terrain","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"moonblast":{"exists":true,"name":"Moonblast","num":585,"accuracy":100,"basePower":95,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"boosts":{"spa":-1}},"target":"normal","type":"Fairy","contestType":"Beautiful","desc":"Has a 30% chance to lower the target\'s Special Attack by 1 stage.","shortDesc":"30% chance to lower the target\'s Sp. Atk by 1.","id":"moonblast","fullname":"move: Moonblast","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":[{"chance":30,"boosts":{"spa":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"moongeist beam":{"exists":true,"name":"Moongeist Beam","num":714,"accuracy":100,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"ignoreAbility":true,"secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Ignores the Abilities of other Pokemon.","id":"moongeistbeam","fullname":"move: Moongeist Beam","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"moonlight":{"exists":true,"name":"Moonlight","num":236,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"snatch":1,"heal":1},"secondary":null,"target":"self","type":"Fairy","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"The user restores 1/2 of its maximum HP if Delta Stream or no weather conditions are in effect or if the user is holding Utility Umbrella, 2/3 of its maximum HP if the weather is Desolate Land or Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm, all rounded half down.","shortDesc":"Heals the user by a weather-dependent amount.","id":"moonlight","fullname":"move: Moonlight","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"morning sun":{"exists":true,"name":"Morning Sun","num":234,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"snatch":1,"heal":1},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"The user restores 1/2 of its maximum HP if Delta Stream or no weather conditions are in effect or if the user is holding Utility Umbrella, 2/3 of its maximum HP if the weather is Desolate Land or Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm, all rounded half down.","shortDesc":"Heals the user by a weather-dependent amount.","id":"morningsun","fullname":"move: Morning Sun","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"mud bomb":{"exists":true,"name":"Mud Bomb","num":426,"accuracy":85,"basePower":65,"category":"Special","isNonstandard":"Past","pp":10,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":30,"boosts":{"accuracy":-1}},"target":"normal","type":"Ground","contestType":"Cute","desc":"Has a 30% chance to lower the target\'s accuracy by 1 stage.","shortDesc":"30% chance to lower the target\'s accuracy by 1.","id":"mudbomb","fullname":"move: Mud Bomb","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":[{"chance":30,"boosts":{"accuracy":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"mud shot":{"exists":true,"name":"Mud Shot","num":341,"accuracy":95,"basePower":55,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spe":-1}},"target":"normal","type":"Ground","contestType":"Tough","desc":"Has a 100% chance to lower the target\'s Speed by 1 stage.","shortDesc":"100% chance to lower the target\'s Speed by 1.","id":"mudshot","fullname":"move: Mud Shot","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":[{"chance":100,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":100}},"mud slap":{"exists":true,"name":"Mud-Slap","num":189,"accuracy":100,"basePower":20,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"accuracy":-1}},"target":"normal","type":"Ground","contestType":"Cute","desc":"Has a 100% chance to lower the target\'s accuracy by 1 stage.","shortDesc":"100% chance to lower the target\'s accuracy by 1.","id":"mudslap","fullname":"move: Mud-Slap","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":[{"chance":100,"boosts":{"accuracy":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"mud sport":{"exists":true,"name":"Mud Sport","num":300,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":0,"flags":{"nonsky":1},"pseudoWeather":"mudsport","condition":{"duration":5,"onBasePowerPriority":1,"onFieldResidualOrder":27,"onFieldResidualSubOrder":4},"secondary":null,"target":"all","type":"Ground","zMove":{"boost":{"spd":1}},"contestType":"Cute","desc":"For 5 turns, all Electric-type attacks used by any active Pokemon have their power multiplied by 0.33. Fails if this effect is already active.","shortDesc":"For 5 turns, Electric-type attacks have 1/3 power.","id":"mudsport","fullname":"move: Mud Sport","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"muddy water":{"exists":true,"name":"Muddy Water","num":330,"accuracy":85,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"secondary":{"chance":30,"boosts":{"accuracy":-1}},"target":"allAdjacentFoes","type":"Water","contestType":"Tough","desc":"Has a 30% chance to lower the target\'s accuracy by 1 stage.","shortDesc":"30% chance to lower the foe(s) accuracy by 1.","id":"muddywater","fullname":"move: Muddy Water","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":30,"boosts":{"accuracy":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"multi attack":{"exists":true,"name":"Multi-Attack","num":718,"accuracy":100,"basePower":120,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":185},"maxMove":{"basePower":95},"contestType":"Tough","desc":"This move\'s type depends on the user\'s held Memory.","shortDesc":"Type varies based on the held Memory.","id":"multiattack","fullname":"move: Multi-Attack","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"mystical fire":{"exists":true,"name":"Mystical Fire","num":595,"accuracy":100,"basePower":75,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spa":-1}},"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Has a 100% chance to lower the target\'s Special Attack by 1 stage.","shortDesc":"100% chance to lower the target\'s Sp. Atk by 1.","id":"mysticalfire","fullname":"move: Mystical Fire","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":100,"boosts":{"spa":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"nasty plot":{"exists":true,"name":"Nasty Plot","num":417,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"spa":2},"secondary":null,"target":"self","type":"Dark","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"Raises the user\'s Special Attack by 2 stages.","shortDesc":"Raises the user\'s Sp. Atk by 2.","id":"nastyplot","fullname":"move: Nasty Plot","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"natural gift":{"exists":true,"name":"Natural Gift","num":363,"accuracy":100,"basePower":0,"category":"Physical","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Clever","desc":"The type and power of this move depend on the user\'s held Berry, and the Berry is lost. Fails if the user is not holding a Berry, if the user has the Klutz Ability, or if Embargo or Magic Room is in effect for the user.","shortDesc":"Power and type depends on the user\'s Berry.","id":"naturalgift","fullname":"move: Natural Gift","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"nature power":{"exists":true,"name":"Nature Power","num":267,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{},"secondary":null,"target":"normal","type":"Normal","contestType":"Beautiful","desc":"This move calls another move for use based on the battle terrain. Tri Attack on the regular Wi-Fi terrain, Thunderbolt during Electric Terrain, Moonblast during Misty Terrain, Energy Ball during Grassy Terrain, and Psychic during Psychic Terrain.","shortDesc":"Attack depends on terrain (default Tri Attack).","id":"naturepower","fullname":"move: Nature Power","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"nature\'s madness":{"exists":true,"name":"Nature\'s Madness","num":717,"accuracy":90,"basePower":0,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fairy","contestType":"Tough","desc":"Deals damage to the target equal to half of its current HP, rounded down, but not less than 1 HP.","shortDesc":"Does damage equal to 1/2 target\'s current HP.","id":"naturesmadness","fullname":"move: Nature\'s Madness","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"needle arm":{"exists":true,"name":"Needle Arm","num":302,"accuracy":100,"basePower":60,"category":"Physical","isNonstandard":"Past","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Grass","contestType":"Clever","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"needlearm","fullname":"move: Needle Arm","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"never ending nightmare":{"exists":true,"name":"Never-Ending Nightmare","num":636,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"ghostiumz","secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"neverendingnightmare","fullname":"move: Never-Ending Nightmare","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"night daze":{"exists":true,"name":"Night Daze","num":539,"accuracy":95,"basePower":85,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":40,"boosts":{"accuracy":-1}},"target":"normal","type":"Dark","contestType":"Cool","desc":"Has a 40% chance to lower the target\'s accuracy by 1 stage.","shortDesc":"40% chance to lower the target\'s accuracy by 1.","id":"nightdaze","fullname":"move: Night Daze","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":[{"chance":40,"boosts":{"accuracy":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"nightmare":{"exists":true,"name":"Nightmare","num":171,"accuracy":100,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"volatileStatus":"nightmare","condition":{"noCopy":true,"onResidualOrder":11},"secondary":null,"target":"normal","type":"Ghost","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"Causes the target to lose 1/4 of its maximum HP, rounded down, at the end of each turn as long as it is asleep. This move does not affect the target unless it is asleep. The effect ends when the target wakes up, even if it falls asleep again in the same turn.","shortDesc":"A sleeping target is hurt by 1/4 max HP per turn.","id":"nightmare","fullname":"move: Nightmare","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"night shade":{"exists":true,"name":"Night Shade","num":101,"accuracy":100,"basePower":0,"damage":"level","category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ghost","contestType":"Clever","desc":"Deals damage to the target equal to the user\'s level.","shortDesc":"Does damage equal to the user\'s level.","id":"nightshade","fullname":"move: Night Shade","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"night slash":{"exists":true,"name":"Night Slash","num":400,"accuracy":100,"basePower":70,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Dark","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"nightslash","fullname":"move: Night Slash","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"noble roar":{"exists":true,"name":"Noble Roar","num":568,"accuracy":100,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"sound":1,"authentic":1},"boosts":{"atk":-1,"spa":-1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Tough","desc":"Lowers the target\'s Attack and Special Attack by 1 stage.","shortDesc":"Lowers the target\'s Attack and Sp. Atk by 1.","id":"nobleroar","fullname":"move: Noble Roar","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"no retreat":{"exists":true,"name":"No Retreat","num":748,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"snatch":1},"volatileStatus":"noretreat","condition":{},"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1},"secondary":null,"target":"self","type":"Fighting","desc":"Raises the user\'s Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage, but it becomes prevented from switching out. The user can still switch out if it uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the user leaves the field using Baton Pass, the replacement will remain trapped. Fails if the user has already been prevented from switching by this effect.","shortDesc":"Raises all stats by 1 (not acc/eva). Traps user.","id":"noretreat","fullname":"move: No Retreat","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"nuzzle":{"exists":true,"name":"Nuzzle","num":609,"accuracy":100,"basePower":20,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"status":"par"},"target":"normal","type":"Electric","contestType":"Cute","desc":"Has a 100% chance to paralyze the target.","shortDesc":"100% chance to paralyze the target.","id":"nuzzle","fullname":"move: Nuzzle","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":100,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"oblivion wing":{"exists":true,"name":"Oblivion Wing","num":613,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"distance":1,"heal":1},"drain":[3,4],"secondary":null,"target":"any","type":"Flying","contestType":"Cool","desc":"The user recovers 3/4 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 75% of the damage dealt.","id":"oblivionwing","fullname":"move: Oblivion Wing","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"obstruct":{"exists":true,"name":"Obstruct","num":792,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":4,"flags":{},"stallingMove":true,"volatileStatus":"obstruct","condition":{"duration":1,"onTryHitPriority":3},"secondary":null,"target":"self","type":"Dark","desc":"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon trying to make contact with the user have their Defense lowered by 2 stages. Non-damaging moves go through this protection. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Max Guard, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn.","shortDesc":"Protects from damaging attacks. Contact: -2 Def.","id":"obstruct","fullname":"move: Obstruct","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"oceanic operetta":{"exists":true,"name":"Oceanic Operetta","num":697,"accuracy":true,"basePower":195,"category":"Special","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"primariumz","secondary":null,"target":"normal","type":"Water","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"oceanicoperetta","fullname":"move: Oceanic Operetta","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"octazooka":{"exists":true,"name":"Octazooka","num":190,"accuracy":85,"basePower":65,"category":"Special","pp":10,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":50,"boosts":{"accuracy":-1}},"target":"normal","type":"Water","contestType":"Tough","desc":"Has a 50% chance to lower the target\'s accuracy by 1 stage.","shortDesc":"50% chance to lower the target\'s accuracy by 1.","id":"octazooka","fullname":"move: Octazooka","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":50,"boosts":{"accuracy":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"octolock":{"exists":true,"name":"Octolock","num":753,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"volatileStatus":"octolock","condition":{"onResidualOrder":14},"secondary":null,"target":"normal","type":"Fighting","desc":"Prevents the target from switching out. At the end of each turn during effect, the target\'s Defense and Special Defense are lowered by 1 stage. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.","shortDesc":"Traps target, lowers Def and SpD by 1 each turn.","id":"octolock","fullname":"move: Octolock","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"odor sleuth":{"exists":true,"name":"Odor Sleuth","num":316,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1,"mystery":1},"volatileStatus":"foresight","secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"atk":1}},"contestType":"Clever","desc":"As long as the target remains active, its evasiveness stat stage is ignored during accuracy checks against it if it is greater than 0, and Normal- and Fighting-type attacks can hit the target if it is a Ghost type. Fails if the target is already affected, or affected by Foresight or Miracle Eye.","shortDesc":"Fighting, Normal hit Ghost. Evasiveness ignored.","id":"odorsleuth","fullname":"move: Odor Sleuth","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"ominous wind":{"exists":true,"name":"Ominous Wind","num":466,"accuracy":100,"basePower":60,"category":"Special","isNonstandard":"Past","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"self":{"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}}},"target":"normal","type":"Ghost","contestType":"Beautiful","desc":"Has a 10% chance to raise the user\'s Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.","shortDesc":"10% chance to raise all stats by 1 (not acc/eva).","id":"ominouswind","fullname":"move: Ominous Wind","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":[{"chance":10,"self":{"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"origin pulse":{"exists":true,"name":"Origin Pulse","num":618,"accuracy":85,"basePower":110,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"pulse":1,"mirror":1},"target":"allAdjacentFoes","type":"Water","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent foes.","id":"originpulse","fullname":"move: Origin Pulse","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"outrage":{"exists":true,"name":"Outrage","num":200,"accuracy":100,"basePower":120,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"self":{"volatileStatus":"lockedmove"},"secondary":null,"target":"randomNormal","type":"Dragon","contestType":"Cool","desc":"The user spends two or three turns locked into this move and becomes confused immediately after its move on the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, is asleep at the beginning of a turn, or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk and the user is asleep, the move is used for one turn and does not confuse the user.","shortDesc":"Lasts 2-3 turns. Confuses the user afterwards.","id":"outrage","fullname":"move: Outrage","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"overdrive":{"exists":true,"name":"Overdrive","num":786,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":null,"target":"allAdjacentFoes","type":"Electric","desc":"No additional effect.","shortDesc":"No additional effect. Hits foe(s).","id":"overdrive","fullname":"move: Overdrive","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"overheat":{"exists":true,"name":"Overheat","num":315,"accuracy":90,"basePower":130,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"self":{"boosts":{"spa":-2}},"secondary":null,"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Lowers the user\'s Special Attack by 2 stages.","shortDesc":"Lowers the user\'s Sp. Atk by 2.","id":"overheat","fullname":"move: Overheat","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"pain split":{"exists":true,"name":"Pain Split","num":220,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"The user and the target\'s HP become the average of their current HP, rounded down, but not more than the maximum HP of either one.","shortDesc":"Shares HP of user and target equally.","id":"painsplit","fullname":"move: Pain Split","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"paleo wave":{"exists":true,"name":"Paleo Wave","num":0,"accuracy":100,"basePower":85,"category":"Special","isNonstandard":"CAP","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":20,"boosts":{"atk":-1}},"target":"normal","type":"Rock","contestType":"Beautiful","desc":"Has a 20% chance to lower the target\'s Attack by 1 stage.","shortDesc":"20% chance to lower the target\'s Attack by 1.","id":"paleowave","fullname":"move: Paleo Wave","effectType":"Move","gen":0,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":[{"chance":20,"boosts":{"atk":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"parabolic charge":{"exists":true,"name":"Parabolic Charge","num":570,"accuracy":100,"basePower":65,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1,"heal":1},"drain":[1,2],"secondary":null,"target":"allAdjacent","type":"Electric","contestType":"Clever","desc":"The user recovers 1/2 the HP lost by the target, rounded half up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","shortDesc":"User recovers 50% of the damage dealt.","id":"paraboliccharge","fullname":"move: Parabolic Charge","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"parting shot":{"exists":true,"name":"Parting Shot","num":575,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"sound":1,"authentic":1},"selfSwitch":true,"secondary":null,"target":"normal","type":"Dark","zMove":{"effect":"healreplacement"},"contestType":"Cool","desc":"Lowers the target\'s Attack and Special Attack by 1 stage. If this move is successful, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if the target\'s Attack and Special Attack stat stages were both unchanged, or if there are no unfainted party members.","shortDesc":"Lowers target\'s Atk, Sp. Atk by 1. User switches.","id":"partingshot","fullname":"move: Parting Shot","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"payback":{"exists":true,"name":"Payback","num":371,"accuracy":100,"basePower":50,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Tough","desc":"Power doubles if the user moves after the target this turn, including actions taken through Instruct or the Dancer Ability. Switching in does not count as an action.","shortDesc":"Power doubles if the user moves after the target.","id":"payback","fullname":"move: Payback","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"pay day":{"exists":true,"name":"Pay Day","num":6,"accuracy":100,"basePower":40,"category":"Physical","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Clever","desc":"No additional effect.","shortDesc":"Scatters coins.","id":"payday","fullname":"move: Pay Day","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"peck":{"exists":true,"name":"Peck","num":64,"accuracy":100,"basePower":35,"category":"Physical","pp":35,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Flying","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"peck","fullname":"move: Peck","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"perish song":{"exists":true,"name":"Perish Song","num":195,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"sound":1,"distance":1,"authentic":1},"condition":{"duration":4,"onResidualOrder":24},"secondary":null,"target":"all","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"Each active Pokemon receives a perish count of 4 if it doesn\'t already have a perish count. At the end of each turn including the turn used, the perish count of all active Pokemon lowers by 1 and Pokemon faint if the number reaches 0. The perish count is removed from Pokemon that switch out. If a Pokemon uses Baton Pass while it has a perish count, the replacement will gain the perish count and continue to count down.","shortDesc":"All active Pokemon will faint in 3 turns.","id":"perishsong","fullname":"move: Perish Song","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"petal blizzard":{"exists":true,"name":"Petal Blizzard","num":572,"accuracy":100,"basePower":90,"category":"Physical","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacent","type":"Grass","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent Pokemon.","id":"petalblizzard","fullname":"move: Petal Blizzard","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"petal dance":{"exists":true,"name":"Petal Dance","num":80,"accuracy":100,"basePower":120,"category":"Special","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"dance":1},"self":{"volatileStatus":"lockedmove"},"secondary":null,"target":"randomNormal","type":"Grass","contestType":"Beautiful","desc":"The user spends two or three turns locked into this move and becomes confused immediately after its move on the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, is asleep at the beginning of a turn, or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk and the user is asleep, the move is used for one turn and does not confuse the user.","shortDesc":"Lasts 2-3 turns. Confuses the user afterwards.","id":"petaldance","fullname":"move: Petal Dance","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"phantom force":{"exists":true,"name":"Phantom Force","num":566,"accuracy":100,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"charge":1,"mirror":1},"breaksProtect":true,"condition":{"duration":2,"onInvulnerability":false},"secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"If this move is successful, it breaks through the target\'s Baneful Bunker, Detect, King\'s Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target\'s side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target\'s side normally. This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Disappears turn 1. Hits turn 2. Breaks protection.","id":"phantomforce","fullname":"move: Phantom Force","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"photon geyser":{"exists":true,"name":"Photon Geyser","num":722,"accuracy":100,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"ignoreAbility":true,"secondary":null,"target":"normal","type":"Psychic","contestType":"Cool","desc":"This move becomes a physical attack if the user\'s Attack is greater than its Special Attack, including stat stage changes. This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Physical if user\'s Atk > Sp. Atk. Ignores Abilities.","id":"photongeyser","fullname":"move: Photon Geyser","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"pika papow":{"exists":true,"name":"Pika Papow","num":732,"accuracy":true,"basePower":0,"category":"Special","isNonstandard":"LGPE","pp":20,"priority":0,"flags":{"protect":1},"secondary":null,"target":"normal","type":"Electric","contestType":"Cute","desc":"Power is equal to the greater of (user\'s Happiness * 2/5), rounded down, or 1.","shortDesc":"Max happiness: 102 power. Can\'t miss.","id":"pikapapow","fullname":"move: Pika Papow","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"pin missile":{"exists":true,"name":"Pin Missile","num":42,"accuracy":95,"basePower":25,"category":"Physical","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Bug","zMove":{"basePower":140},"maxMove":{"basePower":130},"contestType":"Cool","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"pinmissile","fullname":"move: Pin Missile","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"plasma fists":{"exists":true,"name":"Plasma Fists","num":721,"accuracy":100,"basePower":100,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"pseudoWeather":"iondeluge","secondary":null,"target":"normal","type":"Electric","contestType":"Cool","desc":"If this move is successful, causes Normal-type moves to become Electric type this turn.","shortDesc":"Normal moves become Electric type this turn.","id":"plasmafists","fullname":"move: Plasma Fists","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"play nice":{"exists":true,"name":"Play Nice","num":589,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"reflectable":1,"mirror":1,"authentic":1},"boosts":{"atk":-1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Lowers the target\'s Attack by 1 stage.","shortDesc":"Lowers the target\'s Attack by 1.","id":"playnice","fullname":"move: Play Nice","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"play rough":{"exists":true,"name":"Play Rough","num":583,"accuracy":90,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"atk":-1}},"target":"normal","type":"Fairy","contestType":"Cute","desc":"Has a 10% chance to lower the target\'s Attack by 1 stage.","shortDesc":"10% chance to lower the target\'s Attack by 1.","id":"playrough","fullname":"move: Play Rough","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":[{"chance":10,"boosts":{"atk":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"pluck":{"exists":true,"name":"Pluck","num":365,"accuracy":100,"basePower":60,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Flying","contestType":"Cute","desc":"If this move is successful and the user has not fainted, it steals the target\'s held Berry if it is holding one and eats it immediately, gaining its effects even if the user\'s item is being ignored. Items lost to this move cannot be regained with Recycle or the Harvest Ability.","shortDesc":"User steals and eats the target\'s Berry.","id":"pluck","fullname":"move: Pluck","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"poison fang":{"exists":true,"name":"Poison Fang","num":305,"accuracy":100,"basePower":50,"category":"Physical","pp":15,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondary":{"chance":50,"status":"tox"},"target":"normal","type":"Poison","contestType":"Clever","desc":"Has a 50% chance to badly poison the target.","shortDesc":"50% chance to badly poison the target.","id":"poisonfang","fullname":"move: Poison Fang","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":50,"status":"tox"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":75},"zMove":{"basePower":100}},"poison gas":{"exists":true,"name":"Poison Gas","num":139,"accuracy":90,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"psn","secondary":null,"target":"allAdjacentFoes","type":"Poison","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Poisons the target.","shortDesc":"Poisons the foe(s).","id":"poisongas","fullname":"move: Poison Gas","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"poison jab":{"exists":true,"name":"Poison Jab","num":398,"accuracy":100,"basePower":80,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"status":"psn"},"target":"normal","type":"Poison","contestType":"Tough","desc":"Has a 30% chance to poison the target.","shortDesc":"30% chance to poison the target.","id":"poisonjab","fullname":"move: Poison Jab","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":30,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":160}},"poison powder":{"exists":true,"name":"Poison Powder","num":77,"accuracy":75,"basePower":0,"category":"Status","pp":35,"priority":0,"flags":{"powder":1,"protect":1,"reflectable":1,"mirror":1},"status":"psn","secondary":null,"target":"normal","type":"Poison","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Poisons the target.","shortDesc":"Poisons the target.","id":"poisonpowder","fullname":"move: Poison Powder","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"poison sting":{"exists":true,"name":"Poison Sting","num":40,"accuracy":100,"basePower":15,"category":"Physical","pp":35,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"status":"psn"},"target":"normal","type":"Poison","contestType":"Clever","desc":"Has a 30% chance to poison the target.","shortDesc":"30% chance to poison the target.","id":"poisonsting","fullname":"move: Poison Sting","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":30,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"poison tail":{"exists":true,"name":"Poison Tail","num":342,"accuracy":100,"basePower":50,"category":"Physical","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":{"chance":10,"status":"psn"},"target":"normal","type":"Poison","contestType":"Clever","desc":"Has a 10% chance to poison the target and a higher chance for a critical hit.","shortDesc":"High critical hit ratio. 10% chance to poison.","id":"poisontail","fullname":"move: Poison Tail","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Poison","secondaries":[{"chance":10,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":75},"zMove":{"basePower":100}},"pollen puff":{"exists":true,"name":"Pollen Puff","num":676,"accuracy":100,"basePower":90,"category":"Special","pp":15,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Bug","contestType":"Cute","desc":"If the target is an ally, this move restores 1/2 of its maximum HP, rounded down, instead of dealing damage.","shortDesc":"If the target is an ally, heals 50% of its max HP.","id":"pollenpuff","fullname":"move: Pollen Puff","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"poltergeist":{"exists":true,"name":"Poltergeist","num":809,"accuracy":90,"basePower":110,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ghost","desc":"Fails if the target has no held item.","shortDesc":"Fails if the target has no held item.","id":"poltergeist","fullname":"move: Poltergeist","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"pound":{"exists":true,"name":"Pound","num":1,"accuracy":100,"basePower":40,"category":"Physical","pp":35,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"pound","fullname":"move: Pound","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"powder":{"exists":true,"name":"Powder","num":600,"accuracy":100,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":1,"flags":{"powder":1,"protect":1,"reflectable":1,"mirror":1,"authentic":1},"volatileStatus":"powder","condition":{"duration":1,"onTryMovePriority":-1},"secondary":null,"target":"normal","type":"Bug","zMove":{"boost":{"spd":2}},"contestType":"Clever","desc":"If the target uses a Fire-type move this turn, it is prevented from executing and the target loses 1/4 of its maximum HP, rounded half up. This effect does not happen if the Fire-type move is prevented by Primordial Sea.","shortDesc":"If using a Fire move, target loses 1/4 max HP.","id":"powder","fullname":"move: Powder","effectType":"Move","gen":6,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"powder snow":{"exists":true,"name":"Powder Snow","num":181,"accuracy":100,"basePower":40,"category":"Special","pp":25,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"frz"},"target":"allAdjacentFoes","type":"Ice","contestType":"Beautiful","desc":"Has a 10% chance to freeze the target.","shortDesc":"10% chance to freeze the foe(s).","id":"powdersnow","fullname":"move: Powder Snow","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":[{"chance":10,"status":"frz"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"power gem":{"exists":true,"name":"Power Gem","num":408,"accuracy":100,"basePower":80,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Rock","contestType":"Beautiful","desc":"No additional effect.","shortDesc":"No additional effect.","id":"powergem","fullname":"move: Power Gem","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"power split":{"exists":true,"name":"Power Split","num":471,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"The user and the target have their Attack and Special Attack stats set to be equal to the average of the user and the target\'s Attack and Special Attack stats, respectively, rounded down. Stat stage changes are unaffected.","shortDesc":"Averages Attack and Sp. Atk stats with target.","id":"powersplit","fullname":"move: Power Split","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"power swap":{"exists":true,"name":"Power Swap","num":384,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"The user swaps its Attack and Special Attack stat stage changes with the target.","shortDesc":"Swaps Attack and Sp. Atk stat stages with target.","id":"powerswap","fullname":"move: Power Swap","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"power trick":{"exists":true,"name":"Power Trick","num":379,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1},"volatileStatus":"powertrick","condition":{},"secondary":null,"target":"self","type":"Psychic","zMove":{"boost":{"atk":1}},"contestType":"Clever","desc":"The user swaps its Attack and Defense stats, and stat stage changes remain on their respective stats. This move can be used again to swap the stats back. If the user uses Baton Pass, the replacement will have its Attack and Defense stats swapped if the effect is active. If the user has its stats recalculated by changing forme while its stats are swapped, this effect is ignored but is still active for the purposes of Baton Pass.","shortDesc":"Switches user\'s Attack and Defense stats.","id":"powertrick","fullname":"move: Power Trick","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"power trip":{"exists":true,"name":"Power Trip","num":681,"accuracy":100,"basePower":20,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Clever","desc":"Power is equal to 20+(X*20), where X is the user\'s total stat stage changes that are greater than 0.","shortDesc":" + 20 power for each of the user\'s stat boosts.","id":"powertrip","fullname":"move: Power Trip","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"power up punch":{"exists":true,"name":"Power-Up Punch","num":612,"accuracy":100,"basePower":40,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":{"chance":100,"self":{"boosts":{"atk":1}}},"target":"normal","type":"Fighting","contestType":"Tough","desc":"Has a 100% chance to raise the user\'s Attack by 1 stage.","shortDesc":"100% chance to raise the user\'s Attack by 1.","id":"poweruppunch","fullname":"move: Power-Up Punch","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":[{"chance":100,"self":{"boosts":{"atk":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"power whip":{"exists":true,"name":"Power Whip","num":438,"accuracy":85,"basePower":120,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"powerwhip","fullname":"move: Power Whip","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"precipice blades":{"exists":true,"name":"Precipice Blades","num":619,"accuracy":85,"basePower":120,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"target":"allAdjacentFoes","type":"Ground","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect. Hits adjacent foes.","id":"precipiceblades","fullname":"move: Precipice Blades","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondary":null,"secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"present":{"exists":true,"name":"Present","num":217,"accuracy":90,"basePower":0,"category":"Physical","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cute","desc":"If this move is successful, it deals damage or heals the target. 40% chance for 40 power, 30% chance for 80 power, 10% chance for 120 power, and 20% chance to heal the target by 1/4 of its maximum HP, rounded down.","shortDesc":"40, 80, 120 power, or heals target 1/4 max HP.","id":"present","fullname":"move: Present","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"prismatic laser":{"exists":true,"name":"Prismatic Laser","num":711,"accuracy":100,"basePower":160,"category":"Special","pp":10,"priority":0,"flags":{"recharge":1,"protect":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Psychic","contestType":"Cool","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"prismaticlaser","fullname":"move: Prismatic Laser","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"protect":{"exists":true,"name":"Protect","num":182,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":4,"flags":{},"stallingMove":true,"volatileStatus":"protect","condition":{"duration":1,"onTryHitPriority":3},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"The user is protected from most attacks made by other Pokemon during this turn. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn.","shortDesc":"Prevents moves from affecting the user this turn.","id":"protect","fullname":"move: Protect","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"psybeam":{"exists":true,"name":"Psybeam","num":60,"accuracy":100,"basePower":65,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"volatileStatus":"confusion"},"target":"normal","type":"Psychic","contestType":"Beautiful","desc":"Has a 10% chance to confuse the target.","shortDesc":"10% chance to confuse the target.","id":"psybeam","fullname":"move: Psybeam","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":10,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"psych up":{"exists":true,"name":"Psych Up","num":244,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"effect":"heal"},"contestType":"Clever","desc":"The user copies all of the target\'s current stat stage changes.","shortDesc":"Copies the target\'s current stat stages.","id":"psychup","fullname":"move: Psych Up","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"psychic":{"exists":true,"name":"Psychic","num":94,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"boosts":{"spd":-1}},"target":"normal","type":"Psychic","contestType":"Clever","desc":"Has a 10% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"10% chance to lower the target\'s Sp. Def by 1.","id":"psychic","fullname":"move: Psychic","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":10,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"psychic fangs":{"exists":true,"name":"Psychic Fangs","num":706,"accuracy":100,"basePower":85,"category":"Physical","pp":10,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Psychic","contestType":"Clever","desc":"If this attack does not miss, the effects of Reflect, Light Screen, and Aurora Veil end for the target\'s side of the field before damage is calculated.","shortDesc":"Destroys screens, unless the target is immune.","id":"psychicfangs","fullname":"move: Psychic Fangs","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"psychic terrain":{"exists":true,"name":"Psychic Terrain","num":678,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"nonsky":1},"terrain":"psychicterrain","condition":{"duration":5,"onTryHitPriority":4,"onBasePowerPriority":6,"onFieldResidualOrder":27,"onFieldResidualSubOrder":7},"secondary":null,"target":"all","type":"Psychic","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"For 5 turns, the terrain becomes Psychic Terrain. During the effect, the power of Psychic-type attacks made by grounded Pokemon is multiplied by 1.3 and grounded Pokemon cannot be hit by moves with priority greater than 0, unless the target is an ally. Camouflage transforms the user into a Psychic type, Nature Power becomes Psychic, and Secret Power has a 30% chance to lower the target\'s Speed by 1 stage. Fails if the current terrain is Psychic Terrain.","shortDesc":"5 turns. Grounded: +Psychic power, priority-safe.","id":"psychicterrain","fullname":"move: Psychic Terrain","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"psycho boost":{"exists":true,"name":"Psycho Boost","num":354,"accuracy":90,"basePower":140,"category":"Special","isNonstandard":"Past","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"self":{"boosts":{"spa":-2}},"secondary":null,"target":"normal","type":"Psychic","contestType":"Clever","desc":"Lowers the user\'s Special Attack by 2 stages.","shortDesc":"Lowers the user\'s Sp. Atk by 2.","id":"psychoboost","fullname":"move: Psycho Boost","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"psycho cut":{"exists":true,"name":"Psycho Cut","num":427,"accuracy":100,"basePower":70,"category":"Physical","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Psychic","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"psychocut","fullname":"move: Psycho Cut","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"psycho shift":{"exists":true,"name":"Psycho Shift","num":375,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"self":{},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spa":2}},"contestType":"Clever","desc":"The user\'s non-volatile status condition is transferred to the target, and the user is then cured. Fails if the user has no non-volatile status condition or if the target already has one.","shortDesc":"Transfers the user\'s status ailment to the target.","id":"psychoshift","fullname":"move: Psycho Shift","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"psyshock":{"exists":true,"name":"Psyshock","num":473,"accuracy":100,"basePower":80,"category":"Special","defensiveCategory":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Psychic","contestType":"Beautiful","desc":"Deals damage to the target based on its Defense instead of Special Defense.","shortDesc":"Damages target based on Defense, not Sp. Def.","id":"psyshock","fullname":"move: Psyshock","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"psystrike":{"exists":true,"name":"Psystrike","num":540,"accuracy":100,"basePower":100,"category":"Special","defensiveCategory":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Psychic","contestType":"Cool","desc":"Deals damage to the target based on its Defense instead of Special Defense.","shortDesc":"Damages target based on Defense, not Sp. Def.","id":"psystrike","fullname":"move: Psystrike","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"psywave":{"exists":true,"name":"Psywave","num":149,"accuracy":100,"basePower":0,"category":"Special","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Psychic","contestType":"Clever","desc":"Deals damage to the target equal to (user\'s level) * (X + 50) / 100, where X is a random number from 0 to 100, rounded down, but not less than 1 HP.","shortDesc":"Random damage equal to 0.5x-1.5x user\'s level.","id":"psywave","fullname":"move: Psywave","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"pulverizing pancake":{"exists":true,"name":"Pulverizing Pancake","num":701,"accuracy":true,"basePower":210,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{"contact":1},"isZ":"snorliumz","secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"pulverizingpancake","fullname":"move: Pulverizing Pancake","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"punishment":{"exists":true,"name":"Punishment","num":386,"accuracy":100,"basePower":0,"category":"Physical","isNonstandard":"Past","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Cool","desc":"Power is equal to 60+(X*20), where X is the target\'s total stat stage changes that are greater than 0, but not more than 200 power.","shortDesc":"60 power +20 for each of the target\'s stat boosts.","id":"punishment","fullname":"move: Punishment","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"purify":{"exists":true,"name":"Purify","num":685,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"heal":1},"secondary":null,"target":"normal","type":"Poison","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Beautiful","desc":"The target is cured if it has a non-volatile status condition. If the target was cured, the user restores 1/2 of its maximum HP, rounded down.","shortDesc":"Cures target\'s status; heals user 1/2 max HP if so.","id":"purify","fullname":"move: Purify","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"pursuit":{"exists":true,"name":"Pursuit","num":228,"accuracy":100,"basePower":40,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"condition":{"duration":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"If an opposing Pokemon switches out this turn, this move hits that Pokemon before it leaves the field, even if it was not the original target. If the user moves after an opponent using Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch, but not Baton Pass, it will hit that opponent before it leaves the field. Power doubles and no accuracy check is done if the user hits an opponent switching out, and the user\'s turn is over; if an opponent faints from this, the replacement Pokemon does not become active until the end of the turn.","shortDesc":"If a foe is switching out, hits it at 2x power.","id":"pursuit","fullname":"move: Pursuit","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"pyro ball":{"exists":true,"name":"Pyro Ball","num":780,"accuracy":90,"basePower":120,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"defrost":1,"bullet":1},"secondary":{"chance":10,"status":"brn"},"target":"normal","type":"Fire","desc":"Has a 10% chance to burn the target.","shortDesc":"10% chance to burn the target. Thaws user.","id":"pyroball","fullname":"move: Pyro Ball","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":10,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"quash":{"exists":true,"name":"Quash","num":511,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"Causes the target to take its turn after all other Pokemon this turn, no matter the priority of its selected move. Fails if the target already moved this turn.","shortDesc":"Forces the target to move last this turn.","id":"quash","fullname":"move: Quash","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"quick attack":{"exists":true,"name":"Quick Attack","num":98,"accuracy":100,"basePower":40,"category":"Physical","pp":30,"priority":1,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"No additional effect.","shortDesc":"Usually goes first.","id":"quickattack","fullname":"move: Quick Attack","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"quick guard":{"exists":true,"name":"Quick Guard","num":501,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":3,"flags":{"snatch":1},"sideCondition":"quickguard","condition":{"duration":1,"onTryHitPriority":4},"secondary":null,"target":"allySide","type":"Fighting","zMove":{"boost":{"def":1}},"contestType":"Cool","desc":"The user and its party members are protected from attacks with original or altered priority greater than 0 made by other Pokemon, including allies, during this turn. This move modifies the same 1/X chance of being successful used by other protection moves, where X starts at 1 and triples each time this move is successfully used, but does not use the chance to check for failure. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn or if this move is already in effect for the user\'s side.","shortDesc":"Protects allies from priority attacks this turn.","id":"quickguard","fullname":"move: Quick Guard","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"quiver dance":{"exists":true,"name":"Quiver Dance","num":483,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1,"dance":1},"boosts":{"spa":1,"spd":1,"spe":1},"secondary":null,"target":"self","type":"Bug","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"Raises the user\'s Special Attack, Special Defense, and Speed by 1 stage.","shortDesc":"Raises the user\'s Sp. Atk, Sp. Def, Speed by 1.","id":"quiverdance","fullname":"move: Quiver Dance","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"rage":{"exists":true,"name":"Rage","num":99,"accuracy":100,"basePower":20,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"self":{"volatileStatus":"rage"},"condition":{"onBeforeMovePriority":100},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"Once this move is successfully used, the user\'s Attack is raised by 1 stage every time it is hit by another Pokemon\'s attack as long as this move is chosen for use.","shortDesc":"Raises the user\'s Attack by 1 if hit during use.","id":"rage","fullname":"move: Rage","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"rage powder":{"exists":true,"name":"Rage Powder","num":476,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":2,"flags":{"powder":1},"volatileStatus":"ragepowder","condition":{"duration":1,"onFoeRedirectTargetPriority":1},"secondary":null,"target":"self","type":"Bug","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"Until the end of the turn, all single-target attacks from the opposing side are redirected to the user. Such attacks are redirected to the user before they can be reflected by Magic Coat or the Magic Bounce Ability, or drawn in by the Lightning Rod or Storm Drain Abilities. Fails if it is not a Double Battle or Battle Royal. This effect is ignored while the user is under the effect of Sky Drop.","shortDesc":"The foes\' moves target the user on the turn used.","id":"ragepowder","fullname":"move: Rage Powder","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"rain dance":{"exists":true,"name":"Rain Dance","num":240,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{},"weather":"RainDance","secondary":null,"target":"all","type":"Water","zMove":{"boost":{"spe":1}},"contestType":"Beautiful","desc":"For 5 turns, the weather becomes Rain Dance. The damage of Water-type attacks is multiplied by 1.5 and the damage of Fire-type attacks is multiplied by 0.5 during the effect. Lasts for 8 turns if the user is holding Damp Rock. Fails if the current weather is Rain Dance.","shortDesc":"For 5 turns, heavy rain powers Water moves.","id":"raindance","fullname":"move: Rain Dance","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"rapid spin":{"exists":true,"name":"Rapid Spin","num":229,"accuracy":100,"basePower":50,"category":"Physical","pp":40,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"self":{"boosts":{"spe":1}}},"target":"normal","type":"Normal","contestType":"Cool","desc":"If this move is successful and the user has not fainted, the effects of Leech Seed and binding moves end for the user, and all hazards are removed from the user\'s side of the field. Has a 100% chance to raise the user\'s Speed by 1 stage.","shortDesc":"Free user from hazards/bind/Leech Seed; +1 Spe.","id":"rapidspin","fullname":"move: Rapid Spin","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":100,"self":{"boosts":{"spe":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"razor leaf":{"exists":true,"name":"Razor Leaf","num":75,"accuracy":95,"basePower":55,"category":"Physical","pp":25,"priority":0,"flags":{"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"allAdjacentFoes","type":"Grass","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio. Hits adjacent foes.","id":"razorleaf","fullname":"move: Razor Leaf","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":100}},"razor shell":{"exists":true,"name":"Razor Shell","num":534,"accuracy":95,"basePower":75,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":50,"boosts":{"def":-1}},"target":"normal","type":"Water","contestType":"Cool","desc":"Has a 50% chance to lower the target\'s Defense by 1 stage.","shortDesc":"50% chance to lower the target\'s Defense by 1.","id":"razorshell","fullname":"move: Razor Shell","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":50,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"razor wind":{"exists":true,"name":"Razor Wind","num":13,"accuracy":100,"basePower":80,"category":"Special","isNonstandard":"Past","pp":10,"priority":0,"flags":{"charge":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"allAdjacentFoes","type":"Normal","contestType":"Cool","desc":"Has a higher chance for a critical hit. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Charges, then hits foe(s) turn 2. High crit ratio.","id":"razorwind","fullname":"move: Razor Wind","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"recover":{"exists":true,"name":"Recover","num":105,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"heal":[1,2],"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"The user restores 1/2 of its maximum HP, rounded half up.","shortDesc":"Heals the user by 50% of its max HP.","id":"recover","fullname":"move: Recover","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"recycle":{"exists":true,"name":"Recycle","num":278,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"spe":2}},"contestType":"Clever","desc":"The user regains the item it last used. Fails if the user is holding an item, if the user has not held an item, if the item was a popped Air Balloon, if the item was picked up by a Pokemon with the Pickup Ability, or if the item was lost to Bug Bite, Corrosive Gas, Covet, Incinerate, Knock Off, Pluck, or Thief. Items thrown with Fling can be regained.","shortDesc":"Restores the item the user last used.","id":"recycle","fullname":"move: Recycle","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"reflect":{"exists":true,"name":"Reflect","num":115,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"sideCondition":"reflect","condition":{"duration":5,"onSideResidualOrder":26,"onSideResidualSubOrder":1},"secondary":null,"target":"allySide","type":"Psychic","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"For 5 turns, the user and its party members take 0.5x damage from physical attacks, or 0.66x damage if in a Double Battle. Damage is not reduced further with Aurora Veil. Critical hits ignore this effect. It is removed from the user\'s side if the user or an ally is successfully hit by Brick Break, Psychic Fangs, or Defog. Lasts for 8 turns if the user is holding Light Clay. Fails if the effect is already active on the user\'s side.","shortDesc":"For 5 turns, physical damage to allies is halved.","id":"reflect","fullname":"move: Reflect","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"reflect type":{"exists":true,"name":"Reflect Type","num":513,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"Causes the user\'s types to become the same as the current types of the target. If the target\'s current types include typeless and a non-added type, typeless is ignored. If the target\'s current types include typeless and an added type from Forest\'s Curse or Trick-or-Treat, typeless is copied as the Normal type instead. Fails if the user is an Arceus or a Silvally, or if the target\'s current type is typeless alone.","shortDesc":"User becomes the same type as the target.","id":"reflecttype","fullname":"move: Reflect Type","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"refresh":{"exists":true,"name":"Refresh","num":287,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{"snatch":1},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"heal"},"contestType":"Cute","desc":"The user cures its burn, poison, or paralysis. Fails if the user is not burned, poisoned, or paralyzed.","shortDesc":"User cures its burn, poison, or paralysis.","id":"refresh","fullname":"move: Refresh","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"relic song":{"exists":true,"name":"Relic Song","num":547,"accuracy":100,"basePower":75,"category":"Special","isNonstandard":"Past","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":{"chance":10,"status":"slp"},"target":"allAdjacentFoes","type":"Normal","contestType":"Beautiful","desc":"Has a 10% chance to cause the target to fall asleep. If this move is successful on at least one target and the user is a Meloetta, it changes to Pirouette Forme if it is currently in Aria Forme, or changes to Aria Forme if it is currently in Pirouette Forme. This forme change does not happen if the Meloetta has the Sheer Force Ability. The Pirouette Forme reverts to Aria Forme when Meloetta is not active.","shortDesc":"10% chance to sleep foe(s). Meloetta transforms.","id":"relicsong","fullname":"move: Relic Song","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":10,"status":"slp"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"rest":{"exists":true,"name":"Rest","num":156,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"secondary":null,"target":"self","type":"Psychic","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"The user falls asleep for the next two turns and restores all of its HP, curing itself of any non-volatile status condition in the process. Fails if the user has full HP, is already asleep, or if another effect is preventing sleep.","shortDesc":"User sleeps 2 turns and restores HP and status.","id":"rest","fullname":"move: Rest","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"retaliate":{"exists":true,"name":"Retaliate","num":514,"accuracy":100,"basePower":70,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"Power doubles if one of the user\'s party members fainted last turn.","shortDesc":"Power doubles if an ally fainted last turn.","id":"retaliate","fullname":"move: Retaliate","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"return":{"exists":true,"name":"Return","num":216,"accuracy":100,"basePower":0,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Cute","desc":"Power is equal to the greater of (user\'s Happiness * 2/5), rounded down, or 1.","shortDesc":"Max 102 power at maximum Happiness.","id":"return","fullname":"move: Return","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"revelation dance":{"exists":true,"name":"Revelation Dance","num":686,"accuracy":100,"basePower":90,"category":"Special","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"dance":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Beautiful","desc":"This move\'s type depends on the user\'s primary type. If the user\'s primary type is typeless, this move\'s type is the user\'s secondary type if it has one, otherwise the added type from Forest\'s Curse or Trick-or-Treat. This move is typeless if the user\'s type is typeless alone.","shortDesc":"Type varies based on the user\'s primary type.","id":"revelationdance","fullname":"move: Revelation Dance","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"revenge":{"exists":true,"name":"Revenge","num":279,"accuracy":100,"basePower":60,"category":"Physical","pp":10,"priority":-4,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"Power doubles if the user was hit by the target this turn.","shortDesc":"Power doubles if user is damaged by the target.","id":"revenge","fullname":"move: Revenge","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":80},"zMove":{"basePower":120}},"reversal":{"exists":true,"name":"Reversal","num":179,"accuracy":100,"basePower":0,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","zMove":{"basePower":160},"contestType":"Cool","desc":"The power of this move is 20 if X is 33 to 48, 40 if X is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if X is 2 to 4, and 200 if X is 0 or 1, where X is equal to (user\'s current HP * 48 / user\'s maximum HP), rounded down.","shortDesc":"More power the less HP the user has left.","id":"reversal","fullname":"move: Reversal","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100}},"rising voltage":{"exists":true,"name":"Rising Voltage","num":804,"accuracy":100,"basePower":70,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Electric","maxMove":{"basePower":140},"desc":"If the current terrain is Electric Terrain and the target is grounded, this move\'s power is doubled.","shortDesc":"2x power if target is grounded in Electric Terrain.","id":"risingvoltage","fullname":"move: Rising Voltage","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":140}},"roar":{"exists":true,"name":"Roar","num":46,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":-6,"flags":{"reflectable":1,"mirror":1,"sound":1,"authentic":1,"mystery":1},"forceSwitch":true,"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Cool","desc":"The target is forced to switch out and be replaced with a random unfainted ally. Fails if the target is the last unfainted Pokemon in its party, or if the target used Ingrain previously or has the Suction Cups Ability.","shortDesc":"Forces the target to switch to a random ally.","id":"roar","fullname":"move: Roar","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"roar of time":{"exists":true,"name":"Roar of Time","num":459,"accuracy":90,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"recharge":1,"protect":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Dragon","contestType":"Beautiful","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"roaroftime","fullname":"move: Roar of Time","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"rock blast":{"exists":true,"name":"Rock Blast","num":350,"accuracy":90,"basePower":25,"category":"Physical","pp":10,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Rock","zMove":{"basePower":140},"maxMove":{"basePower":130},"contestType":"Tough","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"rockblast","fullname":"move: Rock Blast","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"rock climb":{"exists":true,"name":"Rock Climb","num":431,"accuracy":85,"basePower":90,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":20,"volatileStatus":"confusion"},"target":"normal","type":"Normal","contestType":"Tough","desc":"Has a 20% chance to confuse the target.","shortDesc":"20% chance to confuse the target.","id":"rockclimb","fullname":"move: Rock Climb","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":20,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"rock polish":{"exists":true,"name":"Rock Polish","num":397,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"spe":2},"secondary":null,"target":"self","type":"Rock","zMove":{"effect":"clearnegativeboost"},"contestType":"Tough","desc":"Raises the user\'s Speed by 2 stages.","shortDesc":"Raises the user\'s Speed by 2.","id":"rockpolish","fullname":"move: Rock Polish","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"rock slide":{"exists":true,"name":"Rock Slide","num":157,"accuracy":90,"basePower":75,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"allAdjacentFoes","type":"Rock","contestType":"Tough","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the foe(s) flinch.","id":"rockslide","fullname":"move: Rock Slide","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"rock smash":{"exists":true,"name":"Rock Smash","num":249,"accuracy":100,"basePower":40,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":50,"boosts":{"def":-1}},"target":"normal","type":"Fighting","contestType":"Tough","desc":"Has a 50% chance to lower the target\'s Defense by 1 stage.","shortDesc":"50% chance to lower the target\'s Defense by 1.","id":"rocksmash","fullname":"move: Rock Smash","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":[{"chance":50,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"rock throw":{"exists":true,"name":"Rock Throw","num":88,"accuracy":90,"basePower":50,"category":"Physical","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Rock","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"rockthrow","fullname":"move: Rock Throw","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"rock tomb":{"exists":true,"name":"Rock Tomb","num":317,"accuracy":95,"basePower":60,"category":"Physical","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spe":-1}},"target":"normal","type":"Rock","contestType":"Clever","desc":"Has a 100% chance to lower the target\'s Speed by 1 stage.","shortDesc":"100% chance to lower the target\'s Speed by 1.","id":"rocktomb","fullname":"move: Rock Tomb","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":[{"chance":100,"boosts":{"spe":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"rock wrecker":{"exists":true,"name":"Rock Wrecker","num":439,"accuracy":90,"basePower":150,"category":"Physical","pp":5,"priority":0,"flags":{"bullet":1,"recharge":1,"protect":1,"mirror":1},"self":{"volatileStatus":"mustrecharge"},"secondary":null,"target":"normal","type":"Rock","contestType":"Tough","desc":"If this move is successful, the user must recharge on the following turn and cannot select a move.","shortDesc":"User cannot move next turn.","id":"rockwrecker","fullname":"move: Rock Wrecker","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"role play":{"exists":true,"name":"Role Play","num":272,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":1}},"contestType":"Cute","desc":"The user\'s Ability changes to match the target\'s Ability. Fails if the user\'s Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Zen Mode, or already matches the target, or if the target\'s Ability is As One, Battle Bond, Comatose, Disguise, Flower Gift, Forecast, Gulp Missile, Hunger Switch, Ice Face, Illusion, Imposter, Multitype, Neutralizing Gas, Power Construct, Power of Alchemy, Receiver, RKS System, Schooling, Shields Down, Stance Change, Trace, Wonder Guard, or Zen Mode.","shortDesc":"User replaces its Ability with the target\'s.","id":"roleplay","fullname":"move: Role Play","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"rolling kick":{"exists":true,"name":"Rolling Kick","num":27,"accuracy":85,"basePower":60,"category":"Physical","isNonstandard":"Past","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Fighting","contestType":"Cool","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"rollingkick","fullname":"move: Rolling Kick","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":80},"zMove":{"basePower":120}},"rollout":{"exists":true,"name":"Rollout","num":205,"accuracy":90,"basePower":30,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"condition":{"duration":2,"onLockMove":"rollout"},"secondary":null,"target":"normal","type":"Rock","contestType":"Cute","desc":"If this move is successful, the user is locked into this move and cannot make another move until it misses, 5 turns have passed, or the attack cannot be used. Power doubles with each successful hit of this move and doubles again if Defense Curl was used previously by the user. If this move is called by Sleep Talk, the move is used for one turn. If this move hits an active Disguise during the effect, the power multiplier is paused but the turn counter is not, potentially allowing the multiplier to be used on the user\'s next move after this effect ends.","shortDesc":"Power doubles with each hit. Repeats for 5 turns.","id":"rollout","fullname":"move: Rollout","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"roost":{"exists":true,"name":"Roost","num":355,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"heal":[1,2],"self":{"volatileStatus":"roost"},"condition":{"duration":1,"onResidualOrder":25,"onTypePriority":-1},"secondary":null,"target":"self","type":"Flying","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"The user restores 1/2 of its maximum HP, rounded half up. Until the end of the turn, Flying-type users lose their Flying type and pure Flying-type users become Normal type. Does nothing if the user\'s HP is full.","shortDesc":"Heals 50% HP. Flying-type removed \'til turn ends.","id":"roost","fullname":"move: Roost","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"rototiller":{"exists":true,"name":"Rototiller","num":563,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":10,"priority":0,"flags":{"distance":1,"nonsky":1},"secondary":null,"target":"all","type":"Ground","zMove":{"boost":{"atk":1}},"contestType":"Tough","desc":"Raises the Attack and Special Attack of all grounded Grass-type Pokemon on the field by 1 stage.","shortDesc":"Raises Atk/Sp. Atk of grounded Grass types by 1.","id":"rototiller","fullname":"move: Rototiller","effectType":"Move","gen":6,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"round":{"exists":true,"name":"Round","num":496,"accuracy":100,"basePower":60,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Beautiful","desc":"If there are other active Pokemon that chose this move for use this turn, those Pokemon take their turn immediately after the user, in Speed order, and this move\'s power is 120 for each other user.","shortDesc":"Power doubles if others used Round this turn.","id":"round","fullname":"move: Round","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"sacred fire":{"exists":true,"name":"Sacred Fire","num":221,"accuracy":95,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"defrost":1},"secondary":{"chance":50,"status":"brn"},"target":"normal","type":"Fire","contestType":"Beautiful","desc":"Has a 50% chance to burn the target.","shortDesc":"50% chance to burn the target. Thaws user.","id":"sacredfire","fullname":"move: Sacred Fire","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":50,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"sacred sword":{"exists":true,"name":"Sacred Sword","num":533,"accuracy":100,"basePower":90,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"ignoreEvasion":true,"ignoreDefensive":true,"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"Ignores the target\'s stat stage changes, including evasiveness.","shortDesc":"Ignores the target\'s stat stage changes.","id":"sacredsword","fullname":"move: Sacred Sword","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":175}},"safeguard":{"exists":true,"name":"Safeguard","num":219,"accuracy":true,"basePower":0,"category":"Status","pp":25,"priority":0,"flags":{"snatch":1},"sideCondition":"safeguard","condition":{"duration":5,"onSideResidualOrder":26,"onSideResidualSubOrder":3},"secondary":null,"target":"allySide","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Beautiful","desc":"For 5 turns, the user and its party members cannot have non-volatile status conditions or confusion inflicted on them by other Pokemon. Pokemon on the user\'s side cannot become affected by Yawn but can fall asleep from its effect. It is removed from the user\'s side if the user or an ally is successfully hit by Defog. Fails if the effect is already active on the user\'s side.","shortDesc":"For 5 turns, protects user\'s party from status.","id":"safeguard","fullname":"move: Safeguard","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sand attack":{"exists":true,"name":"Sand Attack","num":28,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"accuracy":-1},"secondary":null,"target":"normal","type":"Ground","zMove":{"boost":{"evasion":1}},"contestType":"Cute","desc":"Lowers the target\'s accuracy by 1 stage.","shortDesc":"Lowers the target\'s accuracy by 1.","id":"sandattack","fullname":"move: Sand Attack","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sandstorm":{"exists":true,"name":"Sandstorm","num":201,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{},"weather":"Sandstorm","secondary":null,"target":"all","type":"Rock","zMove":{"boost":{"spe":1}},"contestType":"Tough","desc":"For 5 turns, the weather becomes Sandstorm. At the end of each turn except the last, all active Pokemon lose 1/16 of their maximum HP, rounded down, unless they are a Ground, Rock, or Steel type, or have the Magic Guard, Overcoat, Sand Force, Sand Rush, or Sand Veil Abilities. During the effect, the Special Defense of Rock-type Pokemon is multiplied by 1.5 when taking damage from a special attack. Lasts for 8 turns if the user is holding Smooth Rock. Fails if the current weather is Sandstorm.","shortDesc":"For 5 turns, a sandstorm rages.","id":"sandstorm","fullname":"move: Sandstorm","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sand tomb":{"exists":true,"name":"Sand Tomb","num":328,"accuracy":85,"basePower":35,"category":"Physical","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Ground","contestType":"Clever","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"sandtomb","fullname":"move: Sand Tomb","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"sappy seed":{"exists":true,"name":"Sappy Seed","num":738,"accuracy":90,"basePower":100,"category":"Physical","isNonstandard":"LGPE","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Clever","desc":"This move summons Leech Seed on the foe.","shortDesc":"Summons Leech Seed.","id":"sappyseed","fullname":"move: Sappy Seed","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"savage spin out":{"exists":true,"name":"Savage Spin-Out","num":634,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"buginiumz","secondary":null,"target":"normal","type":"Bug","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"savagespinout","fullname":"move: Savage Spin-Out","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"scald":{"exists":true,"name":"Scald","num":503,"accuracy":100,"basePower":80,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"defrost":1},"thawsTarget":true,"secondary":{"chance":30,"status":"brn"},"target":"normal","type":"Water","contestType":"Tough","desc":"Has a 30% chance to burn the target. The target thaws out if it is frozen.","shortDesc":"30% chance to burn the target. Thaws target.","id":"scald","fullname":"move: Scald","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":30,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"scale shot":{"exists":true,"name":"Scale Shot","num":799,"accuracy":90,"basePower":25,"category":"Physical","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"multihit":[2,5],"selfBoost":{"boosts":{"def":-1,"spe":1}},"secondary":null,"target":"normal","type":"Dragon","zMove":{"basePower":140},"maxMove":{"basePower":130},"desc":"Hits two to five times. Lowers the user\'s Defense by 1 stage and raises the user\'s Speed by 1 stage after the last hit. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times. User: -1 Def, +1 Spe after last hit.","id":"scaleshot","fullname":"move: Scale Shot","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"scary face":{"exists":true,"name":"Scary Face","num":184,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"boosts":{"spe":-2},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Tough","desc":"Lowers the target\'s Speed by 2 stages.","shortDesc":"Lowers the target\'s Speed by 2.","id":"scaryface","fullname":"move: Scary Face","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"scorching sands":{"exists":true,"name":"Scorching Sands","num":815,"accuracy":100,"basePower":70,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"defrost":1},"thawsTarget":true,"secondary":{"chance":30,"status":"brn"},"target":"normal","type":"Ground","desc":"Has a 30% chance to burn the target. The target thaws out if it is frozen.","shortDesc":"30% chance to burn the target. Thaws target.","id":"scorchingsands","fullname":"move: Scorching Sands","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":[{"chance":30,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"scratch":{"exists":true,"name":"Scratch","num":10,"accuracy":100,"basePower":40,"category":"Physical","pp":35,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"scratch","fullname":"move: Scratch","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"screech":{"exists":true,"name":"Screech","num":103,"accuracy":85,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"sound":1,"authentic":1,"mystery":1},"boosts":{"def":-2},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"atk":1}},"contestType":"Clever","desc":"Lowers the target\'s Defense by 2 stages.","shortDesc":"Lowers the target\'s Defense by 2.","id":"screech","fullname":"move: Screech","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"searing shot":{"exists":true,"name":"Searing Shot","num":545,"accuracy":100,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":30,"status":"brn"},"target":"allAdjacent","type":"Fire","contestType":"Cool","desc":"Has a 30% chance to burn the target.","shortDesc":"30% chance to burn adjacent Pokemon.","id":"searingshot","fullname":"move: Searing Shot","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":30,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"searing sunraze smash":{"exists":true,"name":"Searing Sunraze Smash","num":724,"accuracy":true,"basePower":200,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{"contact":1},"isZ":"solganiumz","ignoreAbility":true,"secondary":null,"target":"normal","type":"Steel","contestType":"Cool","desc":"This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Ignores the Abilities of other Pokemon.","id":"searingsunrazesmash","fullname":"move: Searing Sunraze Smash","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"secret power":{"exists":true,"name":"Secret Power","num":290,"accuracy":100,"basePower":70,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"status":"par"},"target":"normal","type":"Normal","contestType":"Clever","desc":"Has a 30% chance to cause a secondary effect on the target based on the battle terrain. Causes paralysis on the regular Wi-Fi terrain, causes paralysis during Electric Terrain, lowers Special Attack by 1 stage during Misty Terrain, causes sleep during Grassy Terrain and lowers Speed by 1 stage during Psychic Terrain.","shortDesc":"Effect varies with terrain. (30% paralysis chance)","id":"secretpower","fullname":"move: Secret Power","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"secret sword":{"exists":true,"name":"Secret Sword","num":548,"accuracy":100,"basePower":85,"category":"Special","defensiveCategory":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Beautiful","desc":"Deals damage to the target based on its Defense instead of Special Defense.","shortDesc":"Damages target based on Defense, not Sp. Def.","id":"secretsword","fullname":"move: Secret Sword","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":160}},"seed bomb":{"exists":true,"name":"Seed Bomb","num":402,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"seedbomb","fullname":"move: Seed Bomb","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"seed flare":{"exists":true,"name":"Seed Flare","num":465,"accuracy":85,"basePower":120,"category":"Special","isNonstandard":"Past","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":40,"boosts":{"spd":-2}},"target":"normal","type":"Grass","contestType":"Beautiful","desc":"Has a 40% chance to lower the target\'s Special Defense by 2 stages.","shortDesc":"40% chance to lower the target\'s Sp. Def by 2.","id":"seedflare","fullname":"move: Seed Flare","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":[{"chance":40,"boosts":{"spd":-2}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"seismic toss":{"exists":true,"name":"Seismic Toss","num":69,"accuracy":100,"basePower":0,"damage":"level","category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"normal","type":"Fighting","maxMove":{"basePower":75},"contestType":"Tough","desc":"Deals damage to the target equal to the user\'s level.","shortDesc":"Does damage equal to the user\'s level.","id":"seismictoss","fullname":"move: Seismic Toss","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"self destruct":{"exists":true,"name":"Self-Destruct","num":120,"accuracy":100,"basePower":200,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"selfdestruct":"always","secondary":null,"target":"allAdjacent","type":"Normal","contestType":"Beautiful","desc":"The user faints after using this move, even if this move fails for having no target. This move is prevented from executing if any active Pokemon has the Damp Ability.","shortDesc":"Hits adjacent Pokemon. The user faints.","id":"selfdestruct","fullname":"move: Self-Destruct","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"shadow ball":{"exists":true,"name":"Shadow Ball","num":247,"accuracy":100,"basePower":80,"category":"Special","pp":15,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":20,"boosts":{"spd":-1}},"target":"normal","type":"Ghost","contestType":"Clever","desc":"Has a 20% chance to lower the target\'s Special Defense by 1 stage.","shortDesc":"20% chance to lower the target\'s Sp. Def by 1.","id":"shadowball","fullname":"move: Shadow Ball","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":[{"chance":20,"boosts":{"spd":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"shadow bone":{"exists":true,"name":"Shadow Bone","num":708,"accuracy":100,"basePower":85,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":20,"boosts":{"def":-1}},"target":"normal","type":"Ghost","contestType":"Cool","desc":"Has a 20% chance to lower the target\'s Defense by 1 stage.","shortDesc":"20% chance to lower the target\'s Defense by 1.","id":"shadowbone","fullname":"move: Shadow Bone","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":[{"chance":20,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"shadow claw":{"exists":true,"name":"Shadow Claw","num":421,"accuracy":100,"basePower":70,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"shadowclaw","fullname":"move: Shadow Claw","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"shadow force":{"exists":true,"name":"Shadow Force","num":467,"accuracy":100,"basePower":120,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"charge":1,"mirror":1},"breaksProtect":true,"condition":{"duration":2,"onInvulnerability":false},"secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"If this move is successful, it breaks through the target\'s Baneful Bunker, Detect, King\'s Shield, Protect, or Spiky Shield for this turn, allowing other Pokemon to attack the target normally. If the target\'s side is protected by Crafty Shield, Mat Block, Quick Guard, or Wide Guard, that protection is also broken for this turn and other Pokemon may attack the target\'s side normally. This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Disappears turn 1. Hits turn 2. Breaks protection.","id":"shadowforce","fullname":"move: Shadow Force","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"shadow punch":{"exists":true,"name":"Shadow Punch","num":325,"accuracy":true,"basePower":60,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":null,"target":"normal","type":"Ghost","contestType":"Clever","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"shadowpunch","fullname":"move: Shadow Punch","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"shadow sneak":{"exists":true,"name":"Shadow Sneak","num":425,"accuracy":100,"basePower":40,"category":"Physical","pp":30,"priority":1,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ghost","contestType":"Clever","desc":"No additional effect.","shortDesc":"Usually goes first.","id":"shadowsneak","fullname":"move: Shadow Sneak","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"shadow strike":{"exists":true,"name":"Shadow Strike","num":0,"accuracy":95,"basePower":80,"category":"Physical","isNonstandard":"CAP","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":50,"boosts":{"def":-1}},"target":"normal","type":"Ghost","contestType":"Clever","desc":"Has a 50% chance to lower the target\'s Defense by 1 stage.","shortDesc":"50% chance to lower the target\'s Defense by 1.","id":"shadowstrike","fullname":"move: Shadow Strike","effectType":"Move","gen":0,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":[{"chance":50,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"sharpen":{"exists":true,"name":"Sharpen","num":159,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":30,"priority":0,"flags":{"snatch":1},"boosts":{"atk":1},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"atk":1}},"contestType":"Cute","desc":"Raises the user\'s Attack by 1 stage.","shortDesc":"Raises the user\'s Attack by 1.","id":"sharpen","fullname":"move: Sharpen","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"shattered psyche":{"exists":true,"name":"Shattered Psyche","num":648,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"psychiumz","secondary":null,"target":"normal","type":"Psychic","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"shatteredpsyche","fullname":"move: Shattered Psyche","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"sheer cold":{"exists":true,"name":"Sheer Cold","num":329,"accuracy":30,"basePower":0,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"ohko":"Ice","target":"normal","type":"Ice","zMove":{"basePower":180},"maxMove":{"basePower":130},"contestType":"Beautiful","desc":"Deals damage to the target equal to the target\'s maximum HP. Ignores accuracy and evasiveness modifiers. This attack\'s accuracy is equal to (user\'s level - target\'s level + X)%, where X is 30 if the user is an Ice type and 20 otherwise, and fails if the target is at a higher level. Ice-type Pokemon and Pokemon with the Sturdy Ability are immune.","shortDesc":"OHKOs non-Ice targets. Fails if user\'s lower level.","id":"sheercold","fullname":"move: Sheer Cold","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"shell side arm":{"exists":true,"name":"Shell Side Arm","num":801,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":20,"status":"psn"},"target":"normal","type":"Poison","desc":"Has a 20% chance to poison the target. This move becomes a physical attack that makes contact if the value of ((((2 * the user\'s level / 5 + 2) * 90 * X) / Y) / 50), where X is the user\'s Attack stat and Y is the target\'s Defense stat, is greater than the same value where X is the user\'s Special Attack stat and Y is the target\'s Special Defense stat. No stat modifiers other than stat stage changes are considered for this purpose. If the two values are equal, this move chooses a damage category at random.","shortDesc":"20% psn. Physical+contact if it would be stronger.","id":"shellsidearm","fullname":"move: Shell Side Arm","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":20,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":175}},"shell smash":{"exists":true,"name":"Shell Smash","num":504,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"snatch":1},"boosts":{"def":-1,"spd":-1,"atk":2,"spa":2,"spe":2},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Tough","desc":"Lowers the user\'s Defense and Special Defense by 1 stage. Raises the user\'s Attack, Special Attack, and Speed by 2 stages.","shortDesc":"Lowers Def, SpD by 1; raises Atk, SpA, Spe by 2.","id":"shellsmash","fullname":"move: Shell Smash","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"shell trap":{"exists":true,"name":"Shell Trap","num":704,"accuracy":100,"basePower":150,"category":"Special","pp":5,"priority":-3,"flags":{"protect":1},"condition":{"duration":1},"secondary":null,"target":"allAdjacentFoes","type":"Fire","contestType":"Tough","desc":"Fails unless the user is hit by a physical attack from an opponent this turn before it can execute the move. If the user was hit and has not fainted, it attacks immediately after being hit, and the effect ends. If the opponent\'s physical attack had a secondary effect removed by the Sheer Force Ability, it does not count for the purposes of this effect.","shortDesc":"User must take physical damage before moving.","id":"shelltrap","fullname":"move: Shell Trap","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"shift gear":{"exists":true,"name":"Shift Gear","num":508,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1},"boosts":{"spe":2,"atk":1},"secondary":null,"target":"self","type":"Steel","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"Raises the user\'s Speed by 2 stages and its Attack by 1 stage.","shortDesc":"Raises the user\'s Speed by 2 and Attack by 1.","id":"shiftgear","fullname":"move: Shift Gear","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"shock wave":{"exists":true,"name":"Shock Wave","num":351,"accuracy":true,"basePower":60,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Electric","contestType":"Cool","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"shockwave","fullname":"move: Shock Wave","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"shore up":{"exists":true,"name":"Shore Up","num":659,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"secondary":null,"target":"self","type":"Ground","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"The user restores 1/2 of its maximum HP, rounded half down. If the weather is Sandstorm, the user instead restores 2/3 of its maximum HP, rounded half down.","shortDesc":"User restores 1/2 its max HP; 2/3 in Sandstorm.","id":"shoreup","fullname":"move: Shore Up","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"signal beam":{"exists":true,"name":"Signal Beam","num":324,"accuracy":100,"basePower":75,"category":"Special","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"volatileStatus":"confusion"},"target":"normal","type":"Bug","contestType":"Beautiful","desc":"Has a 10% chance to confuse the target.","shortDesc":"10% chance to confuse the target.","id":"signalbeam","fullname":"move: Signal Beam","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":[{"chance":10,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"silver wind":{"exists":true,"name":"Silver Wind","num":318,"accuracy":100,"basePower":60,"category":"Special","isNonstandard":"Past","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"self":{"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}}},"target":"normal","type":"Bug","contestType":"Beautiful","desc":"Has a 10% chance to raise the user\'s Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.","shortDesc":"10% chance to raise all stats by 1 (not acc/eva).","id":"silverwind","fullname":"move: Silver Wind","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":[{"chance":10,"self":{"boosts":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"simple beam":{"exists":true,"name":"Simple Beam","num":493,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spa":1}},"contestType":"Cute","desc":"Causes the target\'s Ability to become Simple. Fails if the target\'s Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Multitype, Power Construct, RKS System, Schooling, Shields Down, Simple, Stance Change, Truant, or Zen Mode.","shortDesc":"The target\'s Ability becomes Simple.","id":"simplebeam","fullname":"move: Simple Beam","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sing":{"exists":true,"name":"Sing","num":47,"accuracy":55,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"sound":1,"authentic":1},"status":"slp","secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Cute","desc":"Causes the target to fall asleep.","shortDesc":"Causes the target to fall asleep.","id":"sing","fullname":"move: Sing","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sinister arrow raid":{"exists":true,"name":"Sinister Arrow Raid","num":695,"accuracy":true,"basePower":180,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"decidiumz","secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"sinisterarrowraid","fullname":"move: Sinister Arrow Raid","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"sizzly slide":{"exists":true,"name":"Sizzly Slide","num":735,"accuracy":100,"basePower":60,"category":"Physical","isNonstandard":"LGPE","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"defrost":1},"secondary":{"chance":100,"status":"brn"},"target":"normal","type":"Fire","contestType":"Clever","desc":"Has a 100% chance to burn the foe.","shortDesc":"100% chance to burn the foe.","id":"sizzlyslide","fullname":"move: Sizzly Slide","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":[{"chance":100,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"sketch":{"exists":true,"name":"Sketch","num":166,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":1,"noPPBoosts":true,"priority":0,"flags":{"authentic":1,"mystery":1},"noSketch":true,"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Clever","desc":"This move is permanently replaced by the last move used by the target. The copied move has the maximum PP for that move. Fails if the target has not made a move, if the user has Transformed, or if the move is Chatter, Sketch, Struggle, or any move the user knows.","shortDesc":"Permanently copies the last move target used.","id":"sketch","fullname":"move: Sketch","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false},"skill swap":{"exists":true,"name":"Skill Swap","num":285,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"The user swaps its Ability with the target\'s Ability. Fails if either the user or the target\'s Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Hunger Switch, Ice Face, Illusion, Multitype, Neutralizing Gas, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Wonder Guard, or Zen Mode.","shortDesc":"The user and the target trade Abilities.","id":"skillswap","fullname":"move: Skill Swap","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"skitter smack":{"exists":true,"name":"Skitter Smack","num":806,"accuracy":90,"basePower":70,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spa":-1}},"target":"normal","type":"Bug","desc":"Has a 100% chance to lower the target\'s Special Attack by 1 stage.","shortDesc":"100% chance to lower target\'s Sp. Atk by 1.","id":"skittersmack","fullname":"move: Skitter Smack","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":[{"chance":100,"boosts":{"spa":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"skull bash":{"exists":true,"name":"Skull Bash","num":130,"accuracy":100,"basePower":130,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"charge":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"This attack charges on the first turn and executes on the second. Raises the user\'s Defense by 1 stage on the first turn. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Raises user\'s Defense by 1 on turn 1. Hits turn 2.","id":"skullbash","fullname":"move: Skull Bash","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"sky attack":{"exists":true,"name":"Sky Attack","num":143,"accuracy":90,"basePower":140,"category":"Physical","pp":5,"priority":0,"flags":{"charge":1,"protect":1,"mirror":1,"distance":1},"critRatio":2,"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"any","type":"Flying","contestType":"Cool","desc":"Has a 30% chance to make the target flinch and a higher chance for a critical hit. This attack charges on the first turn and executes on the second. If the user is holding a Power Herb, the move completes in one turn.","shortDesc":"Charges, then hits turn 2. 30% flinch. High crit.","id":"skyattack","fullname":"move: Sky Attack","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Flying","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"sky drop":{"exists":true,"name":"Sky Drop","num":507,"accuracy":100,"basePower":60,"category":"Physical","isNonstandard":"Past","pp":10,"priority":0,"flags":{"contact":1,"charge":1,"protect":1,"mirror":1,"gravity":1,"distance":1},"condition":{"duration":2,"onFoeTrapPokemonPriority":-15,"onFoeBeforeMovePriority":12,"onRedirectTargetPriority":99},"secondary":null,"target":"any","type":"Flying","contestType":"Tough","desc":"This attack takes the target into the air with the user on the first turn and executes on the second. Pokemon weighing 200 kg or more cannot be lifted. On the first turn, the user and the target avoid all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thousand Arrows, Thunder, and Twister. The user and the target cannot make a move between turns, but the target can select a move to use. This move cannot damage Flying-type Pokemon. Fails on the first turn if the target is an ally, if the target has a substitute, or if the target is using Bounce, Dig, Dive, Fly, Phantom Force, Shadow Force, or Sky Drop.","shortDesc":"User and foe fly up turn 1. Damages on turn 2.","id":"skydrop","fullname":"move: Sky Drop","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"sky uppercut":{"exists":true,"name":"Sky Uppercut","num":327,"accuracy":90,"basePower":85,"category":"Physical","isNonstandard":"Past","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop.","shortDesc":"Can hit Pokemon using Bounce, Fly, or Sky Drop.","id":"skyuppercut","fullname":"move: Sky Uppercut","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":160}},"slack off":{"exists":true,"name":"Slack Off","num":303,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"heal":[1,2],"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"The user restores 1/2 of its maximum HP, rounded half up.","shortDesc":"Heals the user by 50% of its max HP.","id":"slackoff","fullname":"move: Slack Off","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"slam":{"exists":true,"name":"Slam","num":21,"accuracy":75,"basePower":80,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"slam","fullname":"move: Slam","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"slash":{"exists":true,"name":"Slash","num":163,"accuracy":100,"basePower":70,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"slash","fullname":"move: Slash","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"sleep powder":{"exists":true,"name":"Sleep Powder","num":79,"accuracy":75,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"powder":1,"protect":1,"reflectable":1,"mirror":1},"status":"slp","secondary":null,"target":"normal","type":"Grass","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"Causes the target to fall asleep.","shortDesc":"Causes the target to fall asleep.","id":"sleeppowder","fullname":"move: Sleep Powder","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sleep talk":{"exists":true,"name":"Sleep Talk","num":214,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{},"sleepUsable":true,"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"crit2"},"contestType":"Cute","desc":"One of the user\'s known moves, besides this move, is selected for use at random. Fails if the user is not asleep. The selected move does not have PP deducted from it, and can currently have 0 PP. This move cannot select Assist, Beak Blast, Belch, Bide, Celebrate, Chatter, Copycat, Dynamax Cannon, Focus Punch, Hold Hands, Me First, Metronome, Mimic, Mirror Move, Nature Power, Shell Trap, Sketch, Sleep Talk, Struggle, Uproar, any two-turn move, or any Max Move.","shortDesc":"User must be asleep. Uses another known move.","id":"sleeptalk","fullname":"move: Sleep Talk","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sludge":{"exists":true,"name":"Sludge","num":124,"accuracy":100,"basePower":65,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"status":"psn"},"target":"normal","type":"Poison","contestType":"Tough","desc":"Has a 30% chance to poison the target.","shortDesc":"30% chance to poison the target.","id":"sludge","fullname":"move: Sludge","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":30,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":85},"zMove":{"basePower":120}},"sludge bomb":{"exists":true,"name":"Sludge Bomb","num":188,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":30,"status":"psn"},"target":"normal","type":"Poison","contestType":"Tough","desc":"Has a 30% chance to poison the target.","shortDesc":"30% chance to poison the target.","id":"sludgebomb","fullname":"move: Sludge Bomb","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":30,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":175}},"sludge wave":{"exists":true,"name":"Sludge Wave","num":482,"accuracy":100,"basePower":95,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"psn"},"target":"allAdjacent","type":"Poison","contestType":"Tough","desc":"Has a 10% chance to poison the target.","shortDesc":"10% chance to poison adjacent Pokemon.","id":"sludgewave","fullname":"move: Sludge Wave","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":10,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":175}},"smack down":{"exists":true,"name":"Smack Down","num":479,"accuracy":100,"basePower":50,"category":"Physical","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"volatileStatus":"smackdown","condition":{"noCopy":true},"secondary":null,"target":"normal","type":"Rock","contestType":"Tough","desc":"This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If this move hits a target under the effect of Bounce, Fly, Magnet Rise, or Telekinesis, the effect ends. If the target is a Flying type that has not used Roost this turn or a Pokemon with the Levitate Ability, it loses its immunity to Ground-type attacks and the Arena Trap Ability as long as it remains active. During the effect, Magnet Rise fails for the target and Telekinesis fails against the target.","shortDesc":"Removes the target\'s Ground immunity.","id":"smackdown","fullname":"move: Smack Down","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"smart strike":{"exists":true,"name":"Smart Strike","num":684,"accuracy":true,"basePower":70,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Steel","contestType":"Cool","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy.","id":"smartstrike","fullname":"move: Smart Strike","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"smelling salts":{"exists":true,"name":"Smelling Salts","num":265,"accuracy":100,"basePower":70,"category":"Physical","isNonstandard":"Past","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"Power doubles if the target is paralyzed. If the user has not fainted, the target is cured of paralysis.","shortDesc":"Power doubles if target is paralyzed, and cures it.","id":"smellingsalts","fullname":"move: Smelling Salts","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"smog":{"exists":true,"name":"Smog","num":123,"accuracy":70,"basePower":30,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":40,"status":"psn"},"target":"normal","type":"Poison","contestType":"Tough","desc":"Has a 40% chance to poison the target.","shortDesc":"40% chance to poison the target.","id":"smog","fullname":"move: Smog","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":[{"chance":40,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"smokescreen":{"exists":true,"name":"Smokescreen","num":108,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"accuracy":-1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"evasion":1}},"contestType":"Clever","desc":"Lowers the target\'s accuracy by 1 stage.","shortDesc":"Lowers the target\'s accuracy by 1.","id":"smokescreen","fullname":"move: Smokescreen","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"snap trap":{"exists":true,"name":"Snap Trap","num":779,"accuracy":100,"basePower":35,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Grass","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"snaptrap","fullname":"move: Snap Trap","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"snarl":{"exists":true,"name":"Snarl","num":555,"accuracy":95,"basePower":55,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":{"chance":100,"boosts":{"spa":-1}},"target":"allAdjacentFoes","type":"Dark","contestType":"Tough","desc":"Has a 100% chance to lower the target\'s Special Attack by 1 stage.","shortDesc":"100% chance to lower the foe(s) Sp. Atk by 1.","id":"snarl","fullname":"move: Snarl","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":[{"chance":100,"boosts":{"spa":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":100}},"snatch":{"exists":true,"name":"Snatch","num":289,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":10,"priority":4,"flags":{"authentic":1},"volatileStatus":"snatch","condition":{"duration":1,"onAnyPrepareHitPriority":-1},"secondary":null,"pressureTarget":"foeSide","target":"self","type":"Dark","zMove":{"boost":{"spe":2}},"contestType":"Clever","desc":"If another Pokemon uses certain non-damaging moves this turn, the user steals that move to use itself. If multiple Pokemon use one of those moves this turn, the applicable moves are all stolen by the first Pokemon in turn order that used this move this turn. This effect is ignored while the user is under the effect of Sky Drop.","shortDesc":"User steals certain support moves to use itself.","id":"snatch","fullname":"move: Snatch","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"snipe shot":{"exists":true,"name":"Snipe Shot","num":745,"accuracy":100,"basePower":80,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"critRatio":2,"tracksTarget":true,"secondary":null,"target":"normal","type":"Water","desc":"Has a higher chance for a critical hit. This move cannot be redirected to a different target by any effect.","shortDesc":"High critical hit ratio. Cannot be redirected.","id":"snipeshot","fullname":"move: Snipe Shot","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"snore":{"exists":true,"name":"Snore","num":173,"accuracy":100,"basePower":50,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"sleepUsable":true,"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Normal","contestType":"Cute","desc":"Has a 30% chance to make the target flinch. Fails if the user is not asleep.","shortDesc":"User must be asleep. 30% chance to flinch target.","id":"snore","fullname":"move: Snore","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"soak":{"exists":true,"name":"Soak","num":487,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Water","zMove":{"boost":{"spa":1}},"contestType":"Cute","desc":"Causes the target to become a Water type. Fails if the target is an Arceus or a Silvally, or if the target is already purely Water type.","shortDesc":"Changes the target\'s type to Water.","id":"soak","fullname":"move: Soak","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"soft boiled":{"exists":true,"name":"Soft-Boiled","num":135,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"heal":[1,2],"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"The user restores 1/2 of its maximum HP, rounded half up.","shortDesc":"Heals the user by 50% of its max HP.","id":"softboiled","fullname":"move: Soft-Boiled","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"solar beam":{"exists":true,"name":"Solar Beam","num":76,"accuracy":100,"basePower":120,"category":"Special","pp":10,"priority":0,"flags":{"charge":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Cool","desc":"This attack charges on the first turn and executes on the second. Power is halved if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm and the user is not holding Utility Umbrella. If the user is holding a Power Herb or the weather is Desolate Land or Sunny Day, the move completes in one turn. If the user is holding Utility Umbrella and the weather is Desolate Land or Sunny Day, the move still requires a turn to charge.","shortDesc":"Charges turn 1. Hits turn 2. No charge in sunlight.","id":"solarbeam","fullname":"move: Solar Beam","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"solar blade":{"exists":true,"name":"Solar Blade","num":669,"accuracy":100,"basePower":125,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"charge":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Cool","desc":"This attack charges on the first turn and executes on the second. Power is halved if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm and the user is not holding Utility Umbrella. If the user is holding a Power Herb or the weather is Desolate Land or Sunny Day, the move completes in one turn. If the user is holding Utility Umbrella and the weather is Desolate Land or Sunny Day, the move still requires a turn to charge.","shortDesc":"Charges turn 1. Hits turn 2. No charge in sunlight.","id":"solarblade","fullname":"move: Solar Blade","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"sonic boom":{"exists":true,"name":"Sonic Boom","num":49,"accuracy":90,"basePower":0,"damage":20,"category":"Special","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"Deals 20 HP of damage to the target.","shortDesc":"Always does 20 HP of damage.","id":"sonicboom","fullname":"move: Sonic Boom","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"soul stealing 7-star strike":{"exists":true,"name":"Soul-Stealing 7-Star Strike","num":699,"accuracy":true,"basePower":195,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{"contact":1},"isZ":"marshadiumz","secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"soulstealing7starstrike","fullname":"move: Soul-Stealing 7-Star Strike","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"spacial rend":{"exists":true,"name":"Spacial Rend","num":460,"accuracy":95,"basePower":100,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Dragon","contestType":"Beautiful","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"spacialrend","fullname":"move: Spacial Rend","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Dragon","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"spark":{"exists":true,"name":"Spark","num":209,"accuracy":100,"basePower":65,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"status":"par"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 30% chance to paralyze the target.","shortDesc":"30% chance to paralyze the target.","id":"spark","fullname":"move: Spark","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"sparkling aria":{"exists":true,"name":"Sparkling Aria","num":664,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"secondary":{"dustproof":true,"chance":100},"target":"allAdjacent","type":"Water","contestType":"Tough","desc":"If the user has not fainted, the target is cured of its burn.","shortDesc":"The target is cured of its burn.","id":"sparklingaria","fullname":"move: Sparkling Aria","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"dustproof":true,"chance":100}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"sparkly swirl":{"exists":true,"name":"Sparkly Swirl","num":740,"accuracy":85,"basePower":120,"category":"Special","isNonstandard":"LGPE","pp":5,"priority":0,"flags":{"protect":1},"self":{},"secondary":null,"target":"normal","type":"Fairy","contestType":"Clever","desc":"Every Pokemon in the user\'s party is cured of its non-volatile status condition.","shortDesc":"Cures the user\'s party of all status conditions.","id":"sparklyswirl","fullname":"move: Sparkly Swirl","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"spectral thief":{"exists":true,"name":"Spectral Thief","num":712,"accuracy":100,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"authentic":1},"stealsBoosts":true,"secondary":null,"target":"normal","type":"Ghost","contestType":"Cool","desc":"The target\'s stat stages greater than 0 are stolen from it and applied to the user before dealing damage.","shortDesc":"Steals target\'s boosts before dealing damage.","id":"spectralthief","fullname":"move: Spectral Thief","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"speed swap":{"exists":true,"name":"Speed Swap","num":683,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"authentic":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"The user swaps its Speed stat with the target. Stat stage changes are unaffected.","shortDesc":"Swaps Speed stat with target.","id":"speedswap","fullname":"move: Speed Swap","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"spider web":{"exists":true,"name":"Spider Web","num":169,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"secondary":null,"target":"normal","type":"Bug","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.","shortDesc":"Prevents the target from switching out.","id":"spiderweb","fullname":"move: Spider Web","effectType":"Move","gen":2,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"spike cannon":{"exists":true,"name":"Spike Cannon","num":131,"accuracy":100,"basePower":20,"category":"Physical","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Normal","maxMove":{"basePower":120},"contestType":"Cool","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"spikecannon","fullname":"move: Spike Cannon","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":120}},"spikes":{"exists":true,"name":"Spikes","num":191,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"reflectable":1,"nonsky":1},"sideCondition":"spikes","condition":{},"secondary":null,"target":"foeSide","type":"Ground","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in, unless it is a Flying-type Pokemon or has the Levitate Ability. Can be used up to three times before failing. Opponents lose 1/8 of their maximum HP with one layer, 1/6 of their maximum HP with two layers, and 1/4 of their maximum HP with three layers, all rounded down. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, or is hit by Defog.","shortDesc":"Hurts grounded foes on switch-in. Max 3 layers.","id":"spikes","fullname":"move: Spikes","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"spiky shield":{"exists":true,"name":"Spiky Shield","num":596,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":4,"flags":{},"stallingMove":true,"volatileStatus":"spikyshield","condition":{"duration":1,"onTryHitPriority":3},"secondary":null,"target":"self","type":"Grass","zMove":{"boost":{"def":1}},"contestType":"Tough","desc":"The user is protected from most attacks made by other Pokemon during this turn, and Pokemon making contact with the user lose 1/8 of their maximum HP, rounded down. This move has a 1/X chance of being successful, where X starts at 1 and triples each time this move is successfully used. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn.","shortDesc":"Protects from moves. Contact: loses 1/8 max HP.","id":"spikyshield","fullname":"move: Spiky Shield","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"spirit break":{"exists":true,"name":"Spirit Break","num":789,"accuracy":100,"basePower":75,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spa":-1}},"target":"normal","type":"Fairy","desc":"Has a 100% chance to lower the target\'s Special Attack by 1 stage.","shortDesc":"100% chance to lower the target\'s Sp. Atk by 1.","id":"spiritbreak","fullname":"move: Spirit Break","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":[{"chance":100,"boosts":{"spa":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"spirit shackle":{"exists":true,"name":"Spirit Shackle","num":662,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100},"target":"normal","type":"Ghost","contestType":"Tough","desc":"Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.","shortDesc":"Prevents the target from switching out.","id":"spiritshackle","fullname":"move: Spirit Shackle","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":[{"chance":100}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"spit up":{"exists":true,"name":"Spit Up","num":255,"accuracy":100,"basePower":0,"category":"Special","pp":10,"priority":0,"flags":{"protect":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"Power is equal to 100 times the user\'s Stockpile count. Fails if the user\'s Stockpile count is 0. Whether or not this move is successful, the user\'s Defense and Special Defense decrease by as many stages as Stockpile had increased them, and the user\'s Stockpile count resets to 0.","shortDesc":"More power with more uses of Stockpile.","id":"spitup","fullname":"move: Spit Up","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"spite":{"exists":true,"name":"Spite","num":180,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"secondary":null,"target":"normal","type":"Ghost","zMove":{"effect":"heal"},"contestType":"Tough","desc":"Causes the target\'s last move used to lose 4 PP. Fails if the target has not made a move, if the move has 0 PP, or if it no longer knows the move.","shortDesc":"Lowers the PP of the target\'s last move by 4.","id":"spite","fullname":"move: Spite","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"splash":{"exists":true,"name":"Splash","num":150,"accuracy":true,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"gravity":1},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"atk":3}},"contestType":"Cute","desc":"No competitive use.","shortDesc":"No competitive use.","id":"splash","fullname":"move: Splash","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"splintered stormshards":{"exists":true,"name":"Splintered Stormshards","num":727,"accuracy":true,"basePower":190,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"lycaniumz","secondary":null,"target":"normal","type":"Rock","contestType":"Cool","desc":"Ends the effects of Electric Terrain, Grassy Terrain, Misty Terrain, and Psychic Terrain.","shortDesc":"Ends the effects of terrain.","id":"splinteredstormshards","fullname":"move: Splintered Stormshards","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"splishy splash":{"exists":true,"name":"Splishy Splash","num":730,"accuracy":100,"basePower":90,"category":"Special","isNonstandard":"LGPE","pp":15,"priority":0,"flags":{"protect":1},"secondary":{"chance":30,"status":"par"},"target":"allAdjacentFoes","type":"Water","contestType":"Cool","desc":"Has a 30% chance to paralyze the target.","shortDesc":"30% chance to paralyze the target.","id":"splishysplash","fullname":"move: Splishy Splash","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"spore":{"exists":true,"name":"Spore","num":147,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"powder":1,"protect":1,"reflectable":1,"mirror":1},"status":"slp","secondary":null,"target":"normal","type":"Grass","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"Causes the target to fall asleep.","shortDesc":"Causes the target to fall asleep.","id":"spore","fullname":"move: Spore","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"spotlight":{"exists":true,"name":"Spotlight","num":671,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":3,"flags":{"protect":1,"reflectable":1,"mystery":1},"volatileStatus":"spotlight","condition":{"duration":1,"onFoeRedirectTargetPriority":2},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spd":1}},"contestType":"Cute","desc":"Until the end of the turn, all single-target attacks from opponents of the target are redirected to the target. Such attacks are redirected to the target before they can be reflected by Magic Coat or the Magic Bounce Ability, or drawn in by the Lightning Rod or Storm Drain Abilities. Fails if it is not a Double Battle or Battle Royal.","shortDesc":"Target\'s foes\' moves are redirected to it this turn.","id":"spotlight","fullname":"move: Spotlight","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"stealth rock":{"exists":true,"name":"Stealth Rock","num":446,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"reflectable":1},"sideCondition":"stealthrock","condition":{},"secondary":null,"target":"foeSide","type":"Rock","zMove":{"boost":{"def":1}},"contestType":"Cool","desc":"Sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in. Fails if the effect is already active on the opposing side. Foes lose 1/32, 1/16, 1/8, 1/4, or 1/2 of their maximum HP, rounded down, based on their weakness to the Rock type; 0.25x, 0.5x, neutral, 2x, or 4x, respectively. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, or is hit by Defog.","shortDesc":"Hurts foes on switch-in. Factors Rock weakness.","id":"stealthrock","fullname":"move: Stealth Rock","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"steam eruption":{"exists":true,"name":"Steam Eruption","num":592,"accuracy":95,"basePower":110,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1,"defrost":1},"thawsTarget":true,"secondary":{"chance":30,"status":"brn"},"target":"normal","type":"Water","contestType":"Beautiful","desc":"Has a 30% chance to burn the target. The target thaws out if it is frozen.","shortDesc":"30% chance to burn the target. Thaws target.","id":"steameruption","fullname":"move: Steam Eruption","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":30,"status":"brn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"steamroller":{"exists":true,"name":"Steamroller","num":537,"accuracy":100,"basePower":65,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Bug","contestType":"Tough","desc":"Has a 30% chance to make the target flinch. Damage doubles and no accuracy check is done if the target has used Minimize while active.","shortDesc":"30% chance to make the target flinch.","id":"steamroller","fullname":"move: Steamroller","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"steel beam":{"exists":true,"name":"Steel Beam","num":796,"accuracy":95,"basePower":140,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"mindBlownRecoil":true,"secondary":null,"target":"normal","type":"Steel","desc":"Whether or not this move is successful and even if it would cause fainting, the user loses 1/2 of its maximum HP, rounded up, unless the user has the Magic Guard Ability.","shortDesc":"User loses 50% max HP.","id":"steelbeam","fullname":"move: Steel Beam","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":200}},"steel roller":{"exists":true,"name":"Steel Roller","num":798,"accuracy":100,"basePower":130,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Steel","desc":"Fails if there is no terrain active. Ends the effects of Electric Terrain, Grassy Terrain, Misty Terrain, and Psychic Terrain.","shortDesc":"Fails if there is no terrain active. Ends the terrain.","id":"steelroller","fullname":"move: Steel Roller","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":195}},"steel wing":{"exists":true,"name":"Steel Wing","num":211,"accuracy":90,"basePower":70,"category":"Physical","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":10,"self":{"boosts":{"def":1}}},"target":"normal","type":"Steel","contestType":"Cool","desc":"Has a 10% chance to raise the user\'s Defense by 1 stage.","shortDesc":"10% chance to raise the user\'s Defense by 1.","id":"steelwing","fullname":"move: Steel Wing","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":[{"chance":10,"self":{"boosts":{"def":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"sticky web":{"exists":true,"name":"Sticky Web","num":564,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"reflectable":1},"sideCondition":"stickyweb","condition":{},"secondary":null,"pressureTarget":"self","target":"foeSide","type":"Bug","zMove":{"boost":{"spe":1}},"contestType":"Tough","desc":"Sets up a hazard on the opposing side of the field, lowering the Speed by 1 stage of each opposing Pokemon that switches in, unless it is a Flying-type Pokemon or has the Levitate Ability. Fails if the effect is already active on the opposing side. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, or is hit by Defog.","shortDesc":"Lowers Speed of grounded foes by 1 on switch-in.","id":"stickyweb","fullname":"move: Sticky Web","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"stockpile":{"exists":true,"name":"Stockpile","num":254,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1},"volatileStatus":"stockpile","condition":{"noCopy":true},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"heal"},"contestType":"Tough","desc":"Raises the user\'s Defense and Special Defense by 1 stage. The user\'s Stockpile count increases by 1. Fails if the user\'s Stockpile count is 3. The user\'s Stockpile count is reset to 0 when it is no longer active.","shortDesc":"Raises user\'s Defense, Sp. Def by 1. Max 3 uses.","id":"stockpile","fullname":"move: Stockpile","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"stoked sparksurfer":{"exists":true,"name":"Stoked Sparksurfer","num":700,"accuracy":true,"basePower":175,"category":"Special","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"aloraichiumz","secondary":{"chance":100,"status":"par"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 100% chance to paralyze the target.","shortDesc":"100% chance to paralyze the target.","id":"stokedsparksurfer","fullname":"move: Stoked Sparksurfer","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":100,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"stomp":{"exists":true,"name":"Stomp","num":23,"accuracy":100,"basePower":65,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"nonsky":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Normal","contestType":"Tough","desc":"Has a 30% chance to make the target flinch. Damage doubles and no accuracy check is done if the target has used Minimize while active.","shortDesc":"30% chance to make the target flinch.","id":"stomp","fullname":"move: Stomp","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"stomping tantrum":{"exists":true,"name":"Stomping Tantrum","num":707,"accuracy":100,"basePower":75,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Ground","contestType":"Tough","desc":"Power doubles if the user\'s last move on the previous turn, including moves called by other moves or those used through Instruct, Magic Coat, Snatch, or the Dancer or Magic Bounce Abilities, failed to do any of its normal effects, not including damage from an unsuccessful High Jump Kick, Jump Kick, or Mind Blown, or if the user was prevented from moving by any effect other than recharging or Sky Drop. A move that was blocked by Baneful Bunker, Detect, King\'s Shield, Protect, Spiky Shield, Crafty Shield, Mat Block, Quick Guard, or Wide Guard will not double this move\'s power, nor will Bounce or Fly ending early due to the effect of Gravity, Smack Down, or Thousand Arrows.","shortDesc":"Power doubles if the user\'s last move failed.","id":"stompingtantrum","fullname":"move: Stomping Tantrum","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"stone edge":{"exists":true,"name":"Stone Edge","num":444,"accuracy":80,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"critRatio":2,"secondary":null,"target":"normal","type":"Rock","contestType":"Tough","desc":"Has a higher chance for a critical hit.","shortDesc":"High critical hit ratio.","id":"stoneedge","fullname":"move: Stone Edge","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"stored power":{"exists":true,"name":"Stored Power","num":500,"accuracy":100,"basePower":20,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Clever","desc":"Power is equal to 20+(X*20), where X is the user\'s total stat stage changes that are greater than 0.","shortDesc":" + 20 power for each of the user\'s stat boosts.","id":"storedpower","fullname":"move: Stored Power","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"storm throw":{"exists":true,"name":"Storm Throw","num":480,"accuracy":100,"basePower":60,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"willCrit":true,"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Battle Armor or Shell Armor Abilities.","shortDesc":"Always results in a critical hit.","id":"stormthrow","fullname":"move: Storm Throw","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":80},"zMove":{"basePower":120}},"strange steam":{"exists":true,"name":"Strange Steam","num":790,"accuracy":95,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":20,"volatileStatus":"confusion"},"target":"normal","type":"Fairy","desc":"Has a 20% chance to confuse the target.","shortDesc":"20% chance to confuse the target.","id":"strangesteam","fullname":"move: Strange Steam","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":[{"chance":20,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"strength":{"exists":true,"name":"Strength","num":70,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"strength","fullname":"move: Strength","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"strength sap":{"exists":true,"name":"Strength Sap","num":668,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"heal":1},"secondary":null,"target":"normal","type":"Grass","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Lowers the target\'s Attack by 1 stage. The user restores its HP equal to the target\'s Attack stat calculated with its stat stage before this move was used. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. Fails if the target\'s Attack stat stage is -6.","shortDesc":"User heals HP=target\'s Atk stat. Lowers Atk by 1.","id":"strengthsap","fullname":"move: Strength Sap","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"string shot":{"exists":true,"name":"String Shot","num":81,"accuracy":95,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"spe":-2},"secondary":null,"target":"allAdjacentFoes","type":"Bug","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"Lowers the target\'s Speed by 2 stages.","shortDesc":"Lowers the foe(s) Speed by 2.","id":"stringshot","fullname":"move: String Shot","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"struggle":{"exists":true,"name":"Struggle","num":165,"accuracy":true,"basePower":50,"category":"Physical","pp":1,"noPPBoosts":true,"priority":0,"flags":{"contact":1,"protect":1},"noSketch":true,"struggleRecoil":true,"secondary":null,"target":"randomNormal","type":"Normal","contestType":"Tough","desc":"Deals typeless damage to a random opposing Pokemon. If this move was successful, the user loses 1/4 of its maximum HP, rounded half up, and the Rock Head Ability does not prevent this. This move is automatically used if none of the user\'s known moves can be selected.","shortDesc":"User loses 1/4 of its max HP.","id":"struggle","fullname":"move: Struggle","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false},"struggle bug":{"exists":true,"name":"Struggle Bug","num":522,"accuracy":100,"basePower":50,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"spa":-1}},"target":"allAdjacentFoes","type":"Bug","contestType":"Cute","desc":"Has a 100% chance to lower the target\'s Special Attack by 1 stage.","shortDesc":"100% chance to lower the foe(s) Sp. Atk by 1.","id":"strugglebug","fullname":"move: Struggle Bug","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":[{"chance":100,"boosts":{"spa":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"stuff cheeks":{"exists":true,"name":"Stuff Cheeks","num":747,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1},"secondary":null,"target":"self","type":"Normal","desc":"This move cannot be selected unless the user is holding a Berry. The user eats its Berry and raises its Defense by 2 stages. This effect is not prevented by the Klutz or Unnerve Abilities, or the effects of Embargo or Magic Room. Fails if the user is not holding a Berry.","shortDesc":"Must hold Berry to use. User eats Berry, Def +2.","id":"stuffcheeks","fullname":"move: Stuff Cheeks","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"stun spore":{"exists":true,"name":"Stun Spore","num":78,"accuracy":75,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"powder":1,"protect":1,"reflectable":1,"mirror":1},"status":"par","secondary":null,"target":"normal","type":"Grass","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"Paralyzes the target.","shortDesc":"Paralyzes the target.","id":"stunspore","fullname":"move: Stun Spore","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"submission":{"exists":true,"name":"Submission","num":66,"accuracy":80,"basePower":80,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"recoil":[1,4],"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 1/4 recoil.","id":"submission","fullname":"move: Submission","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":160}},"substitute":{"exists":true,"name":"Substitute","num":164,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"nonsky":1},"volatileStatus":"substitute","condition":{"onTryPrimaryHitPriority":-1},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"The user takes 1/4 of its maximum HP, rounded down, and puts it into a substitute to take its place in battle. The substitute is removed once enough damage is inflicted on it, or if the user switches out or faints. Baton Pass can be used to transfer the substitute to an ally, and the substitute will keep its remaining HP. Until the substitute is broken, it receives damage from all attacks made by other Pokemon and shields the user from status effects and stat stage changes caused by other Pokemon. Sound-based moves and Pokemon with the Infiltrator Ability ignore substitutes. The user still takes normal damage from weather and status effects while behind its substitute. If the substitute breaks during a multi-hit attack, the user will take damage from any remaining hits. If a substitute is created while the user is trapped by a binding move, the binding effect ends immediately. Fails if the user does not have enough HP remaining to create a substitute without fainting, or if it already has a substitute.","shortDesc":"User takes 1/4 its max HP to put in a substitute.","id":"substitute","fullname":"move: Substitute","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"subzero slammer":{"exists":true,"name":"Subzero Slammer","num":650,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"iciumz","secondary":null,"target":"normal","type":"Ice","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"subzeroslammer","fullname":"move: Subzero Slammer","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"sucker punch":{"exists":true,"name":"Sucker Punch","num":389,"accuracy":100,"basePower":70,"category":"Physical","pp":5,"priority":1,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Clever","desc":"Fails if the target did not select a physical attack, special attack, or Me First for use this turn, or if the target moves before the user.","shortDesc":"Usually goes first. Fails if target is not attacking.","id":"suckerpunch","fullname":"move: Sucker Punch","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"sunny day":{"exists":true,"name":"Sunny Day","num":241,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{},"weather":"sunnyday","secondary":null,"target":"all","type":"Fire","zMove":{"boost":{"spe":1}},"contestType":"Beautiful","desc":"For 5 turns, the weather becomes Sunny Day. The damage of Fire-type attacks is multiplied by 1.5 and the damage of Water-type attacks is multiplied by 0.5 during the effect. Lasts for 8 turns if the user is holding Heat Rock. Fails if the current weather is Sunny Day.","shortDesc":"For 5 turns, intense sunlight powers Fire moves.","id":"sunnyday","fullname":"move: Sunny Day","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sunsteel strike":{"exists":true,"name":"Sunsteel Strike","num":713,"accuracy":100,"basePower":100,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"ignoreAbility":true,"secondary":null,"target":"normal","type":"Steel","contestType":"Cool","desc":"This move and its effects ignore the Abilities of other Pokemon.","shortDesc":"Ignores the Abilities of other Pokemon.","id":"sunsteelstrike","fullname":"move: Sunsteel Strike","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Steel","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":180}},"super fang":{"exists":true,"name":"Super Fang","num":162,"accuracy":90,"basePower":0,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"Deals damage to the target equal to half of its current HP, rounded down, but not less than 1 HP.","shortDesc":"Does damage equal to 1/2 target\'s current HP.","id":"superfang","fullname":"move: Super Fang","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"superpower":{"exists":true,"name":"Superpower","num":276,"accuracy":100,"basePower":120,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"self":{"boosts":{"atk":-1,"def":-1}},"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"Lowers the user\'s Attack and Defense by 1 stage.","shortDesc":"Lowers the user\'s Attack and Defense by 1.","id":"superpower","fullname":"move: Superpower","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":95},"zMove":{"basePower":190}},"supersonic":{"exists":true,"name":"Supersonic","num":48,"accuracy":55,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"sound":1,"authentic":1},"volatileStatus":"confusion","secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"Causes the target to become confused.","shortDesc":"Causes the target to become confused.","id":"supersonic","fullname":"move: Supersonic","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"supersonic skystrike":{"exists":true,"name":"Supersonic Skystrike","num":626,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"flyiniumz","secondary":null,"target":"normal","type":"Flying","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"supersonicskystrike","fullname":"move: Supersonic Skystrike","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"surf":{"exists":true,"name":"Surf","num":57,"accuracy":100,"basePower":90,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"allAdjacent","type":"Water","contestType":"Beautiful","desc":"Damage doubles if the target is using Dive.","shortDesc":"Hits adjacent Pokemon. Double damage on Dive.","id":"surf","fullname":"move: Surf","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"surging strikes":{"exists":true,"name":"Surging Strikes","num":818,"accuracy":100,"basePower":25,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"punch":1,"mirror":1},"willCrit":true,"multihit":3,"secondary":null,"target":"normal","type":"Water","zMove":{"basePower":140},"maxMove":{"basePower":130},"desc":"Hits three times. This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Battle Armor or Shell Armor Abilities.","shortDesc":"Always results in a critical hit. Hits 3 times.","id":"surgingstrikes","fullname":"move: Surging Strikes","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"swagger":{"exists":true,"name":"Swagger","num":207,"accuracy":85,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"volatileStatus":"confusion","boosts":{"atk":2},"secondary":null,"target":"normal","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Cute","desc":"Raises the target\'s Attack by 2 stages and confuses it.","shortDesc":"Raises the target\'s Attack by 2 and confuses it.","id":"swagger","fullname":"move: Swagger","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"swallow":{"exists":true,"name":"Swallow","num":256,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Tough","desc":"The user restores its HP based on its Stockpile count. Restores 1/4 of its maximum HP if it\'s 1, 1/2 of its maximum HP if it\'s 2, both rounded half down, and all of its HP if it\'s 3. Fails if the user\'s Stockpile count is 0. The user\'s Defense and Special Defense decrease by as many stages as Stockpile had increased them, and the user\'s Stockpile count resets to 0.","shortDesc":"Heals the user based on uses of Stockpile.","id":"swallow","fullname":"move: Swallow","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sweet kiss":{"exists":true,"name":"Sweet Kiss","num":186,"accuracy":75,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"volatileStatus":"confusion","secondary":null,"target":"normal","type":"Fairy","zMove":{"boost":{"spa":1}},"contestType":"Cute","desc":"Causes the target to become confused.","shortDesc":"Causes the target to become confused.","id":"sweetkiss","fullname":"move: Sweet Kiss","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"sweet scent":{"exists":true,"name":"Sweet Scent","num":230,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"evasion":-2},"secondary":null,"target":"allAdjacentFoes","type":"Normal","zMove":{"boost":{"accuracy":1}},"contestType":"Cute","desc":"Lowers the target\'s evasiveness by 2 stages.","shortDesc":"Lowers the foe(s) evasiveness by 2.","id":"sweetscent","fullname":"move: Sweet Scent","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"swift":{"exists":true,"name":"Swift","num":129,"accuracy":true,"basePower":60,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Normal","contestType":"Cool","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy. Hits foes.","id":"swift","fullname":"move: Swift","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"switcheroo":{"exists":true,"name":"Switcheroo","num":415,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Dark","zMove":{"boost":{"spe":2}},"contestType":"Clever","desc":"The user swaps its held item with the target\'s held item. Fails if either the user or the target is holding a Mail or Z-Crystal, if neither is holding an item, if the user is trying to give or take a Mega Stone to or from the species that can Mega Evolve with it, or if the user is trying to give or take a Blue Orb, a Red Orb, a Griseous Orb, a Plate, a Drive, or a Memory to or from a Kyogre, a Groudon, a Giratina, an Arceus, a Genesect, or a Silvally, respectively. The target is immune to this move if it has the Sticky Hold Ability.","shortDesc":"User switches its held item with the target\'s.","id":"switcheroo","fullname":"move: Switcheroo","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"swords dance":{"exists":true,"name":"Swords Dance","num":14,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"snatch":1,"dance":1},"boosts":{"atk":2},"secondary":null,"target":"self","type":"Normal","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"Raises the user\'s Attack by 2 stages.","shortDesc":"Raises the user\'s Attack by 2.","id":"swordsdance","fullname":"move: Swords Dance","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"synchronoise":{"exists":true,"name":"Synchronoise","num":485,"accuracy":100,"basePower":120,"category":"Special","isNonstandard":"Past","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacent","type":"Psychic","contestType":"Clever","desc":"The target is immune if it does not share a type with the user.","shortDesc":"Hits adjacent Pokemon sharing the user\'s type.","id":"synchronoise","fullname":"move: Synchronoise","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"synthesis":{"exists":true,"name":"Synthesis","num":235,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":0,"flags":{"snatch":1,"heal":1},"secondary":null,"target":"self","type":"Grass","zMove":{"effect":"clearnegativeboost"},"contestType":"Clever","desc":"The user restores 1/2 of its maximum HP if Delta Stream or no weather conditions are in effect or if the user is holding Utility Umbrella, 2/3 of its maximum HP if the weather is Desolate Land or Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Primordial Sea, Rain Dance, or Sandstorm, all rounded half down.","shortDesc":"Heals the user by a weather-dependent amount.","id":"synthesis","fullname":"move: Synthesis","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"tackle":{"exists":true,"name":"Tackle","num":33,"accuracy":100,"basePower":40,"category":"Physical","pp":35,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"tackle","fullname":"move: Tackle","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"tail glow":{"exists":true,"name":"Tail Glow","num":294,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{"snatch":1},"boosts":{"spa":3},"secondary":null,"target":"self","type":"Bug","zMove":{"effect":"clearnegativeboost"},"contestType":"Beautiful","desc":"Raises the user\'s Special Attack by 3 stages.","shortDesc":"Raises the user\'s Sp. Atk by 3.","id":"tailglow","fullname":"move: Tail Glow","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"tail slap":{"exists":true,"name":"Tail Slap","num":541,"accuracy":85,"basePower":25,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":140},"maxMove":{"basePower":130},"contestType":"Cute","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times.","shortDesc":"Hits 2-5 times in one turn.","id":"tailslap","fullname":"move: Tail Slap","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"tail whip":{"exists":true,"name":"Tail Whip","num":39,"accuracy":100,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"boosts":{"def":-1},"secondary":null,"target":"allAdjacentFoes","type":"Normal","zMove":{"boost":{"atk":1}},"contestType":"Cute","desc":"Lowers the target\'s Defense by 1 stage.","shortDesc":"Lowers the foe(s) Defense by 1.","id":"tailwhip","fullname":"move: Tail Whip","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"tailwind":{"exists":true,"name":"Tailwind","num":366,"accuracy":true,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"snatch":1},"sideCondition":"tailwind","condition":{"duration":4,"onSideResidualOrder":26,"onSideResidualSubOrder":5},"secondary":null,"target":"allySide","type":"Flying","zMove":{"effect":"crit2"},"contestType":"Cool","desc":"For 4 turns, the user and its party members have their Speed doubled. Fails if this move is already in effect for the user\'s side.","shortDesc":"For 4 turns, allies\' Speed is doubled.","id":"tailwind","fullname":"move: Tailwind","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"take down":{"exists":true,"name":"Take Down","num":36,"accuracy":85,"basePower":90,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"recoil":[1,4],"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 1/4 recoil.","id":"takedown","fullname":"move: Take Down","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"tar shot":{"exists":true,"name":"Tar Shot","num":749,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"volatileStatus":"tarshot","condition":{"onEffectivenessPriority":-2},"boosts":{"spe":-1},"secondary":null,"target":"normal","type":"Rock","desc":"Lowers the target\'s Speed by 1 stage. Until the target switches out, the effectiveness of Fire-type moves is doubled against it.","shortDesc":"Target gets -1 Spe and becomes weaker to Fire.","id":"tarshot","fullname":"move: Tar Shot","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"taunt":{"exists":true,"name":"Taunt","num":269,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"volatileStatus":"taunt","condition":{"duration":3,"onResidualOrder":15,"onBeforeMovePriority":5},"secondary":null,"target":"normal","type":"Dark","zMove":{"boost":{"atk":1}},"contestType":"Clever","desc":"Prevents the target from using non-damaging moves for its next three turns. Pokemon with the Oblivious Ability or protected by the Aroma Veil Ability are immune.","shortDesc":"Target can\'t use status moves its next 3 turns.","id":"taunt","fullname":"move: Taunt","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"tearful look":{"exists":true,"name":"Tearful Look","num":715,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"reflectable":1,"mirror":1},"boosts":{"atk":-1,"spa":-1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Lowers the target\'s Attack and Special Attack by 1 stage.","shortDesc":"Lowers the target\'s Attack and Sp. Atk by 1.","id":"tearfullook","fullname":"move: Tearful Look","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"teatime":{"exists":true,"name":"Teatime","num":752,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"authentic":1},"secondary":null,"target":"all","type":"Normal","desc":"All active Pokemon consume their held Berries. This effect is not prevented by substitutes, the Klutz or Unnerve Abilities, or the effects of Embargo or Magic Room. Fails if no active Pokemon is holding a Berry.","shortDesc":"All active Pokemon consume held Berries.","id":"teatime","fullname":"move: Teatime","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"techno blast":{"exists":true,"name":"Techno Blast","num":546,"accuracy":100,"basePower":120,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cool","desc":"This move\'s type depends on the user\'s held Drive.","shortDesc":"Type varies based on the held Drive.","id":"technoblast","fullname":"move: Techno Blast","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"tectonic rage":{"exists":true,"name":"Tectonic Rage","num":630,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"groundiumz","secondary":null,"target":"normal","type":"Ground","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"tectonicrage","fullname":"move: Tectonic Rage","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"teeter dance":{"exists":true,"name":"Teeter Dance","num":298,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"mirror":1,"dance":1},"volatileStatus":"confusion","secondary":null,"target":"allAdjacent","type":"Normal","zMove":{"boost":{"spa":1}},"contestType":"Cute","desc":"Causes the target to become confused.","shortDesc":"Confuses adjacent Pokemon.","id":"teeterdance","fullname":"move: Teeter Dance","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"telekinesis":{"exists":true,"name":"Telekinesis","num":477,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"gravity":1,"mystery":1},"volatileStatus":"telekinesis","condition":{"duration":3,"onAccuracyPriority":-1,"onResidualOrder":19},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spa":1}},"contestType":"Clever","desc":"For 3 turns, the target cannot avoid any attacks made against it, other than OHKO moves, as long as it remains active. During the effect, the target is immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, Sticky Web, and the Arena Trap Ability as long as it remains active. If the target uses Baton Pass, the replacement will gain the effect. Ingrain, Smack Down, Thousand Arrows, and Iron Ball override this move if the target is under any of their effects. Fails if the target is already under this effect or the effects of Ingrain, Smack Down, or Thousand Arrows. The target is immune to this move on use if its species is Diglett, Dugtrio, Alolan Diglett, Alolan Dugtrio, Sandygast, Palossand, or Gengar while Mega-Evolved. Mega Gengar cannot be under this effect by any means.","shortDesc":"For 3 turns, target floats but moves can\'t miss it.","id":"telekinesis","fullname":"move: Telekinesis","effectType":"Move","gen":5,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"teleport":{"exists":true,"name":"Teleport","num":100,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":-6,"flags":{},"selfSwitch":true,"onTryHit":true,"secondary":null,"target":"self","type":"Psychic","zMove":{"effect":"heal"},"contestType":"Cool","desc":"If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members.","shortDesc":"User switches out.","id":"teleport","fullname":"move: Teleport","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"terrain pulse":{"exists":true,"name":"Terrain Pulse","num":805,"accuracy":100,"basePower":50,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"pulse":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":160},"maxMove":{"basePower":130},"desc":"Power doubles if the user is grounded and a terrain is active, and this move\'s type changes to match. Electric type during Electric Terrain, Grass type during Grassy Terrain, Fairy type during Misty Terrain, and Psychic type during Psychic Terrain.","shortDesc":"User on terrain: power doubles, type varies.","id":"terrainpulse","fullname":"move: Terrain Pulse","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"thief":{"exists":true,"name":"Thief","num":168,"accuracy":100,"basePower":60,"category":"Physical","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Dark","contestType":"Tough","desc":"If this attack was successful and the user has not fainted, it steals the target\'s held item if the user is not holding one. The target\'s item is not stolen if it is a Mail or Z-Crystal, or if the target is a Kyogre holding a Blue Orb, a Groudon holding a Red Orb, a Giratina holding a Griseous Orb, an Arceus holding a Plate, a Genesect holding a Drive, a Silvally holding a Memory, or a Pokemon that can Mega Evolve holding the Mega Stone for its species. Items lost to this move cannot be regained with Recycle or the Harvest Ability.","shortDesc":"If the user has no item, it steals the target\'s.","id":"thief","fullname":"move: Thief","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"thousand arrows":{"exists":true,"name":"Thousand Arrows","num":614,"accuracy":100,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"volatileStatus":"smackdown","ignoreImmunity":{"Ground":true},"secondary":null,"target":"allAdjacentFoes","type":"Ground","zMove":{"basePower":180},"contestType":"Beautiful","desc":"This move can hit airborne Pokemon, which includes Flying-type Pokemon, Pokemon with the Levitate Ability, Pokemon holding an Air Balloon, and Pokemon under the effect of Magnet Rise or Telekinesis. If the target is a Flying type and is not already grounded, this move deals neutral damage regardless of its other type(s). This move can hit a target using Bounce, Fly, or Sky Drop. If this move hits a target under the effect of Bounce, Fly, Magnet Rise, or Telekinesis, the effect ends. If the target is a Flying type that has not used Roost this turn or a Pokemon with the Levitate Ability, it loses its immunity to Ground-type attacks and the Arena Trap Ability as long as it remains active. During the effect, Magnet Rise fails for the target and Telekinesis fails against the target.","shortDesc":"Grounds adjacent foes. First hit neutral on Flying.","id":"thousandarrows","fullname":"move: Thousand Arrows","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130}},"thousand waves":{"exists":true,"name":"Thousand Waves","num":615,"accuracy":100,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"secondary":null,"target":"allAdjacentFoes","type":"Ground","contestType":"Tough","desc":"Prevents the target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field.","shortDesc":"Hits adjacent foes. Prevents them from switching.","id":"thousandwaves","fullname":"move: Thousand Waves","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ground","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"thrash":{"exists":true,"name":"Thrash","num":37,"accuracy":100,"basePower":120,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"self":{"volatileStatus":"lockedmove"},"secondary":null,"target":"randomNormal","type":"Normal","contestType":"Tough","desc":"The user spends two or three turns locked into this move and becomes confused immediately after its move on the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, is asleep at the beginning of a turn, or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk and the user is asleep, the move is used for one turn and does not confuse the user.","shortDesc":"Lasts 2-3 turns. Confuses the user afterwards.","id":"thrash","fullname":"move: Thrash","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"throat chop":{"exists":true,"name":"Throat Chop","num":675,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"condition":{"duration":2,"onBeforeMovePriority":6,"onResidualOrder":22},"secondary":{"chance":100},"target":"normal","type":"Dark","contestType":"Clever","desc":"For 2 turns, the target cannot use sound-based moves.","shortDesc":"For 2 turns, the target cannot use sound moves.","id":"throatchop","fullname":"move: Throat Chop","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":[{"chance":100}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"thunder":{"exists":true,"name":"Thunder","num":87,"accuracy":70,"basePower":110,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":30,"status":"par"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 30% chance to paralyze the target. This move can hit a target using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop. If the weather is Primordial Sea or Rain Dance, this move does not check accuracy. If the weather is Desolate Land or Sunny Day, this move\'s accuracy is 50%. If this move is used against a Pokemon holding Utility Umbrella, this move\'s accuracy remains at 70%.","shortDesc":"30% chance to paralyze. Can\'t miss in rain.","id":"thunder","fullname":"move: Thunder","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":30,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":185}},"thunderbolt":{"exists":true,"name":"Thunderbolt","num":85,"accuracy":100,"basePower":90,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"par"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 10% chance to paralyze the target.","shortDesc":"10% chance to paralyze the target.","id":"thunderbolt","fullname":"move: Thunderbolt","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":10,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"thunder cage":{"exists":true,"name":"Thunder Cage","num":819,"accuracy":90,"basePower":80,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Electric","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"thundercage","fullname":"move: Thunder Cage","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"thunder fang":{"exists":true,"name":"Thunder Fang","num":422,"accuracy":95,"basePower":65,"category":"Physical","pp":15,"priority":0,"flags":{"bite":1,"contact":1,"protect":1,"mirror":1},"secondaries":[{"chance":10,"status":"par"},{"chance":10,"volatileStatus":"flinch"}],"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 10% chance to paralyze the target and a 10% chance to make it flinch.","shortDesc":"10% chance to paralyze. 10% chance to flinch.","id":"thunderfang","fullname":"move: Thunder Fang","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondary":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":120}},"thunderous kick":{"exists":true,"name":"Thunderous Kick","num":823,"accuracy":100,"basePower":90,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"def":-1}},"target":"normal","type":"Fighting","desc":"Has a 100% chance to lower the target\'s Defense by 1 stage.","shortDesc":"100% chance to lower the target\'s Defense by 1.","id":"thunderouskick","fullname":"move: Thunderous Kick","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":[{"chance":100,"boosts":{"def":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":175}},"thunder punch":{"exists":true,"name":"Thunder Punch","num":9,"accuracy":100,"basePower":75,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"punch":1},"secondary":{"chance":10,"status":"par"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 10% chance to paralyze the target.","shortDesc":"10% chance to paralyze the target.","id":"thunderpunch","fullname":"move: Thunder Punch","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":10,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":140}},"thunder shock":{"exists":true,"name":"Thunder Shock","num":84,"accuracy":100,"basePower":40,"category":"Special","pp":30,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":10,"status":"par"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 10% chance to paralyze the target.","shortDesc":"10% chance to paralyze the target.","id":"thundershock","fullname":"move: Thunder Shock","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":10,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"thunder wave":{"exists":true,"name":"Thunder Wave","num":86,"accuracy":90,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"par","ignoreImmunity":false,"secondary":null,"target":"normal","type":"Electric","zMove":{"boost":{"spd":1}},"contestType":"Cool","desc":"Paralyzes the target. This move does not ignore type immunity.","shortDesc":"Paralyzes the target.","id":"thunderwave","fullname":"move: Thunder Wave","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"tickle":{"exists":true,"name":"Tickle","num":321,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"boosts":{"atk":-1,"def":-1},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Lowers the target\'s Attack and Defense by 1 stage.","shortDesc":"Lowers the target\'s Attack and Defense by 1.","id":"tickle","fullname":"move: Tickle","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"topsy turvy":{"exists":true,"name":"Topsy-Turvy","num":576,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Dark","zMove":{"boost":{"atk":1}},"contestType":"Clever","desc":"The target\'s positive stat stages become negative and vice versa. Fails if all of the target\'s stat stages are 0.","shortDesc":"Inverts the target\'s stat stages.","id":"topsyturvy","fullname":"move: Topsy-Turvy","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"torment":{"exists":true,"name":"Torment","num":259,"accuracy":100,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"authentic":1},"volatileStatus":"torment","condition":{"noCopy":true},"secondary":null,"target":"normal","type":"Dark","zMove":{"boost":{"def":1}},"contestType":"Tough","desc":"Prevents the target from selecting the same move for use two turns in a row. This effect ends when the target is no longer active.","shortDesc":"Target can\'t select the same move twice in a row.","id":"torment","fullname":"move: Torment","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"toxic":{"exists":true,"name":"Toxic","num":92,"accuracy":90,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"tox","secondary":null,"target":"normal","type":"Poison","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Badly poisons the target. If a Poison-type Pokemon uses this move, the target cannot avoid the attack, even if the target is in the middle of a two-turn move.","shortDesc":"Badly poisons the target. Poison types can\'t miss.","id":"toxic","fullname":"move: Toxic","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"toxic spikes":{"exists":true,"name":"Toxic Spikes","num":390,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"reflectable":1,"nonsky":1},"sideCondition":"toxicspikes","condition":{},"secondary":null,"target":"foeSide","type":"Poison","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Sets up a hazard on the opposing side of the field, poisoning each opposing Pokemon that switches in, unless it is a Flying-type Pokemon or has the Levitate Ability. Can be used up to two times before failing. Opposing Pokemon become poisoned with one layer and badly poisoned with two layers. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin or Defog successfully, is hit by Defog, or a grounded Poison-type Pokemon switches in. Safeguard prevents the opposing party from being poisoned on switch-in, but a substitute does not.","shortDesc":"Poisons grounded foes on switch-in. Max 2 layers.","id":"toxicspikes","fullname":"move: Toxic Spikes","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"toxic thread":{"exists":true,"name":"Toxic Thread","num":672,"accuracy":100,"basePower":0,"category":"Status","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"psn","boosts":{"spe":-1},"secondary":null,"target":"normal","type":"Poison","zMove":{"boost":{"spe":1}},"contestType":"Tough","desc":"Lowers the target\'s Speed by 1 stage and poisons it.","shortDesc":"Lowers the target\'s Speed by 1 and poisons it.","id":"toxicthread","fullname":"move: Toxic Thread","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"transform":{"exists":true,"name":"Transform","num":144,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"mystery":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"effect":"heal"},"contestType":"Clever","desc":"The user transforms into the target. The target\'s current stats, stat stages, types, moves, Ability, weight, gender, and sprite are copied. The user\'s level and HP remain the same and each copied move receives only 5 PP, with a maximum of 5 PP each. The user can no longer change formes if it would have the ability to do so. This move fails if it hits a substitute, if either the user or the target is already transformed, or if either is behind an Illusion.","shortDesc":"Copies target\'s stats, moves, types, and Ability.","id":"transform","fullname":"move: Transform","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"tri attack":{"exists":true,"name":"Tri Attack","num":161,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":20},"target":"normal","type":"Normal","contestType":"Beautiful","desc":"Has a 20% chance to either burn, freeze, or paralyze the target.","shortDesc":"20% chance to paralyze or burn or freeze target.","id":"triattack","fullname":"move: Tri Attack","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":[{"chance":20}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"trick":{"exists":true,"name":"Trick","num":271,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Psychic","zMove":{"boost":{"spe":2}},"contestType":"Clever","desc":"The user swaps its held item with the target\'s held item. Fails if either the user or the target is holding a Mail or Z-Crystal, if neither is holding an item, if the user is trying to give or take a Mega Stone to or from the species that can Mega Evolve with it, or if the user is trying to give or take a Blue Orb, a Red Orb, a Griseous Orb, a Plate, a Drive, or a Memory to or from a Kyogre, a Groudon, a Giratina, an Arceus, a Genesect, or a Silvally, respectively. The target is immune to this move if it has the Sticky Hold Ability.","shortDesc":"User switches its held item with the target\'s.","id":"trick","fullname":"move: Trick","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"trick or-treat":{"exists":true,"name":"Trick-or-Treat","num":567,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Ghost","zMove":{"boost":{"atk":1,"def":1,"spa":1,"spd":1,"spe":1}},"contestType":"Cute","desc":"Causes the Ghost type to be added to the target, effectively making it have two or three types. Fails if the target is already a Ghost type. If Forest\'s Curse adds a type to the target, it replaces the type added by this move and vice versa.","shortDesc":"Adds Ghost to the target\'s type(s).","id":"trickortreat","fullname":"move: Trick-or-Treat","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ghost","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"trick room":{"exists":true,"name":"Trick Room","num":433,"accuracy":true,"basePower":0,"category":"Status","pp":5,"priority":-7,"flags":{"mirror":1},"pseudoWeather":"trickroom","condition":{"duration":5,"onFieldResidualOrder":27,"onFieldResidualSubOrder":1},"secondary":null,"target":"all","type":"Psychic","zMove":{"boost":{"accuracy":1}},"contestType":"Clever","desc":"For 5 turns, the Speed of every Pokemon is recalculated for the purposes of determining turn order. During the effect, each Pokemon\'s Speed is considered to be (10000 - its normal Speed), and if this value is greater than 8191, 8192 is subtracted from it. If this move is used during the effect, the effect ends.","shortDesc":"Goes last. For 5 turns, turn order is reversed.","id":"trickroom","fullname":"move: Trick Room","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"triple axel":{"exists":true,"name":"Triple Axel","num":813,"accuracy":90,"basePower":20,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":3,"multiaccuracy":true,"secondary":null,"target":"normal","type":"Ice","zMove":{"basePower":120},"maxMove":{"basePower":140},"desc":"Hits three times. Power increases to 40 for the second hit and 60 for the third. This move checks accuracy for each hit, and the attack ends if the target avoids a hit. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit three times.","shortDesc":"Hits 3 times. Each hit can miss, but power rises.","id":"tripleaxel","fullname":"move: Triple Axel","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Ice","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"triple kick":{"exists":true,"name":"Triple Kick","num":167,"accuracy":90,"basePower":10,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"multihit":3,"multiaccuracy":true,"secondary":null,"target":"normal","type":"Fighting","zMove":{"basePower":120},"maxMove":{"basePower":80},"contestType":"Cool","desc":"Hits three times. Power increases to 20 for the second hit and 30 for the third. This move checks accuracy for each hit, and the attack ends if the target avoids a hit. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit three times.","shortDesc":"Hits 3 times. Each hit can miss, but power rises.","id":"triplekick","fullname":"move: Triple Kick","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"trop kick":{"exists":true,"name":"Trop Kick","num":688,"accuracy":100,"basePower":70,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":100,"boosts":{"atk":-1}},"target":"normal","type":"Grass","contestType":"Cute","desc":"Has a 100% chance to lower the target\'s Attack by 1 stage.","shortDesc":"100% chance to lower the target\'s Attack by 1.","id":"tropkick","fullname":"move: Trop Kick","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":[{"chance":100,"boosts":{"atk":-1}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"trump card":{"exists":true,"name":"Trump Card","num":376,"accuracy":true,"basePower":0,"category":"Special","isNonstandard":"Past","pp":5,"noPPBoosts":true,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Cool","desc":"The power of this move is based on the amount of PP remaining after normal PP reduction and the Pressure Ability resolve. 200 power for 0 PP, 80 power for 1 PP, 60 power for 2 PP, 50 power for 3 PP, and 40 power for 4 or more PP.","shortDesc":"More power the fewer PP this move has left.","id":"trumpcard","fullname":"move: Trump Card","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"twineedle":{"exists":true,"name":"Twineedle","num":41,"accuracy":100,"basePower":25,"category":"Physical","isNonstandard":"Past","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"multihit":2,"secondary":{"chance":20,"status":"psn"},"target":"normal","type":"Bug","maxMove":{"basePower":100},"contestType":"Cool","desc":"Hits twice, with each hit having a 20% chance to poison the target. If the first hit breaks the target\'s substitute, it will take damage for the second hit.","shortDesc":"Hits 2 times. Each hit has 20% chance to poison.","id":"twineedle","fullname":"move: Twineedle","effectType":"Move","gen":1,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":[{"chance":20,"status":"psn"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"zMove":{"basePower":100}},"twinkle tackle":{"exists":true,"name":"Twinkle Tackle","num":656,"accuracy":true,"basePower":1,"category":"Physical","isNonstandard":"Past","pp":1,"priority":0,"flags":{},"isZ":"fairiumz","secondary":null,"target":"normal","type":"Fairy","contestType":"Cool","desc":"Power is equal to the base move\'s Z-Power.","shortDesc":"Power is equal to the base move\'s Z-Power.","id":"twinkletackle","fullname":"move: Twinkle Tackle","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fairy","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":1}},"twister":{"exists":true,"name":"Twister","num":239,"accuracy":100,"basePower":40,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":{"chance":20,"volatileStatus":"flinch"},"target":"allAdjacentFoes","type":"Dragon","contestType":"Cool","desc":"Has a 20% chance to make the target flinch. Power doubles if the target is using Bounce, Fly, or Sky Drop, or is under the effect of Sky Drop.","shortDesc":"20% chance to make the foe(s) flinch.","id":"twister","fullname":"move: Twister","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dragon","secondaries":[{"chance":20,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"u turn":{"exists":true,"name":"U-turn","num":369,"accuracy":100,"basePower":70,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"selfSwitch":true,"secondary":null,"target":"normal","type":"Bug","contestType":"Cute","desc":"If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button or through the effect of the Emergency Exit or Wimp Out Abilities.","shortDesc":"User switches out after damaging the target.","id":"uturn","fullname":"move: U-turn","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"uproar":{"exists":true,"name":"Uproar","num":253,"accuracy":100,"basePower":90,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"sound":1,"authentic":1},"self":{"volatileStatus":"uproar"},"condition":{"duration":3,"onResidualOrder":28,"onResidualSubOrder":1,"onLockMove":"uproar"},"secondary":null,"target":"randomNormal","type":"Normal","contestType":"Cute","desc":"The user spends three turns locked into this move. This move targets an opponent at random on each turn. On the first of the three turns, all sleeping active Pokemon wake up. During the three turns, no active Pokemon can fall asleep by any means, and Pokemon switched in during the effect do not wake up. If the user is prevented from moving or the attack is not successful against the target during one of the turns, the effect ends.","shortDesc":"Lasts 3 turns. Active Pokemon cannot fall asleep.","id":"uproar","fullname":"move: Uproar","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"vacuum wave":{"exists":true,"name":"Vacuum Wave","num":410,"accuracy":100,"basePower":40,"category":"Special","pp":30,"priority":1,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"No additional effect.","shortDesc":"Usually goes first.","id":"vacuumwave","fullname":"move: Vacuum Wave","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":70},"zMove":{"basePower":100}},"v create":{"exists":true,"name":"V-create","num":557,"accuracy":95,"basePower":180,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"self":{"boosts":{"spe":-1,"def":-1,"spd":-1}},"secondary":null,"target":"normal","type":"Fire","zMove":{"basePower":220},"contestType":"Cool","desc":"Lowers the user\'s Speed, Defense, and Special Defense by 1 stage.","shortDesc":"Lowers the user\'s Defense, Sp. Def, Speed by 1.","id":"vcreate","fullname":"move: V-create","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150}},"veevee volley":{"exists":true,"name":"Veevee Volley","num":741,"accuracy":true,"basePower":0,"category":"Physical","isNonstandard":"LGPE","pp":20,"priority":0,"flags":{"contact":1,"protect":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Cute","desc":"Power is equal to the greater of (user\'s Happiness * 2/5), rounded down, or 1.","shortDesc":"Max happiness: 102 power. Can\'t miss.","id":"veeveevolley","fullname":"move: Veevee Volley","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"venom drench":{"exists":true,"name":"Venom Drench","num":599,"accuracy":100,"basePower":0,"category":"Status","pp":20,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Poison","zMove":{"boost":{"def":1}},"contestType":"Clever","desc":"Lowers the target\'s Attack, Special Attack, and Speed by 1 stage if the target is poisoned. Fails if the target is not poisoned.","shortDesc":"Lowers Atk/Sp. Atk/Speed of poisoned foes by 1.","id":"venomdrench","fullname":"move: Venom Drench","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"venoshock":{"exists":true,"name":"Venoshock","num":474,"accuracy":100,"basePower":65,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Poison","contestType":"Beautiful","desc":"Power doubles if the target is poisoned.","shortDesc":"Power doubles if the target is poisoned.","id":"venoshock","fullname":"move: Venoshock","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Poison","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":85},"zMove":{"basePower":120}},"vine whip":{"exists":true,"name":"Vine Whip","num":22,"accuracy":100,"basePower":45,"category":"Physical","pp":25,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Grass","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"vinewhip","fullname":"move: Vine Whip","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":100},"zMove":{"basePower":100}},"vise grip":{"exists":true,"name":"Vise Grip","num":11,"accuracy":100,"basePower":55,"category":"Physical","pp":30,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"No additional effect.","shortDesc":"No additional effect.","id":"visegrip","fullname":"move: Vise Grip","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":100}},"vital throw":{"exists":true,"name":"Vital Throw","num":233,"accuracy":true,"basePower":70,"category":"Physical","pp":10,"priority":-1,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Cool","desc":"This move does not check accuracy.","shortDesc":"This move does not check accuracy. Goes last.","id":"vitalthrow","fullname":"move: Vital Throw","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":85},"zMove":{"basePower":140}},"volt switch":{"exists":true,"name":"Volt Switch","num":521,"accuracy":100,"basePower":70,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"mirror":1},"selfSwitch":true,"secondary":null,"target":"normal","type":"Electric","contestType":"Cool","desc":"If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by a selected party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button or through the effect of the Emergency Exit or Wimp Out Abilities.","shortDesc":"User switches out after damaging the target.","id":"voltswitch","fullname":"move: Volt Switch","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":120},"zMove":{"basePower":140}},"volt tackle":{"exists":true,"name":"Volt Tackle","num":344,"accuracy":100,"basePower":120,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"recoil":[33,100],"secondary":{"chance":10,"status":"par"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 10% chance to paralyze the target. If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 33% recoil. 10% chance to paralyze target.","id":"volttackle","fullname":"move: Volt Tackle","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":10,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"wake up slap":{"exists":true,"name":"Wake-Up Slap","num":358,"accuracy":100,"basePower":70,"category":"Physical","isNonstandard":"Past","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Fighting","contestType":"Tough","desc":"Power doubles if the target is asleep. If the user has not fainted, the target wakes up.","shortDesc":"Power doubles if target is asleep, and wakes it.","id":"wakeupslap","fullname":"move: Wake-Up Slap","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fighting","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":85},"zMove":{"basePower":140}},"waterfall":{"exists":true,"name":"Waterfall","num":127,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":20,"volatileStatus":"flinch"},"target":"normal","type":"Water","contestType":"Tough","desc":"Has a 20% chance to make the target flinch.","shortDesc":"20% chance to make the target flinch.","id":"waterfall","fullname":"move: Waterfall","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":20,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"water gun":{"exists":true,"name":"Water Gun","num":55,"accuracy":100,"basePower":40,"category":"Special","pp":25,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Water","contestType":"Cute","desc":"No additional effect.","shortDesc":"No additional effect.","id":"watergun","fullname":"move: Water Gun","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"water pledge":{"exists":true,"name":"Water Pledge","num":518,"accuracy":100,"basePower":80,"category":"Special","pp":10,"priority":0,"flags":{"protect":1,"mirror":1,"nonsky":1},"condition":{"duration":4,"onSideResidualOrder":26,"onSideResidualSubOrder":7},"secondary":null,"target":"normal","type":"Water","contestType":"Beautiful","desc":"If one of the user\'s allies chose to use Fire Pledge or Grass Pledge this turn and has not moved yet, it takes its turn immediately after the user and the user\'s move does nothing. If combined with Fire Pledge, the ally uses Water Pledge with 150 power and a rainbow appears on the user\'s side for 4 turns, which doubles secondary effect chances and stacks with the Serene Grace Ability, except effects that cause flinching can only have their chance doubled once. If combined with Grass Pledge, the ally uses Grass Pledge with 150 power and a swamp appears on the target\'s side for 4 turns, which quarters the Speed of each Pokemon on that side. When used as a combined move, this move gains STAB no matter what the user\'s type is. This move does not consume the user\'s Water Gem, and cannot be redirected by the Storm Drain Ability.","shortDesc":"Use with Grass or Fire Pledge for added effect.","id":"waterpledge","fullname":"move: Water Pledge","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"water pulse":{"exists":true,"name":"Water Pulse","num":352,"accuracy":100,"basePower":60,"category":"Special","pp":20,"priority":0,"flags":{"protect":1,"pulse":1,"mirror":1,"distance":1},"secondary":{"chance":20,"volatileStatus":"confusion"},"target":"any","type":"Water","contestType":"Beautiful","desc":"Has a 20% chance to confuse the target.","shortDesc":"20% chance to confuse the target.","id":"waterpulse","fullname":"move: Water Pulse","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":[{"chance":20,"volatileStatus":"confusion"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"water shuriken":{"exists":true,"name":"Water Shuriken","num":594,"accuracy":100,"basePower":15,"category":"Special","pp":20,"priority":1,"flags":{"protect":1,"mirror":1},"multihit":[2,5],"secondary":null,"target":"normal","type":"Water","contestType":"Cool","desc":"Hits two to five times. Has a 35% chance to hit two or three times and a 15% chance to hit four or five times. If one of the hits breaks the target\'s substitute, it will take damage for the remaining hits. If the user has the Skill Link Ability, this move will always hit five times. If the user is an Ash-Greninja with the Battle Bond Ability, this move has a power of 20 and always hits three times.","shortDesc":"Usually goes first. Hits 2-5 times in one turn.","id":"watershuriken","fullname":"move: Water Shuriken","effectType":"Move","gen":6,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"water sport":{"exists":true,"name":"Water Sport","num":346,"accuracy":true,"basePower":0,"category":"Status","isNonstandard":"Past","pp":15,"priority":0,"flags":{"nonsky":1},"pseudoWeather":"watersport","condition":{"duration":5,"onBasePowerPriority":1,"onFieldResidualOrder":27,"onFieldResidualSubOrder":3},"secondary":null,"target":"all","type":"Water","zMove":{"boost":{"spd":1}},"contestType":"Cute","desc":"For 5 turns, all Fire-type attacks used by any active Pokemon have their power multiplied by 0.33. Fails if this effect is already active.","shortDesc":"For 5 turns, Fire-type attacks have 1/3 power.","id":"watersport","fullname":"move: Water Sport","effectType":"Move","gen":3,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"water spout":{"exists":true,"name":"Water Spout","num":323,"accuracy":100,"basePower":150,"category":"Special","pp":5,"priority":0,"flags":{"protect":1,"mirror":1},"secondary":null,"target":"allAdjacentFoes","type":"Water","contestType":"Beautiful","desc":"Power is equal to (user\'s current HP * 150 / user\'s maximum HP), rounded down, but not less than 1.","shortDesc":"Less power as user\'s HP decreases. Hits foe(s).","id":"waterspout","fullname":"move: Water Spout","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":150},"zMove":{"basePower":200}},"weather ball":{"exists":true,"name":"Weather Ball","num":311,"accuracy":100,"basePower":50,"category":"Special","pp":10,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":160},"maxMove":{"basePower":130},"contestType":"Beautiful","desc":"Power doubles if a weather condition other than Delta Stream is active, and this move\'s type changes to match. Ice type during Hail, Water type during Primordial Sea or Rain Dance, Rock type during Sandstorm, and Fire type during Desolate Land or Sunny Day. If the user is holding Utility Umbrella and uses Weather Ball during Primordial Sea, Rain Dance, Desolate Land, or Sunny Day, the move is still Normal-type and does not have a base power boost.","shortDesc":"Power doubles and type varies in each weather.","id":"weatherball","fullname":"move: Weather Ball","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"whirlpool":{"exists":true,"name":"Whirlpool","num":250,"accuracy":85,"basePower":35,"category":"Special","pp":15,"priority":0,"flags":{"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Water","contestType":"Beautiful","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"whirlpool","fullname":"move: Whirlpool","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"whirlwind":{"exists":true,"name":"Whirlwind","num":18,"accuracy":true,"basePower":0,"category":"Status","pp":20,"priority":-6,"flags":{"reflectable":1,"mirror":1,"authentic":1,"mystery":1},"forceSwitch":true,"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"The target is forced to switch out and be replaced with a random unfainted ally. Fails if the target is the last unfainted Pokemon in its party, or if the target used Ingrain previously or has the Suction Cups Ability.","shortDesc":"Forces the target to switch to a random ally.","id":"whirlwind","fullname":"move: Whirlwind","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"wicked blow":{"exists":true,"name":"Wicked Blow","num":817,"accuracy":100,"basePower":80,"category":"Physical","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"punch":1,"mirror":1},"willCrit":true,"secondary":null,"target":"normal","type":"Dark","desc":"This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Battle Armor or Shell Armor Abilities.","shortDesc":"Always results in a critical hit.","id":"wickedblow","fullname":"move: Wicked Blow","effectType":"Move","gen":8,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Dark","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"wide guard":{"exists":true,"name":"Wide Guard","num":469,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":3,"flags":{"snatch":1},"sideCondition":"wideguard","condition":{"duration":1,"onTryHitPriority":4},"secondary":null,"target":"allySide","type":"Rock","zMove":{"boost":{"def":1}},"contestType":"Tough","desc":"The user and its party members are protected from moves made by other Pokemon, including allies, during this turn that target all adjacent foes or all adjacent Pokemon. This move modifies the same 1/X chance of being successful used by other protection moves, where X starts at 1 and triples each time this move is successfully used, but does not use the chance to check for failure. X resets to 1 if this move fails, if the user\'s last move used is not Baneful Bunker, Detect, Endure, King\'s Shield, Obstruct, Protect, Quick Guard, Spiky Shield, or Wide Guard, or if it was one of those moves and the user\'s protection was broken. Fails if the user moves last this turn or if this move is already in effect for the user\'s side.","shortDesc":"Protects allies from multi-target moves this turn.","id":"wideguard","fullname":"move: Wide Guard","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Rock","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"wild charge":{"exists":true,"name":"Wild Charge","num":528,"accuracy":100,"basePower":90,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"recoil":[1,4],"secondary":null,"target":"normal","type":"Electric","contestType":"Tough","desc":"If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 1/4 recoil.","id":"wildcharge","fullname":"move: Wild Charge","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":175}},"will o-wisp":{"exists":true,"name":"Will-O-Wisp","num":261,"accuracy":85,"basePower":0,"category":"Status","pp":15,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"status":"brn","secondary":null,"target":"normal","type":"Fire","zMove":{"boost":{"atk":1}},"contestType":"Beautiful","desc":"Burns the target.","shortDesc":"Burns the target.","id":"willowisp","fullname":"move: Will-O-Wisp","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Fire","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"wing attack":{"exists":true,"name":"Wing Attack","num":17,"accuracy":100,"basePower":60,"category":"Physical","pp":35,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1,"distance":1},"secondary":null,"target":"any","type":"Flying","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"wingattack","fullname":"move: Wing Attack","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Flying","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":110},"zMove":{"basePower":120}},"wish":{"exists":true,"name":"Wish","num":273,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"snatch":1,"heal":1},"slotCondition":"Wish","condition":{"duration":2,"onResidualOrder":4},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"spd":1}},"contestType":"Cute","desc":"At the end of the next turn, the Pokemon at the user\'s position has 1/2 of the user\'s maximum HP restored to it, rounded down. Fails if this move is already in effect for the user\'s position.","shortDesc":"Next turn, 50% of the user\'s max HP is restored.","id":"wish","fullname":"move: Wish","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"withdraw":{"exists":true,"name":"Withdraw","num":110,"accuracy":true,"basePower":0,"category":"Status","pp":40,"priority":0,"flags":{"snatch":1},"boosts":{"def":1},"secondary":null,"target":"self","type":"Water","zMove":{"boost":{"def":1}},"contestType":"Cute","desc":"Raises the user\'s Defense by 1 stage.","shortDesc":"Raises the user\'s Defense by 1.","id":"withdraw","fullname":"move: Withdraw","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Water","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"wonder room":{"exists":true,"name":"Wonder Room","num":472,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"mirror":1},"pseudoWeather":"wonderroom","condition":{"duration":5,"onFieldResidualOrder":27,"onFieldResidualSubOrder":5},"secondary":null,"target":"all","type":"Psychic","zMove":{"boost":{"spd":1}},"contestType":"Clever","desc":"For 5 turns, all active Pokemon have their Defense and Special Defense stats swapped. Stat stage changes are unaffected. If this move is used during the effect, the effect ends.","shortDesc":"For 5 turns, all Defense and Sp. Def stats switch.","id":"wonderroom","fullname":"move: Wonder Room","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"wood hammer":{"exists":true,"name":"Wood Hammer","num":452,"accuracy":100,"basePower":120,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"recoil":[33,100],"secondary":null,"target":"normal","type":"Grass","contestType":"Tough","desc":"If the target lost HP, the user takes recoil damage equal to 33% the HP lost by the target, rounded half up, but not less than 1 HP.","shortDesc":"Has 33% recoil.","id":"woodhammer","fullname":"move: Wood Hammer","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"work up":{"exists":true,"name":"Work Up","num":526,"accuracy":true,"basePower":0,"category":"Status","pp":30,"priority":0,"flags":{"snatch":1},"boosts":{"atk":1,"spa":1},"secondary":null,"target":"self","type":"Normal","zMove":{"boost":{"atk":1}},"contestType":"Tough","desc":"Raises the user\'s Attack and Special Attack by 1 stage.","shortDesc":"Raises the user\'s Attack and Sp. Atk by 1.","id":"workup","fullname":"move: Work Up","effectType":"Move","gen":5,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"worry seed":{"exists":true,"name":"Worry Seed","num":388,"accuracy":100,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1,"mystery":1},"secondary":null,"target":"normal","type":"Grass","zMove":{"boost":{"spe":1}},"contestType":"Clever","desc":"Causes the target\'s Ability to become Insomnia. Fails if the target\'s Ability is As One, Battle Bond, Comatose, Disguise, Gulp Missile, Ice Face, Insomnia, Multitype, Power Construct, RKS System, Schooling, Shields Down, Stance Change, Truant, or Zen Mode.","shortDesc":"The target\'s Ability becomes Insomnia.","id":"worryseed","fullname":"move: Worry Seed","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Grass","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"wrap":{"exists":true,"name":"Wrap","num":35,"accuracy":90,"basePower":15,"category":"Physical","pp":20,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"volatileStatus":"partiallytrapped","secondary":null,"target":"normal","type":"Normal","contestType":"Tough","desc":"Prevents the target from switching for four or five turns (seven turns if the user is holding Grip Claw). Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, Flip Turn, Parting Shot, Teleport, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.","shortDesc":"Traps and damages the target for 4-5 turns.","id":"wrap","fullname":"move: Wrap","effectType":"Move","gen":1,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":90},"zMove":{"basePower":100}},"wring out":{"exists":true,"name":"Wring Out","num":378,"accuracy":100,"basePower":0,"category":"Special","isNonstandard":"Past","pp":5,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Normal","zMove":{"basePower":190},"maxMove":{"basePower":140},"contestType":"Tough","desc":"Power is equal to 120 * (target\'s current HP / target\'s maximum HP), rounded half down, but not less than 1.","shortDesc":"More power the more HP the target has left.","id":"wringout","fullname":"move: Wring Out","effectType":"Move","gen":4,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"x scissor":{"exists":true,"name":"X-Scissor","num":404,"accuracy":100,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":null,"target":"normal","type":"Bug","contestType":"Cool","desc":"No additional effect.","shortDesc":"No additional effect.","id":"xscissor","fullname":"move: X-Scissor","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Bug","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"yawn":{"exists":true,"name":"Yawn","num":281,"accuracy":true,"basePower":0,"category":"Status","pp":10,"priority":0,"flags":{"protect":1,"reflectable":1,"mirror":1},"volatileStatus":"yawn","condition":{"noCopy":true,"duration":2,"onResidualOrder":23},"secondary":null,"target":"normal","type":"Normal","zMove":{"boost":{"spe":1}},"contestType":"Cute","desc":"Causes the target to fall asleep at the end of the next turn. Fails when used if the target cannot fall asleep or if it already has a non-volatile status condition. At the end of the next turn, if the target is still active, does not have a non-volatile status condition, and can fall asleep, it falls asleep. If the target becomes affected, this effect cannot be prevented by Safeguard or a substitute, or by falling asleep and waking up during the effect.","shortDesc":"Puts the target to sleep after 1 turn.","id":"yawn","fullname":"move: Yawn","effectType":"Move","gen":3,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Normal","secondaries":null,"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":true,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false},"zap cannon":{"exists":true,"name":"Zap Cannon","num":192,"accuracy":50,"basePower":120,"category":"Special","pp":5,"priority":0,"flags":{"bullet":1,"protect":1,"mirror":1},"secondary":{"chance":100,"status":"par"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 100% chance to paralyze the target.","shortDesc":"100% chance to paralyze the target.","id":"zapcannon","fullname":"move: Zap Cannon","effectType":"Move","gen":2,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":100,"status":"par"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":140},"zMove":{"basePower":190}},"zen headbutt":{"exists":true,"name":"Zen Headbutt","num":428,"accuracy":90,"basePower":80,"category":"Physical","pp":15,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":20,"volatileStatus":"flinch"},"target":"normal","type":"Psychic","contestType":"Clever","desc":"Has a 20% chance to make the target flinch.","shortDesc":"20% chance to make the target flinch.","id":"zenheadbutt","fullname":"move: Zen Headbutt","effectType":"Move","gen":4,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Psychic","secondaries":[{"chance":20,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"zing zap":{"exists":true,"name":"Zing Zap","num":716,"accuracy":100,"basePower":80,"category":"Physical","pp":10,"priority":0,"flags":{"contact":1,"protect":1,"mirror":1},"secondary":{"chance":30,"volatileStatus":"flinch"},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 30% chance to make the target flinch.","shortDesc":"30% chance to make the target flinch.","id":"zingzap","fullname":"move: Zing Zap","effectType":"Move","gen":7,"isNonstandard":null,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":30,"volatileStatus":"flinch"}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}},"zippy zap":{"exists":true,"name":"Zippy Zap","num":729,"accuracy":100,"basePower":80,"category":"Physical","isNonstandard":"LGPE","pp":10,"priority":2,"flags":{"contact":1,"protect":1},"secondary":{"chance":100,"self":{"boosts":{"evasion":1}}},"target":"normal","type":"Electric","contestType":"Cool","desc":"Has a 100% chance to raise the user\'s evasion by 1 stage.","shortDesc":"Goes first. Raises user\'s evasion by 1.","id":"zippyzap","fullname":"move: Zippy Zap","effectType":"Move","gen":7,"noCopy":false,"affectsFainted":false,"sourceEffect":"","critRatio":1,"baseMoveType":"Electric","secondaries":[{"chance":100,"self":{"boosts":{"evasion":1}}}],"useTargetOffensive":false,"useSourceDefensiveAsOffensive":false,"ignoreNegativeOffensive":false,"ignorePositiveDefensive":false,"ignoreOffensive":false,"ignoreDefensive":false,"ignoreImmunity":false,"noPPBoosts":false,"isZ":false,"isMax":false,"pressureTarget":"","nonGhostTarget":"","ignoreAbility":false,"spreadHit":false,"forceSTAB":false,"noSketch":false,"maxMove":{"basePower":130},"zMove":{"basePower":160}}}'),natureArray:s(5226).getNatureNames,statusArray:["healthy","poisoned","badly poisoned","burned","paralyzed","asleep","frozen"],specialMovesObj:{"hazard setting":{Spikes:!0,"Stealth Rock":!0,"Sticky Web":!0,"Stone Axe":!0,"Toxic Spikes":!0},"hazard removal":{Defog:!0,"Rapid Spin":!0,"Mortal Spin":!0,"Tidy Up":!0},"healing moves":{Wish:!0,"Healing Wish":!0,"Jungle Healing":!0,"Lunar Dance":!0,"Revival Blessing":!0},momentum:{"Banton Pass":!0,"U-turn":!0,"U-Turn":!0,"u-turn":!0,"U Turn":!0,"Chilly Reception":!0,"Flip Turn":!0,Momento:!0,"Parting Shot":!0,Teleport:!0,"Shed Tail":!0,"Volt Switch":!0},"item removal":{"Knock Off":!0,Trick:!0,Switcheroo:!0},status:(a={Toxic:!0,Glare:!0,Nuzzle:!0},r(a,"Nuzzle",!0),r(a,"Thunderwave",!0),r(a,"Will-O-Wisp",!0),r(a,"Will O-Wisp",!0),r(a,"Yawn",!0),a),priority:{Accelerock:!0,"Aqua Jet":!0,"Quick Attack":!0,"Sucker Punch":!0,"Bullet Punch":!0,"Extreme Speed":!0,"Fake Out":!0,"First Impression":!0,"Ice Shard":!0,"Jet Punch":!0,"Shadow Sneak":!0},disruption:{"Circle Throw":!0,"Clear Smog":!0,"Dragon Tail":!0,Encore:!0,Haze:!0,Roar:!0,Taunt:!0,Whirlwind:!0}}}},2909:(e,t,s)=>{"use strict";s.d(t,{$4:()=>h,Bk:()=>g,Dl:()=>o,G6:()=>M,GU:()=>S,Hr:()=>u,JF:()=>c,JV:()=>a,LZ:()=>v,ND:()=>x,No:()=>m,Qo:()=>k,T5:()=>i,TV:()=>A,Th:()=>P,U0:()=>N,WT:()=>C,Xf:()=>y,_q:()=>r,ae:()=>b,eI:()=>O,fb:()=>f,g0:()=>l,gC:()=>p,o1:()=>w,oE:()=>D,s:()=>B,uG:()=>F,uS:()=>d,ve:()=>n,wl:()=>T});var a="ADD_POKEMON",i="ADD_POKEMON_POKEAI",r="UPDATE_GIF",o="ADD_POKEMON_TO_YOUR_TEAM",n="ADD_POKEMON_TO_ENEMY_TEAM",l="REMOVE_TEAM_MEMBER",f="SELECT_TEAM_MEMBER",c="SHOW_TYPING_CHART",u="SWITCH_TEAMS",p="TOGGLE_MAIN_DIV_STATE",g="CHANGE_USER_STATE",d="SAVE_CURRENT_TEAM_AS_NEW",h="SET_YOUR_TEAM",m="MAKE_SAVED_TEAM_ACTIVE",y="REMOVE_SAVED_TEAM",v="UPDATE_SAVED_TEAM",b="TOGGLE_LOGIN_LOADING",P="SELECT_ABILITY",w="SAVE_ITEM_TO_MON",S="SELECT_MOVE_FROM_LIST",k="UPDATE_ACTIVE_MOVE",T="REFRESH_AND_DECODE_SAVED_TEAMS",x="UPDATE_PREVIOUS_TEAM_KEY",M="CLEAR_TEAM",D="UPDATE_CALCULATED_STATS",A="UPDATE_NATURE",B="UPDATE_YOUR_TEAM_KEY",O="ADD_MON_TO_CALC",C="CHANGE_CALC_ATTRIBUTE",F="UPDATE_CALCULATED_STATS_CALC",N="CHOOSE_MOVE_FOR_CALC"},3778:(e,t,s)=>{"use strict";s.d(t,{Z:()=>p});var a=s(3645),i=s.n(a),r=s(1667),o=s.n(r),n=s(2413),l=s(9122),f=i()((function(e){return e[1]}));f.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap);"]),f.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Shadows+Into+Light&display=swap);"]),f.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap);"]),f.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Chakra+Petch:wght@300;400;500;600&display=swap);"]),f.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Orbitron:wght@400;600&display=swap);"]),f.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Inconsolata:wght@200;300;400;500;700&display=swap);"]);var c=o()(n.Z),u=o()(l.Z);f.push([e.id,"@media all and (min-width: 50px){body{font-size:.1em}}@media all and (min-width: 100px){body{font-size:.2em}}@media all and (min-width: 200px){body{font-size:.4em}}@media all and (min-width: 300px){body{font-size:.6em}}@media all and (min-width: 400px){body{font-size:.8em}}@media all and (min-width: 500px){body{font-size:1em}}@media all and (min-width: 600px){body{font-size:1.2em}}@media all and (min-width: 700px){body{font-size:1.4em}}@media all and (min-width: 800px){body{font-size:1.6em}}@media all and (min-width: 900px){body{font-size:1.8em}}@media all and (min-width: 1000px){body{font-size:2em}}@media all and (min-width: 1100px){body{font-size:2.2em}}@media all and (min-width: 1200px){body{font-size:2.4em}}@media all and (min-width: 1300px){body{font-size:2.6em}}@media all and (min-width: 1400px){body{font-size:2.8em}}@media all and (min-width: 1500px){body{font-size:3em}}@media all and (min-width: 1500px){body{font-size:3.2em}}@media all and (min-width: 1600px){body{font-size:3.4em}}@media all and (min-width: 1700px){body{font-size:3.6em}}body{background-color:#b3b3b3;background-image:url("+c+');background-size:cover;background-repeat:no-repeat;font-family:"Indie Flower",cursive;height:100%;width:100%;margin:0;overflow-x:hidden}.morning{background-image:url('+u+");background-size:cover;background-repeat:no-repeat}.afternoon{background-image:url("+c+');background-size:cover;background-repeat:no-repeat}html{height:100%;width:100%}#app{width:100%;height:100%}.app-container{height:100%;width:100%}.background{height:100%;width:100%}::-webkit-scrollbar{background-color:rgba(128,128,128,.531);border-radius:.3rem;width:10px}::-webkit-scrollbar-thumb{background-color:#97b0aa;border-radius:.3rem}button:hover{cursor:pointer}.type{font-size:25px;width:75px;height:32px;text-align:center;margin:0 auto;border-radius:.4rem;border:1.2px rgba(128,128,128,.623) dotted;cursor:pointer}.type-undefined{border:none}#bug{background-color:#a4ae3f}#dark{background-color:#54453a}#dragon{background-color:#623fee}#electric{background-color:#f0cc4f}#fairy{background-color:#e780f9}#fighting{background-color:#aa3a2f}#fire{background-color:#dc7d39}#flying{background-color:#a98ff3}#ghost{background-color:#735797}#grass{background-color:#7ac74c}#ground{background-color:#e2bf65}#ice{background-color:#96d9d6}#normal{background-color:#a8a77a}#poison{background-color:#a33ea1}#psychic{background-color:#f95587}#rock{background-color:#b6a136}#steel{background-color:#b7b7ce}#water{background-color:#6390f0}.type-bug{background-color:#a4ae3f}.type-dark{background-color:#54453a}.type-dragon{background-color:#623fee}.type-electric{background-color:#f0cc4f}.type-fairy{background-color:#e780f9}.type-fighting{background-color:#aa3a2f}.type-fire{background-color:#dc7d39}.type-flying{background-color:#a98ff3}.type-ghost{background-color:#735797}.type-grass{background-color:#7ac74c}.type-ground{background-color:#e2bf65}.type-ice{background-color:#96d9d6}.type-normal{background-color:#a8a77a}.type-poison{background-color:#a33ea1}.type-psychic{background-color:#f95587}.type-rock{background-color:#b6a136}.type-steel{background-color:#b7b7ce}.type-water{background-color:#6390f0}#main-div{height:100%;width:100%;position:relative;z-index:3}.inactive{pointer-events:none;opacity:50%}.title-container{display:flex;justify-content:left;background-color:#dcedeb;text-align:left;height:10%;width:101%;position:relative;top:-1%;box-shadow:5px 5px 10px 0px rgba(96,119,114,.75);border-radius:.5rem;vertical-align:middle}.title-container h1{position:relative;left:4%;top:-15%;font-size:65%}.title-container img{margin-top:1%;margin-left:6%;height:75%}.title-container h4{margin:0 auto;font-size:40%;position:absolute;top:65%;left:66.5%}#volume-slider{z-index:10;position:relative;left:46%;top:30%;margin-bottom:0%;cursor:pointer}#volume-slider::-webkit-slider-runnable-track{background-color:rgba(87,91,97,.624);border-radius:.5rem}#volume-slider::-webkit-slider-thumb{transform:scale(1.4);background-color:#fff;border:1px solid #ccc;border-radius:1rem;-webkit-appearance:none;position:relative}.electabuzzes{height:17%;width:8%;position:absolute;left:27%;top:0%;animation:electabuzz 8s infinite}@keyframes electabuzz{0%{transform:translateX(-5px)}50%{transform:translateX(780px) scaleX(-1)}100%{transform:translateX(-5px)}}.top-nav-bar{height:4.5%;width:40%;display:flex;justify-content:right;position:absolute;top:3%;left:55%;z-index:5}.top-nav-bar-buttons{width:30%;height:100%;text-align:center;line-height:100%}.top-nav-bar-buttons-inner{height:100%;margin-right:-35%}.top-nav-bar-buttons-inner button{margin:2%;position:relative;top:-10%}.top-nav-bar button{height:90%;width:100px;font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-size:20px;background-color:#d1c9af;border-radius:.3rem;border:2px #6b6a6a solid;position:relative;top:-30%}.display-block{display:block}.display-none{display:none}.modal{height:32%;width:30%;min-height:270px;min-width:385px;border-radius:.3rem;position:fixed;left:35%;top:20%;background:#8a8a8a;z-index:99;pointer-events:all !important;opacity:90% !important;font-family:"Indie Flower"}.modal h2{font-size:3rem;margin:0;margin-bottom:5%}.modal-form{text-align:center;font-size:1.5rem;min-width:80%}.modal-form label{margin-right:3%}.modal-form .username-div{margin-bottom:3%;margin-left:-13%;margin-top:2%}.modal-form .password-div{margin-left:-13%;margin-bottom:4%}.modal-form .password-div label{margin-right:4.5%}#login-button{position:absolute;bottom:8%;right:37%;height:50px;width:130px;font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-size:25px;background-color:#d1c9af;border-radius:.3rem;cursor:pointer}.modal .close-button{position:absolute;top:0%;left:82%;height:15%;width:18%;background-color:#4e4d50;color:#d1c9af;font-size:1.4rem}.modal h3{font-size:50%;margin:5%}#login-loading-gif{position:relative;top:-55%;left:25%;height:80%;width:60%}.modal h4{margin:0;margin-top:-4%;margin-bottom:-1.5%;color:#dc0f0f;font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-weight:400;font-size:1rem}.after-login-username-display{width:200%;height:100%;display:flex;justify-content:center;position:relative;top:10%;left:-40%}.after-login-username-display h2{height:100%;color:color3;font-size:1.3rem;line-height:100%;margin-right:3%;margin-top:2%}.after-login-username-display h3{height:100%;margin-right:7%;font-size:50%;line-height:100%;color:#41746f;margin-top:1.5%;margin-right:3%}.after-login-username-display button{position:relative;top:-1%}h1{font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-weight:100;color:#595959}h1{color:#284368;font-size:2rem;margin-left:1.5%;padding-top:1.1%}.explore-tip{position:absolute;left:33%;top:28%;font-size:40%;animation:exploreTip 2s infinite;color:#2b2b2b}@keyframes exploreTip{0%{transform:translateY(-20px)}50%{transform:translateY(3px)}100%{transform:translateY(-20px)}}.search-bar-element{height:8%;width:25%;position:absolute;top:.5%;left:38%;margin-right:-10%;z-index:99;border:1px #000 dotted;border-radius:.7rem;background-color:rgba(169,181,190,.5803921569);box-shadow:2px 1px 5px 1px rgba(91,91,91,.676)}.search-bar-element:hover{background-color:rgba(140,180,171,.5803921569);transition:.3s ease-in-out}.search-bar-element-focused{background-color:rgba(140,180,171,.5803921569);transition:.8s ease-in-out}.search-bar-element-flashing{background-color:rgba(179,211,203,.5058823529);border:1px #f5f5f5 dotted;transition:.1s ease-in-out}.search-bar-element form{height:80%;margin-top:-15px;margin-left:3%}#pokemon-search-name{height:60%;width:45%;margin-right:5%;border-radius:.3rem;background-color:rgba(224,224,207,.725) !important}.search-bar-element button{height:30px;width:80px;font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-size:20px;font-weight:500;color:#284368;background-color:#d1c9af;position:relative;top:5px;line-height:30px;border-radius:.3rem}.search-bar-element span{position:relative;top:-5px}.search-bar-element button:hover{box-shadow:5px 5px 5px -5px rgba(85,167,255,.88)}input[type=text]{font-size:20px;font-family:"Indie Flower",cursive}.main-row-container{display:flex;justify-content:left;height:55%;position:relative;top:4%}.all-saved-teams-container{background-color:rgba(112,172,212,.7);border-radius:.5rem;width:23%;height:500px;margin-left:3%;text-align:center}.all-saved-teams-container h4{font-size:25px;font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-weight:500;margin-bottom:-2px;margin-top:15px;color:#132033}.all-saved-teams-container h5{font-weight:400;font-size:18px;line-height:100%;position:relative;bottom:26%;height:28%;width:40%;background-color:rgba(75,115,142,.671);border-radius:.3rem;margin-bottom:10px}.all-saved-teams{max-height:90%;min-height:60%;overflow-y:auto;border-radius:.3rem}.saved-team-member-container{height:100%;width:20%}.saved-team-member{height:100%;width:100%;animation:rollout .4s ease-in-out}.saved-team{height:55px;width:80%;background-color:rgba(90,137,169,.642);border-radius:.3rem;margin:0 auto;margin-bottom:-3%;margin-left:2%}.saved-team .team-members{position:relative;left:-8%;bottom:40%;height:100%;width:100%}.pokemon-sprite-saved-team{height:95%;width:94%}.saved-team .first-add-button{height:80%;width:80%}.edit-team-button{height:95%;width:17%;position:relative;top:-145%;left:61%}.edit-team-button:hover{transform:scale(1.3);transition:.5s;transition:ease-in-out;cursor:pointer}.remove-team-button{height:52%;width:9%;position:relative;top:-164%;left:58.5%;cursor:pointer}.remove-team-button:hover{transform:scale(1.2);transition:.5s;transition:ease-in-out}.need-saved-team-hover-effect:hover{background-color:rgba(45,86,114,.792);margin-top:-0.7%;padding-right:1%;border-radius:.3rem}.active-saved-team{background-color:rgba(64,93,112,.792);border-radius:.3rem;margin-top:-0.5%;padding-right:1%}.current-pokemon-display-container{width:70%;height:103%;margin-left:2%}.current-pokemon-container{height:100%;width:100%;display:flex;justify-content:center;transition:.5s;animation:rollout 1s}@keyframes rolloutCurrentPokemon{0%{transform:scale(0.1);opacity:0}20%{transform:translateY(540px) translateX(-500px) scale(0.3);opacity:0}100%{transform:none}}.evolution-container{height:100%;width:15%;z-index:0}.evolution-container h4{height:10%;margin-left:10%;margin-bottom:-1%;font-size:105%}.evolution-container-inner{height:70%;width:100%;margin-top:5%;font-size:30%;background-color:#9fcec9;border-radius:.55rem;border:1px rgba(128,128,128,.609) dotted;box-shadow:-2px 3px 5px 0px rgba(133,132,132,.75)}.evolution-container-inner:hover{background-color:#b3d9d4;box-shadow:8px -3px 15px 0px rgba(133,132,132,.75);transform:scale(1.03);transition:ease-in-out;transition:.3s all ease}.evolution-tree-container{height:85%;width:100%;overflow-y:auto;overflow-x:hidden;transition:opacity 1s ease-in-out}.evolution-row{height:18%;width:80%;font-size:90%;margin-bottom:-15%;display:flex;justify-content:left}.evolution-row .arrows{height:18%;width:16%;margin-top:10%;margin-right:2%}.evolution-row a{height:40%;width:55%;position:relative;margin-top:5%}.evolution-row a:hover{color:#6fa7b4;text-decoration:underline;font-size:95%;cursor:pointer}.evolution-sprite{height:50%;width:30%;margin-right:3%}.evolution-tier-2{margin-left:10%}.evolution-tier-3{margin-left:20%}.evolution-sprite-current{transform:scale(1.2);padding:3px;transition:1s ease-in-out;background-color:rgba(157,155,155,.541);border-radius:.9rem}.evolution-text-current{display:inline-block;color:#aedbe5;text-decoration:underline;font-size:95%;background-color:rgba(86,86,86,.473);border-radius:15%;padding-left:5px}.current-pokemon-outter-flexbox{max-width:50%;min-width:50%;height:100%;display:flex;flex-direction:column}.current-pokemon{height:82%;width:100%;font-family:"Indie Flower",cursive;font-weight:500;background-color:#badcd8;border-radius:.8rem;border:1px gray dotted;box-shadow:2px 10px 25px -12px rgba(92,11,11,.88);position:relative;display:flex;flex-direction:column}.current-pokemon h3{text-align:center;margin-bottom:10px;line-height:100%}@keyframes rollout{0%{transform:scale(0.3)}100%{transform:none}}.current-sprite-main-container{width:50%;height:100%}.current-pokemon img{animation:rollout 1.5s}.current-pokemon .top-flexbox{height:15%;width:100%;display:flex;justify-content:center;margin-bottom:1%;margin-left:-3%}.current-pokemon .top-flexbox h3{font-size:80%;margin-top:10px}.current-pokemon .top-flexbox .types{display:flex;justify-content:center;margin-left:4%;margin-top:4%}.current-pokemon .top-flexbox .types h4{font-size:1.4rem;margin-top:1%;margin:1%}.levels h4{font-size:1.5rem;position:relative;top:-20%;right:-20%}.current-pokemon-spacer{flex:.3}.current-pokemon-flexbox{height:50%;width:70%;display:flex;justify-content:left;margin-left:10%;color:rgba(111,136,97,.404)}.current-pokemon-flexbox img{height:75%;width:75%;transition:ease-in-out;transition:.7s;margin-top:10%;position:relative;z-index:5}.current-pokemon-flexbox img:hover{transform:scale(1.3);cursor:pointer}.current-pokemon-flexbox .stats{width:55%;height:100%}.stat-chart-current-pokemon-chart{height:100%;width:125%;margin-top:23%;margin-left:5%}.stat-chart-current-pokemon-chart canvas{height:100% !important;width:100% !important}#current-pokemon-chart{height:290px !important;width:100%;border:.6px rgba(113,147,167,.747) dotted;border-radius:.7rem}.outter h5{font-size:20px;font-family:"Orbitron",sans-serif;text-align:center}.outter span{font-family:"Chakra Petch",sans-serif;font-size:15px}.outter h4{font-size:20px;font-family:"Orbitron",sans-serif}.inner{margin-top:-10px;margin-bottom:-10px;margin-left:-30px;list-style-type:none;font-family:"Chakra Petch",sans-serif;font-weight:300}#inner-1{display:flex}.inner .row-1{display:flex;justify-content:left}.inner .row-2{display:flex;justify-content:lett}.inner li{margin:5px;margin-left:30px}.inner h6{font-size:15px;margin-top:-10px;margin-bottom:-10px}.inner p{font-size:13px}.stats{width:90%;height:100%;margin-left:25px;margin-top:-20px}.stats h5{font-size:25px;font-family:"Orbitron",sans-serif}.stats ul{list-style:none;margin-top:-10px;margin-bottom:50px;margin-left:-20px}.stats li{font-size:22px}.oval-ground{height:5%;min-height:5%;width:27%;border-radius:50%;position:relative;left:8%;top:-9%;opacity:50%;z-index:1;box-shadow:2px 2px 2px 2px rgba(129,129,129,.589)}.current-pokemon-weakness-summary{height:33%;width:100%;position:relative;left:1%;top:5%}.current-pokemon-weakness-summary h4{font-size:1.2rem;margin-top:-2%}.current-pokemon-weakness-summary h5{font-family:"Inconsolata";font-size:.9rem;font-weight:300;position:relative;top:-30%}.current-pokemon-weakness-summary .weaknesses{height:30%;width:95%;display:flex;justify-content:left}.weaknesses-inner{height:100%;display:flex;justify-content:left}.weaknesses-inner>*{animation-delay:3s}.weaknesses-inner:nth-child(1){-webkit-animation-delay:.26s;animation-delay:.1s}.weaknesses-inner:nth-child(2){-webkit-animation-delay:.6s;animation-delay:.2s}.weaknesses-inner:nth-child(3){-webkit-animation-delay:.76s;animation-delay:.3s}.weaknesses-inner:nth-child(4){-webkit-animation-delay:2s;animation-delay:.4s}.weaknesses-inner:nth-child(5){-webkit-animation-delay:2.26s;animation-delay:.5s}.weaknesses-inner:nth-child(6){-webkit-animation-delay:2.26s;animation-delay:.6s}.current-pokemon-weakness-summary .type{height:60%;min-width:fit-content;max-width:50px;line-height:25px;margin-left:4px;opacity:70%;animation:fadeIn 1s ease-in-out}.current-pokemon-weakness-summary .resistance-immune{color:#fff;font-weight:700}.current-pokemon-weakness-summary .resistance-x4{font-weight:700}.current-pokemon-weakness-summary .weakness-x4{font-weight:700}.add-to-team-option-buttons{height:12%;width:100%;position:relative;left:0%;margin:0;display:flex;justify-content:center}.add-to-team-option-buttons button{height:70%;width:50%;font-size:1rem;font-weight:400;font-family:"Chakra Petch",sans-serif;border-radius:.5rem;background-color:#4d789f;color:#c1c297;z-index:10;position:relative}.add-to-team-option-buttons .f{height:100%;width:40%;display:flex;justify-content:left}.add-to-team-option-buttons .e{height:100%;width:40%;display:flex;justify-content:right}.add-to-team-option-spacer{width:20%}.add-to-calc{background-color:rgba(108,108,108,.633) !important}.add-to-team-option-buttons button:hover{background-color:#e6e6e6;transition:.5s;border:2.3px solid #000;cursor:pointer;font-weight:90 0}.add-to-team-option-buttons .f>*{color:#badcd8 !important;position:relative}.add-to-team-option-buttons .f>*:hover{color:#44867e !important}.add-to-team-option-buttons .e>*{color:#dca4a1 !important;position:relative}.add-to-team-option-buttons .e>*:hover{color:#813430 !important}.down-arrow-gifs{height:10%;width:100%;display:flex;position:relative;top:-4%;left:-2%}.down-arrow-gifs img{height:150%;width:40%;position:relative;opacity:50%;z-index:-1}.down-arrow-gifs .arrow1{position:relative;right:8%}.down-arrow-gifs .arrow2{position:relative;left:12%}.current-pokemon-rightside-container{width:50%;height:82%;display:flex;z-index:10}.pokemon-details-container{height:100%;width:45%;background-color:#9fcec9;border-radius:1rem;display:flex;flex-direction:column;transition:.6s}.pokemon-details-container-stretched{height:121%;background-color:#9fcec9}.pokemon-details-container>*:hover{background-color:#b3d9d4;box-shadow:8px -3px 15px 0px rgba(133,132,132,.75);transform:scale(1.03);transition:ease-in-out;transition:.3s all ease;cursor:pointer}.pokemon-details-container .active-pokemon-detail-container{background-color:#c4e1de;box-shadow:8px -3px 15px 0px rgba(133,132,132,.75);transition:ease-in-out;transition:.3s all ease}.pokemon-details-container h3{margin:5%;font-size:1.2rem}.pokemon-details-container h4{margin:5%}.browse-area-container h3{font-size:1.2rem}.browse-area-container h5{font-size:1rem}.abilities-container{height:19%;border:1.3px dotted #000;border-radius:.6rem}.abilities-container.active-pokemon-detail-container{height:40%}.abilities-container h3{height:15%;margin:5%}.abilities-container-inner{height:37%;width:100%;display:flex;justify-content:center;margin-top:8%}.abilities-container-inner h4{line-height:80%;text-align:center;font-size:1rem}.abilities-container-inner .ability{max-width:50%;min-width:30%;height:100%;border:1.3px dotted #000;border-radius:.3rem;box-shadow:5px 5px 30px -10px rgba(63,63,63,.88);display:flex;vertical-align:middle;align-items:center;text-align:center;font-size:90%;margin:1%}.abilities-container.active-pokemon-detail-container .abilities-container-inner{height:20%;margin-top:0}.abilities-container-inner .ability:hover{border:2.3px dotted #000;cursor:help}.active-ability-highlighted{background-color:rgba(134,133,161,.6117647059)}.ability-description-container{height:50%}.ability-description{height:30%;color:#414141;font-size:.9rem;line-height:85%;margin:6%}.pokemon-details-container .item-container{height:9%;width:100%;display:flex;justify-content:left;border:1.3px dotted #000;border-radius:.3rem;box-shadow:5px 5px 30px -10px rgba(63,63,63,.88)}.item-container.active-pokemon-detail-container{height:15%}.pokemon-details-container .item-container h3{margin-left:5%;margin-top:3%}.pokemon-details-container .item{height:65%;width:60%;display:flex;justify-content:center;align-items:center;margin-left:5%;align-self:center;animation:rollout .7s ease-in-out}.item-container.active-pokemon-detail-container .item{position:relative;margin-top:1%;border:1.3px dotted #000;border-radius:.3rem;background-color:rgba(131,162,156,.217);display:flex;justify-content:center;align-items:center}.pokemon-details-container .item-container-inner{height:80%;width:100%;position:relative;top:10%}.pokemon-details-container .item img{height:75%;width:22%;position:relative;top:10%}.pokemon-details-container .item h4{position:relative;top:7%;font-size:.9rem}.browse-items-container{height:100%;width:100%}.browse-items-container h3{text-align:center;font-size:1.3rem;margin:2%}.browse-items-container h4{font-size:1.2rem}.search-area{display:flex;justify-content:center}.search-area input{width:70%;background-color:rgba(168,166,166,.364);border-radius:.3rem}.browse-items-container .item-list{height:71%;width:90%;background-color:rgba(123,135,151,.496);border:1.3px dotted #000;border-radius:.3rem;margin:0 auto;overflow-y:scroll}.item-row{height:12%;width:98%;border:1.3px dotted #000;overflow:hidden}.item-row-top{height:40%;width:100%;display:flex;justify-content:left;margin-bottom:2%}.item-row-top img{height:140%;width:14%;margin-top:-1%}.item-row-top h4{margin:0}.item-row-top span{color:rgba(126,20,20,.889);font-size:1.1rem}.item-row-bottom h5{width:95%;font-size:.65rem;line-height:100%;margin:0;margin-left:3%}.item-row:hover{background-color:rgba(144,176,205,.66);border:2px dotted rgba(80,80,80,.814);cursor:pointer}.active-item-browse-area{background-color:rgba(175,212,222,.66);border:2px dotted rgba(80,80,80,.814)}.item-selected{height:11%;width:90%;margin:0 auto;border-radius:.3rem;margin-top:1%;margin-bottom:1%;border:1.3px dotted #000;background-color:rgba(196,225,222,.5294117647)}.item-selected-placeholder{height:11%;width:90%}.moves-container{height:35%;min-height:25%;width:100%;border:1.3px dotted #000;border-radius:.3rem;box-shadow:5px 5px 30px -10px rgba(63,63,63,.88)}.moves-container h3{height:16%;margin-bottom:4%;margin-top:2%}.moves-container .types-colors-inner{height:3px;width:10%;opacity:70%}.moves-container-row{height:30%;width:100%;display:flex;justify-content:left;margin-top:2.5%}.move-container h4{line-height:90%;text-align:center;font-size:1rem}.move-container{width:50%;height:100%;background-color:rgba(128,128,128,.451);border:1.3px dotted #000;border-radius:.3rem;box-shadow:5px 5px 30px -10px rgba(63,63,63,.88);margin:1%;display:flex;flex-direction:column;align-items:center;animation:rollout .5s}.move-container>*{animation:rollout .5s ease-in-out}.move-container-top-row{display:flex;justify-content:left}.active-move-container{background-color:rgba(107,116,111,.639);box-shadow:2px 2px 20px -10px rgba(63,63,63,.88)}.browse-moves-container{height:100%;width:100%}.browse-area-container h3{margin:2%;text-align:center}.moves-list-labels{margin-top:-1%;margin-bottom:1.4%;height:2.5%;width:90%;display:flex;justify-content:center}.moves-list-labels .name{position:relative;margin:0 auto;left:5%;line-height:100%}.moves-list-labels .type-l{position:relative;margin:0 auto;top:-5%;left:16%;font-size:.85rem}.moves-list-labels .cat{position:relative;margin:0 auto;top:-5%;left:5%;font-size:.85rem}.moves-list-labels .pow{position:relative;margin:0 auto;top:-5%;left:3%;font-size:.85rem}.moves-list-labels .acc{position:relative;margin:0 auto;top:-5%;left:-1%;font-size:.85rem}.browse-moves-container .moves-list{height:70%;width:90%;background-color:rgba(123,135,151,.496);border:1.3px dotted #000;border-radius:.3rem;margin:0 auto;overflow-y:scroll}.move-row{height:12%;width:98%;border:1.3px dotted #000;overflow:hidden;display:flex;flex-direction:column}.move-row-top{height:40%;width:100%;display:flex;justify-content:left;margin-bottom:2%;line-height:90%}.move-row-top h4{height:60%;width:40%;position:relative;top:-70%;left:2%}.move-row-top .type-symbol{height:85%;width:16%;position:relative;top:10%}.move-row-top .category-symbol{height:80%;width:13%;position:relative;left:3%;top:10%}.move-row-top .basepower{width:10%;position:relative;left:5%;text-align:center}.move-row-top .accuracy{width:10%;position:relative;left:6%;text-align:center}.move-row-top h4{margin:0;font-size:1rem}.move-row-top span{color:rgba(126,20,20,.889);font-size:1.1rem}.move-row-bottom{margin-top:1%}.move-row-bottom h5{width:95%;font-size:.75rem;line-height:100%;margin:0;margin-left:3%;margin-bottom:-10%}.move-row:hover{background-color:rgba(144,176,205,.66);border:2px dotted rgba(80,80,80,.814);cursor:pointer}.active-move-browse-area{background-color:rgba(175,212,222,.66);border:2px dotted rgba(80,80,80,.814)}.move-selected{height:11%;width:90%;margin:0 auto;border-radius:.3rem;margin-top:1%;margin-bottom:1%;border:1.3px dotted #000;background-color:rgba(196,225,222,.5294117647)}.move-selected-placeholder{height:11%;width:90%}.evs-container{height:36%;width:100%;border:1.3px dotted #000;border-radius:.7rem;box-shadow:5px 5px 30px -10px rgba(63,63,63,.88)}.evs-container.active-pokemon-detail-container{height:45%}.evs-container.active-pokemon-detail-container .ev-table-labels{position:relative;top:-5%}.evs-container.active-pokemon-detail-container .evs-display-container{position:relative;top:8%}.evs-display-container{width:100%;height:97%;margin-top:-10%}.evs-display-container h4{font-family:"Gill Sans",sans-serif;font-weight:400}.ev-container{height:12%;width:100%;display:grid;justify-content:center;margin:1%}.evs-container h3{margin-bottom:8%;margin-top:2%}.evs-display-container input{width:12.5%;height:75%;background-color:rgba(100,137,177,.3882352941);border-radius:.3rem;border:1px #313131 dotted;font-family:"Gill Sans",sans-serif;font-weight:400;font-size:27%;text-align:center}.evs-display-container h4{margin:0;font-size:.85rem}.ev-table-labels{position:relative;left:0%;top:-20%;display:flex;justify-content:center;font-size:.9rem;line-height:90%}.ev-table-labels h4{margin-top:-2.5%;margin-bottom:-5%}.base-table-label{position:relative;left:3%}.ev-table-label{position:relative;left:0%;top:-200%}.evs-display-container .base-stat-label{position:relative;left:-12%;top:10%;font-size:.75rem}.evs-display-container .base-stat{position:relative;left:21%;top:-90%;width:15%;text-align:center}.evs-display-container .ev-input{width:16%;position:relative;left:42%;top:-150%}.evs-display-container .iv-input{position:relative;left:69%;top:-250%}.evs-display-container .result-stat{width:15%;position:relative;left:95%;top:-460%;text-align:center}.ev-browser-area{height:100%;width:100%}.ev-browser-area h4{font-size:20%}.dynamic-chart-container{height:35%;width:100%;display:flex;margin-top:5%}.stat-chart-calculated-stat-chart{width:75%;height:100%;position:relative;left:9%}#calculated-stat-chart{height:100%}.calculated-stat-chart-labels{height:91%;position:relative;left:14%;top:8%;display:flex;flex-direction:column}.calculated-stat-chart-labels h4{height:18.5%;font-family:"Gill Sans",sans-serif;font-weight:400;font-size:25%;margin:0;flex-shrink:1;text-align:center}.nature-container{height:10%;display:flex;justify-content:center;position:relative;top:3%}.nature-container h4{height:100%;font-size:40%;line-height:100%;position:relative;margin:0;top:9%}.nature-container select{height:60%;max-height:300px;width:55%;background-color:#4d789f;border-radius:.3rem;position:relative;top:0%;left:5%;font-family:"Gill Sans",sans-serif;font-size:30%;cursor:pointer}.remaining-ev-container{height:8%;margin-top:1%;margin-left:-4%;display:flex;justify-content:left;position:relative;top:5%}.remaining-ev-container h4{height:100%;margin-left:3%;font-size:30%;margin:0 auto}.remaining-ev-container h5{height:100%;position:relative;left:-25%;font-size:35%;font-family:"Gill Sans",sans-serif;font-weight:400;margin:0 auto}.ev-sliders-container{height:35%;width:90%;margin:0 auto;margin-top:10%;display:flex;flex-direction:column;font-size:120%;border:1.4px rgba(102,106,108,.518) dotted;border-radius:.4rem;background-color:rgba(178,209,203,.7960784314)}.ev-sliders-container h4{position:relative;top:-15%}.ev-used-container{height:35%;width:10%;display:flex;flex-direction:column;position:relative;left:80%;top:-33.5%}.ev-used{height:17%;position:relative;left:10%;margin:0 auto;font-weight:500;font-family:"Gill Sans",sans-serif;font-size:28% !important}.ev-slider-container{height:17%;display:flex;justify-content:right;position:relative;right:10%}.slider{margin:5%;cursor:pointer}.browse-area-container{width:60%;height:121%;background-color:rgba(128,128,128,.308);border-radius:.5rem}.teams{height:19%;width:100%;margin-top:2.8%;padding-top:.4%;padding-bottom:1%;display:flex;justify-content:center;background-color:rgba(154,154,154,.631)}.switch-teams-button-container img{position:relative;top:30%;height:50px;width:50px;cursor:pointer}@keyframes teamsMovement{0%{transform:translateY(-1px)}50%{transform:translateY(5px)}100%{transform:translateY(-1px)}}.green{margin-right:2%;margin-left:.5%;padding-bottom:1%;width:47%;height:90%;background-color:rgba(186,220,216,.8);border-radius:1rem;box-shadow:5px 5px 30px -10px rgba(63,63,63,.88);animation:teamsMovement 3s infinite}.red{margin-left:2%;margin-right:.5%;padding-bottom:1%;width:47%;height:90%;background-color:rgba(220,164,161,.8);border-radius:1rem;box-shadow:5px 5px 30px -10px rgba(63,63,63,.88);z-index:10;animation:teamsMovement 3s infinite}.team-name-text-input{width:30%;margin-top:2px;margin-bottom:1.5%;font-size:25px;text-align:center;font-family:"Indie Flower",cursive;font-weight:500;border:1px rgba(128,128,128,.681) dotted;border-radius:.5rem;position:relative;left:35%}.team-name-text-input:hover{border:2px #80c0e5 solid}.teams .team-members{display:flex;flex-direction:row;margin-left:1%;height:100%;width:98%}.team-members{display:flex;flex-direction:row;margin-left:7%;height:100%;width:98%;cursor:pointer}.team-member-container:nth-child(1){-webkit-animation-delay:.26s;animation-delay:.1s}.team-member-container:nth-child(2){-webkit-animation-delay:.6s;animation-delay:.2s}.team-member-container:nth-child(3){-webkit-animation-delay:.76s;animation-delay:.3s}.team-member-container:nth-child(4){-webkit-animation-delay:2s;animation-delay:.4s}.team-member-container:nth-child(5){-webkit-animation-delay:2.26s;animation-delay:.5s}.team-member-container:nth-child(6){-webkit-animation-delay:2.26s;animation-delay:.6s}@-webkit-keyframes fadeIn{0%{opacity:0;transform:translateY(15px)}25%{transform:translateY(-15px)}75%{opacity:.7}100%{opacity:1}}.team-member-container{height:100%;width:100%;min-height:105px;-webkit-animation:fadeIn .4s linear;animation:fadeIn 1s linear;-webkit-animation-fill-mode:both;animation-fill-mode:both}.team-member{display:flex;justify-content:center;height:100%;width:98%;margin:5px}.team-member .remove-button{position:relative;height:12%;width:13%;margin-top:-13%;margin-left:-15%}.pokemon-sprite-class-small{height:65%;width:100%;border-radius:1rem;transition:ease-in-out}.pokemon-sprite-class-small{background-color:rgba(92,143,134,.298);margin-top:-1.5%;padding-bottom:-30px;border-radius:1.5rem;box-shadow:10px 5px 15px -10px rgba(49,75,74,.705)}.pokemon-sprite-class-small:hover{transform:scale(1.1);transform:translateY(-10px);transition:ease-in-out;transition:.3s;background-color:rgba(67,126,116,.409);margin-top:-1.5%;padding-bottom:-30px;border-radius:2.3rem;box-shadow:2px 5px 20px -10px rgba(42,5,98,.88)}.need-active-team-member-hover-effect{transform:scale(1.1);transform:translateY(-10px);transition:ease-in-out;transition:.5s;background-color:rgba(67,126,116,.658);margin-top:-1.5%;padding-bottom:-30px;border-radius:1.8rem;box-shadow:2px 5px 20px -10px rgba(42,5,98,.88)}.team-member-container .types-colors{display:flex;justify-content:center;position:relative;top:-35%}.team-member-container .types-colors-inner{width:20px;height:5px;margin:2px}.teams .save-buttons-container{height:18%;width:47%;position:relative;left:60%;bottom:126%;display:flex;justify-content:center}.teams button{height:28px;width:80px;font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-size:1.3rem;background-color:rgba(201,198,152,.721);color:#292a2a;border-radius:.4rem;position:relative}#main-div>div.teams>div.green>div.save-buttons-container>button.save-team-as-new-button{width:120px;margin-left:2%}.save-buttons-container img:hover{transform:scale(1.2);transition:.5s;cursor:pointer}.save-team-icon{height:90%;width:9%}.copy-team-icon{height:90%;width:10%;margin-left:3%}.clear-team-button{position:relative;left:2%;top:-143%}#clear-team-button-f{background-color:rgba(62,100,140,.568627451);border-radius:1rem;top:-3%;margin-left:19%}#clear-team-button-e{top:-149%;left:88%;background-color:rgba(62,100,140,.568627451);border-radius:1rem}button:hover{background-color:#e6e6e6;transition:.5s;border:2.3px solid rgba(75,75,75,.72);cursor:pointer;font-weight:90 0}.analysis-menu-and-content-container{height:70%;width:100%;margin-top:.3%;margin-bottom:1%;margin-left:3%;border-radius:.5rem;animation:rollout .5s ease-in-out;position:relative;display:flex;flex-direction:column}.analysis-menu{height:8%;width:60%;position:relative;top:1%;display:flex}.analysis-menu>*{height:100%;font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-size:40%;background-color:rgba(182,188,198,.716);color:#434344;box-shadow:2px 0px 5px 1px rgba(167,182,184,.707);border-radius:.6rem;border:1px gray dotted;border-radius:.2rem;position:relative;top:0%;z-index:0}.analysis-menu .menu-button-active{transform:translateY(-15%);height:115%;background-color:rgba(147,158,174,.954);color:#1f1f1f;animation:strok 1.5s reverse}.analysis-menu button:hover{transform:translateY(-15%);background-color:rgba(147,158,174,.954);height:115%;color:#323131;font-weight:400;border:none;transition:.3s}.analysis-content-container{height:90%;width:93%;background-color:rgba(128,128,128,.451);border-radius:.4rem}@keyframes strok{100%{stroke-dashoffset:400}}.matchup-chart h3{font-family:"Gill Sans",sans-serif;font-weight:500;text-align:center;position:relative;top:10%;left:-10%}.matchup-chart{height:97%;width:80%;position:relative;top:1%;margin:0 auto;border-radius:.3rem;background-color:rgba(104,109,123,.815);padding-left:2.1%;transition:1s;animation:rollout 1s}.row-outter{display:flex;margin-left:-10%;height:15.65%}.row-outter-legends{margin-left:-3%;opacity:75%;border:1px gray dotted;border-radius:.5rem}.row-inner{display:flex;justify-content:center;width:100%;margin-left:.4%}.chart-legends{width:5.5555%;margin:.2%;text-align:center;font-family:"Indie Flower",cursive;font-weight:700;font-size:1.2rem;border-radius:.4rem}.box{margin-left:2.3%;margin-right:2.3%;display:flex;justify-content:center;border:#3a393f;border-width:.5;border-style:dotted;border-radius:.3rem;padding-left:1rem;margin-left:0;margin-right:0;width:80%;text-align:center;font-family:"Indie Flower",cursive;font-weight:700;font-size:1rem}.weakness-025{background-color:rgba(60,156,60,.509)}.weakness-05{background-color:rgba(159,247,159,.455)}.weakness-0{background-color:#1f1f1f;color:#fff}.weakness-2{background-color:rgba(243,91,91,.72)}.weakness-4{background-color:rgba(127,0,0,.724)}.chart-sprite-container{height:100%;width:6.7%}.chart-sprite{height:100%;width:80%;position:relative;left:10%}.damage-calculator-container{height:95%;width:90%;position:relative;top:1%;margin:0 auto;display:flex;justify-content:center;font-size:30%;background-color:#818a98;backdrop-filter:blur(10px);box-shadow:0 8px 30px 0 rgba(93,92,92,.5)}.calc-pokemon-display-container{height:99%;width:17%;position:relative;top:2%;margin:0 auto;display:flex;flex-direction:column}.calc-results{width:22%;height:90%;margin:0 auto;margin-top:2%;border:1px dotted #393939;border-radius:1.5rem}.calc-pokemon-display-inner{height:30%;width:100%;border:1px dotted #393939;border-radius:6rem;text-align:center;cursor:pointer;box-shadow:2px 1px 5px 1px rgba(132,161,165,.707);display:flex;flex-direction:column;justify-content:center}.calc-pokemon-display-inner h3{margin:0 auto;margin-top:2%}.calc-sprite-container{height:43%;width:80%;margin:0 auto}.calc-sprite{height:120%;width:50%}.calc-sprite-placeholder{height:120%;width:50%}.calc-pokemon-types-container{height:20%;width:100%;display:flex;justify-content:center;margin-top:10%}.calc-pokemon-types-container img{height:50%;width:20%;margin:2%}.calc-ev-container{height:35%;margin-top:5%;margin-bottom:-8%}.calc-ev-container .ev-table-labels{top:5%;display:flex;justify-content:left}.calc-ev-container .base-table-label{position:absolute;left:25%}.calc-ev-container .ev-table-label{position:absolute;left:45%}.calc-ev-container .iv-table-label{position:absolute;left:70%}.calc-ev-container .evs-display-container{height:95%;width:100%;margin:0;position:relative;top:10%}.calc-ev-container .evs-display-container>*{margin-top:1.5%}.calc-ev-container .ev-container{display:flex;justify-content:left;align-items:center;position:relative}.calc-ev-container .base-stat-label{width:20%;white-space:nowrap;position:relative;left:2%;font-size:80%}.calc-ev-container .base-stat{position:absolute;left:20%;top:20%;font-size:100%;font-weight:300}.calc-ev-container .calc-ev-input{height:100%;width:15%;position:absolute;left:40%;top:0%;font-size:100%;font-weight:300}.calc-ev-container .calc-iv-input{height:100%;width:10%;position:absolute;left:65%;top:0%;background-color:rgba(142,140,140,.726);font-size:80%;font-weight:300}.calc-ev-container .result-stat{width:15%;text-align:center;position:absolute;left:80%;top:20%;font-size:100%}.calc-details-container{height:40%;width:100%;margin-top:7%;position:relative;top:4%;display:flex;flex-direction:column}.calc-details-container h4{margin:0;margin-top:3%}.calc-details-container select{height:80%;width:70%;background-color:rgba(245,245,245,.789);border-radius:.3rem;font-size:100%}.calc-details-container>*{display:flex;justify-content:space-between;align-items:center}.calc-results-container{height:100%;width:100%;display:flex;flex-direction:column}.calc-results-summary{height:27%;width:70%;margin:0 auto}.calc-results-labels{height:4%;width:95%;margin:0 auto;margin-left:5%;position:relative;top:-10%;margin-bottom:-6%;display:flex}.calc-results-labels>*{margin-right:18%}.calc-label-basepower{width:25%;font-size:70%;white-space:nowrap;position:relative;top:50%;margin-left:7%}.calc-label-damage{width:10%}.calc-result-row-container{height:15%;width:95%;margin-top:3%;margin-left:2%;display:flex;border:1px #5b5959 dotted;border-radius:.4rem}.calc-move-container{height:50%;width:38%;min-width:38%;text-align:center;margin-top:5%;margin-left:2%;line-height:90%;border-radius:.4rem;background-color:rgba(255,255,255,.744);box-shadow:0px 3px 3px 0 rgba(93,92,92,.5);cursor:pointer;position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center}.calc-move-container:hover{transform:scale(1.05);transition:.4s ease-in-out}.calc-move-container h4{position:relative}.calc-fallback-friendly{position:absolute;left:27.5%;margin-top:1.5%;color:gray}.calc-fallback-enemy{position:absolute;left:55%;margin-top:1.5%;color:gray}.category-icon-small{height:30%;width:30%;position:absolute;top:70%;left:70%}.calc-super-effective{width:20%;position:relative;left:-38%;top:53%;white-space:nowrap;font-size:73%}.calc-move-basepower{height:80%;width:5%;margin-left:-11%;font-family:"Gill Sans",sans-serif;font-weight:300}.calc-result{width:20%;margin-left:14%;margin-top:8%;font-size:100%;line-height:100%;font-family:"Gill Sans",sans-serif;font-weight:300;animation:rollout 1s}.calc-modal{height:40%;width:20%;background-color:#ececec;position:absolute;top:0%;cursor:pointer;overflow-y:scroll;border-radius:.4rem;z-index:10}.calc-modal-move_1{top:-3.5%}.calc-modal-move_2{top:12.1%}.calc-modal-move_3{top:28%}.calc-modal-move_4{top:43.5%}.calc-modal-search{height:13%;width:80%;margin-top:1%;margin-left:3%;position:absolute;border-radius:.3rem}.calc-search-glass{height:10%;width:7%;position:relative;top:4%;left:74%}.calc-modal-option-container{height:100%;margin-top:3%}.calc-modal-option{height:20%;display:flex;align-items:center;justify-content:left;z-index:3}.calc-modal-option>*{margin:0 auto}.calc-modal-option:hover{background-color:rgba(128,128,128,.633)}.calc-modal-option h4{margin-left:4%;font-size:85%;z-index:3}.calc-modal-option span{color:red}.calc-modal .category-symbol{position:absolute;left:45%;z-index:2}.calc-modal .type-symbol{position:absolute;left:65%}.calc-modal .basepower{position:absolute;left:80%}.calc-move-container-bug{background-color:rgba(164,174,63,.55)}.calc-move-container-dark{background-color:rgba(84,69,58,.55)}.calc-move-container-dragon{background-color:rgba(98,63,238,.55)}.calc-move-container-electric{background-color:rgba(240,204,79,.55)}.calc-move-container-fairy{background-color:rgba(231,128,249,.55)}.calc-move-container-fighting{background-color:rgba(170,58,47,.55)}.calc-move-container-fire{background-color:rgba(220,125,57,.55)}.calc-move-container-flying{background-color:rgba(169,143,243,.55)}.calc-move-container-ghost{background-color:rgba(115,87,151,.55)}.calc-move-container-grass{background-color:rgba(122,199,76,.55)}.calc-move-container-ground{background-color:rgba(226,191,101,.55)}.calc-move-container-ice{background-color:rgba(150,217,214,.55)}.calc-move-container-normal{background-color:rgba(168,167,122,.55)}.calc-move-container-poison{background-color:rgba(163,62,161,.55)}.calc-move-container-psychic{background-color:rgba(249,85,135,.55)}.calc-move-container-rock{background-color:rgba(182,161,54,.55)}.calc-move-container-steel{background-color:rgba(183,183,206,.55)}.calc-move-container-water{background-color:rgba(99,144,240,.55)}.speed-tier-container{height:95%;width:95%;margin:0 auto;margin-top:.3%;display:flex;flex-direction:column;justify-content:center;align-items:center;background-color:#818a98}.speed-order-container{height:27%;width:85.5%;box-shadow:3px 3px 13px 1px #677070;border-radius:3rem;border:1px #4e4e4e dotted;margin-left:3%;display:flex;justify-content:left;align-items:center;position:relative}.team-speed-container{height:65%;width:80%;margin-top:2%;border-radius:.4rem;display:flex;justify-content:center;align-items:center;font-family:"Gill Sans",sans-serif;font-size:80%;font-weight:300}.speed-tier-order-label{position:absolute;left:-10%;top:66%;font-size:40%}.speed-order-member{height:100%;width:8%;margin-left:.5%;display:flex;flex-direction:column;opacity:0;animation:fadeInSpeedTier .4s ease-in;animation-fill-mode:forwards}.speed-tier-order-sprite{height:65%;min-height:65%;width:88%;margin-top:9%;padding:4%;cursor:pointer}.speed-order-member-yourTeam{background-color:rgba(186,220,216,.8);padding-bottom:-30px;border-radius:1.5rem;box-shadow:3px 3px 4px 3px rgba(85,99,99,.705)}.speed-order-member-enemyTeam{background-color:rgba(220,164,161,.8);padding-bottom:-30px;border-radius:1.5rem;box-shadow:3px 3px 4px 3px rgba(102,90,92,.705)}.speed-order-container h4{height:15%;width:30%;line-height:100%;margin:0 auto;margin-top:8%;font-size:50%;border-radius:.3rem;box-shadow:1px 1px 2px 1px rgba(84,89,89,.705)}.friendly-speed-tier{width:30%;height:95%;display:flex;flex-direction:column;justify-content:left;margin-right:1%;border-radius:.5rem;border:1px #525252 dotted;box-shadow:3px 3px 13px 1px #677070}.friendly-speed-tier img{transform:scaleX(-1)}.friendly-speed-tier .speed-tier-row h4{margin-right:5%}.enemy-speed-tier{width:30%;height:95%;display:flex;flex-direction:column;justify-content:left;margin-left:1%;border-radius:.5rem;border:1px #525252 dotted;box-shadow:3px 3px 13px 1px #677070}.enemy-speed-tier .speed-tier-row h4{margin-left:5%}.speed-tier-row{height:14.9%;display:flex;justify-content:space-between;align-items:center;font-size:50%;margin-top:1%;border-radius:.3rem;border:1px #525252 dotted;box-shadow:3px 1px 3px 0px #767979}.speed-tier-range-sprite{height:100%;width:18%;margin:5%}.speed-tier-row h4{margin:0 auto;font-weight:300}.speed-order-container>:nth-child(2){-webkit-animation-delay:0s;animation-delay:0s}.speed-order-container>:nth-child(3){-webkit-animation-delay:.08s;animation-delay:.08s}.speed-order-container>:nth-child(4){-webkit-animation-delay:.16s;animation-delay:.16s}.speed-order-container>:nth-child(5){-webkit-animation-delay:.24s;animation-delay:.24s}.speed-order-container>:nth-child(6){-webkit-animation-delay:.32s;animation-delay:.32s}.speed-order-container>:nth-child(7){-webkit-animation-delay:.4s;animation-delay:.4s}.speed-order-container>:nth-child(8){-webkit-animation-delay:.48s;animation-delay:.48s}.speed-order-container>:nth-child(9){-webkit-animation-delay:.56s;animation-delay:.56s}.speed-order-container>:nth-child(10){-webkit-animation-delay:.64s;animation-delay:.64s}.speed-order-container>:nth-child(11){-webkit-animation-delay:.72s;animation-delay:.72s}.speed-order-container>:nth-child(12){-webkit-animation-delay:.8s;animation-delay:.8s}.speed-order-container>:nth-child(13){-webkit-animation-delay:.88s;animation-delay:.88s}@keyframes fadeInSpeedTier{0%{opacity:0;transform:translateX(15px);visibility:hidden}25%{transform:translateX(-15px)}75%{opacity:.7}100%{visibility:visible;opacity:1}}.special-moves-container{height:95%;width:95%;margin:0 auto;margin-top:.3%;display:flex;justify-content:center;align-items:center;background-color:#818a98;font-size:33%}.special-move-container h4{margin:0 auto}.friendly-special-moves-container{width:45%;height:90%;display:flex;flex-wrap:wrap;justify-content:center;align-items:center;margin-right:2%}.enemy-special-moves-container{width:45%;height:90%;display:flex;flex-wrap:wrap;justify-content:center;align-items:center;margin-left:2%}.special-move-container{flex:0 0 23%;height:45%;border-radius:.3rem;border:1px #626262 dotted;text-align:center;position:relative;margin:.2%}.special-category-label{background-color:#7d8083}.special-move-inner{height:88%;width:100%;overflow-y:auto;font-size:90%}.special-move-category-counter{margin:0 auto;position:absolute;top:100%;left:45%}.counter-friendly{color:#8ec6bf}.counter-enemy{color:#d89996}.special-move-row{width:95%;height:30%;display:flex;justify-content:left;align-items:center;position:relative}.special-moves-sprite{height:70%;min-height:70%;width:40%;margin-left:2%}.special-move-row h4{line-height:100%;position:absolute;text-align:left;left:50%}.footer-container{height:15%;background-color:#e4dfcf;display:flex;flex-direction:column;justify-content:right}.footer-container>*{margin:0 auto}.footer-container h4{font-size:50%}.footer-container h5{font-size:40%}.footer-container a{font-size:40%}',""]);const p=f},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var s=e(t);return t[2]?"@media ".concat(t[2]," {").concat(s,"}"):s})).join("")},t.i=function(e,s,a){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(a)for(var r=0;r<this.length;r++){var o=this[r][0];null!=o&&(i[o]=!0)}for(var n=0;n<e.length;n++){var l=[].concat(e[n]);a&&i[l[0]]||(s&&(l[2]?l[2]="".concat(s," and ").concat(l[2]):l[2]=s),t.push(l))}},t}},1667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},2413:(e,t,s)=>{"use strict";s.d(t,{Z:()=>a});const a=s.p+"99e228bcdd8f6f8b7449497f34781222.jpeg"},9122:(e,t,s)=>{"use strict";s.d(t,{Z:()=>a});const a=s.p+"7898ff0eead92fe18b8c2f83906a22b1.jpeg"},8679:(e,t,s)=>{"use strict";var a=s(1296),i={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},r={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},n={};function l(e){return a.isMemo(e)?o:n[e.$$typeof]||i}n[a.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},n[a.Memo]=o;var f=Object.defineProperty,c=Object.getOwnPropertyNames,u=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,g=Object.getPrototypeOf,d=Object.prototype;e.exports=function e(t,s,a){if("string"!=typeof s){if(d){var i=g(s);i&&i!==d&&e(t,i,a)}var o=c(s);u&&(o=o.concat(u(s)));for(var n=l(t),h=l(s),m=0;m<o.length;++m){var y=o[m];if(!(r[y]||a&&a[y]||h&&h[y]||n&&n[y])){var v=p(s,y);try{f(t,y,v)}catch(e){}}}}return t}},6103:(e,t)=>{"use strict";var s="function"==typeof Symbol&&Symbol.for,a=s?Symbol.for("react.element"):60103,i=s?Symbol.for("react.portal"):60106,r=s?Symbol.for("react.fragment"):60107,o=s?Symbol.for("react.strict_mode"):60108,n=s?Symbol.for("react.profiler"):60114,l=s?Symbol.for("react.provider"):60109,f=s?Symbol.for("react.context"):60110,c=s?Symbol.for("react.async_mode"):60111,u=s?Symbol.for("react.concurrent_mode"):60111,p=s?Symbol.for("react.forward_ref"):60112,g=s?Symbol.for("react.suspense"):60113,d=s?Symbol.for("react.suspense_list"):60120,h=s?Symbol.for("react.memo"):60115,m=s?Symbol.for("react.lazy"):60116,y=s?Symbol.for("react.block"):60121,v=s?Symbol.for("react.fundamental"):60117,b=s?Symbol.for("react.responder"):60118,P=s?Symbol.for("react.scope"):60119;function w(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case a:switch(e=e.type){case c:case u:case r:case n:case o:case g:return e;default:switch(e=e&&e.$$typeof){case f:case p:case m:case h:case l:return e;default:return t}}case i:return t}}}function S(e){return w(e)===u}t.AsyncMode=c,t.ConcurrentMode=u,t.ContextConsumer=f,t.ContextProvider=l,t.Element=a,t.ForwardRef=p,t.Fragment=r,t.Lazy=m,t.Memo=h,t.Portal=i,t.Profiler=n,t.StrictMode=o,t.Suspense=g,t.isAsyncMode=function(e){return S(e)||w(e)===c},t.isConcurrentMode=S,t.isContextConsumer=function(e){return w(e)===f},t.isContextProvider=function(e){return w(e)===l},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===a},t.isForwardRef=function(e){return w(e)===p},t.isFragment=function(e){return w(e)===r},t.isLazy=function(e){return w(e)===m},t.isMemo=function(e){return w(e)===h},t.isPortal=function(e){return w(e)===i},t.isProfiler=function(e){return w(e)===n},t.isStrictMode=function(e){return w(e)===o},t.isSuspense=function(e){return w(e)===g},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===r||e===u||e===n||e===o||e===g||e===d||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===h||e.$$typeof===l||e.$$typeof===f||e.$$typeof===p||e.$$typeof===v||e.$$typeof===b||e.$$typeof===P||e.$$typeof===y)},t.typeOf=w},1296:(e,t,s)=>{"use strict";e.exports=s(6103)},3300:(e,t,s)=>{"use strict";var a=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==s.g)return s.g;throw new Error("unable to locate global object")}();e.exports=t=a.fetch,a.fetch&&(t.default=a.fetch.bind(a)),t.Headers=a.Headers,t.Request=a.Request,t.Response=a.Response},41:e=>{e.exports={noEffect:0,weak:.25,notVeryEffective:.5,normal:1,superEffective:2,ultra:4}},3621:(e,t,s)=>{const{types:a}=s(200),i=s(3322),{noEffect:r,weak:o,notVeryEffective:n,normal:l,superEffective:f,ultra:c}=s(41),u=a.reduce(((e,t)=>Object.assign({},e,{[t]:l})),{}),p=a.reduce(((e,t)=>Object.assign({},e,{[t]:u})),{}),g=a.reduce(((e,t)=>Object.assign({},e,{[t]:Object.assign({},p[t],i[t])})),{}),d=e=>a.reduce(((t,s)=>Object.assign({},t,{[s]:g[s][e]})),{}),h=a.reduce(((e,t)=>Object.assign({},e,{[t]:d(t)})),{}),m=(e,t)=>{const s=e<t?e:t,a=e>t?e:t;if(0===Math.abs(e-t))switch(s){case f:return c;case n:return o;default:return s}if(a===f)switch(s){case n:return l;case l:return f}switch(s){case r:return r;case n:return n}},y=(e,t)=>{if(e&&!t)return h[e];const s=y(e),i=y(t);return a.reduce(((e,t)=>{const a=s[t],r=i[t];return Object.assign({},e,{[t]:m(a,r)})}),{})};e.exports.M3=(e,t)=>{return(s=[e,t],e=>{if(!s)throw new TypeError("Pokémon Types: missing argument");const t=e=>{if("string"!=typeof e)throw new TypeError('Pokémon Types: The given type "'+e+'" is not a string');const t=e.toLowerCase();if(-1===a.indexOf(t))throw new Error('Pokémon Types: the given type "'+e+'" does not exist!');return t};if(Array.isArray(s)){const a=s.filter((e=>e)).map(t);if(!a.length)throw new TypeError("Pokémon Types: invalid arguments");return e(...a)}return e(t(s))})(y);var s},s(41)},3322:(e,t,s)=>{const{typesObject:a}=s(200),{normal:i,fire:r,water:o,electric:n,grass:l,ice:f,fighting:c,poison:u,ground:p,flying:g,psychic:d,bug:h,rock:m,ghost:y,dragon:v,dark:b,steel:P,fairy:w}=a,{noEffect:S,notVeryEffective:k,superEffective:T}=s(41);e.exports={[i]:{[m]:k,[P]:k,[y]:S},[r]:{[r]:k,[o]:k,[l]:T,[f]:T,[h]:T,[m]:k,[v]:k,[P]:T},[o]:{[r]:T,[o]:k,[l]:k,[p]:T,[m]:T,[v]:k},[n]:{[o]:T,[n]:k,[l]:k,[p]:S,[g]:T,[v]:k},[l]:{[r]:k,[o]:T,[l]:k,[u]:k,[p]:T,[g]:k,[h]:k,[m]:T,[v]:k,[P]:k},[f]:{[r]:k,[o]:k,[l]:T,[f]:k,[p]:T,[g]:T,[v]:T,[P]:k},[c]:{[i]:T,[f]:T,[u]:k,[g]:k,[d]:k,[h]:k,[m]:T,[y]:S,[b]:T,[P]:T,[w]:k},[u]:{[l]:T,[u]:k,[p]:k,[m]:k,[y]:k,[P]:S,[w]:T},[p]:{[r]:T,[n]:T,[l]:k,[u]:T,[g]:S,[h]:k,[m]:T,[P]:T},[g]:{[n]:k,[l]:T,[c]:T,[h]:T,[m]:k,[P]:k},[d]:{[c]:T,[u]:T,[d]:k,[b]:S,[P]:k},[h]:{[r]:k,[l]:T,[c]:k,[u]:k,[g]:k,[d]:T,[y]:k,[b]:T,[P]:k,[w]:k},[m]:{[r]:T,[f]:T,[c]:k,[p]:k,[g]:T,[h]:T,[P]:k},[y]:{[i]:S,[d]:T,[y]:T,[b]:k},[v]:{[v]:T,[P]:k,[w]:S},[b]:{[c]:k,[d]:T,[y]:T,[b]:k,[w]:k},[P]:{[r]:k,[o]:k,[n]:k,[f]:T,[m]:T,[P]:k,[w]:T},[w]:{[r]:k,[c]:T,[u]:k,[v]:T,[b]:T,[P]:k}}},200:e=>{const t=["normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy"],s=t.reduce(((e,t)=>Object.assign({},e,{[t]:t})),{});e.exports.types=t,e.exports.typesObject=s},5226:(e,t,s)=>{const a=s(8169);function i(e,t,s,a){return 1===t?1:Math.floor((e+2*t+s/4)*a/100+10+a)}function r(e,t,s=0,a=1,i=1){let r=Math.floor((e+2*t+s/4)*a/100+5);return Math.floor(r*i)}t.getNatureNames=a.names,t.getNatureValue=a.getNatureValue,t.getNatureDatas=a.data,t.calHpStats=i,t.calUnhpStats=r,t.calAllStats=function(e,t,s,o=1,n=[1,1,1,1,1]){let l=[];l.push(i(e[0],t[0],s[0],o)),"string"==typeof n&&(n=a.getNatureValue(n));for(let a=1;a<6;a++)l.push(r(e[a],t[a],s[a],o,n[a-1]));return l}},8169:(e,t)=>{const s={hardy:[1,1,1,1,1],lonely:[1.1,.9,1,1,1],adamant:[1.1,1,.9,1,1],naughty:[1.1,1,1,.9,1],brave:[1.1,1,1,1,.9],bold:[.9,1.1,1,1,1],docile:[1,1,1,1,1],impish:[1,1.1,.9,1,1],lax:[1,1.1,1,.9,1],relaxed:[1,1.1,1,1,.9],modest:[.9,1,1.1,1,1],mild:[1,.9,1.1,1,1],bashful:[1,1,1,1,1],rash:[1,1,1.1,.9,1],quiet:[1,1,1.1,1,.9],calm:[.9,1,1,1.1,1],gentle:[1,.9,1,1.1,1],careful:[1,1,.9,1.1,1],quirky:[1,1,1,1,1],sassy:[1,1,1,1.1,.9],timid:[.9,1,1,1,1.1],hasty:[1,.9,1,1,1.1],jolly:[1,1,.9,1,1.1],naive:[1,1,1,.9,1.1],serious:[1,1,1,1,1]};t.data=s,t.names=Object.keys(s),t.getNatureValue=function(e){if("string"==typeof e){if(e=e.toLowerCase(),s[e])return s[e];throw new Error("The nature is a invalid Pokémon nature.")}}},4448:(e,t,s)=>{"use strict";var a=s(7294),i=s(3840);function r(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,s=1;s<arguments.length;s++)t+="&args[]="+encodeURIComponent(arguments[s]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,n={};function l(e,t){f(e,t),f(e+"Capture",t)}function f(e,t){for(n[e]=t,e=0;e<t.length;e++)o.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),u=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,g={},d={};function h(e,t,s,a,i,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=i,this.mustUseProperty=s,this.propertyName=e,this.type=t,this.sanitizeURL=r,this.removeEmptyString=o}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new h(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function b(e,t,s,a){var i=m.hasOwnProperty(t)?m[t]:null;(null!==i?0!==i.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,s,a){if(null==t||function(e,t,s,a){if(null!==s&&0===s.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==s?!s.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,s,a))return!0;if(a)return!1;if(null!==s)switch(s.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,s,i,a)&&(s=null),a||null===i?function(e){return!!u.call(d,e)||!u.call(g,e)&&(p.test(e)?d[e]=!0:(g[e]=!0,!1))}(t)&&(null===s?e.removeAttribute(t):e.setAttribute(t,""+s)):i.mustUseProperty?e[i.propertyName]=null===s?3!==i.type&&"":s:(t=i.attributeName,a=i.attributeNamespace,null===s?e.removeAttribute(t):(s=3===(i=i.type)||4===i&&!0===s?"":""+s,a?e.setAttributeNS(a,t,s):e.setAttribute(t,s))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,v);m[t]=new h(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,v);m[t]=new h(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,v);m[t]=new h(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var P=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),S=Symbol.for("react.portal"),k=Symbol.for("react.fragment"),T=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),M=Symbol.for("react.provider"),D=Symbol.for("react.context"),A=Symbol.for("react.forward_ref"),B=Symbol.for("react.suspense"),O=Symbol.for("react.suspense_list"),C=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var N=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var E=Symbol.iterator;function G(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=E&&e[E]||e["@@iterator"])?e:null}var I,z=Object.assign;function R(e){if(void 0===I)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);I=t&&t[1]||""}return"\n"+I+e}var H=!1;function _(e,t){if(!e||H)return"";H=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var a=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){a=e}e.call(t.prototype)}else{try{throw Error()}catch(e){a=e}e()}}catch(t){if(t&&a&&"string"==typeof t.stack){for(var i=t.stack.split("\n"),r=a.stack.split("\n"),o=i.length-1,n=r.length-1;1<=o&&0<=n&&i[o]!==r[n];)n--;for(;1<=o&&0<=n;o--,n--)if(i[o]!==r[n]){if(1!==o||1!==n)do{if(o--,0>--n||i[o]!==r[n]){var l="\n"+i[o].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=o&&0<=n);break}}}finally{H=!1,Error.prepareStackTrace=s}return(e=e?e.displayName||e.name:"")?R(e):""}function L(e){switch(e.tag){case 5:return R(e.type);case 16:return R("Lazy");case 13:return R("Suspense");case 19:return R("SuspenseList");case 0:case 2:case 15:return _(e.type,!1);case 11:return _(e.type.render,!1);case 1:return _(e.type,!0);default:return""}}function W(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case k:return"Fragment";case S:return"Portal";case x:return"Profiler";case T:return"StrictMode";case B:return"Suspense";case O:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case D:return(e.displayName||"Context")+".Consumer";case M:return(e._context.displayName||"Context")+".Provider";case A:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case C:return null!==(t=e.displayName||null)?t:W(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return W(e(t))}catch(e){}}return null}function Z(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return W(t);case 8:return t===T?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function U(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",s=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==s&&"function"==typeof s.get&&"function"==typeof s.set){var i=s.get,r=s.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){a=""+e,r.call(this,e)}}),Object.defineProperty(e,t,{enumerable:s.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function V(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var s=t.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==s&&(t.setValue(e),!0)}function q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function $(e,t){var s=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=s?s:e._wrapperState.initialChecked})}function Y(e,t){var s=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;s=U(null!=t.value?t.value:s),e._wrapperState={initialChecked:a,initialValue:s,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function J(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function Q(e,t){J(e,t);var s=U(t.value),a=t.type;if(null!=s)"number"===a?(0===s&&""===e.value||e.value!=s)&&(e.value=""+s):e.value!==""+s&&(e.value=""+s);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,s):t.hasOwnProperty("defaultValue")&&ee(e,t.type,U(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function X(e,t,s){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,s||t===e.value||(e.value=t),e.defaultValue=t}""!==(s=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==s&&(e.name=s)}function ee(e,t,s){"number"===t&&q(e.ownerDocument)===e||(null==s?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+s&&(e.defaultValue=""+s))}var te=Array.isArray;function se(e,t,s,a){if(e=e.options,t){t={};for(var i=0;i<s.length;i++)t["$"+s[i]]=!0;for(s=0;s<e.length;s++)i=t.hasOwnProperty("$"+e[s].value),e[s].selected!==i&&(e[s].selected=i),i&&a&&(e[s].defaultSelected=!0)}else{for(s=""+U(s),t=null,i=0;i<e.length;i++){if(e[i].value===s)return e[i].selected=!0,void(a&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(r(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ie(e,t){var s=t.value;if(null==s){if(s=t.children,t=t.defaultValue,null!=s){if(null!=t)throw Error(r(92));if(te(s)){if(1<s.length)throw Error(r(93));s=s[0]}t=s}null==t&&(t=""),s=t}e._wrapperState={initialValue:U(s)}}function re(e,t){var s=U(t.value),a=U(t.defaultValue);null!=s&&((s=""+s)!==e.value&&(e.value=s),null==t.defaultValue&&e.defaultValue!==s&&(e.defaultValue=s)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ne(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ne(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var fe,ce,ue=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((fe=fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,s,a){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function pe(e,t){if(t){var s=e.firstChild;if(s&&s===e.lastChild&&3===s.nodeType)return void(s.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},de=["Webkit","ms","Moz","O"];function he(e,t,s){return null==t||"boolean"==typeof t||""===t?"":s||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function me(e,t){for(var s in e=e.style,t)if(t.hasOwnProperty(s)){var a=0===s.indexOf("--"),i=he(s,t[s],a);"float"===s&&(s="cssFloat"),a?e.setProperty(s,i):e[s]=i}}Object.keys(ge).forEach((function(e){de.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var ye=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(r(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(r(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(r(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(r(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Pe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,ke=null,Te=null;function xe(e){if(e=vi(e)){if("function"!=typeof Se)throw Error(r(280));var t=e.stateNode;t&&(t=Pi(t),Se(e.stateNode,e.type,t))}}function Me(e){ke?Te?Te.push(e):Te=[e]:ke=e}function De(){if(ke){var e=ke,t=Te;if(Te=ke=null,xe(e),t)for(e=0;e<t.length;e++)xe(t[e])}}function Ae(e,t){return e(t)}function Be(){}var Oe=!1;function Ce(e,t,s){if(Oe)return e(t,s);Oe=!0;try{return Ae(e,t,s)}finally{Oe=!1,(null!==ke||null!==Te)&&(Be(),De())}}function Fe(e,t){var s=e.stateNode;if(null===s)return null;var a=Pi(s);if(null===a)return null;s=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(s&&"function"!=typeof s)throw Error(r(231,t,typeof s));return s}var Ne=!1;if(c)try{var Ee={};Object.defineProperty(Ee,"passive",{get:function(){Ne=!0}}),window.addEventListener("test",Ee,Ee),window.removeEventListener("test",Ee,Ee)}catch(ce){Ne=!1}function Ge(e,t,s,a,i,r,o,n,l){var f=Array.prototype.slice.call(arguments,3);try{t.apply(s,f)}catch(e){this.onError(e)}}var Ie=!1,ze=null,Re=!1,He=null,_e={onError:function(e){Ie=!0,ze=e}};function Le(e,t,s,a,i,r,o,n,l){Ie=!1,ze=null,Ge.apply(_e,arguments)}function We(e){var t=e,s=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(s=t.return),e=t.return}while(e)}return 3===t.tag?s:null}function Ze(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ue(e){if(We(e)!==e)throw Error(r(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=We(e)))throw Error(r(188));return t!==e?null:e}for(var s=e,a=t;;){var i=s.return;if(null===i)break;var o=i.alternate;if(null===o){if(null!==(a=i.return)){s=a;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===s)return Ue(i),e;if(o===a)return Ue(i),t;o=o.sibling}throw Error(r(188))}if(s.return!==a.return)s=i,a=o;else{for(var n=!1,l=i.child;l;){if(l===s){n=!0,s=i,a=o;break}if(l===a){n=!0,a=i,s=o;break}l=l.sibling}if(!n){for(l=o.child;l;){if(l===s){n=!0,s=o,a=i;break}if(l===a){n=!0,a=o,s=i;break}l=l.sibling}if(!n)throw Error(r(189))}}if(s.alternate!==a)throw Error(r(190))}if(3!==s.tag)throw Error(r(188));return s.stateNode.current===s?e:t}(e))?Ke(e):null}function Ke(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ke(e);if(null!==t)return t;e=e.sibling}return null}var Ve=i.unstable_scheduleCallback,qe=i.unstable_cancelCallback,$e=i.unstable_shouldYield,Ye=i.unstable_requestPaint,Je=i.unstable_now,Qe=i.unstable_getCurrentPriorityLevel,Xe=i.unstable_ImmediatePriority,et=i.unstable_UserBlockingPriority,tt=i.unstable_NormalPriority,st=i.unstable_LowPriority,at=i.unstable_IdlePriority,it=null,rt=null,ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(nt(e)/lt|0)|0},nt=Math.log,lt=Math.LN2,ft=64,ct=4194304;function ut(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var s=e.pendingLanes;if(0===s)return 0;var a=0,i=e.suspendedLanes,r=e.pingedLanes,o=268435455&s;if(0!==o){var n=o&~i;0!==n?a=ut(n):0!=(r&=o)&&(a=ut(r))}else 0!=(o=s&~i)?a=ut(o):0!==r&&(a=ut(r));if(0===a)return 0;if(0!==t&&t!==a&&0==(t&i)&&((i=a&-a)>=(r=t&-t)||16===i&&0!=(4194240&r)))return t;if(0!=(4&a)&&(a|=16&s),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)i=1<<(s=31-ot(t)),a|=e[s],t&=~i;return a}function gt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(){var e=ft;return 0==(4194240&(ft<<=1))&&(ft=64),e}function mt(e){for(var t=[],s=0;31>s;s++)t.push(e);return t}function yt(e,t,s){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=s}function vt(e,t){var s=e.entangledLanes|=t;for(e=e.entanglements;s;){var a=31-ot(s),i=1<<a;i&t|e[a]&t&&(e[a]|=t),s&=~i}}var bt=0;function Pt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var wt,St,kt,Tt,xt,Mt=!1,Dt=[],At=null,Bt=null,Ot=null,Ct=new Map,Ft=new Map,Nt=[],Et="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Gt(e,t){switch(e){case"focusin":case"focusout":At=null;break;case"dragenter":case"dragleave":Bt=null;break;case"mouseover":case"mouseout":Ot=null;break;case"pointerover":case"pointerout":Ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function It(e,t,s,a,i,r){return null===e||e.nativeEvent!==r?(e={blockedOn:t,domEventName:s,eventSystemFlags:a,nativeEvent:r,targetContainers:[i]},null!==t&&null!==(t=vi(t))&&St(t),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==i&&-1===t.indexOf(i)&&t.push(i),e)}function zt(e){var t=yi(e.target);if(null!==t){var s=We(t);if(null!==s)if(13===(t=s.tag)){if(null!==(t=Ze(s)))return e.blockedOn=t,void xt(e.priority,(function(){kt(s)}))}else if(3===t&&s.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===s.tag?s.stateNode.containerInfo:null)}e.blockedOn=null}function Rt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var s=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==s)return null!==(t=vi(s))&&St(t),e.blockedOn=s,!1;var a=new(s=e.nativeEvent).constructor(s.type,s);Pe=a,s.target.dispatchEvent(a),Pe=null,t.shift()}return!0}function Ht(e,t,s){Rt(e)&&s.delete(t)}function _t(){Mt=!1,null!==At&&Rt(At)&&(At=null),null!==Bt&&Rt(Bt)&&(Bt=null),null!==Ot&&Rt(Ot)&&(Ot=null),Ct.forEach(Ht),Ft.forEach(Ht)}function Lt(e,t){e.blockedOn===t&&(e.blockedOn=null,Mt||(Mt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,_t)))}function Wt(e){function t(t){return Lt(t,e)}if(0<Dt.length){Lt(Dt[0],e);for(var s=1;s<Dt.length;s++){var a=Dt[s];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==At&&Lt(At,e),null!==Bt&&Lt(Bt,e),null!==Ot&&Lt(Ot,e),Ct.forEach(t),Ft.forEach(t),s=0;s<Nt.length;s++)(a=Nt[s]).blockedOn===e&&(a.blockedOn=null);for(;0<Nt.length&&null===(s=Nt[0]).blockedOn;)zt(s),null===s.blockedOn&&Nt.shift()}var Zt=P.ReactCurrentBatchConfig,Ut=!0;function jt(e,t,s,a){var i=bt,r=Zt.transition;Zt.transition=null;try{bt=1,Vt(e,t,s,a)}finally{bt=i,Zt.transition=r}}function Kt(e,t,s,a){var i=bt,r=Zt.transition;Zt.transition=null;try{bt=4,Vt(e,t,s,a)}finally{bt=i,Zt.transition=r}}function Vt(e,t,s,a){if(Ut){var i=$t(e,t,s,a);if(null===i)Za(e,t,a,qt,s),Gt(e,a);else if(function(e,t,s,a,i){switch(t){case"focusin":return At=It(At,e,t,s,a,i),!0;case"dragenter":return Bt=It(Bt,e,t,s,a,i),!0;case"mouseover":return Ot=It(Ot,e,t,s,a,i),!0;case"pointerover":var r=i.pointerId;return Ct.set(r,It(Ct.get(r)||null,e,t,s,a,i)),!0;case"gotpointercapture":return r=i.pointerId,Ft.set(r,It(Ft.get(r)||null,e,t,s,a,i)),!0}return!1}(i,e,t,s,a))a.stopPropagation();else if(Gt(e,a),4&t&&-1<Et.indexOf(e)){for(;null!==i;){var r=vi(i);if(null!==r&&wt(r),null===(r=$t(e,t,s,a))&&Za(e,t,a,qt,s),r===i)break;i=r}null!==i&&a.stopPropagation()}else Za(e,t,a,null,s)}}var qt=null;function $t(e,t,s,a){if(qt=null,null!==(e=yi(e=we(a))))if(null===(t=We(e)))e=null;else if(13===(s=t.tag)){if(null!==(e=Ze(t)))return e;e=null}else if(3===s){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return qt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Qe()){case Xe:return 1;case et:return 4;case tt:case st:return 16;case at:return 536870912;default:return 16}default:return 16}}var Jt=null,Qt=null,Xt=null;function es(){if(Xt)return Xt;var e,t,s=Qt,a=s.length,i="value"in Jt?Jt.value:Jt.textContent,r=i.length;for(e=0;e<a&&s[e]===i[e];e++);var o=a-e;for(t=1;t<=o&&s[a-t]===i[r-t];t++);return Xt=i.slice(e,1<t?1-t:void 0)}function ts(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function ss(){return!0}function as(){return!1}function is(e){function t(t,s,a,i,r){for(var o in this._reactName=t,this._targetInst=a,this.type=s,this.nativeEvent=i,this.target=r,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(i):i[o]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?ss:as,this.isPropagationStopped=as,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ss)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ss)},persist:function(){},isPersistent:ss}),t}var rs,os,ns,ls={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fs=is(ls),cs=z({},ls,{view:0,detail:0}),us=is(cs),ps=z({},cs,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Ts,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ns&&(ns&&"mousemove"===e.type?(rs=e.screenX-ns.screenX,os=e.screenY-ns.screenY):os=rs=0,ns=e),rs)},movementY:function(e){return"movementY"in e?e.movementY:os}}),gs=is(ps),ds=is(z({},ps,{dataTransfer:0})),hs=is(z({},cs,{relatedTarget:0})),ms=is(z({},ls,{animationName:0,elapsedTime:0,pseudoElement:0})),ys=z({},ls,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vs=is(ys),bs=is(z({},ls,{data:0})),Ps={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ws={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ss={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function ks(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ss[e])&&!!t[e]}function Ts(){return ks}var xs=z({},cs,{key:function(e){if(e.key){var t=Ps[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ts(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ws[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Ts,charCode:function(e){return"keypress"===e.type?ts(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ts(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ms=is(xs),Ds=is(z({},ps,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),As=is(z({},cs,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Ts})),Bs=is(z({},ls,{propertyName:0,elapsedTime:0,pseudoElement:0})),Os=z({},ps,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Cs=is(Os),Fs=[9,13,27,32],Ns=c&&"CompositionEvent"in window,Es=null;c&&"documentMode"in document&&(Es=document.documentMode);var Gs=c&&"TextEvent"in window&&!Es,Is=c&&(!Ns||Es&&8<Es&&11>=Es),zs=String.fromCharCode(32),Rs=!1;function Hs(e,t){switch(e){case"keyup":return-1!==Fs.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function _s(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ls=!1,Ws={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Zs(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ws[e.type]:"textarea"===t}function Us(e,t,s,a){Me(a),0<(t=ja(t,"onChange")).length&&(s=new fs("onChange","change",null,s,a),e.push({event:s,listeners:t}))}var js=null,Ks=null;function Vs(e){za(e,0)}function qs(e){if(V(bi(e)))return e}function $s(e,t){if("change"===e)return t}var Ys=!1;if(c){var Js;if(c){var Qs="oninput"in document;if(!Qs){var Xs=document.createElement("div");Xs.setAttribute("oninput","return;"),Qs="function"==typeof Xs.oninput}Js=Qs}else Js=!1;Ys=Js&&(!document.documentMode||9<document.documentMode)}function ea(){js&&(js.detachEvent("onpropertychange",ta),Ks=js=null)}function ta(e){if("value"===e.propertyName&&qs(Ks)){var t=[];Us(t,Ks,e,we(e)),Ce(Vs,t)}}function sa(e,t,s){"focusin"===e?(ea(),Ks=s,(js=t).attachEvent("onpropertychange",ta)):"focusout"===e&&ea()}function aa(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return qs(Ks)}function ia(e,t){if("click"===e)return qs(t)}function ra(e,t){if("input"===e||"change"===e)return qs(t)}var oa="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function na(e,t){if(oa(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var s=Object.keys(e),a=Object.keys(t);if(s.length!==a.length)return!1;for(a=0;a<s.length;a++){var i=s[a];if(!u.call(t,i)||!oa(e[i],t[i]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fa(e,t){var s,a=la(e);for(e=0;a;){if(3===a.nodeType){if(s=e+a.textContent.length,e<=t&&s>=t)return{node:a,offset:t-e};e=s}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function ca(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ca(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ua(){for(var e=window,t=q();t instanceof e.HTMLIFrameElement;){try{var s="string"==typeof t.contentWindow.location.href}catch(e){s=!1}if(!s)break;t=q((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function ga(e){var t=ua(),s=e.focusedElem,a=e.selectionRange;if(t!==s&&s&&s.ownerDocument&&ca(s.ownerDocument.documentElement,s)){if(null!==a&&pa(s))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in s)s.selectionStart=t,s.selectionEnd=Math.min(e,s.value.length);else if((e=(t=s.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var i=s.textContent.length,r=Math.min(a.start,i);a=void 0===a.end?r:Math.min(a.end,i),!e.extend&&r>a&&(i=a,a=r,r=i),i=fa(s,r);var o=fa(s,a);i&&o&&(1!==e.rangeCount||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(i.node,i.offset),e.removeAllRanges(),r>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=s;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof s.focus&&s.focus(),s=0;s<t.length;s++)(e=t[s]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var da=c&&"documentMode"in document&&11>=document.documentMode,ha=null,ma=null,ya=null,va=!1;function ba(e,t,s){var a=s.window===s?s.document:9===s.nodeType?s:s.ownerDocument;va||null==ha||ha!==q(a)||(a="selectionStart"in(a=ha)&&pa(a)?{start:a.selectionStart,end:a.selectionEnd}:{anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ya&&na(ya,a)||(ya=a,0<(a=ja(ma,"onSelect")).length&&(t=new fs("onSelect","select",null,t,s),e.push({event:t,listeners:a}),t.target=ha)))}function Pa(e,t){var s={};return s[e.toLowerCase()]=t.toLowerCase(),s["Webkit"+e]="webkit"+t,s["Moz"+e]="moz"+t,s}var wa={animationend:Pa("Animation","AnimationEnd"),animationiteration:Pa("Animation","AnimationIteration"),animationstart:Pa("Animation","AnimationStart"),transitionend:Pa("Transition","TransitionEnd")},Sa={},ka={};function Ta(e){if(Sa[e])return Sa[e];if(!wa[e])return e;var t,s=wa[e];for(t in s)if(s.hasOwnProperty(t)&&t in ka)return Sa[e]=s[t];return e}c&&(ka=document.createElement("div").style,"AnimationEvent"in window||(delete wa.animationend.animation,delete wa.animationiteration.animation,delete wa.animationstart.animation),"TransitionEvent"in window||delete wa.transitionend.transition);var xa=Ta("animationend"),Ma=Ta("animationiteration"),Da=Ta("animationstart"),Aa=Ta("transitionend"),Ba=new Map,Oa="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ca(e,t){Ba.set(e,t),l(t,[e])}for(var Fa=0;Fa<Oa.length;Fa++){var Na=Oa[Fa];Ca(Na.toLowerCase(),"on"+(Na[0].toUpperCase()+Na.slice(1)))}Ca(xa,"onAnimationEnd"),Ca(Ma,"onAnimationIteration"),Ca(Da,"onAnimationStart"),Ca("dblclick","onDoubleClick"),Ca("focusin","onFocus"),Ca("focusout","onBlur"),Ca(Aa,"onTransitionEnd"),f("onMouseEnter",["mouseout","mouseover"]),f("onMouseLeave",["mouseout","mouseover"]),f("onPointerEnter",["pointerout","pointerover"]),f("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ea="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ga=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ea));function Ia(e,t,s){var a=e.type||"unknown-event";e.currentTarget=s,function(e,t,s,a,i,o,n,l,f){if(Le.apply(this,arguments),Ie){if(!Ie)throw Error(r(198));var c=ze;Ie=!1,ze=null,Re||(Re=!0,He=c)}}(a,t,void 0,e),e.currentTarget=null}function za(e,t){t=0!=(4&t);for(var s=0;s<e.length;s++){var a=e[s],i=a.event;a=a.listeners;e:{var r=void 0;if(t)for(var o=a.length-1;0<=o;o--){var n=a[o],l=n.instance,f=n.currentTarget;if(n=n.listener,l!==r&&i.isPropagationStopped())break e;Ia(i,n,f),r=l}else for(o=0;o<a.length;o++){if(l=(n=a[o]).instance,f=n.currentTarget,n=n.listener,l!==r&&i.isPropagationStopped())break e;Ia(i,n,f),r=l}}}if(Re)throw e=He,Re=!1,He=null,e}function Ra(e,t){var s=t[di];void 0===s&&(s=t[di]=new Set);var a=e+"__bubble";s.has(a)||(Wa(t,e,2,!1),s.add(a))}function Ha(e,t,s){var a=0;t&&(a|=4),Wa(s,e,a,t)}var _a="_reactListening"+Math.random().toString(36).slice(2);function La(e){if(!e[_a]){e[_a]=!0,o.forEach((function(t){"selectionchange"!==t&&(Ga.has(t)||Ha(t,!1,e),Ha(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[_a]||(t[_a]=!0,Ha("selectionchange",!1,t))}}function Wa(e,t,s,a){switch(Yt(t)){case 1:var i=jt;break;case 4:i=Kt;break;default:i=Vt}s=i.bind(null,t,s,e),i=void 0,!Ne||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(i=!0),a?void 0!==i?e.addEventListener(t,s,{capture:!0,passive:i}):e.addEventListener(t,s,!0):void 0!==i?e.addEventListener(t,s,{passive:i}):e.addEventListener(t,s,!1)}function Za(e,t,s,a,i){var r=a;if(0==(1&t)&&0==(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var n=a.stateNode.containerInfo;if(n===i||8===n.nodeType&&n.parentNode===i)break;if(4===o)for(o=a.return;null!==o;){var l=o.tag;if((3===l||4===l)&&((l=o.stateNode.containerInfo)===i||8===l.nodeType&&l.parentNode===i))return;o=o.return}for(;null!==n;){if(null===(o=yi(n)))return;if(5===(l=o.tag)||6===l){a=r=o;continue e}n=n.parentNode}}a=a.return}Ce((function(){var a=r,i=we(s),o=[];e:{var n=Ba.get(e);if(void 0!==n){var l=fs,f=e;switch(e){case"keypress":if(0===ts(s))break e;case"keydown":case"keyup":l=Ms;break;case"focusin":f="focus",l=hs;break;case"focusout":f="blur",l=hs;break;case"beforeblur":case"afterblur":l=hs;break;case"click":if(2===s.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=gs;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=ds;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=As;break;case xa:case Ma:case Da:l=ms;break;case Aa:l=Bs;break;case"scroll":l=us;break;case"wheel":l=Cs;break;case"copy":case"cut":case"paste":l=vs;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Ds}var c=0!=(4&t),u=!c&&"scroll"===e,p=c?null!==n?n+"Capture":null:n;c=[];for(var g,d=a;null!==d;){var h=(g=d).stateNode;if(5===g.tag&&null!==h&&(g=h,null!==p&&null!=(h=Fe(d,p))&&c.push(Ua(d,h,g))),u)break;d=d.return}0<c.length&&(n=new l(n,f,null,s,i),o.push({event:n,listeners:c}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(n="mouseover"===e||"pointerover"===e)||s===Pe||!(f=s.relatedTarget||s.fromElement)||!yi(f)&&!f[gi])&&(l||n)&&(n=i.window===i?i:(n=i.ownerDocument)?n.defaultView||n.parentWindow:window,l?(l=a,null!==(f=(f=s.relatedTarget||s.toElement)?yi(f):null)&&(f!==(u=We(f))||5!==f.tag&&6!==f.tag)&&(f=null)):(l=null,f=a),l!==f)){if(c=gs,h="onMouseLeave",p="onMouseEnter",d="mouse","pointerout"!==e&&"pointerover"!==e||(c=Ds,h="onPointerLeave",p="onPointerEnter",d="pointer"),u=null==l?n:bi(l),g=null==f?n:bi(f),(n=new c(h,d+"leave",l,s,i)).target=u,n.relatedTarget=g,h=null,yi(i)===a&&((c=new c(p,d+"enter",f,s,i)).target=g,c.relatedTarget=u,h=c),u=h,l&&f)e:{for(p=f,d=0,g=c=l;g;g=Ka(g))d++;for(g=0,h=p;h;h=Ka(h))g++;for(;0<d-g;)c=Ka(c),d--;for(;0<g-d;)p=Ka(p),g--;for(;d--;){if(c===p||null!==p&&c===p.alternate)break e;c=Ka(c),p=Ka(p)}c=null}else c=null;null!==l&&Va(o,n,l,c,!1),null!==f&&null!==u&&Va(o,u,f,c,!0)}if("select"===(l=(n=a?bi(a):window).nodeName&&n.nodeName.toLowerCase())||"input"===l&&"file"===n.type)var m=$s;else if(Zs(n))if(Ys)m=ra;else{m=aa;var y=sa}else(l=n.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===n.type||"radio"===n.type)&&(m=ia);switch(m&&(m=m(e,a))?Us(o,m,s,i):(y&&y(e,n,a),"focusout"===e&&(y=n._wrapperState)&&y.controlled&&"number"===n.type&&ee(n,"number",n.value)),y=a?bi(a):window,e){case"focusin":(Zs(y)||"true"===y.contentEditable)&&(ha=y,ma=a,ya=null);break;case"focusout":ya=ma=ha=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,ba(o,s,i);break;case"selectionchange":if(da)break;case"keydown":case"keyup":ba(o,s,i)}var v;if(Ns)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Ls?Hs(e,s)&&(b="onCompositionEnd"):"keydown"===e&&229===s.keyCode&&(b="onCompositionStart");b&&(Is&&"ko"!==s.locale&&(Ls||"onCompositionStart"!==b?"onCompositionEnd"===b&&Ls&&(v=es()):(Qt="value"in(Jt=i)?Jt.value:Jt.textContent,Ls=!0)),0<(y=ja(a,b)).length&&(b=new bs(b,e,null,s,i),o.push({event:b,listeners:y}),(v||null!==(v=_s(s)))&&(b.data=v))),(v=Gs?function(e,t){switch(e){case"compositionend":return _s(t);case"keypress":return 32!==t.which?null:(Rs=!0,zs);case"textInput":return(e=t.data)===zs&&Rs?null:e;default:return null}}(e,s):function(e,t){if(Ls)return"compositionend"===e||!Ns&&Hs(e,t)?(e=es(),Xt=Qt=Jt=null,Ls=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Is&&"ko"!==t.locale?null:t.data}}(e,s))&&0<(a=ja(a,"onBeforeInput")).length&&(i=new bs("onBeforeInput","beforeinput",null,s,i),o.push({event:i,listeners:a}),i.data=v)}za(o,t)}))}function Ua(e,t,s){return{instance:e,listener:t,currentTarget:s}}function ja(e,t){for(var s=t+"Capture",a=[];null!==e;){var i=e,r=i.stateNode;5===i.tag&&null!==r&&(i=r,null!=(r=Fe(e,s))&&a.unshift(Ua(e,r,i)),null!=(r=Fe(e,t))&&a.push(Ua(e,r,i))),e=e.return}return a}function Ka(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Va(e,t,s,a,i){for(var r=t._reactName,o=[];null!==s&&s!==a;){var n=s,l=n.alternate,f=n.stateNode;if(null!==l&&l===a)break;5===n.tag&&null!==f&&(n=f,i?null!=(l=Fe(s,r))&&o.unshift(Ua(s,l,n)):i||null!=(l=Fe(s,r))&&o.push(Ua(s,l,n))),s=s.return}0!==o.length&&e.push({event:t,listeners:o})}var qa=/\r\n?/g,$a=/\u0000|\uFFFD/g;function Ya(e){return("string"==typeof e?e:""+e).replace(qa,"\n").replace($a,"")}function Ja(e,t,s){if(t=Ya(t),Ya(e)!==t&&s)throw Error(r(425))}function Qa(){}var Xa=null,ei=null;function ti(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var si="function"==typeof setTimeout?setTimeout:void 0,ai="function"==typeof clearTimeout?clearTimeout:void 0,ii="function"==typeof Promise?Promise:void 0,ri="function"==typeof queueMicrotask?queueMicrotask:void 0!==ii?function(e){return ii.resolve(null).then(e).catch(oi)}:si;function oi(e){setTimeout((function(){throw e}))}function ni(e,t){var s=t,a=0;do{var i=s.nextSibling;if(e.removeChild(s),i&&8===i.nodeType)if("/$"===(s=i.data)){if(0===a)return e.removeChild(i),void Wt(t);a--}else"$"!==s&&"$?"!==s&&"$!"!==s||a++;s=i}while(s);Wt(t)}function li(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function fi(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var s=e.data;if("$"===s||"$!"===s||"$?"===s){if(0===t)return e;t--}else"/$"===s&&t++}e=e.previousSibling}return null}var ci=Math.random().toString(36).slice(2),ui="__reactFiber$"+ci,pi="__reactProps$"+ci,gi="__reactContainer$"+ci,di="__reactEvents$"+ci,hi="__reactListeners$"+ci,mi="__reactHandles$"+ci;function yi(e){var t=e[ui];if(t)return t;for(var s=e.parentNode;s;){if(t=s[gi]||s[ui]){if(s=t.alternate,null!==t.child||null!==s&&null!==s.child)for(e=fi(e);null!==e;){if(s=e[ui])return s;e=fi(e)}return t}s=(e=s).parentNode}return null}function vi(e){return!(e=e[ui]||e[gi])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function bi(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(r(33))}function Pi(e){return e[pi]||null}var wi=[],Si=-1;function ki(e){return{current:e}}function Ti(e){0>Si||(e.current=wi[Si],wi[Si]=null,Si--)}function xi(e,t){Si++,wi[Si]=e.current,e.current=t}var Mi={},Di=ki(Mi),Ai=ki(!1),Bi=Mi;function Oi(e,t){var s=e.type.contextTypes;if(!s)return Mi;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var i,r={};for(i in s)r[i]=t[i];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=r),r}function Ci(e){return null!=e.childContextTypes}function Fi(){Ti(Ai),Ti(Di)}function Ni(e,t,s){if(Di.current!==Mi)throw Error(r(168));xi(Di,t),xi(Ai,s)}function Ei(e,t,s){var a=e.stateNode;if(t=t.childContextTypes,"function"!=typeof a.getChildContext)return s;for(var i in a=a.getChildContext())if(!(i in t))throw Error(r(108,Z(e)||"Unknown",i));return z({},s,a)}function Gi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Mi,Bi=Di.current,xi(Di,e),xi(Ai,Ai.current),!0}function Ii(e,t,s){var a=e.stateNode;if(!a)throw Error(r(169));s?(e=Ei(e,t,Bi),a.__reactInternalMemoizedMergedChildContext=e,Ti(Ai),Ti(Di),xi(Di,e)):Ti(Ai),xi(Ai,s)}var zi=null,Ri=!1,Hi=!1;function _i(e){null===zi?zi=[e]:zi.push(e)}function Li(){if(!Hi&&null!==zi){Hi=!0;var e=0,t=bt;try{var s=zi;for(bt=1;e<s.length;e++){var a=s[e];do{a=a(!0)}while(null!==a)}zi=null,Ri=!1}catch(t){throw null!==zi&&(zi=zi.slice(e+1)),Ve(Xe,Li),t}finally{bt=t,Hi=!1}}return null}var Wi=[],Zi=0,Ui=null,ji=0,Ki=[],Vi=0,qi=null,$i=1,Yi="";function Ji(e,t){Wi[Zi++]=ji,Wi[Zi++]=Ui,Ui=e,ji=t}function Qi(e,t,s){Ki[Vi++]=$i,Ki[Vi++]=Yi,Ki[Vi++]=qi,qi=e;var a=$i;e=Yi;var i=32-ot(a)-1;a&=~(1<<i),s+=1;var r=32-ot(t)+i;if(30<r){var o=i-i%5;r=(a&(1<<o)-1).toString(32),a>>=o,i-=o,$i=1<<32-ot(t)+i|s<<i|a,Yi=r+e}else $i=1<<r|s<<i|a,Yi=e}function Xi(e){null!==e.return&&(Ji(e,1),Qi(e,1,0))}function er(e){for(;e===Ui;)Ui=Wi[--Zi],Wi[Zi]=null,ji=Wi[--Zi],Wi[Zi]=null;for(;e===qi;)qi=Ki[--Vi],Ki[Vi]=null,Yi=Ki[--Vi],Ki[Vi]=null,$i=Ki[--Vi],Ki[Vi]=null}var tr=null,sr=null,ar=!1,ir=null;function rr(e,t){var s=Nf(5,null,null,0);s.elementType="DELETED",s.stateNode=t,s.return=e,null===(t=e.deletions)?(e.deletions=[s],e.flags|=16):t.push(s)}function or(e,t){switch(e.tag){case 5:var s=e.type;return null!==(t=1!==t.nodeType||s.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,tr=e,sr=li(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,tr=e,sr=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(s=null!==qi?{id:$i,overflow:Yi}:null,e.memoizedState={dehydrated:t,treeContext:s,retryLane:1073741824},(s=Nf(18,null,null,0)).stateNode=t,s.return=e,e.child=s,tr=e,sr=null,!0);default:return!1}}function nr(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function lr(e){if(ar){var t=sr;if(t){var s=t;if(!or(e,t)){if(nr(e))throw Error(r(418));t=li(s.nextSibling);var a=tr;t&&or(e,t)?rr(a,s):(e.flags=-4097&e.flags|2,ar=!1,tr=e)}}else{if(nr(e))throw Error(r(418));e.flags=-4097&e.flags|2,ar=!1,tr=e}}}function fr(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;tr=e}function cr(e){if(e!==tr)return!1;if(!ar)return fr(e),ar=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ti(e.type,e.memoizedProps)),t&&(t=sr)){if(nr(e))throw ur(),Error(r(418));for(;t;)rr(e,t),t=li(t.nextSibling)}if(fr(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(r(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var s=e.data;if("/$"===s){if(0===t){sr=li(e.nextSibling);break e}t--}else"$"!==s&&"$!"!==s&&"$?"!==s||t++}e=e.nextSibling}sr=null}}else sr=tr?li(e.stateNode.nextSibling):null;return!0}function ur(){for(var e=sr;e;)e=li(e.nextSibling)}function pr(){sr=tr=null,ar=!1}function gr(e){null===ir?ir=[e]:ir.push(e)}var dr=P.ReactCurrentBatchConfig;function hr(e,t){if(e&&e.defaultProps){for(var s in t=z({},t),e=e.defaultProps)void 0===t[s]&&(t[s]=e[s]);return t}return t}var mr=ki(null),yr=null,vr=null,br=null;function Pr(){br=vr=yr=null}function wr(e){var t=mr.current;Ti(mr),e._currentValue=t}function Sr(e,t,s){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===s)break;e=e.return}}function kr(e,t){yr=e,br=vr=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Pn=!0),e.firstContext=null)}function Tr(e){var t=e._currentValue;if(br!==e)if(e={context:e,memoizedValue:t,next:null},null===vr){if(null===yr)throw Error(r(308));vr=e,yr.dependencies={lanes:0,firstContext:e}}else vr=vr.next=e;return t}var xr=null;function Mr(e){null===xr?xr=[e]:xr.push(e)}function Dr(e,t,s,a){var i=t.interleaved;return null===i?(s.next=s,Mr(t)):(s.next=i.next,i.next=s),t.interleaved=s,Ar(e,a)}function Ar(e,t){e.lanes|=t;var s=e.alternate;for(null!==s&&(s.lanes|=t),s=e,e=e.return;null!==e;)e.childLanes|=t,null!==(s=e.alternate)&&(s.childLanes|=t),s=e,e=e.return;return 3===s.tag?s.stateNode:null}var Br=!1;function Or(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Cr(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Fr(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Nr(e,t,s){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!=(2&Bl)){var i=a.pending;return null===i?t.next=t:(t.next=i.next,i.next=t),a.pending=t,Ar(e,s)}return null===(i=a.interleaved)?(t.next=t,Mr(a)):(t.next=i.next,i.next=t),a.interleaved=t,Ar(e,s)}function Er(e,t,s){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&s))){var a=t.lanes;s|=a&=e.pendingLanes,t.lanes=s,vt(e,s)}}function Gr(e,t){var s=e.updateQueue,a=e.alternate;if(null!==a&&s===(a=a.updateQueue)){var i=null,r=null;if(null!==(s=s.firstBaseUpdate)){do{var o={eventTime:s.eventTime,lane:s.lane,tag:s.tag,payload:s.payload,callback:s.callback,next:null};null===r?i=r=o:r=r.next=o,s=s.next}while(null!==s);null===r?i=r=t:r=r.next=t}else i=r=t;return s={baseState:a.baseState,firstBaseUpdate:i,lastBaseUpdate:r,shared:a.shared,effects:a.effects},void(e.updateQueue=s)}null===(e=s.lastBaseUpdate)?s.firstBaseUpdate=t:e.next=t,s.lastBaseUpdate=t}function Ir(e,t,s,a){var i=e.updateQueue;Br=!1;var r=i.firstBaseUpdate,o=i.lastBaseUpdate,n=i.shared.pending;if(null!==n){i.shared.pending=null;var l=n,f=l.next;l.next=null,null===o?r=f:o.next=f,o=l;var c=e.alternate;null!==c&&(n=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===n?c.firstBaseUpdate=f:n.next=f,c.lastBaseUpdate=l)}if(null!==r){var u=i.baseState;for(o=0,c=f=l=null,n=r;;){var p=n.lane,g=n.eventTime;if((a&p)===p){null!==c&&(c=c.next={eventTime:g,lane:0,tag:n.tag,payload:n.payload,callback:n.callback,next:null});e:{var d=e,h=n;switch(p=t,g=s,h.tag){case 1:if("function"==typeof(d=h.payload)){u=d.call(g,u,p);break e}u=d;break e;case 3:d.flags=-65537&d.flags|128;case 0:if(null==(p="function"==typeof(d=h.payload)?d.call(g,u,p):d))break e;u=z({},u,p);break e;case 2:Br=!0}}null!==n.callback&&0!==n.lane&&(e.flags|=64,null===(p=i.effects)?i.effects=[n]:p.push(n))}else g={eventTime:g,lane:p,tag:n.tag,payload:n.payload,callback:n.callback,next:null},null===c?(f=c=g,l=u):c=c.next=g,o|=p;if(null===(n=n.next)){if(null===(n=i.shared.pending))break;n=(p=n).next,p.next=null,i.lastBaseUpdate=p,i.shared.pending=null}}if(null===c&&(l=u),i.baseState=l,i.firstBaseUpdate=f,i.lastBaseUpdate=c,null!==(t=i.shared.interleaved)){i=t;do{o|=i.lane,i=i.next}while(i!==t)}else null===r&&(i.shared.lanes=0);zl|=o,e.lanes=o,e.memoizedState=u}}function zr(e,t,s){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],i=a.callback;if(null!==i){if(a.callback=null,a=s,"function"!=typeof i)throw Error(r(191,i));i.call(a)}}}var Rr=(new a.Component).refs;function Hr(e,t,s,a){s=null==(s=s(a,t=e.memoizedState))?t:z({},t,s),e.memoizedState=s,0===e.lanes&&(e.updateQueue.baseState=s)}var _r={isMounted:function(e){return!!(e=e._reactInternals)&&We(e)===e},enqueueSetState:function(e,t,s){e=e._reactInternals;var a=tf(),i=sf(e),r=Fr(a,i);r.payload=t,null!=s&&(r.callback=s),null!==(t=Nr(e,r,i))&&(af(t,e,i,a),Er(t,e,i))},enqueueReplaceState:function(e,t,s){e=e._reactInternals;var a=tf(),i=sf(e),r=Fr(a,i);r.tag=1,r.payload=t,null!=s&&(r.callback=s),null!==(t=Nr(e,r,i))&&(af(t,e,i,a),Er(t,e,i))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var s=tf(),a=sf(e),i=Fr(s,a);i.tag=2,null!=t&&(i.callback=t),null!==(t=Nr(e,i,a))&&(af(t,e,a,s),Er(t,e,a))}};function Lr(e,t,s,a,i,r,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,r,o):!(t.prototype&&t.prototype.isPureReactComponent&&na(s,a)&&na(i,r))}function Wr(e,t,s){var a=!1,i=Mi,r=t.contextType;return"object"==typeof r&&null!==r?r=Tr(r):(i=Ci(t)?Bi:Di.current,r=(a=null!=(a=t.contextTypes))?Oi(e,i):Mi),t=new t(s,r),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=_r,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=r),t}function Zr(e,t,s,a){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(s,a),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(s,a),t.state!==e&&_r.enqueueReplaceState(t,t.state,null)}function Ur(e,t,s,a){var i=e.stateNode;i.props=s,i.state=e.memoizedState,i.refs=Rr,Or(e);var r=t.contextType;"object"==typeof r&&null!==r?i.context=Tr(r):(r=Ci(t)?Bi:Di.current,i.context=Oi(e,r)),i.state=e.memoizedState,"function"==typeof(r=t.getDerivedStateFromProps)&&(Hr(e,t,r,s),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&_r.enqueueReplaceState(i,i.state,null),Ir(e,s,i,a),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.flags|=4194308)}function jr(e,t,s){if(null!==(e=s.ref)&&"function"!=typeof e&&"object"!=typeof e){if(s._owner){if(s=s._owner){if(1!==s.tag)throw Error(r(309));var a=s.stateNode}if(!a)throw Error(r(147,e));var i=a,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=i.refs;t===Rr&&(t=i.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(r(284));if(!s._owner)throw Error(r(290,e))}return e}function Kr(e,t){throw e=Object.prototype.toString.call(t),Error(r(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Vr(e){return(0,e._init)(e._payload)}function qr(e){function t(t,s){if(e){var a=t.deletions;null===a?(t.deletions=[s],t.flags|=16):a.push(s)}}function s(s,a){if(!e)return null;for(;null!==a;)t(s,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Gf(e,t)).index=0,e.sibling=null,e}function o(t,s,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<s?(t.flags|=2,s):a:(t.flags|=2,s):(t.flags|=1048576,s)}function n(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,s,a){return null===t||6!==t.tag?((t=Hf(s,e.mode,a)).return=e,t):((t=i(t,s)).return=e,t)}function f(e,t,s,a){var r=s.type;return r===k?u(e,t,s.props.children,a,s.key):null!==t&&(t.elementType===r||"object"==typeof r&&null!==r&&r.$$typeof===F&&Vr(r)===t.type)?((a=i(t,s.props)).ref=jr(e,t,s),a.return=e,a):((a=If(s.type,s.key,s.props,null,e.mode,a)).ref=jr(e,t,s),a.return=e,a)}function c(e,t,s,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==s.containerInfo||t.stateNode.implementation!==s.implementation?((t=_f(s,e.mode,a)).return=e,t):((t=i(t,s.children||[])).return=e,t)}function u(e,t,s,a,r){return null===t||7!==t.tag?((t=zf(s,e.mode,a,r)).return=e,t):((t=i(t,s)).return=e,t)}function p(e,t,s){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Hf(""+t,e.mode,s)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return(s=If(t.type,t.key,t.props,null,e.mode,s)).ref=jr(e,null,t),s.return=e,s;case S:return(t=_f(t,e.mode,s)).return=e,t;case F:return p(e,(0,t._init)(t._payload),s)}if(te(t)||G(t))return(t=zf(t,e.mode,s,null)).return=e,t;Kr(e,t)}return null}function g(e,t,s,a){var i=null!==t?t.key:null;if("string"==typeof s&&""!==s||"number"==typeof s)return null!==i?null:l(e,t,""+s,a);if("object"==typeof s&&null!==s){switch(s.$$typeof){case w:return s.key===i?f(e,t,s,a):null;case S:return s.key===i?c(e,t,s,a):null;case F:return g(e,t,(i=s._init)(s._payload),a)}if(te(s)||G(s))return null!==i?null:u(e,t,s,a,null);Kr(e,s)}return null}function d(e,t,s,a,i){if("string"==typeof a&&""!==a||"number"==typeof a)return l(t,e=e.get(s)||null,""+a,i);if("object"==typeof a&&null!==a){switch(a.$$typeof){case w:return f(t,e=e.get(null===a.key?s:a.key)||null,a,i);case S:return c(t,e=e.get(null===a.key?s:a.key)||null,a,i);case F:return d(e,t,s,(0,a._init)(a._payload),i)}if(te(a)||G(a))return u(t,e=e.get(s)||null,a,i,null);Kr(t,a)}return null}function h(i,r,n,l){for(var f=null,c=null,u=r,h=r=0,m=null;null!==u&&h<n.length;h++){u.index>h?(m=u,u=null):m=u.sibling;var y=g(i,u,n[h],l);if(null===y){null===u&&(u=m);break}e&&u&&null===y.alternate&&t(i,u),r=o(y,r,h),null===c?f=y:c.sibling=y,c=y,u=m}if(h===n.length)return s(i,u),ar&&Ji(i,h),f;if(null===u){for(;h<n.length;h++)null!==(u=p(i,n[h],l))&&(r=o(u,r,h),null===c?f=u:c.sibling=u,c=u);return ar&&Ji(i,h),f}for(u=a(i,u);h<n.length;h++)null!==(m=d(u,i,h,n[h],l))&&(e&&null!==m.alternate&&u.delete(null===m.key?h:m.key),r=o(m,r,h),null===c?f=m:c.sibling=m,c=m);return e&&u.forEach((function(e){return t(i,e)})),ar&&Ji(i,h),f}function m(i,n,l,f){var c=G(l);if("function"!=typeof c)throw Error(r(150));if(null==(l=c.call(l)))throw Error(r(151));for(var u=c=null,h=n,m=n=0,y=null,v=l.next();null!==h&&!v.done;m++,v=l.next()){h.index>m?(y=h,h=null):y=h.sibling;var b=g(i,h,v.value,f);if(null===b){null===h&&(h=y);break}e&&h&&null===b.alternate&&t(i,h),n=o(b,n,m),null===u?c=b:u.sibling=b,u=b,h=y}if(v.done)return s(i,h),ar&&Ji(i,m),c;if(null===h){for(;!v.done;m++,v=l.next())null!==(v=p(i,v.value,f))&&(n=o(v,n,m),null===u?c=v:u.sibling=v,u=v);return ar&&Ji(i,m),c}for(h=a(i,h);!v.done;m++,v=l.next())null!==(v=d(h,i,m,v.value,f))&&(e&&null!==v.alternate&&h.delete(null===v.key?m:v.key),n=o(v,n,m),null===u?c=v:u.sibling=v,u=v);return e&&h.forEach((function(e){return t(i,e)})),ar&&Ji(i,m),c}return function e(a,r,o,l){if("object"==typeof o&&null!==o&&o.type===k&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var f=o.key,c=r;null!==c;){if(c.key===f){if((f=o.type)===k){if(7===c.tag){s(a,c.sibling),(r=i(c,o.props.children)).return=a,a=r;break e}}else if(c.elementType===f||"object"==typeof f&&null!==f&&f.$$typeof===F&&Vr(f)===c.type){s(a,c.sibling),(r=i(c,o.props)).ref=jr(a,c,o),r.return=a,a=r;break e}s(a,c);break}t(a,c),c=c.sibling}o.type===k?((r=zf(o.props.children,a.mode,l,o.key)).return=a,a=r):((l=If(o.type,o.key,o.props,null,a.mode,l)).ref=jr(a,r,o),l.return=a,a=l)}return n(a);case S:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){s(a,r.sibling),(r=i(r,o.children||[])).return=a,a=r;break e}s(a,r);break}t(a,r),r=r.sibling}(r=_f(o,a.mode,l)).return=a,a=r}return n(a);case F:return e(a,r,(c=o._init)(o._payload),l)}if(te(o))return h(a,r,o,l);if(G(o))return m(a,r,o,l);Kr(a,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==r&&6===r.tag?(s(a,r.sibling),(r=i(r,o)).return=a,a=r):(s(a,r),(r=Hf(o,a.mode,l)).return=a,a=r),n(a)):s(a,r)}}var $r=qr(!0),Yr=qr(!1),Jr={},Qr=ki(Jr),Xr=ki(Jr),eo=ki(Jr);function to(e){if(e===Jr)throw Error(r(174));return e}function so(e,t){switch(xi(eo,t),xi(Xr,e),xi(Qr,Jr),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ti(Qr),xi(Qr,t)}function ao(){Ti(Qr),Ti(Xr),Ti(eo)}function io(e){to(eo.current);var t=to(Qr.current),s=le(t,e.type);t!==s&&(xi(Xr,e),xi(Qr,s))}function ro(e){Xr.current===e&&(Ti(Qr),Ti(Xr))}var oo=ki(0);function no(e){for(var t=e;null!==t;){if(13===t.tag){var s=t.memoizedState;if(null!==s&&(null===(s=s.dehydrated)||"$?"===s.data||"$!"===s.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var lo=[];function fo(){for(var e=0;e<lo.length;e++)lo[e]._workInProgressVersionPrimary=null;lo.length=0}var co=P.ReactCurrentDispatcher,uo=P.ReactCurrentBatchConfig,po=0,go=null,ho=null,mo=null,yo=!1,vo=!1,bo=0,Po=0;function wo(){throw Error(r(321))}function So(e,t){if(null===t)return!1;for(var s=0;s<t.length&&s<e.length;s++)if(!oa(e[s],t[s]))return!1;return!0}function ko(e,t,s,a,i,o){if(po=o,go=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,co.current=null===e||null===e.memoizedState?nn:ln,e=s(a,i),vo){o=0;do{if(vo=!1,bo=0,25<=o)throw Error(r(301));o+=1,mo=ho=null,t.updateQueue=null,co.current=fn,e=s(a,i)}while(vo)}if(co.current=on,t=null!==ho&&null!==ho.next,po=0,mo=ho=go=null,yo=!1,t)throw Error(r(300));return e}function To(){var e=0!==bo;return bo=0,e}function xo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===mo?go.memoizedState=mo=e:mo=mo.next=e,mo}function Mo(){if(null===ho){var e=go.alternate;e=null!==e?e.memoizedState:null}else e=ho.next;var t=null===mo?go.memoizedState:mo.next;if(null!==t)mo=t,ho=e;else{if(null===e)throw Error(r(310));e={memoizedState:(ho=e).memoizedState,baseState:ho.baseState,baseQueue:ho.baseQueue,queue:ho.queue,next:null},null===mo?go.memoizedState=mo=e:mo=mo.next=e}return mo}function Do(e,t){return"function"==typeof t?t(e):t}function Ao(e){var t=Mo(),s=t.queue;if(null===s)throw Error(r(311));s.lastRenderedReducer=e;var a=ho,i=a.baseQueue,o=s.pending;if(null!==o){if(null!==i){var n=i.next;i.next=o.next,o.next=n}a.baseQueue=i=o,s.pending=null}if(null!==i){o=i.next,a=a.baseState;var l=n=null,f=null,c=o;do{var u=c.lane;if((po&u)===u)null!==f&&(f=f.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),a=c.hasEagerState?c.eagerState:e(a,c.action);else{var p={lane:u,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===f?(l=f=p,n=a):f=f.next=p,go.lanes|=u,zl|=u}c=c.next}while(null!==c&&c!==o);null===f?n=a:f.next=l,oa(a,t.memoizedState)||(Pn=!0),t.memoizedState=a,t.baseState=n,t.baseQueue=f,s.lastRenderedState=a}if(null!==(e=s.interleaved)){i=e;do{o=i.lane,go.lanes|=o,zl|=o,i=i.next}while(i!==e)}else null===i&&(s.lanes=0);return[t.memoizedState,s.dispatch]}function Bo(e){var t=Mo(),s=t.queue;if(null===s)throw Error(r(311));s.lastRenderedReducer=e;var a=s.dispatch,i=s.pending,o=t.memoizedState;if(null!==i){s.pending=null;var n=i=i.next;do{o=e(o,n.action),n=n.next}while(n!==i);oa(o,t.memoizedState)||(Pn=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),s.lastRenderedState=o}return[o,a]}function Oo(){}function Co(e,t){var s=go,a=Mo(),i=t(),o=!oa(a.memoizedState,i);if(o&&(a.memoizedState=i,Pn=!0),a=a.queue,Zo(Eo.bind(null,s,a,e),[e]),a.getSnapshot!==t||o||null!==mo&&1&mo.memoizedState.tag){if(s.flags|=2048,Ro(9,No.bind(null,s,a,i,t),void 0,null),null===Ol)throw Error(r(349));0!=(30&po)||Fo(s,t,i)}return i}function Fo(e,t,s){e.flags|=16384,e={getSnapshot:t,value:s},null===(t=go.updateQueue)?(t={lastEffect:null,stores:null},go.updateQueue=t,t.stores=[e]):null===(s=t.stores)?t.stores=[e]:s.push(e)}function No(e,t,s,a){t.value=s,t.getSnapshot=a,Go(t)&&Io(e)}function Eo(e,t,s){return s((function(){Go(t)&&Io(e)}))}function Go(e){var t=e.getSnapshot;e=e.value;try{var s=t();return!oa(e,s)}catch(e){return!0}}function Io(e){var t=Ar(e,1);null!==t&&af(t,e,1,-1)}function zo(e){var t=xo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Do,lastRenderedState:e},t.queue=e,e=e.dispatch=tn.bind(null,go,e),[t.memoizedState,e]}function Ro(e,t,s,a){return e={tag:e,create:t,destroy:s,deps:a,next:null},null===(t=go.updateQueue)?(t={lastEffect:null,stores:null},go.updateQueue=t,t.lastEffect=e.next=e):null===(s=t.lastEffect)?t.lastEffect=e.next=e:(a=s.next,s.next=e,e.next=a,t.lastEffect=e),e}function Ho(){return Mo().memoizedState}function _o(e,t,s,a){var i=xo();go.flags|=e,i.memoizedState=Ro(1|t,s,void 0,void 0===a?null:a)}function Lo(e,t,s,a){var i=Mo();a=void 0===a?null:a;var r=void 0;if(null!==ho){var o=ho.memoizedState;if(r=o.destroy,null!==a&&So(a,o.deps))return void(i.memoizedState=Ro(t,s,r,a))}go.flags|=e,i.memoizedState=Ro(1|t,s,r,a)}function Wo(e,t){return _o(8390656,8,e,t)}function Zo(e,t){return Lo(2048,8,e,t)}function Uo(e,t){return Lo(4,2,e,t)}function jo(e,t){return Lo(4,4,e,t)}function Ko(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Vo(e,t,s){return s=null!=s?s.concat([e]):null,Lo(4,4,Ko.bind(null,t,e),s)}function qo(){}function $o(e,t){var s=Mo();t=void 0===t?null:t;var a=s.memoizedState;return null!==a&&null!==t&&So(t,a[1])?a[0]:(s.memoizedState=[e,t],e)}function Yo(e,t){var s=Mo();t=void 0===t?null:t;var a=s.memoizedState;return null!==a&&null!==t&&So(t,a[1])?a[0]:(e=e(),s.memoizedState=[e,t],e)}function Jo(e,t,s){return 0==(21&po)?(e.baseState&&(e.baseState=!1,Pn=!0),e.memoizedState=s):(oa(s,t)||(s=ht(),go.lanes|=s,zl|=s,e.baseState=!0),t)}function Qo(e,t){var s=bt;bt=0!==s&&4>s?s:4,e(!0);var a=uo.transition;uo.transition={};try{e(!1),t()}finally{bt=s,uo.transition=a}}function Xo(){return Mo().memoizedState}function en(e,t,s){var a=sf(e);s={lane:a,action:s,hasEagerState:!1,eagerState:null,next:null},sn(e)?an(t,s):null!==(s=Dr(e,t,s,a))&&(af(s,e,a,tf()),rn(s,t,a))}function tn(e,t,s){var a=sf(e),i={lane:a,action:s,hasEagerState:!1,eagerState:null,next:null};if(sn(e))an(t,i);else{var r=e.alternate;if(0===e.lanes&&(null===r||0===r.lanes)&&null!==(r=t.lastRenderedReducer))try{var o=t.lastRenderedState,n=r(o,s);if(i.hasEagerState=!0,i.eagerState=n,oa(n,o)){var l=t.interleaved;return null===l?(i.next=i,Mr(t)):(i.next=l.next,l.next=i),void(t.interleaved=i)}}catch(e){}null!==(s=Dr(e,t,i,a))&&(af(s,e,a,i=tf()),rn(s,t,a))}}function sn(e){var t=e.alternate;return e===go||null!==t&&t===go}function an(e,t){vo=yo=!0;var s=e.pending;null===s?t.next=t:(t.next=s.next,s.next=t),e.pending=t}function rn(e,t,s){if(0!=(4194240&s)){var a=t.lanes;s|=a&=e.pendingLanes,t.lanes=s,vt(e,s)}}var on={readContext:Tr,useCallback:wo,useContext:wo,useEffect:wo,useImperativeHandle:wo,useInsertionEffect:wo,useLayoutEffect:wo,useMemo:wo,useReducer:wo,useRef:wo,useState:wo,useDebugValue:wo,useDeferredValue:wo,useTransition:wo,useMutableSource:wo,useSyncExternalStore:wo,useId:wo,unstable_isNewReconciler:!1},nn={readContext:Tr,useCallback:function(e,t){return xo().memoizedState=[e,void 0===t?null:t],e},useContext:Tr,useEffect:Wo,useImperativeHandle:function(e,t,s){return s=null!=s?s.concat([e]):null,_o(4194308,4,Ko.bind(null,t,e),s)},useLayoutEffect:function(e,t){return _o(4194308,4,e,t)},useInsertionEffect:function(e,t){return _o(4,2,e,t)},useMemo:function(e,t){var s=xo();return t=void 0===t?null:t,e=e(),s.memoizedState=[e,t],e},useReducer:function(e,t,s){var a=xo();return t=void 0!==s?s(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=en.bind(null,go,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},xo().memoizedState=e},useState:zo,useDebugValue:qo,useDeferredValue:function(e){return xo().memoizedState=e},useTransition:function(){var e=zo(!1),t=e[0];return e=Qo.bind(null,e[1]),xo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,s){var a=go,i=xo();if(ar){if(void 0===s)throw Error(r(407));s=s()}else{if(s=t(),null===Ol)throw Error(r(349));0!=(30&po)||Fo(a,t,s)}i.memoizedState=s;var o={value:s,getSnapshot:t};return i.queue=o,Wo(Eo.bind(null,a,o,e),[e]),a.flags|=2048,Ro(9,No.bind(null,a,o,s,t),void 0,null),s},useId:function(){var e=xo(),t=Ol.identifierPrefix;if(ar){var s=Yi;t=":"+t+"R"+(s=($i&~(1<<32-ot($i)-1)).toString(32)+s),0<(s=bo++)&&(t+="H"+s.toString(32)),t+=":"}else t=":"+t+"r"+(s=Po++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ln={readContext:Tr,useCallback:$o,useContext:Tr,useEffect:Zo,useImperativeHandle:Vo,useInsertionEffect:Uo,useLayoutEffect:jo,useMemo:Yo,useReducer:Ao,useRef:Ho,useState:function(){return Ao(Do)},useDebugValue:qo,useDeferredValue:function(e){return Jo(Mo(),ho.memoizedState,e)},useTransition:function(){return[Ao(Do)[0],Mo().memoizedState]},useMutableSource:Oo,useSyncExternalStore:Co,useId:Xo,unstable_isNewReconciler:!1},fn={readContext:Tr,useCallback:$o,useContext:Tr,useEffect:Zo,useImperativeHandle:Vo,useInsertionEffect:Uo,useLayoutEffect:jo,useMemo:Yo,useReducer:Bo,useRef:Ho,useState:function(){return Bo(Do)},useDebugValue:qo,useDeferredValue:function(e){var t=Mo();return null===ho?t.memoizedState=e:Jo(t,ho.memoizedState,e)},useTransition:function(){return[Bo(Do)[0],Mo().memoizedState]},useMutableSource:Oo,useSyncExternalStore:Co,useId:Xo,unstable_isNewReconciler:!1};function cn(e,t){try{var s="",a=t;do{s+=L(a),a=a.return}while(a);var i=s}catch(e){i="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:i,digest:null}}function un(e,t,s){return{value:e,source:null,stack:null!=s?s:null,digest:null!=t?t:null}}function pn(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var gn="function"==typeof WeakMap?WeakMap:Map;function dn(e,t,s){(s=Fr(-1,s)).tag=3,s.payload={element:null};var a=t.value;return s.callback=function(){jl||(jl=!0,Kl=a),pn(0,t)},s}function hn(e,t,s){(s=Fr(-1,s)).tag=3;var a=e.type.getDerivedStateFromError;if("function"==typeof a){var i=t.value;s.payload=function(){return a(i)},s.callback=function(){pn(0,t)}}var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(s.callback=function(){pn(0,t),"function"!=typeof a&&(null===Vl?Vl=new Set([this]):Vl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),s}function mn(e,t,s){var a=e.pingCache;if(null===a){a=e.pingCache=new gn;var i=new Set;a.set(t,i)}else void 0===(i=a.get(t))&&(i=new Set,a.set(t,i));i.has(s)||(i.add(s),e=Df.bind(null,e,t,s),t.then(e,e))}function yn(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function vn(e,t,s,a,i){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,s.flags|=131072,s.flags&=-52805,1===s.tag&&(null===s.alternate?s.tag=17:((t=Fr(-1,1)).tag=2,Nr(s,t,1))),s.lanes|=1),e):(e.flags|=65536,e.lanes=i,e)}var bn=P.ReactCurrentOwner,Pn=!1;function wn(e,t,s,a){t.child=null===e?Yr(t,null,s,a):$r(t,e.child,s,a)}function Sn(e,t,s,a,i){s=s.render;var r=t.ref;return kr(t,i),a=ko(e,t,s,a,r,i),s=To(),null===e||Pn?(ar&&s&&Xi(t),t.flags|=1,wn(e,t,a,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,jn(e,t,i))}function kn(e,t,s,a,i){if(null===e){var r=s.type;return"function"!=typeof r||Ef(r)||void 0!==r.defaultProps||null!==s.compare||void 0!==s.defaultProps?((e=If(s.type,null,a,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=r,Tn(e,t,r,a,i))}if(r=e.child,0==(e.lanes&i)){var o=r.memoizedProps;if((s=null!==(s=s.compare)?s:na)(o,a)&&e.ref===t.ref)return jn(e,t,i)}return t.flags|=1,(e=Gf(r,a)).ref=t.ref,e.return=t,t.child=e}function Tn(e,t,s,a,i){if(null!==e){var r=e.memoizedProps;if(na(r,a)&&e.ref===t.ref){if(Pn=!1,t.pendingProps=a=r,0==(e.lanes&i))return t.lanes=e.lanes,jn(e,t,i);0!=(131072&e.flags)&&(Pn=!0)}}return Dn(e,t,s,a,i)}function xn(e,t,s){var a=t.pendingProps,i=a.children,r=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},xi(El,Nl),Nl|=s;else{if(0==(1073741824&s))return e=null!==r?r.baseLanes|s:s,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,xi(El,Nl),Nl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==r?r.baseLanes:s,xi(El,Nl),Nl|=a}else null!==r?(a=r.baseLanes|s,t.memoizedState=null):a=s,xi(El,Nl),Nl|=a;return wn(e,t,i,s),t.child}function Mn(e,t){var s=t.ref;(null===e&&null!==s||null!==e&&e.ref!==s)&&(t.flags|=512,t.flags|=2097152)}function Dn(e,t,s,a,i){var r=Ci(s)?Bi:Di.current;return r=Oi(t,r),kr(t,i),s=ko(e,t,s,a,r,i),a=To(),null===e||Pn?(ar&&a&&Xi(t),t.flags|=1,wn(e,t,s,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,jn(e,t,i))}function An(e,t,s,a,i){if(Ci(s)){var r=!0;Gi(t)}else r=!1;if(kr(t,i),null===t.stateNode)Un(e,t),Wr(t,s,a),Ur(t,s,a,i),a=!0;else if(null===e){var o=t.stateNode,n=t.memoizedProps;o.props=n;var l=o.context,f=s.contextType;f="object"==typeof f&&null!==f?Tr(f):Oi(t,f=Ci(s)?Bi:Di.current);var c=s.getDerivedStateFromProps,u="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;u||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(n!==a||l!==f)&&Zr(t,o,a,f),Br=!1;var p=t.memoizedState;o.state=p,Ir(t,a,o,i),l=t.memoizedState,n!==a||p!==l||Ai.current||Br?("function"==typeof c&&(Hr(t,s,c,a),l=t.memoizedState),(n=Br||Lr(t,s,n,a,p,l,f))?(u||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4194308)):("function"==typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=l),o.props=a,o.state=l,o.context=f,a=n):("function"==typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,Cr(e,t),n=t.memoizedProps,f=t.type===t.elementType?n:hr(t.type,n),o.props=f,u=t.pendingProps,p=o.context,l="object"==typeof(l=s.contextType)&&null!==l?Tr(l):Oi(t,l=Ci(s)?Bi:Di.current);var g=s.getDerivedStateFromProps;(c="function"==typeof g||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(n!==u||p!==l)&&Zr(t,o,a,l),Br=!1,p=t.memoizedState,o.state=p,Ir(t,a,o,i);var d=t.memoizedState;n!==u||p!==d||Ai.current||Br?("function"==typeof g&&(Hr(t,s,g,a),d=t.memoizedState),(f=Br||Lr(t,s,f,a,p,d,l)||!1)?(c||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(a,d,l),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,d,l)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof o.componentDidUpdate||n===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||n===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=d),o.props=a,o.state=d,o.context=l,a=f):("function"!=typeof o.componentDidUpdate||n===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||n===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),a=!1)}return Bn(e,t,s,a,r,i)}function Bn(e,t,s,a,i,r){Mn(e,t);var o=0!=(128&t.flags);if(!a&&!o)return i&&Ii(t,s,!1),jn(e,t,r);a=t.stateNode,bn.current=t;var n=o&&"function"!=typeof s.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=$r(t,e.child,null,r),t.child=$r(t,null,n,r)):wn(e,t,n,r),t.memoizedState=a.state,i&&Ii(t,s,!0),t.child}function On(e){var t=e.stateNode;t.pendingContext?Ni(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ni(0,t.context,!1),so(e,t.containerInfo)}function Cn(e,t,s,a,i){return pr(),gr(i),t.flags|=256,wn(e,t,s,a),t.child}var Fn,Nn,En,Gn,In={dehydrated:null,treeContext:null,retryLane:0};function zn(e){return{baseLanes:e,cachePool:null,transitions:null}}function Rn(e,t,s){var a,i=t.pendingProps,o=oo.current,n=!1,l=0!=(128&t.flags);if((a=l)||(a=(null===e||null!==e.memoizedState)&&0!=(2&o)),a?(n=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),xi(oo,1&o),null===e)return lr(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=i.children,e=i.fallback,n?(i=t.mode,n=t.child,l={mode:"hidden",children:l},0==(1&i)&&null!==n?(n.childLanes=0,n.pendingProps=l):n=Rf(l,i,0,null),e=zf(e,i,s,null),n.return=t,e.return=t,n.sibling=e,t.child=n,t.child.memoizedState=zn(s),t.memoizedState=In,e):Hn(t,l));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,s,a,i,o,n){if(s)return 256&t.flags?(t.flags&=-257,_n(e,t,n,a=un(Error(r(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,i=t.mode,a=Rf({mode:"visible",children:a.children},i,0,null),(o=zf(o,i,n,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!=(1&t.mode)&&$r(t,e.child,null,n),t.child.memoizedState=zn(n),t.memoizedState=In,o);if(0==(1&t.mode))return _n(e,t,n,null);if("$!"===i.data){if(a=i.nextSibling&&i.nextSibling.dataset)var l=a.dgst;return a=l,_n(e,t,n,a=un(o=Error(r(419)),a,void 0))}if(l=0!=(n&e.childLanes),Pn||l){if(null!==(a=Ol)){switch(n&-n){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}0!==(i=0!=(i&(a.suspendedLanes|n))?0:i)&&i!==o.retryLane&&(o.retryLane=i,Ar(e,i),af(a,e,i,-1))}return yf(),_n(e,t,n,a=un(Error(r(421))))}return"$?"===i.data?(t.flags|=128,t.child=e.child,t=Bf.bind(null,e),i._reactRetry=t,null):(e=o.treeContext,sr=li(i.nextSibling),tr=t,ar=!0,ir=null,null!==e&&(Ki[Vi++]=$i,Ki[Vi++]=Yi,Ki[Vi++]=qi,$i=e.id,Yi=e.overflow,qi=t),(t=Hn(t,a.children)).flags|=4096,t)}(e,t,l,i,a,o,s);if(n){n=i.fallback,l=t.mode,a=(o=e.child).sibling;var f={mode:"hidden",children:i.children};return 0==(1&l)&&t.child!==o?((i=t.child).childLanes=0,i.pendingProps=f,t.deletions=null):(i=Gf(o,f)).subtreeFlags=14680064&o.subtreeFlags,null!==a?n=Gf(a,n):(n=zf(n,l,s,null)).flags|=2,n.return=t,i.return=t,i.sibling=n,t.child=i,i=n,n=t.child,l=null===(l=e.child.memoizedState)?zn(s):{baseLanes:l.baseLanes|s,cachePool:null,transitions:l.transitions},n.memoizedState=l,n.childLanes=e.childLanes&~s,t.memoizedState=In,i}return e=(n=e.child).sibling,i=Gf(n,{mode:"visible",children:i.children}),0==(1&t.mode)&&(i.lanes=s),i.return=t,i.sibling=null,null!==e&&(null===(s=t.deletions)?(t.deletions=[e],t.flags|=16):s.push(e)),t.child=i,t.memoizedState=null,i}function Hn(e,t){return(t=Rf({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function _n(e,t,s,a){return null!==a&&gr(a),$r(t,e.child,null,s),(e=Hn(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Ln(e,t,s){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Sr(e.return,t,s)}function Wn(e,t,s,a,i){var r=e.memoizedState;null===r?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:s,tailMode:i}:(r.isBackwards=t,r.rendering=null,r.renderingStartTime=0,r.last=a,r.tail=s,r.tailMode=i)}function Zn(e,t,s){var a=t.pendingProps,i=a.revealOrder,r=a.tail;if(wn(e,t,a.children,s),0!=(2&(a=oo.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ln(e,s,t);else if(19===e.tag)Ln(e,s,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(xi(oo,a),0==(1&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(s=t.child,i=null;null!==s;)null!==(e=s.alternate)&&null===no(e)&&(i=s),s=s.sibling;null===(s=i)?(i=t.child,t.child=null):(i=s.sibling,s.sibling=null),Wn(t,!1,i,s,r);break;case"backwards":for(s=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===no(e)){t.child=i;break}e=i.sibling,i.sibling=s,s=i,i=e}Wn(t,!0,s,null,r);break;case"together":Wn(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Un(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function jn(e,t,s){if(null!==e&&(t.dependencies=e.dependencies),zl|=t.lanes,0==(s&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(r(153));if(null!==t.child){for(s=Gf(e=t.child,e.pendingProps),t.child=s,s.return=t;null!==e.sibling;)e=e.sibling,(s=s.sibling=Gf(e,e.pendingProps)).return=t;s.sibling=null}return t.child}function Kn(e,t){if(!ar)switch(e.tailMode){case"hidden":t=e.tail;for(var s=null;null!==t;)null!==t.alternate&&(s=t),t=t.sibling;null===s?e.tail=null:s.sibling=null;break;case"collapsed":s=e.tail;for(var a=null;null!==s;)null!==s.alternate&&(a=s),s=s.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Vn(e){var t=null!==e.alternate&&e.alternate.child===e.child,s=0,a=0;if(t)for(var i=e.child;null!==i;)s|=i.lanes|i.childLanes,a|=14680064&i.subtreeFlags,a|=14680064&i.flags,i.return=e,i=i.sibling;else for(i=e.child;null!==i;)s|=i.lanes|i.childLanes,a|=i.subtreeFlags,a|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=a,e.childLanes=s,t}function qn(e,t,s){var a=t.pendingProps;switch(er(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Vn(t),null;case 1:case 17:return Ci(t.type)&&Fi(),Vn(t),null;case 3:return a=t.stateNode,ao(),Ti(Ai),Ti(Di),fo(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(cr(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==ir&&(lf(ir),ir=null))),Nn(e,t),Vn(t),null;case 5:ro(t);var i=to(eo.current);if(s=t.type,null!==e&&null!=t.stateNode)En(e,t,s,a,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(r(166));return Vn(t),null}if(e=to(Qr.current),cr(t)){a=t.stateNode,s=t.type;var o=t.memoizedProps;switch(a[ui]=t,a[pi]=o,e=0!=(1&t.mode),s){case"dialog":Ra("cancel",a),Ra("close",a);break;case"iframe":case"object":case"embed":Ra("load",a);break;case"video":case"audio":for(i=0;i<Ea.length;i++)Ra(Ea[i],a);break;case"source":Ra("error",a);break;case"img":case"image":case"link":Ra("error",a),Ra("load",a);break;case"details":Ra("toggle",a);break;case"input":Y(a,o),Ra("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Ra("invalid",a);break;case"textarea":ie(a,o),Ra("invalid",a)}for(var l in ve(s,o),i=null,o)if(o.hasOwnProperty(l)){var f=o[l];"children"===l?"string"==typeof f?a.textContent!==f&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,f,e),i=["children",f]):"number"==typeof f&&a.textContent!==""+f&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,f,e),i=["children",""+f]):n.hasOwnProperty(l)&&null!=f&&"onScroll"===l&&Ra("scroll",a)}switch(s){case"input":K(a),X(a,o,!0);break;case"textarea":K(a),oe(a);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(a.onclick=Qa)}a=i,t.updateQueue=a,null!==a&&(t.flags|=4)}else{l=9===i.nodeType?i:i.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ne(s)),"http://www.w3.org/1999/xhtml"===e?"script"===s?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof a.is?e=l.createElement(s,{is:a.is}):(e=l.createElement(s),"select"===s&&(l=e,a.multiple?l.multiple=!0:a.size&&(l.size=a.size))):e=l.createElementNS(e,s),e[ui]=t,e[pi]=a,Fn(e,t,!1,!1),t.stateNode=e;e:{switch(l=be(s,a),s){case"dialog":Ra("cancel",e),Ra("close",e),i=a;break;case"iframe":case"object":case"embed":Ra("load",e),i=a;break;case"video":case"audio":for(i=0;i<Ea.length;i++)Ra(Ea[i],e);i=a;break;case"source":Ra("error",e),i=a;break;case"img":case"image":case"link":Ra("error",e),Ra("load",e),i=a;break;case"details":Ra("toggle",e),i=a;break;case"input":Y(e,a),i=$(e,a),Ra("invalid",e);break;case"option":default:i=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},i=z({},a,{value:void 0}),Ra("invalid",e);break;case"textarea":ie(e,a),i=ae(e,a),Ra("invalid",e)}for(o in ve(s,i),f=i)if(f.hasOwnProperty(o)){var c=f[o];"style"===o?me(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&ue(e,c):"children"===o?"string"==typeof c?("textarea"!==s||""!==c)&&pe(e,c):"number"==typeof c&&pe(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(n.hasOwnProperty(o)?null!=c&&"onScroll"===o&&Ra("scroll",e):null!=c&&b(e,o,c,l))}switch(s){case"input":K(e),X(e,a,!1);break;case"textarea":K(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+U(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?se(e,!!a.multiple,o,!1):null!=a.defaultValue&&se(e,!!a.multiple,a.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Qa)}switch(s){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Vn(t),null;case 6:if(e&&null!=t.stateNode)Gn(e,t,e.memoizedProps,a);else{if("string"!=typeof a&&null===t.stateNode)throw Error(r(166));if(s=to(eo.current),to(Qr.current),cr(t)){if(a=t.stateNode,s=t.memoizedProps,a[ui]=t,(o=a.nodeValue!==s)&&null!==(e=tr))switch(e.tag){case 3:Ja(a.nodeValue,s,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,s,0!=(1&e.mode))}o&&(t.flags|=4)}else(a=(9===s.nodeType?s:s.ownerDocument).createTextNode(a))[ui]=t,t.stateNode=a}return Vn(t),null;case 13:if(Ti(oo),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ar&&null!==sr&&0!=(1&t.mode)&&0==(128&t.flags))ur(),pr(),t.flags|=98560,o=!1;else if(o=cr(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(r(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(r(317));o[ui]=t}else pr(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Vn(t),o=!1}else null!==ir&&(lf(ir),ir=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=s,t):((a=null!==a)!=(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&oo.current)?0===Gl&&(Gl=3):yf())),null!==t.updateQueue&&(t.flags|=4),Vn(t),null);case 4:return ao(),Nn(e,t),null===e&&La(t.stateNode.containerInfo),Vn(t),null;case 10:return wr(t.type._context),Vn(t),null;case 19:if(Ti(oo),null===(o=t.memoizedState))return Vn(t),null;if(a=0!=(128&t.flags),null===(l=o.rendering))if(a)Kn(o,!1);else{if(0!==Gl||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=no(e))){for(t.flags|=128,Kn(o,!1),null!==(a=l.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=s,s=t.child;null!==s;)e=a,(o=s).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),s=s.sibling;return xi(oo,1&oo.current|2),t.child}e=e.sibling}null!==o.tail&&Je()>Zl&&(t.flags|=128,a=!0,Kn(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=no(l))){if(t.flags|=128,a=!0,null!==(s=e.updateQueue)&&(t.updateQueue=s,t.flags|=4),Kn(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!ar)return Vn(t),null}else 2*Je()-o.renderingStartTime>Zl&&1073741824!==s&&(t.flags|=128,a=!0,Kn(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(null!==(s=o.last)?s.sibling=l:t.child=l,o.last=l)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Je(),t.sibling=null,s=oo.current,xi(oo,a?1&s|2:1&s),t):(Vn(t),null);case 22:case 23:return gf(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!=(1&t.mode)?0!=(1073741824&Nl)&&(Vn(t),6&t.subtreeFlags&&(t.flags|=8192)):Vn(t),null;case 24:case 25:return null}throw Error(r(156,t.tag))}function $n(e,t){switch(er(t),t.tag){case 1:return Ci(t.type)&&Fi(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ao(),Ti(Ai),Ti(Di),fo(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return ro(t),null;case 13:if(Ti(oo),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(r(340));pr()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ti(oo),null;case 4:return ao(),null;case 10:return wr(t.type._context),null;case 22:case 23:return gf(),null;default:return null}}Fn=function(e,t){for(var s=t.child;null!==s;){if(5===s.tag||6===s.tag)e.appendChild(s.stateNode);else if(4!==s.tag&&null!==s.child){s.child.return=s,s=s.child;continue}if(s===t)break;for(;null===s.sibling;){if(null===s.return||s.return===t)return;s=s.return}s.sibling.return=s.return,s=s.sibling}},Nn=function(){},En=function(e,t,s,a){var i=e.memoizedProps;if(i!==a){e=t.stateNode,to(Qr.current);var r,o=null;switch(s){case"input":i=$(e,i),a=$(e,a),o=[];break;case"select":i=z({},i,{value:void 0}),a=z({},a,{value:void 0}),o=[];break;case"textarea":i=ae(e,i),a=ae(e,a),o=[];break;default:"function"!=typeof i.onClick&&"function"==typeof a.onClick&&(e.onclick=Qa)}for(c in ve(s,a),s=null,i)if(!a.hasOwnProperty(c)&&i.hasOwnProperty(c)&&null!=i[c])if("style"===c){var l=i[c];for(r in l)l.hasOwnProperty(r)&&(s||(s={}),s[r]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(n.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in a){var f=a[c];if(l=null!=i?i[c]:void 0,a.hasOwnProperty(c)&&f!==l&&(null!=f||null!=l))if("style"===c)if(l){for(r in l)!l.hasOwnProperty(r)||f&&f.hasOwnProperty(r)||(s||(s={}),s[r]="");for(r in f)f.hasOwnProperty(r)&&l[r]!==f[r]&&(s||(s={}),s[r]=f[r])}else s||(o||(o=[]),o.push(c,s)),s=f;else"dangerouslySetInnerHTML"===c?(f=f?f.__html:void 0,l=l?l.__html:void 0,null!=f&&l!==f&&(o=o||[]).push(c,f)):"children"===c?"string"!=typeof f&&"number"!=typeof f||(o=o||[]).push(c,""+f):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(n.hasOwnProperty(c)?(null!=f&&"onScroll"===c&&Ra("scroll",e),o||l===f||(o=[])):(o=o||[]).push(c,f))}s&&(o=o||[]).push("style",s);var c=o;(t.updateQueue=c)&&(t.flags|=4)}},Gn=function(e,t,s,a){s!==a&&(t.flags|=4)};var Yn=!1,Jn=!1,Qn="function"==typeof WeakSet?WeakSet:Set,Xn=null;function el(e,t){var s=e.ref;if(null!==s)if("function"==typeof s)try{s(null)}catch(s){Mf(e,t,s)}else s.current=null}function tl(e,t,s){try{s()}catch(s){Mf(e,t,s)}}var sl=!1;function al(e,t,s){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var i=a=a.next;do{if((i.tag&e)===e){var r=i.destroy;i.destroy=void 0,void 0!==r&&tl(t,s,r)}i=i.next}while(i!==a)}}function il(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var s=t=t.next;do{if((s.tag&e)===e){var a=s.create;s.destroy=a()}s=s.next}while(s!==t)}}function rl(e){var t=e.ref;if(null!==t){var s=e.stateNode;e.tag,e=s,"function"==typeof t?t(e):t.current=e}}function ol(e){var t=e.alternate;null!==t&&(e.alternate=null,ol(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[ui],delete t[pi],delete t[di],delete t[hi],delete t[mi]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function nl(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||nl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function fl(e,t,s){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===s.nodeType?s.parentNode.insertBefore(e,t):s.insertBefore(e,t):(8===s.nodeType?(t=s.parentNode).insertBefore(e,s):(t=s).appendChild(e),null!=(s=s._reactRootContainer)||null!==t.onclick||(t.onclick=Qa));else if(4!==a&&null!==(e=e.child))for(fl(e,t,s),e=e.sibling;null!==e;)fl(e,t,s),e=e.sibling}function cl(e,t,s){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?s.insertBefore(e,t):s.appendChild(e);else if(4!==a&&null!==(e=e.child))for(cl(e,t,s),e=e.sibling;null!==e;)cl(e,t,s),e=e.sibling}var ul=null,pl=!1;function gl(e,t,s){for(s=s.child;null!==s;)dl(e,t,s),s=s.sibling}function dl(e,t,s){if(rt&&"function"==typeof rt.onCommitFiberUnmount)try{rt.onCommitFiberUnmount(it,s)}catch(e){}switch(s.tag){case 5:Jn||el(s,t);case 6:var a=ul,i=pl;ul=null,gl(e,t,s),pl=i,null!==(ul=a)&&(pl?(e=ul,s=s.stateNode,8===e.nodeType?e.parentNode.removeChild(s):e.removeChild(s)):ul.removeChild(s.stateNode));break;case 18:null!==ul&&(pl?(e=ul,s=s.stateNode,8===e.nodeType?ni(e.parentNode,s):1===e.nodeType&&ni(e,s),Wt(e)):ni(ul,s.stateNode));break;case 4:a=ul,i=pl,ul=s.stateNode.containerInfo,pl=!0,gl(e,t,s),ul=a,pl=i;break;case 0:case 11:case 14:case 15:if(!Jn&&null!==(a=s.updateQueue)&&null!==(a=a.lastEffect)){i=a=a.next;do{var r=i,o=r.destroy;r=r.tag,void 0!==o&&(0!=(2&r)||0!=(4&r))&&tl(s,t,o),i=i.next}while(i!==a)}gl(e,t,s);break;case 1:if(!Jn&&(el(s,t),"function"==typeof(a=s.stateNode).componentWillUnmount))try{a.props=s.memoizedProps,a.state=s.memoizedState,a.componentWillUnmount()}catch(e){Mf(s,t,e)}gl(e,t,s);break;case 21:gl(e,t,s);break;case 22:1&s.mode?(Jn=(a=Jn)||null!==s.memoizedState,gl(e,t,s),Jn=a):gl(e,t,s);break;default:gl(e,t,s)}}function hl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var s=e.stateNode;null===s&&(s=e.stateNode=new Qn),t.forEach((function(t){var a=Of.bind(null,e,t);s.has(t)||(s.add(t),t.then(a,a))}))}}function ml(e,t){var s=t.deletions;if(null!==s)for(var a=0;a<s.length;a++){var i=s[a];try{var o=e,n=t,l=n;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,pl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,pl=!0;break e}l=l.return}if(null===ul)throw Error(r(160));dl(o,n,i),ul=null,pl=!1;var f=i.alternate;null!==f&&(f.return=null),i.return=null}catch(e){Mf(i,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)yl(t,e),t=t.sibling}function yl(e,t){var s=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),vl(e),4&a){try{al(3,e,e.return),il(3,e)}catch(t){Mf(e,e.return,t)}try{al(5,e,e.return)}catch(t){Mf(e,e.return,t)}}break;case 1:ml(t,e),vl(e),512&a&&null!==s&&el(s,s.return);break;case 5:if(ml(t,e),vl(e),512&a&&null!==s&&el(s,s.return),32&e.flags){var i=e.stateNode;try{pe(i,"")}catch(t){Mf(e,e.return,t)}}if(4&a&&null!=(i=e.stateNode)){var o=e.memoizedProps,n=null!==s?s.memoizedProps:o,l=e.type,f=e.updateQueue;if(e.updateQueue=null,null!==f)try{"input"===l&&"radio"===o.type&&null!=o.name&&J(i,o),be(l,n);var c=be(l,o);for(n=0;n<f.length;n+=2){var u=f[n],p=f[n+1];"style"===u?me(i,p):"dangerouslySetInnerHTML"===u?ue(i,p):"children"===u?pe(i,p):b(i,u,p,c)}switch(l){case"input":Q(i,o);break;case"textarea":re(i,o);break;case"select":var g=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!o.multiple;var d=o.value;null!=d?se(i,!!o.multiple,d,!1):g!==!!o.multiple&&(null!=o.defaultValue?se(i,!!o.multiple,o.defaultValue,!0):se(i,!!o.multiple,o.multiple?[]:"",!1))}i[pi]=o}catch(t){Mf(e,e.return,t)}}break;case 6:if(ml(t,e),vl(e),4&a){if(null===e.stateNode)throw Error(r(162));i=e.stateNode,o=e.memoizedProps;try{i.nodeValue=o}catch(t){Mf(e,e.return,t)}}break;case 3:if(ml(t,e),vl(e),4&a&&null!==s&&s.memoizedState.isDehydrated)try{Wt(t.containerInfo)}catch(t){Mf(e,e.return,t)}break;case 4:default:ml(t,e),vl(e);break;case 13:ml(t,e),vl(e),8192&(i=e.child).flags&&(o=null!==i.memoizedState,i.stateNode.isHidden=o,!o||null!==i.alternate&&null!==i.alternate.memoizedState||(Wl=Je())),4&a&&hl(e);break;case 22:if(u=null!==s&&null!==s.memoizedState,1&e.mode?(Jn=(c=Jn)||u,ml(t,e),Jn=c):ml(t,e),vl(e),8192&a){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!u&&0!=(1&e.mode))for(Xn=e,u=e.child;null!==u;){for(p=Xn=u;null!==Xn;){switch(d=(g=Xn).child,g.tag){case 0:case 11:case 14:case 15:al(4,g,g.return);break;case 1:el(g,g.return);var h=g.stateNode;if("function"==typeof h.componentWillUnmount){a=g,s=g.return;try{t=a,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(e){Mf(a,s,e)}}break;case 5:el(g,g.return);break;case 22:if(null!==g.memoizedState){Sl(p);continue}}null!==d?(d.return=g,Xn=d):Sl(p)}u=u.sibling}e:for(u=null,p=e;;){if(5===p.tag){if(null===u){u=p;try{i=p.stateNode,c?"function"==typeof(o=i.style).setProperty?o.setProperty("display","none","important"):o.display="none":(l=p.stateNode,n=null!=(f=p.memoizedProps.style)&&f.hasOwnProperty("display")?f.display:null,l.style.display=he("display",n))}catch(t){Mf(e,e.return,t)}}}else if(6===p.tag){if(null===u)try{p.stateNode.nodeValue=c?"":p.memoizedProps}catch(t){Mf(e,e.return,t)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;u===p&&(u=null),p=p.return}u===p&&(u=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:ml(t,e),vl(e),4&a&&hl(e);case 21:}}function vl(e){var t=e.flags;if(2&t){try{e:{for(var s=e.return;null!==s;){if(nl(s)){var a=s;break e}s=s.return}throw Error(r(160))}switch(a.tag){case 5:var i=a.stateNode;32&a.flags&&(pe(i,""),a.flags&=-33),cl(e,ll(e),i);break;case 3:case 4:var o=a.stateNode.containerInfo;fl(e,ll(e),o);break;default:throw Error(r(161))}}catch(t){Mf(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bl(e,t,s){Xn=e,Pl(e,t,s)}function Pl(e,t,s){for(var a=0!=(1&e.mode);null!==Xn;){var i=Xn,r=i.child;if(22===i.tag&&a){var o=null!==i.memoizedState||Yn;if(!o){var n=i.alternate,l=null!==n&&null!==n.memoizedState||Jn;n=Yn;var f=Jn;if(Yn=o,(Jn=l)&&!f)for(Xn=i;null!==Xn;)l=(o=Xn).child,22===o.tag&&null!==o.memoizedState?kl(i):null!==l?(l.return=o,Xn=l):kl(i);for(;null!==r;)Xn=r,Pl(r,t,s),r=r.sibling;Xn=i,Yn=n,Jn=f}wl(e)}else 0!=(8772&i.subtreeFlags)&&null!==r?(r.return=i,Xn=r):wl(e)}}function wl(e){for(;null!==Xn;){var t=Xn;if(0!=(8772&t.flags)){var s=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Jn||il(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Jn)if(null===s)a.componentDidMount();else{var i=t.elementType===t.type?s.memoizedProps:hr(t.type,s.memoizedProps);a.componentDidUpdate(i,s.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&zr(t,o,a);break;case 3:var n=t.updateQueue;if(null!==n){if(s=null,null!==t.child)switch(t.child.tag){case 5:case 1:s=t.child.stateNode}zr(t,n,s)}break;case 5:var l=t.stateNode;if(null===s&&4&t.flags){s=l;var f=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":f.autoFocus&&s.focus();break;case"img":f.src&&(s.src=f.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var u=c.memoizedState;if(null!==u){var p=u.dehydrated;null!==p&&Wt(p)}}}break;default:throw Error(r(163))}Jn||512&t.flags&&rl(t)}catch(e){Mf(t,t.return,e)}}if(t===e){Xn=null;break}if(null!==(s=t.sibling)){s.return=t.return,Xn=s;break}Xn=t.return}}function Sl(e){for(;null!==Xn;){var t=Xn;if(t===e){Xn=null;break}var s=t.sibling;if(null!==s){s.return=t.return,Xn=s;break}Xn=t.return}}function kl(e){for(;null!==Xn;){var t=Xn;try{switch(t.tag){case 0:case 11:case 15:var s=t.return;try{il(4,t)}catch(e){Mf(t,s,e)}break;case 1:var a=t.stateNode;if("function"==typeof a.componentDidMount){var i=t.return;try{a.componentDidMount()}catch(e){Mf(t,i,e)}}var r=t.return;try{rl(t)}catch(e){Mf(t,r,e)}break;case 5:var o=t.return;try{rl(t)}catch(e){Mf(t,o,e)}}}catch(e){Mf(t,t.return,e)}if(t===e){Xn=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Xn=n;break}Xn=t.return}}var Tl,xl=Math.ceil,Ml=P.ReactCurrentDispatcher,Dl=P.ReactCurrentOwner,Al=P.ReactCurrentBatchConfig,Bl=0,Ol=null,Cl=null,Fl=0,Nl=0,El=ki(0),Gl=0,Il=null,zl=0,Rl=0,Hl=0,_l=null,Ll=null,Wl=0,Zl=1/0,Ul=null,jl=!1,Kl=null,Vl=null,ql=!1,$l=null,Yl=0,Jl=0,Ql=null,Xl=-1,ef=0;function tf(){return 0!=(6&Bl)?Je():-1!==Xl?Xl:Xl=Je()}function sf(e){return 0==(1&e.mode)?1:0!=(2&Bl)&&0!==Fl?Fl&-Fl:null!==dr.transition?(0===ef&&(ef=ht()),ef):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function af(e,t,s,a){if(50<Jl)throw Jl=0,Ql=null,Error(r(185));yt(e,s,a),0!=(2&Bl)&&e===Ol||(e===Ol&&(0==(2&Bl)&&(Rl|=s),4===Gl&&ff(e,Fl)),rf(e,a),1===s&&0===Bl&&0==(1&t.mode)&&(Zl=Je()+500,Ri&&Li()))}function rf(e,t){var s=e.callbackNode;!function(e,t){for(var s=e.suspendedLanes,a=e.pingedLanes,i=e.expirationTimes,r=e.pendingLanes;0<r;){var o=31-ot(r),n=1<<o,l=i[o];-1===l?0!=(n&s)&&0==(n&a)||(i[o]=gt(n,t)):l<=t&&(e.expiredLanes|=n),r&=~n}}(e,t);var a=pt(e,e===Ol?Fl:0);if(0===a)null!==s&&qe(s),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=s&&qe(s),1===t)0===e.tag?function(e){Ri=!0,_i(e)}(cf.bind(null,e)):_i(cf.bind(null,e)),ri((function(){0==(6&Bl)&&Li()})),s=null;else{switch(Pt(a)){case 1:s=Xe;break;case 4:s=et;break;case 16:default:s=tt;break;case 536870912:s=at}s=Cf(s,of.bind(null,e))}e.callbackPriority=t,e.callbackNode=s}}function of(e,t){if(Xl=-1,ef=0,0!=(6&Bl))throw Error(r(327));var s=e.callbackNode;if(Tf()&&e.callbackNode!==s)return null;var a=pt(e,e===Ol?Fl:0);if(0===a)return null;if(0!=(30&a)||0!=(a&e.expiredLanes)||t)t=vf(e,a);else{t=a;var i=Bl;Bl|=2;var o=mf();for(Ol===e&&Fl===t||(Ul=null,Zl=Je()+500,df(e,t));;)try{Pf();break}catch(t){hf(e,t)}Pr(),Ml.current=o,Bl=i,null!==Cl?t=0:(Ol=null,Fl=0,t=Gl)}if(0!==t){if(2===t&&0!==(i=dt(e))&&(a=i,t=nf(e,i)),1===t)throw s=Il,df(e,0),ff(e,a),rf(e,Je()),s;if(6===t)ff(e,a);else{if(i=e.current.alternate,0==(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var s=t.updateQueue;if(null!==s&&null!==(s=s.stores))for(var a=0;a<s.length;a++){var i=s[a],r=i.getSnapshot;i=i.value;try{if(!oa(r(),i))return!1}catch(e){return!1}}}if(s=t.child,16384&t.subtreeFlags&&null!==s)s.return=t,t=s;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(i)&&(2===(t=vf(e,a))&&0!==(o=dt(e))&&(a=o,t=nf(e,o)),1===t))throw s=Il,df(e,0),ff(e,a),rf(e,Je()),s;switch(e.finishedWork=i,e.finishedLanes=a,t){case 0:case 1:throw Error(r(345));case 2:case 5:kf(e,Ll,Ul);break;case 3:if(ff(e,a),(130023424&a)===a&&10<(t=Wl+500-Je())){if(0!==pt(e,0))break;if(((i=e.suspendedLanes)&a)!==a){tf(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=si(kf.bind(null,e,Ll,Ul),t);break}kf(e,Ll,Ul);break;case 4:if(ff(e,a),(4194240&a)===a)break;for(t=e.eventTimes,i=-1;0<a;){var n=31-ot(a);o=1<<n,(n=t[n])>i&&(i=n),a&=~o}if(a=i,10<(a=(120>(a=Je()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*xl(a/1960))-a)){e.timeoutHandle=si(kf.bind(null,e,Ll,Ul),a);break}kf(e,Ll,Ul);break;default:throw Error(r(329))}}}return rf(e,Je()),e.callbackNode===s?of.bind(null,e):null}function nf(e,t){var s=_l;return e.current.memoizedState.isDehydrated&&(df(e,t).flags|=256),2!==(e=vf(e,t))&&(t=Ll,Ll=s,null!==t&&lf(t)),e}function lf(e){null===Ll?Ll=e:Ll.push.apply(Ll,e)}function ff(e,t){for(t&=~Hl,t&=~Rl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var s=31-ot(t),a=1<<s;e[s]=-1,t&=~a}}function cf(e){if(0!=(6&Bl))throw Error(r(327));Tf();var t=pt(e,0);if(0==(1&t))return rf(e,Je()),null;var s=vf(e,t);if(0!==e.tag&&2===s){var a=dt(e);0!==a&&(t=a,s=nf(e,a))}if(1===s)throw s=Il,df(e,0),ff(e,t),rf(e,Je()),s;if(6===s)throw Error(r(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,kf(e,Ll,Ul),rf(e,Je()),null}function uf(e,t){var s=Bl;Bl|=1;try{return e(t)}finally{0===(Bl=s)&&(Zl=Je()+500,Ri&&Li())}}function pf(e){null!==$l&&0===$l.tag&&0==(6&Bl)&&Tf();var t=Bl;Bl|=1;var s=Al.transition,a=bt;try{if(Al.transition=null,bt=1,e)return e()}finally{bt=a,Al.transition=s,0==(6&(Bl=t))&&Li()}}function gf(){Nl=El.current,Ti(El)}function df(e,t){e.finishedWork=null,e.finishedLanes=0;var s=e.timeoutHandle;if(-1!==s&&(e.timeoutHandle=-1,ai(s)),null!==Cl)for(s=Cl.return;null!==s;){var a=s;switch(er(a),a.tag){case 1:null!=(a=a.type.childContextTypes)&&Fi();break;case 3:ao(),Ti(Ai),Ti(Di),fo();break;case 5:ro(a);break;case 4:ao();break;case 13:case 19:Ti(oo);break;case 10:wr(a.type._context);break;case 22:case 23:gf()}s=s.return}if(Ol=e,Cl=e=Gf(e.current,null),Fl=Nl=t,Gl=0,Il=null,Hl=Rl=zl=0,Ll=_l=null,null!==xr){for(t=0;t<xr.length;t++)if(null!==(a=(s=xr[t]).interleaved)){s.interleaved=null;var i=a.next,r=s.pending;if(null!==r){var o=r.next;r.next=i,a.next=o}s.pending=a}xr=null}return e}function hf(e,t){for(;;){var s=Cl;try{if(Pr(),co.current=on,yo){for(var a=go.memoizedState;null!==a;){var i=a.queue;null!==i&&(i.pending=null),a=a.next}yo=!1}if(po=0,mo=ho=go=null,vo=!1,bo=0,Dl.current=null,null===s||null===s.return){Gl=1,Il=t,Cl=null;break}e:{var o=e,n=s.return,l=s,f=t;if(t=Fl,l.flags|=32768,null!==f&&"object"==typeof f&&"function"==typeof f.then){var c=f,u=l,p=u.tag;if(0==(1&u.mode)&&(0===p||11===p||15===p)){var g=u.alternate;g?(u.updateQueue=g.updateQueue,u.memoizedState=g.memoizedState,u.lanes=g.lanes):(u.updateQueue=null,u.memoizedState=null)}var d=yn(n);if(null!==d){d.flags&=-257,vn(d,n,l,0,t),1&d.mode&&mn(o,c,t),f=c;var h=(t=d).updateQueue;if(null===h){var m=new Set;m.add(f),t.updateQueue=m}else h.add(f);break e}if(0==(1&t)){mn(o,c,t),yf();break e}f=Error(r(426))}else if(ar&&1&l.mode){var y=yn(n);if(null!==y){0==(65536&y.flags)&&(y.flags|=256),vn(y,n,l,0,t),gr(cn(f,l));break e}}o=f=cn(f,l),4!==Gl&&(Gl=2),null===_l?_l=[o]:_l.push(o),o=n;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Gr(o,dn(0,f,t));break e;case 1:l=f;var v=o.type,b=o.stateNode;if(0==(128&o.flags)&&("function"==typeof v.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===Vl||!Vl.has(b)))){o.flags|=65536,t&=-t,o.lanes|=t,Gr(o,hn(o,l,t));break e}}o=o.return}while(null!==o)}Sf(s)}catch(e){t=e,Cl===s&&null!==s&&(Cl=s=s.return);continue}break}}function mf(){var e=Ml.current;return Ml.current=on,null===e?on:e}function yf(){0!==Gl&&3!==Gl&&2!==Gl||(Gl=4),null===Ol||0==(268435455&zl)&&0==(268435455&Rl)||ff(Ol,Fl)}function vf(e,t){var s=Bl;Bl|=2;var a=mf();for(Ol===e&&Fl===t||(Ul=null,df(e,t));;)try{bf();break}catch(t){hf(e,t)}if(Pr(),Bl=s,Ml.current=a,null!==Cl)throw Error(r(261));return Ol=null,Fl=0,Gl}function bf(){for(;null!==Cl;)wf(Cl)}function Pf(){for(;null!==Cl&&!$e();)wf(Cl)}function wf(e){var t=Tl(e.alternate,e,Nl);e.memoizedProps=e.pendingProps,null===t?Sf(e):Cl=t,Dl.current=null}function Sf(e){var t=e;do{var s=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(s=qn(s,t,Nl)))return void(Cl=s)}else{if(null!==(s=$n(s,t)))return s.flags&=32767,void(Cl=s);if(null===e)return Gl=6,void(Cl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Cl=t);Cl=t=e}while(null!==t);0===Gl&&(Gl=5)}function kf(e,t,s){var a=bt,i=Al.transition;try{Al.transition=null,bt=1,function(e,t,s,a){do{Tf()}while(null!==$l);if(0!=(6&Bl))throw Error(r(327));s=e.finishedWork;var i=e.finishedLanes;if(null===s)return null;if(e.finishedWork=null,e.finishedLanes=0,s===e.current)throw Error(r(177));e.callbackNode=null,e.callbackPriority=0;var o=s.lanes|s.childLanes;if(function(e,t){var s=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<s;){var i=31-ot(s),r=1<<i;t[i]=0,a[i]=-1,e[i]=-1,s&=~r}}(e,o),e===Ol&&(Cl=Ol=null,Fl=0),0==(2064&s.subtreeFlags)&&0==(2064&s.flags)||ql||(ql=!0,Cf(tt,(function(){return Tf(),null}))),o=0!=(15990&s.flags),0!=(15990&s.subtreeFlags)||o){o=Al.transition,Al.transition=null;var n=bt;bt=1;var l=Bl;Bl|=4,Dl.current=null,function(e,t){if(Xa=Ut,pa(e=ua())){if("selectionStart"in e)var s={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(s=(s=e.ownerDocument)&&s.defaultView||window).getSelection&&s.getSelection();if(a&&0!==a.rangeCount){s=a.anchorNode;var i=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{s.nodeType,o.nodeType}catch(e){s=null;break e}var n=0,l=-1,f=-1,c=0,u=0,p=e,g=null;t:for(;;){for(var d;p!==s||0!==i&&3!==p.nodeType||(l=n+i),p!==o||0!==a&&3!==p.nodeType||(f=n+a),3===p.nodeType&&(n+=p.nodeValue.length),null!==(d=p.firstChild);)g=p,p=d;for(;;){if(p===e)break t;if(g===s&&++c===i&&(l=n),g===o&&++u===a&&(f=n),null!==(d=p.nextSibling))break;g=(p=g).parentNode}p=d}s=-1===l||-1===f?null:{start:l,end:f}}else s=null}s=s||{start:0,end:0}}else s=null;for(ei={focusedElem:e,selectionRange:s},Ut=!1,Xn=t;null!==Xn;)if(e=(t=Xn).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Xn=e;else for(;null!==Xn;){t=Xn;try{var h=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var m=h.memoizedProps,y=h.memoizedState,v=t.stateNode,b=v.getSnapshotBeforeUpdate(t.elementType===t.type?m:hr(t.type,m),y);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var P=t.stateNode.containerInfo;1===P.nodeType?P.textContent="":9===P.nodeType&&P.documentElement&&P.removeChild(P.documentElement);break;default:throw Error(r(163))}}catch(e){Mf(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Xn=e;break}Xn=t.return}h=sl,sl=!1}(e,s),yl(s,e),ga(ei),Ut=!!Xa,ei=Xa=null,e.current=s,bl(s,e,i),Ye(),Bl=l,bt=n,Al.transition=o}else e.current=s;if(ql&&(ql=!1,$l=e,Yl=i),0===(o=e.pendingLanes)&&(Vl=null),function(e){if(rt&&"function"==typeof rt.onCommitFiberRoot)try{rt.onCommitFiberRoot(it,e,void 0,128==(128&e.current.flags))}catch(e){}}(s.stateNode),rf(e,Je()),null!==t)for(a=e.onRecoverableError,s=0;s<t.length;s++)a((i=t[s]).value,{componentStack:i.stack,digest:i.digest});if(jl)throw jl=!1,e=Kl,Kl=null,e;0!=(1&Yl)&&0!==e.tag&&Tf(),0!=(1&(o=e.pendingLanes))?e===Ql?Jl++:(Jl=0,Ql=e):Jl=0,Li()}(e,t,s,a)}finally{Al.transition=i,bt=a}return null}function Tf(){if(null!==$l){var e=Pt(Yl),t=Al.transition,s=bt;try{if(Al.transition=null,bt=16>e?16:e,null===$l)var a=!1;else{if(e=$l,$l=null,Yl=0,0!=(6&Bl))throw Error(r(331));var i=Bl;for(Bl|=4,Xn=e.current;null!==Xn;){var o=Xn,n=o.child;if(0!=(16&Xn.flags)){var l=o.deletions;if(null!==l){for(var f=0;f<l.length;f++){var c=l[f];for(Xn=c;null!==Xn;){var u=Xn;switch(u.tag){case 0:case 11:case 15:al(8,u,o)}var p=u.child;if(null!==p)p.return=u,Xn=p;else for(;null!==Xn;){var g=(u=Xn).sibling,d=u.return;if(ol(u),u===c){Xn=null;break}if(null!==g){g.return=d,Xn=g;break}Xn=d}}}var h=o.alternate;if(null!==h){var m=h.child;if(null!==m){h.child=null;do{var y=m.sibling;m.sibling=null,m=y}while(null!==m)}}Xn=o}}if(0!=(2064&o.subtreeFlags)&&null!==n)n.return=o,Xn=n;else e:for(;null!==Xn;){if(0!=(2048&(o=Xn).flags))switch(o.tag){case 0:case 11:case 15:al(9,o,o.return)}var v=o.sibling;if(null!==v){v.return=o.return,Xn=v;break e}Xn=o.return}}var b=e.current;for(Xn=b;null!==Xn;){var P=(n=Xn).child;if(0!=(2064&n.subtreeFlags)&&null!==P)P.return=n,Xn=P;else e:for(n=b;null!==Xn;){if(0!=(2048&(l=Xn).flags))try{switch(l.tag){case 0:case 11:case 15:il(9,l)}}catch(e){Mf(l,l.return,e)}if(l===n){Xn=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Xn=w;break e}Xn=l.return}}if(Bl=i,Li(),rt&&"function"==typeof rt.onPostCommitFiberRoot)try{rt.onPostCommitFiberRoot(it,e)}catch(e){}a=!0}return a}finally{bt=s,Al.transition=t}}return!1}function xf(e,t,s){e=Nr(e,t=dn(0,t=cn(s,t),1),1),t=tf(),null!==e&&(yt(e,1,t),rf(e,t))}function Mf(e,t,s){if(3===e.tag)xf(e,e,s);else for(;null!==t;){if(3===t.tag){xf(t,e,s);break}if(1===t.tag){var a=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof a.componentDidCatch&&(null===Vl||!Vl.has(a))){t=Nr(t,e=hn(t,e=cn(s,e),1),1),e=tf(),null!==t&&(yt(t,1,e),rf(t,e));break}}t=t.return}}function Df(e,t,s){var a=e.pingCache;null!==a&&a.delete(t),t=tf(),e.pingedLanes|=e.suspendedLanes&s,Ol===e&&(Fl&s)===s&&(4===Gl||3===Gl&&(130023424&Fl)===Fl&&500>Je()-Wl?df(e,0):Hl|=s),rf(e,t)}function Af(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ct,0==(130023424&(ct<<=1))&&(ct=4194304)));var s=tf();null!==(e=Ar(e,t))&&(yt(e,t,s),rf(e,s))}function Bf(e){var t=e.memoizedState,s=0;null!==t&&(s=t.retryLane),Af(e,s)}function Of(e,t){var s=0;switch(e.tag){case 13:var a=e.stateNode,i=e.memoizedState;null!==i&&(s=i.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(r(314))}null!==a&&a.delete(t),Af(e,s)}function Cf(e,t){return Ve(e,t)}function Ff(e,t,s,a){this.tag=e,this.key=s,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Nf(e,t,s,a){return new Ff(e,t,s,a)}function Ef(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Gf(e,t){var s=e.alternate;return null===s?((s=Nf(e.tag,t,e.key,e.mode)).elementType=e.elementType,s.type=e.type,s.stateNode=e.stateNode,s.alternate=e,e.alternate=s):(s.pendingProps=t,s.type=e.type,s.flags=0,s.subtreeFlags=0,s.deletions=null),s.flags=14680064&e.flags,s.childLanes=e.childLanes,s.lanes=e.lanes,s.child=e.child,s.memoizedProps=e.memoizedProps,s.memoizedState=e.memoizedState,s.updateQueue=e.updateQueue,t=e.dependencies,s.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},s.sibling=e.sibling,s.index=e.index,s.ref=e.ref,s}function If(e,t,s,a,i,o){var n=2;if(a=e,"function"==typeof e)Ef(e)&&(n=1);else if("string"==typeof e)n=5;else e:switch(e){case k:return zf(s.children,i,o,t);case T:n=8,i|=8;break;case x:return(e=Nf(12,s,t,2|i)).elementType=x,e.lanes=o,e;case B:return(e=Nf(13,s,t,i)).elementType=B,e.lanes=o,e;case O:return(e=Nf(19,s,t,i)).elementType=O,e.lanes=o,e;case N:return Rf(s,i,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case M:n=10;break e;case D:n=9;break e;case A:n=11;break e;case C:n=14;break e;case F:n=16,a=null;break e}throw Error(r(130,null==e?e:typeof e,""))}return(t=Nf(n,s,t,i)).elementType=e,t.type=a,t.lanes=o,t}function zf(e,t,s,a){return(e=Nf(7,e,a,t)).lanes=s,e}function Rf(e,t,s,a){return(e=Nf(22,e,a,t)).elementType=N,e.lanes=s,e.stateNode={isHidden:!1},e}function Hf(e,t,s){return(e=Nf(6,e,null,t)).lanes=s,e}function _f(e,t,s){return(t=Nf(4,null!==e.children?e.children:[],e.key,t)).lanes=s,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Lf(e,t,s,a,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=mt(0),this.expirationTimes=mt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=mt(0),this.identifierPrefix=a,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function Wf(e,t,s,a,i,r,o,n,l){return e=new Lf(e,t,s,n,l),1===t?(t=1,!0===r&&(t|=8)):t=0,r=Nf(3,null,null,t),e.current=r,r.stateNode=e,r.memoizedState={element:a,isDehydrated:s,cache:null,transitions:null,pendingSuspenseBoundaries:null},Or(r),e}function Zf(e){if(!e)return Mi;e:{if(We(e=e._reactInternals)!==e||1!==e.tag)throw Error(r(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ci(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(r(171))}if(1===e.tag){var s=e.type;if(Ci(s))return Ei(e,s,t)}return t}function Uf(e,t,s,a){var i=t.current,r=tf(),o=sf(i);return s=Zf(s),null===t.context?t.context=s:t.pendingContext=s,(t=Fr(r,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Nr(i,t,o))&&(af(e,i,o,r),Er(e,i,o)),o}function jf(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Kf(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var s=e.retryLane;e.retryLane=0!==s&&s<t?s:t}}function Vf(e,t){Kf(e,t),(e=e.alternate)&&Kf(e,t)}Tl=function(e,t,s){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ai.current)Pn=!0;else{if(0==(e.lanes&s)&&0==(128&t.flags))return Pn=!1,function(e,t,s){switch(t.tag){case 3:On(t),pr();break;case 5:io(t);break;case 1:Ci(t.type)&&Gi(t);break;case 4:so(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,i=t.memoizedProps.value;xi(mr,a._currentValue),a._currentValue=i;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(xi(oo,1&oo.current),t.flags|=128,null):0!=(s&t.child.childLanes)?Rn(e,t,s):(xi(oo,1&oo.current),null!==(e=jn(e,t,s))?e.sibling:null);xi(oo,1&oo.current);break;case 19:if(a=0!=(s&t.childLanes),0!=(128&e.flags)){if(a)return Zn(e,t,s);t.flags|=128}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),xi(oo,oo.current),a)break;return null;case 22:case 23:return t.lanes=0,xn(e,t,s)}return jn(e,t,s)}(e,t,s);Pn=0!=(131072&e.flags)}else Pn=!1,ar&&0!=(1048576&t.flags)&&Qi(t,ji,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Un(e,t),e=t.pendingProps;var i=Oi(t,Di.current);kr(t,s),i=ko(null,t,a,e,i,s);var o=To();return t.flags|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ci(a)?(o=!0,Gi(t)):o=!1,t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,Or(t),i.updater=_r,t.stateNode=i,i._reactInternals=t,Ur(t,a,e,s),t=Bn(null,t,a,!0,o,s)):(t.tag=0,ar&&o&&Xi(t),wn(null,t,i,s),t=t.child),t;case 16:a=t.elementType;e:{switch(Un(e,t),e=t.pendingProps,a=(i=a._init)(a._payload),t.type=a,i=t.tag=function(e){if("function"==typeof e)return Ef(e)?1:0;if(null!=e){if((e=e.$$typeof)===A)return 11;if(e===C)return 14}return 2}(a),e=hr(a,e),i){case 0:t=Dn(null,t,a,e,s);break e;case 1:t=An(null,t,a,e,s);break e;case 11:t=Sn(null,t,a,e,s);break e;case 14:t=kn(null,t,a,hr(a.type,e),s);break e}throw Error(r(306,a,""))}return t;case 0:return a=t.type,i=t.pendingProps,Dn(e,t,a,i=t.elementType===a?i:hr(a,i),s);case 1:return a=t.type,i=t.pendingProps,An(e,t,a,i=t.elementType===a?i:hr(a,i),s);case 3:e:{if(On(t),null===e)throw Error(r(387));a=t.pendingProps,i=(o=t.memoizedState).element,Cr(e,t),Ir(t,a,null,s);var n=t.memoizedState;if(a=n.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:n.cache,pendingSuspenseBoundaries:n.pendingSuspenseBoundaries,transitions:n.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Cn(e,t,a,s,i=cn(Error(r(423)),t));break e}if(a!==i){t=Cn(e,t,a,s,i=cn(Error(r(424)),t));break e}for(sr=li(t.stateNode.containerInfo.firstChild),tr=t,ar=!0,ir=null,s=Yr(t,null,a,s),t.child=s;s;)s.flags=-3&s.flags|4096,s=s.sibling}else{if(pr(),a===i){t=jn(e,t,s);break e}wn(e,t,a,s)}t=t.child}return t;case 5:return io(t),null===e&&lr(t),a=t.type,i=t.pendingProps,o=null!==e?e.memoizedProps:null,n=i.children,ti(a,i)?n=null:null!==o&&ti(a,o)&&(t.flags|=32),Mn(e,t),wn(e,t,n,s),t.child;case 6:return null===e&&lr(t),null;case 13:return Rn(e,t,s);case 4:return so(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=$r(t,null,a,s):wn(e,t,a,s),t.child;case 11:return a=t.type,i=t.pendingProps,Sn(e,t,a,i=t.elementType===a?i:hr(a,i),s);case 7:return wn(e,t,t.pendingProps,s),t.child;case 8:case 12:return wn(e,t,t.pendingProps.children,s),t.child;case 10:e:{if(a=t.type._context,i=t.pendingProps,o=t.memoizedProps,n=i.value,xi(mr,a._currentValue),a._currentValue=n,null!==o)if(oa(o.value,n)){if(o.children===i.children&&!Ai.current){t=jn(e,t,s);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var l=o.dependencies;if(null!==l){n=o.child;for(var f=l.firstContext;null!==f;){if(f.context===a){if(1===o.tag){(f=Fr(-1,s&-s)).tag=2;var c=o.updateQueue;if(null!==c){var u=(c=c.shared).pending;null===u?f.next=f:(f.next=u.next,u.next=f),c.pending=f}}o.lanes|=s,null!==(f=o.alternate)&&(f.lanes|=s),Sr(o.return,s,t),l.lanes|=s;break}f=f.next}}else if(10===o.tag)n=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(n=o.return))throw Error(r(341));n.lanes|=s,null!==(l=n.alternate)&&(l.lanes|=s),Sr(n,s,t),n=o.sibling}else n=o.child;if(null!==n)n.return=o;else for(n=o;null!==n;){if(n===t){n=null;break}if(null!==(o=n.sibling)){o.return=n.return,n=o;break}n=n.return}o=n}wn(e,t,i.children,s),t=t.child}return t;case 9:return i=t.type,a=t.pendingProps.children,kr(t,s),a=a(i=Tr(i)),t.flags|=1,wn(e,t,a,s),t.child;case 14:return i=hr(a=t.type,t.pendingProps),kn(e,t,a,i=hr(a.type,i),s);case 15:return Tn(e,t,t.type,t.pendingProps,s);case 17:return a=t.type,i=t.pendingProps,i=t.elementType===a?i:hr(a,i),Un(e,t),t.tag=1,Ci(a)?(e=!0,Gi(t)):e=!1,kr(t,s),Wr(t,a,i),Ur(t,a,i,s),Bn(null,t,a,!0,e,s);case 19:return Zn(e,t,s);case 22:return xn(e,t,s)}throw Error(r(156,t.tag))};"function"==typeof reportError&&reportError;function qf(e){this._internalRoot=e}function $f(e){this._internalRoot=e}function Yf(){}function Jf(e,t,s,a,i){var r=s._reactRootContainer;if(r){var o=r;if("function"==typeof i){var n=i;i=function(){var e=jf(o);n.call(e)}}Uf(t,o,e,i)}else o=function(e,t,s,a,i){if(i){if("function"==typeof a){var r=a;a=function(){var e=jf(o);r.call(e)}}var o=function(e,t,s,a,i,r,o,n,l){return(e=Wf(s,a,!0,e,0,r,0,n,l)).context=Zf(null),s=e.current,(r=Fr(a=tf(),i=sf(s))).callback=null!=t?t:null,Nr(s,r,i),e.current.lanes=i,yt(e,i,a),rf(e,a),e}(t,a,e,0,null,!1,0,"",Yf);return e._reactRootContainer=o,e[gi]=o.current,La(8===e.nodeType?e.parentNode:e),pf(),o}for(;i=e.lastChild;)e.removeChild(i);if("function"==typeof a){var n=a;a=function(){var e=jf(l);n.call(e)}}var l=Wf(e,0,!1,null,0,!1,0,"",Yf);return e._reactRootContainer=l,e[gi]=l.current,La(8===e.nodeType?e.parentNode:e),pf((function(){Uf(t,l,s,a)})),l}(s,t,e,i,a);return jf(o)}$f.prototype.render=qf.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(r(409));Uf(e,t,null,null)},$f.prototype.unmount=qf.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;pf((function(){Uf(null,e,null,null)})),t[gi]=null}},$f.prototype.unstable_scheduleHydration=function(e){if(e){var t=Tt();e={blockedOn:null,target:e,priority:t};for(var s=0;s<Nt.length&&0!==t&&t<Nt[s].priority;s++);Nt.splice(s,0,e),0===s&&zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var s=ut(t.pendingLanes);0!==s&&(vt(t,1|s),rf(t,Je()),0==(6&Bl)&&(Zl=Je()+500,Li()))}break;case 13:pf((function(){var t=Ar(e,1);if(null!==t){var s=tf();af(t,e,1,s)}})),Vf(e,1)}},St=function(e){if(13===e.tag){var t=Ar(e,134217728);null!==t&&af(t,e,134217728,tf()),Vf(e,134217728)}},kt=function(e){if(13===e.tag){var t=sf(e),s=Ar(e,t);null!==s&&af(s,e,t,tf()),Vf(e,t)}},Tt=function(){return bt},xt=function(e,t){var s=bt;try{return bt=e,t()}finally{bt=s}},Se=function(e,t,s){switch(t){case"input":if(Q(e,s),t=s.name,"radio"===s.type&&null!=t){for(s=e;s.parentNode;)s=s.parentNode;for(s=s.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<s.length;t++){var a=s[t];if(a!==e&&a.form===e.form){var i=Pi(a);if(!i)throw Error(r(90));V(a),Q(a,i)}}}break;case"textarea":re(e,s);break;case"select":null!=(t=s.value)&&se(e,!!s.multiple,t,!1)}},Ae=uf,Be=pf;var Qf={findFiberByHostInstance:yi,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},Xf={bundleType:Qf.bundleType,version:Qf.version,rendererPackageName:Qf.rendererPackageName,rendererConfig:Qf.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:P.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:Qf.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ec=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ec.isDisabled&&ec.supportsFiber)try{it=ec.inject(Xf),rt=ec}catch(ce){}}t.render=function(e,t,s){if(!function(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}(t))throw Error(r(200));return Jf(null,e,t,!1,s)},t.unstable_batchedUpdates=uf},3935:(e,t,s)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=s(4448)},9921:(e,t)=>{"use strict";var s=60103,a=60106,i=60107,r=60108,o=60114,n=60109,l=60110,f=60112,c=60113,u=60120,p=60115,g=60116;if("function"==typeof Symbol&&Symbol.for){var d=Symbol.for;s=d("react.element"),a=d("react.portal"),i=d("react.fragment"),r=d("react.strict_mode"),o=d("react.profiler"),n=d("react.provider"),l=d("react.context"),f=d("react.forward_ref"),c=d("react.suspense"),u=d("react.suspense_list"),p=d("react.memo"),g=d("react.lazy"),d("react.block"),d("react.server.block"),d("react.fundamental"),d("react.debug_trace_mode"),d("react.legacy_hidden")}t.isContextConsumer=function(e){return function(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case s:switch(e=e.type){case i:case o:case r:case c:case u:return e;default:switch(e=e&&e.$$typeof){case l:case f:case g:case p:case n:return e;default:return t}}case a:return t}}}(e)===l}},9864:(e,t,s)=>{"use strict";e.exports=s(9921)},8928:(e,t,s)=>{"use strict";s.d(t,{zt:()=>c,$j:()=>Z});var a=s(7294),i=a.createContext(null),r=function(e){e()},o=function(){return r},n={notify:function(){},get:function(){return[]}};function l(e,t){var s,a=n;function i(){l.onStateChange&&l.onStateChange()}function r(){s||(s=t?t.addNestedSub(i):e.subscribe(i),a=function(){var e=o(),t=null,s=null;return{clear:function(){t=null,s=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],s=t;s;)e.push(s),s=s.next;return e},subscribe:function(e){var a=!0,i=s={callback:e,next:null,prev:s};return i.prev?i.prev.next=i:t=i,function(){a&&null!==t&&(a=!1,i.next?i.next.prev=i.prev:s=i.prev,i.prev?i.prev.next=i.next:t=i.next)}}}}())}var l={addNestedSub:function(e){return r(),a.subscribe(e)},notifyNestedSubs:function(){a.notify()},handleChangeWrapper:i,isSubscribed:function(){return Boolean(s)},trySubscribe:r,tryUnsubscribe:function(){s&&(s(),s=void 0,a.clear(),a=n)},getListeners:function(){return a}};return l}var f="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?a.useLayoutEffect:a.useEffect;const c=function(e){var t=e.store,s=e.context,r=e.children,o=(0,a.useMemo)((function(){var e=l(t);return{store:t,subscription:e}}),[t]),n=(0,a.useMemo)((function(){return t.getState()}),[t]);f((function(){var e=o.subscription;return e.onStateChange=e.notifyNestedSubs,e.trySubscribe(),n!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[o,n]);var c=s||i;return a.createElement(c.Provider,{value:o},r)};function u(){return u=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},u.apply(this,arguments)}function p(e,t){if(null==e)return{};var s,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)s=r[a],t.indexOf(s)>=0||(i[s]=e[s]);return i}var g=s(8679),d=s.n(g),h=s(9864),m=["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"],y=["reactReduxForwardedRef"],v=[],b=[null,null];function P(e,t){var s=e[1];return[t.payload,s+1]}function w(e,t,s){f((function(){return e.apply(void 0,t)}),s)}function S(e,t,s,a,i,r,o){e.current=a,t.current=i,s.current=!1,r.current&&(r.current=null,o())}function k(e,t,s,a,i,r,o,n,l,f){if(e){var c=!1,u=null,p=function(){if(!c){var e,s,p=t.getState();try{e=a(p,i.current)}catch(e){s=e,u=e}s||(u=null),e===r.current?o.current||l():(r.current=e,n.current=e,o.current=!0,f({type:"STORE_UPDATED",payload:{error:s}}))}};return s.onStateChange=p,s.trySubscribe(),p(),function(){if(c=!0,s.tryUnsubscribe(),s.onStateChange=null,u)throw u}}}var T=function(){return[null,0]};function x(e,t){void 0===t&&(t={});var s=t,r=s.getDisplayName,o=void 0===r?function(e){return"ConnectAdvanced("+e+")"}:r,n=s.methodName,f=void 0===n?"connectAdvanced":n,c=s.renderCountProp,g=void 0===c?void 0:c,x=s.shouldHandleStateChanges,M=void 0===x||x,D=s.storeKey,A=void 0===D?"store":D,B=(s.withRef,s.forwardRef),O=void 0!==B&&B,C=s.context,F=void 0===C?i:C,N=p(s,m),E=F;return function(t){var s=t.displayName||t.name||"Component",i=o(s),r=u({},N,{getDisplayName:o,methodName:f,renderCountProp:g,shouldHandleStateChanges:M,storeKey:A,displayName:i,wrappedComponentName:s,WrappedComponent:t}),n=N.pure,c=n?a.useMemo:function(e){return e()};function m(s){var i=(0,a.useMemo)((function(){var e=s.reactReduxForwardedRef,t=p(s,y);return[s.context,e,t]}),[s]),o=i[0],n=i[1],f=i[2],g=(0,a.useMemo)((function(){return o&&o.Consumer&&(0,h.isContextConsumer)(a.createElement(o.Consumer,null))?o:E}),[o,E]),d=(0,a.useContext)(g),m=Boolean(s.store)&&Boolean(s.store.getState)&&Boolean(s.store.dispatch);Boolean(d)&&Boolean(d.store);var x=m?s.store:d.store,D=(0,a.useMemo)((function(){return function(t){return e(t.dispatch,r)}(x)}),[x]),A=(0,a.useMemo)((function(){if(!M)return b;var e=l(x,m?null:d.subscription),t=e.notifyNestedSubs.bind(e);return[e,t]}),[x,m,d]),B=A[0],O=A[1],C=(0,a.useMemo)((function(){return m?d:u({},d,{subscription:B})}),[m,d,B]),F=(0,a.useReducer)(P,v,T),N=F[0][0],G=F[1];if(N&&N.error)throw N.error;var I=(0,a.useRef)(),z=(0,a.useRef)(f),R=(0,a.useRef)(),H=(0,a.useRef)(!1),_=c((function(){return R.current&&f===z.current?R.current:D(x.getState(),f)}),[x,N,f]);w(S,[z,I,H,f,_,R,O]),w(k,[M,x,B,D,z,I,H,R,O,G],[x,B,D]);var L=(0,a.useMemo)((function(){return a.createElement(t,u({},_,{ref:n}))}),[n,t,_]);return(0,a.useMemo)((function(){return M?a.createElement(g.Provider,{value:C},L):L}),[g,L,C])}var x=n?a.memo(m):m;if(x.WrappedComponent=t,x.displayName=m.displayName=i,O){var D=a.forwardRef((function(e,t){return a.createElement(x,u({},e,{reactReduxForwardedRef:t}))}));return D.displayName=i,D.WrappedComponent=t,d()(D,t)}return d()(x,t)}}function M(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function D(e,t){if(M(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var s=Object.keys(e),a=Object.keys(t);if(s.length!==a.length)return!1;for(var i=0;i<s.length;i++)if(!Object.prototype.hasOwnProperty.call(t,s[i])||!M(e[s[i]],t[s[i]]))return!1;return!0}function A(e){return function(t,s){var a=e(t,s);function i(){return a}return i.dependsOnOwnProps=!1,i}}function B(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function O(e,t){return function(t,s){s.displayName;var a=function(e,t){return a.dependsOnOwnProps?a.mapToProps(e,t):a.mapToProps(e)};return a.dependsOnOwnProps=!0,a.mapToProps=function(t,s){a.mapToProps=e,a.dependsOnOwnProps=B(e);var i=a(t,s);return"function"==typeof i&&(a.mapToProps=i,a.dependsOnOwnProps=B(i),i=a(t,s)),i},a}}const C=[function(e){return"function"==typeof e?O(e):void 0},function(e){return e?void 0:A((function(e){return{dispatch:e}}))},function(e){return e&&"object"==typeof e?A((function(t){return function(e,t){var s={},a=function(a){var i=e[a];"function"==typeof i&&(s[a]=function(){return t(i.apply(void 0,arguments))})};for(var i in e)a(i);return s}(e,t)})):void 0}],F=[function(e){return"function"==typeof e?O(e):void 0},function(e){return e?void 0:A((function(){return{}}))}];function N(e,t,s){return u({},s,e,t)}const E=[function(e){return"function"==typeof e?function(e){return function(t,s){s.displayName;var a,i=s.pure,r=s.areMergedPropsEqual,o=!1;return function(t,s,n){var l=e(t,s,n);return o?i&&r(l,a)||(a=l):(o=!0,a=l),a}}}(e):void 0},function(e){return e?void 0:function(){return N}}];var G=["initMapStateToProps","initMapDispatchToProps","initMergeProps"];function I(e,t,s,a){return function(i,r){return s(e(i,r),t(a,r),r)}}function z(e,t,s,a,i){var r,o,n,l,f,c=i.areStatesEqual,u=i.areOwnPropsEqual,p=i.areStatePropsEqual,g=!1;return function(i,d){return g?function(i,g){var d,h,m=!u(g,o),y=!c(i,r,g,o);return r=i,o=g,m&&y?(n=e(r,o),t.dependsOnOwnProps&&(l=t(a,o)),f=s(n,l,o)):m?(e.dependsOnOwnProps&&(n=e(r,o)),t.dependsOnOwnProps&&(l=t(a,o)),f=s(n,l,o)):y?(d=e(r,o),h=!p(d,n),n=d,h&&(f=s(n,l,o)),f):f}(i,d):(n=e(r=i,o=d),l=t(a,o),f=s(n,l,o),g=!0,f)}}function R(e,t){var s=t.initMapStateToProps,a=t.initMapDispatchToProps,i=t.initMergeProps,r=p(t,G),o=s(e,r),n=a(e,r),l=i(e,r);return(r.pure?z:I)(o,n,l,e,r)}var H=["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"];function _(e,t,s){for(var a=t.length-1;a>=0;a--){var i=t[a](e);if(i)return i}return function(t,a){throw new Error("Invalid value of type "+typeof e+" for "+s+" argument when connecting component "+a.wrappedComponentName+".")}}function L(e,t){return e===t}function W(e){var t=void 0===e?{}:e,s=t.connectHOC,a=void 0===s?x:s,i=t.mapStateToPropsFactories,r=void 0===i?F:i,o=t.mapDispatchToPropsFactories,n=void 0===o?C:o,l=t.mergePropsFactories,f=void 0===l?E:l,c=t.selectorFactory,g=void 0===c?R:c;return function(e,t,s,i){void 0===i&&(i={});var o=i,l=o.pure,c=void 0===l||l,d=o.areStatesEqual,h=void 0===d?L:d,m=o.areOwnPropsEqual,y=void 0===m?D:m,v=o.areStatePropsEqual,b=void 0===v?D:v,P=o.areMergedPropsEqual,w=void 0===P?D:P,S=p(o,H),k=_(e,r,"mapStateToProps"),T=_(t,n,"mapDispatchToProps"),x=_(s,f,"mergeProps");return a(g,u({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:k,initMapDispatchToProps:T,initMergeProps:x,pure:c,areStatesEqual:h,areOwnPropsEqual:y,areStatePropsEqual:b,areMergedPropsEqual:w},S))}}const Z=W();var U;U=s(3935).unstable_batchedUpdates,r=U},2408:(e,t)=>{"use strict";var s=Symbol.for("react.element"),a=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),n=Symbol.for("react.provider"),l=Symbol.for("react.context"),f=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),g=Symbol.iterator,d={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,m={};function y(e,t,s){this.props=e,this.context=t,this.refs=m,this.updater=s||d}function v(){}function b(e,t,s){this.props=e,this.context=t,this.refs=m,this.updater=s||d}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var P=b.prototype=new v;P.constructor=b,h(P,y.prototype),P.isPureReactComponent=!0;var w=Array.isArray,S=Object.prototype.hasOwnProperty,k={current:null},T={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,a){var i,r={},o=null,n=null;if(null!=t)for(i in void 0!==t.ref&&(n=t.ref),void 0!==t.key&&(o=""+t.key),t)S.call(t,i)&&!T.hasOwnProperty(i)&&(r[i]=t[i]);var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){for(var f=Array(l),c=0;c<l;c++)f[c]=arguments[c+2];r.children=f}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===r[i]&&(r[i]=l[i]);return{$$typeof:s,type:e,key:o,ref:n,props:r,_owner:k.current}}function M(e){return"object"==typeof e&&null!==e&&e.$$typeof===s}var D=/\/+/g;function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function B(e,t,i,r,o){var n=typeof e;"undefined"!==n&&"boolean"!==n||(e=null);var l=!1;if(null===e)l=!0;else switch(n){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case s:case a:l=!0}}if(l)return o=o(l=e),e=""===r?"."+A(l,0):r,w(o)?(i="",null!=e&&(i=e.replace(D,"$&/")+"/"),B(o,t,i,"",(function(e){return e}))):null!=o&&(M(o)&&(o=function(e,t){return{$$typeof:s,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,i+(!o.key||l&&l.key===o.key?"":(""+o.key).replace(D,"$&/")+"/")+e)),t.push(o)),1;if(l=0,r=""===r?".":r+":",w(e))for(var f=0;f<e.length;f++){var c=r+A(n=e[f],f);l+=B(n,t,i,c,o)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=g&&e[g]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),f=0;!(n=e.next()).done;)l+=B(n=n.value,t,i,c=r+A(n,f++),o);else if("object"===n)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function O(e,t,s){if(null==e)return e;var a=[],i=0;return B(e,a,"","",(function(e){return t.call(s,e,i++)})),a}function C(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},N={transition:null},E={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:N,ReactCurrentOwner:k};t.Children={map:O,forEach:function(e,t,s){O(e,(function(){t.apply(this,arguments)}),s)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!M(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=i,t.Profiler=o,t.PureComponent=b,t.StrictMode=r,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=E,t.cloneElement=function(e,t,a){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var i=h({},e.props),r=e.key,o=e.ref,n=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,n=k.current),void 0!==t.key&&(r=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(f in t)S.call(t,f)&&!T.hasOwnProperty(f)&&(i[f]=void 0===t[f]&&void 0!==l?l[f]:t[f])}var f=arguments.length-2;if(1===f)i.children=a;else if(1<f){l=Array(f);for(var c=0;c<f;c++)l[c]=arguments[c+2];i.children=l}return{$$typeof:s,type:e.type,key:r,ref:o,props:i,_owner:n}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:n,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:f,render:e}},t.isValidElement=M,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:C}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=N.transition;N.transition={};try{e()}finally{N.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,s){return F.current.useImperativeHandle(e,t,s)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,s){return F.current.useReducer(e,t,s)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,s){return F.current.useSyncExternalStore(e,t,s)},t.useTransition=function(){return F.current.useTransition()},t.version="18.2.0"},7294:(e,t,s)=>{"use strict";e.exports=s(2408)},8500:(e,t,s)=>{"use strict";var a=s(4890).qC;t.Uo="undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(0!==arguments.length)return"object"==typeof arguments[0]?a:a.apply(null,arguments)},"undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__},4890:(e,t,s)=>{"use strict";function a(e){return"Minified Redux error #"+e+"; visit https://redux.js.org/Errors?code="+e+" for the full message or use the non-minified dev environment for full errors. "}s.d(t,{MT:()=>n,UY:()=>l,qC:()=>f});var i="function"==typeof Symbol&&Symbol.observable||"@@observable",r=function(){return Math.random().toString(36).substring(7).split("").join(".")},o={INIT:"@@redux/INIT"+r(),REPLACE:"@@redux/REPLACE"+r(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+r()}};function n(e,t,s){var r;if("function"==typeof t&&"function"==typeof s||"function"==typeof s&&"function"==typeof arguments[3])throw new Error(a(0));if("function"==typeof t&&void 0===s&&(s=t,t=void 0),void 0!==s){if("function"!=typeof s)throw new Error(a(1));return s(n)(e,t)}if("function"!=typeof e)throw new Error(a(2));var l=e,f=t,c=[],u=c,p=!1;function g(){u===c&&(u=c.slice())}function d(){if(p)throw new Error(a(3));return f}function h(e){if("function"!=typeof e)throw new Error(a(4));if(p)throw new Error(a(5));var t=!0;return g(),u.push(e),function(){if(t){if(p)throw new Error(a(6));t=!1,g();var s=u.indexOf(e);u.splice(s,1),c=null}}}function m(e){if(!function(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}(e))throw new Error(a(7));if(void 0===e.type)throw new Error(a(8));if(p)throw new Error(a(9));try{p=!0,f=l(f,e)}finally{p=!1}for(var t=c=u,s=0;s<t.length;s++)(0,t[s])();return e}return m({type:o.INIT}),(r={dispatch:m,subscribe:h,getState:d,replaceReducer:function(e){if("function"!=typeof e)throw new Error(a(10));l=e,m({type:o.REPLACE})}})[i]=function(){var e,t=h;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new Error(a(11));function s(){e.next&&e.next(d())}return s(),{unsubscribe:t(s)}}})[i]=function(){return this},e},r}function l(e){for(var t=Object.keys(e),s={},i=0;i<t.length;i++){var r=t[i];"function"==typeof e[r]&&(s[r]=e[r])}var n,l=Object.keys(s);try{!function(e){Object.keys(e).forEach((function(t){var s=e[t];if(void 0===s(void 0,{type:o.INIT}))throw new Error(a(12));if(void 0===s(void 0,{type:o.PROBE_UNKNOWN_ACTION()}))throw new Error(a(13))}))}(s)}catch(e){n=e}return function(e,t){if(void 0===e&&(e={}),n)throw n;for(var i=!1,r={},o=0;o<l.length;o++){var f=l[o],c=s[f],u=e[f],p=c(u,t);if(void 0===p)throw t&&t.type,new Error(a(14));r[f]=p,i=i||p!==u}return(i=i||l.length!==Object.keys(e).length)?r:e}}function f(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}},53:(e,t)=>{"use strict";function s(e,t){var s=e.length;e.push(t);e:for(;0<s;){var a=s-1>>>1,i=e[a];if(!(0<r(i,t)))break e;e[a]=t,e[s]=i,s=a}}function a(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var t=e[0],s=e.pop();if(s!==t){e[0]=s;e:for(var a=0,i=e.length,o=i>>>1;a<o;){var n=2*(a+1)-1,l=e[n],f=n+1,c=e[f];if(0>r(l,s))f<i&&0>r(c,l)?(e[a]=c,e[f]=s,a=f):(e[a]=l,e[n]=s,a=n);else{if(!(f<i&&0>r(c,s)))break e;e[a]=c,e[f]=s,a=f}}}return t}function r(e,t){var s=e.sortIndex-t.sortIndex;return 0!==s?s:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var n=Date,l=n.now();t.unstable_now=function(){return n.now()-l}}var f=[],c=[],u=1,p=null,g=3,d=!1,h=!1,m=!1,y="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function P(e){for(var t=a(c);null!==t;){if(null===t.callback)i(c);else{if(!(t.startTime<=e))break;i(c),t.sortIndex=t.expirationTime,s(f,t)}t=a(c)}}function w(e){if(m=!1,P(e),!h)if(null!==a(f))h=!0,N(S);else{var t=a(c);null!==t&&E(w,t.startTime-e)}}function S(e,s){h=!1,m&&(m=!1,v(M),M=-1),d=!0;var r=g;try{for(P(s),p=a(f);null!==p&&(!(p.expirationTime>s)||e&&!B());){var o=p.callback;if("function"==typeof o){p.callback=null,g=p.priorityLevel;var n=o(p.expirationTime<=s);s=t.unstable_now(),"function"==typeof n?p.callback=n:p===a(f)&&i(f),P(s)}else i(f);p=a(f)}if(null!==p)var l=!0;else{var u=a(c);null!==u&&E(w,u.startTime-s),l=!1}return l}finally{p=null,g=r,d=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var k,T=!1,x=null,M=-1,D=5,A=-1;function B(){return!(t.unstable_now()-A<D)}function O(){if(null!==x){var e=t.unstable_now();A=e;var s=!0;try{s=x(!0,e)}finally{s?k():(T=!1,x=null)}}else T=!1}if("function"==typeof b)k=function(){b(O)};else if("undefined"!=typeof MessageChannel){var C=new MessageChannel,F=C.port2;C.port1.onmessage=O,k=function(){F.postMessage(null)}}else k=function(){y(O,0)};function N(e){x=e,T||(T=!0,k())}function E(e,s){M=y((function(){e(t.unstable_now())}),s)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){h||d||(h=!0,N(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return g},t.unstable_getFirstCallbackNode=function(){return a(f)},t.unstable_next=function(e){switch(g){case 1:case 2:case 3:var t=3;break;default:t=g}var s=g;g=t;try{return e()}finally{g=s}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var s=g;g=e;try{return t()}finally{g=s}},t.unstable_scheduleCallback=function(e,i,r){var o=t.unstable_now();switch(r="object"==typeof r&&null!==r&&"number"==typeof(r=r.delay)&&0<r?o+r:o,e){case 1:var n=-1;break;case 2:n=250;break;case 5:n=1073741823;break;case 4:n=1e4;break;default:n=5e3}return e={id:u++,callback:i,priorityLevel:e,startTime:r,expirationTime:n=r+n,sortIndex:-1},r>o?(e.sortIndex=r,s(c,e),null===a(f)&&e===a(c)&&(m?(v(M),M=-1):m=!0,E(w,r-o))):(e.sortIndex=n,s(f,e),h||d||(h=!0,N(S))),e},t.unstable_shouldYield=B,t.unstable_wrapCallback=function(e){var t=g;return function(){var s=g;g=t;try{return e.apply(this,arguments)}finally{g=s}}}},3840:(e,t,s)=>{"use strict";e.exports=s(53)},9697:(e,t,s)=>{var a;!function(){"use strict";var i={};function r(e,t,s){for(var a=s.data,i=s.width,r=~~e.x,o=~~(e.x+e.width),n=~~e.y,l=~~(e.y+e.height),f=255*e.weight,c=n;c<l;c++)for(var u=r;u<o;u++)a[4*(c*i+u)+3]+=f}function o(e,t,s){for(var a={detail:0,saturation:0,skin:0,boost:0,total:0},i=t.data,r=e.scoreDownSample,o=1/r,l=t.height*r,f=t.width*r,c=t.width,u=0;u<l;u+=r)for(var p=0;p<f;p+=r){var g=4*(~~(u*o)*c+~~(p*o)),d=n(e,s,p,u),h=i[g+1]/255;a.skin+=i[g]/255*(h+e.skinBias)*d,a.detail+=h*d,a.saturation+=i[g+2]/255*(h+e.saturationBias)*d,a.boost+=i[g+3]/255*d}return a.total=(a.detail*e.detailWeight+a.skin*e.skinWeight+a.saturation*e.saturationWeight+a.boost*e.boostWeight)/(s.width*s.height),a}function n(e,t,s,a){if(t.x>s||s>=t.x+t.width||t.y>a||a>=t.y+t.height)return e.outsideImportance;s=(s-t.x)/t.width,a=(a-t.y)/t.height;var i=2*h(.5-s),r=2*h(.5-a),o=Math.max(i-1+e.edgeRadius,0),n=Math.max(r-1+e.edgeRadius,0),l=(o*o+n*n)*e.edgeWeight,f=1.41-m(i*i+r*r);return e.ruleOfThirds&&(f+=1.2*Math.max(0,f+l+.5)*(v(i)+v(r))),f+l}function l(e,t,s,a){var i=m(t*t+s*s+a*a),r=t/i-e.skinColor[0],o=s/i-e.skinColor[1],n=a/i-e.skinColor[2];return 1-m(r*r+o*o+n*n)}function f(e,t,s){this.width=e,this.height=t,this.data=s?new Uint8ClampedArray(s):new Uint8ClampedArray(e*t*4)}function c(e,t){for(var s=e.data,a=e.width,i=Math.floor(e.width/t),r=Math.floor(e.height/t),o=new f(i,r),n=o.data,l=1/(t*t),c=0;c<r;c++)for(var u=0;u<i;u++){for(var p=4*(c*i+u),g=0,d=0,h=0,m=0,y=0,v=0,b=0;b<t;b++)for(var P=0;P<t;P++){var w=4*((c*t+b)*a+(u*t+P));g+=s[w],d+=s[w+1],h+=s[w+2],m+=s[w+3],y=Math.max(y,s[w]),v=Math.max(v,s[w+1])}n[p]=g*l*.5+.5*y,n[p+1]=d*l*.7+.3*v,n[p+2]=h*l,n[p+3]=m*l}return o}function u(e,t){var s=document.createElement("canvas");return s.width=e,s.height=t,s}function p(e){return{open:function(t){var s=t.naturalWidth||t.width,a=t.naturalHeight||t.height,r=e(s,a),o=r.getContext("2d");return!t.naturalWidth||t.naturalWidth==t.width&&t.naturalHeight==t.height?(r.width=t.width,r.height=t.height):(r.width=t.naturalWidth,r.height=t.naturalHeight),o.drawImage(t,0,0),i.Promise.resolve(r)},resample:function(t,s,a){return Promise.resolve(t).then((function(t){var r=e(~~s,~~a);return r.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,r.width,r.height),i.Promise.resolve(r)}))},getData:function(e){return Promise.resolve(e).then((function(e){var t=e.getContext("2d").getImageData(0,0,e.width,e.height);return new f(e.width,e.height,t.data)}))}}}i.Promise="undefined"!=typeof Promise?Promise:function(){throw new Error("No native promises and smartcrop.Promise not set.")},i.DEFAULTS={width:0,height:0,aspect:0,cropWidth:0,cropHeight:0,detailWeight:.2,skinColor:[.78,.57,.44],skinBias:.01,skinBrightnessMin:.2,skinBrightnessMax:1,skinThreshold:.8,skinWeight:1.8,saturationBrightnessMin:.05,saturationBrightnessMax:.9,saturationThreshold:.4,saturationBias:.2,saturationWeight:.1,scoreDownSample:8,step:8,scaleStep:.1,minScale:1,maxScale:1,edgeRadius:.4,edgeWeight:-20,outsideImportance:-.5,boostWeight:100,ruleOfThirds:!0,prescale:!0,imageOperations:null,canvasFactory:u,debug:!1},i.crop=function(e,t,s){var a=y({},i.DEFAULTS,t);a.aspect&&(a.width=a.aspect,a.height=1),null===a.imageOperations&&(a.imageOperations=p(a.canvasFactory));var n=a.imageOperations,u=1,h=1;return n.open(e,a.input).then((function(e){return a.width&&a.height&&(u=g(e.width/a.width,e.height/a.height),a.cropWidth=~~(a.width*u),a.cropHeight=~~(a.height*u),a.minScale=g(a.maxScale,d(1/u,a.minScale)),!1!==a.prescale&&((h=g(d(256/e.width,256/e.height),1))<1?(e=n.resample(e,e.width*h,e.height*h),a.cropWidth=~~(a.cropWidth*h),a.cropHeight=~~(a.cropHeight*h),a.boost&&(a.boost=a.boost.map((function(e){return{x:~~(e.x*h),y:~~(e.y*h),width:~~(e.width*h),height:~~(e.height*h),weight:e.weight}})))):h=1)),e})).then((function(e){return n.getData(e).then((function(e){for(var t=function(e,t){var s={},a=new f(t.width,t.height);(function(e,t){for(var s=e.data,a=t.data,i=e.width,r=e.height,o=0;o<r;o++)for(var n=0;n<i;n++){var l,f=4*(o*i+n);l=0===n||n>=i-1||0===o||o>=r-1?P(s,f):4*P(s,f)-P(s,f-4*i)-P(s,f-4)-P(s,f+4)-P(s,f+4*i),a[f+1]=l}})(t,a),function(e,t,s){for(var a=t.data,i=s.data,r=t.width,o=t.height,n=0;n<o;n++)for(var f=0;f<r;f++){var c=4*(n*r+f),u=b(a[c],a[c+1],a[c+2])/255,p=l(e,a[c],a[c+1],a[c+2]),g=p>e.skinThreshold,d=u>=e.skinBrightnessMin&&u<=e.skinBrightnessMax;i[c]=g&&d?(p-e.skinThreshold)*(255/(1-e.skinThreshold)):0}}(e,t,a),function(e,t,s){for(var a=t.data,i=s.data,r=t.width,o=t.height,n=0;n<o;n++)for(var l=0;l<r;l++){var f=4*(n*r+l),c=b(a[f],a[f+1],a[f+2])/255,u=w(a[f],a[f+1],a[f+2]),p=u>e.saturationThreshold,g=c>=e.saturationBrightnessMin&&c<=e.saturationBrightnessMax;i[f+2]=g&&p?(u-e.saturationThreshold)*(255/(1-e.saturationThreshold)):0}}(e,t,a),function(e,t){if(e.boost){for(var s=t.data,a=0;a<t.width;a+=4)s[a+3]=0;for(a=0;a<e.boost.length;a++)r(e.boost[a],0,t)}}(e,a);for(var i=c(a,e.scoreDownSample),n=-1/0,u=null,p=function(e,t,s){for(var a=[],i=g(t,s),r=e.cropWidth||i,o=e.cropHeight||i,n=e.maxScale;n>=e.minScale;n-=e.scaleStep)for(var l=0;l+o*n<=s;l+=e.step)for(var f=0;f+r*n<=t;f+=e.step)a.push({x:f,y:l,width:r*n,height:o*n});return a}(e,t.width,t.height),d=0,h=p.length;d<h;d++){var m=p[d];m.score=o(e,i,m),m.score.total>n&&(u=m,n=m.score.total)}return s.topCrop=u,e.debug&&u&&(s.crops=p,s.debugOutput=a,s.debugOptions=e,s.debugTopCrop=y({},s.topCrop)),s}(a,e),i=t.crops||[t.topCrop],n=0,u=i.length;n<u;n++){var p=i[n];p.x=~~(p.x/h),p.y=~~(p.y/h),p.width=~~(p.width/h),p.height=~~(p.height/h)}return s&&s(t),t}))}))},i.isAvailable=function(e){return!!i.Promise&&!((e?e.canvasFactory:u)===u&&!document.createElement("canvas").getContext("2d"))},i.importance=n,i.ImgData=f,i._downSample=c,i._canvasImageOperations=p;var g=Math.min,d=Math.max,h=Math.abs,m=Math.sqrt;function y(e){for(var t=1,s=arguments.length;t<s;t++){var a=arguments[t];if(a)for(var i in a)e[i]=a[i]}return e}function v(e){return e=16*((e-1/3+1)%2*.5-.5),Math.max(1-e*e,0)}function b(e,t,s){return.5126*s+.7152*t+.0722*e}function P(e,t){return b(e[t],e[t+1],e[t+2])}function w(e,t,s){var a=d(e/255,t/255,s/255),i=g(e/255,t/255,s/255);if(a===i)return 0;var r=a-i;return(a+i)/2>.5?r/(2-a-i):r/(a+i)}void 0===(a=function(){return i}.call(t,s,t,e))||(e.exports=a),t.smartcrop=i,e.exports=i}()},3379:e=>{"use strict";var t=[];function s(e){for(var s=-1,a=0;a<t.length;a++)if(t[a].identifier===e){s=a;break}return s}function a(e,a){for(var r={},o=[],n=0;n<e.length;n++){var l=e[n],f=a.base?l[0]+a.base:l[0],c=r[f]||0,u="".concat(f," ").concat(c);r[f]=c+1;var p=s(u),g={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(g);else{var d=i(g,a);a.byIndex=n,t.splice(n,0,{identifier:u,updater:d,references:1})}o.push(u)}return o}function i(e,t){var s=t.domAPI(t);return s.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;s.update(e=t)}else s.remove()}}e.exports=function(e,i){var r=a(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var n=s(r[o]);t[n].references--}for(var l=a(e,i),f=0;f<r.length;f++){var c=s(r[f]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=l}}},569:e=>{"use strict";var t={};e.exports=function(e,s){var a=function(e){if(void 0===t[e]){var s=document.querySelector(e);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(e){s=null}t[e]=s}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(s)}},9216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:(e,t,s)=>{"use strict";e.exports=function(e){var t=s.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(s){!function(e,t,s){var a="";s.supports&&(a+="@supports (".concat(s.supports,") {")),s.media&&(a+="@media ".concat(s.media," {"));var i=void 0!==s.layer;i&&(a+="@layer".concat(s.layer.length>0?" ".concat(s.layer):""," {")),a+=s.css,i&&(a+="}"),s.media&&(a+="}"),s.supports&&(a+="}");var r=s.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,s)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var s=r[e]={id:e,exports:{}};return i[e].call(s.exports,s,s.exports,o),s.exports}o.m=i,o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,o.t=function(s,a){if(1&a&&(s=this(s)),8&a)return s;if("object"==typeof s&&s){if(4&a&&s.__esModule)return s;if(16&a&&"function"==typeof s.then)return s}var i=Object.create(null);o.r(i);var r={};e=e||[null,t({}),t([]),t(t)];for(var n=2&a&&s;"object"==typeof n&&!~e.indexOf(n);n=t(n))Object.getOwnPropertyNames(n).forEach((e=>r[e]=()=>s[e]));return r.default=()=>s,o.d(i,r),i},o.d=(e,t)=>{for(var s in t)o.o(t,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce(((t,s)=>(o.f[s](e,t),t)),[])),o.u=e=>e+".bundle.js",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s={},a="solo-project-pokemon-battle-prep-:",o.l=(e,t,i,r)=>{if(s[e])s[e].push(t);else{var n,l;if(void 0!==i)for(var f=document.getElementsByTagName("script"),c=0;c<f.length;c++){var u=f[c];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==a+i){n=u;break}}n||(l=!0,(n=document.createElement("script")).charset="utf-8",n.timeout=120,o.nc&&n.setAttribute("nonce",o.nc),n.setAttribute("data-webpack",a+i),n.src=e),s[e]=[t];var p=(t,a)=>{n.onerror=n.onload=null,clearTimeout(g);var i=s[e];if(delete s[e],n.parentNode&&n.parentNode.removeChild(n),i&&i.forEach((e=>e(a))),t)return t(a)},g=setTimeout(p.bind(null,void 0,{type:"timeout",target:n}),12e4);n.onerror=p.bind(null,n.onerror),n.onload=p.bind(null,n.onload),l&&document.head.appendChild(n)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var s=t.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{var e={179:0};o.f.j=(t,s)=>{var a=o.o(e,t)?e[t]:void 0;if(0!==a)if(a)s.push(a[2]);else{var i=new Promise(((s,i)=>a=e[t]=[s,i]));s.push(a[2]=i);var r=o.p+o.u(t),n=new Error;o.l(r,(s=>{if(o.o(e,t)&&(0!==(a=e[t])&&(e[t]=void 0),a)){var i=s&&("load"===s.type?"missing":s.type),r=s&&s.target&&s.target.src;n.message="Loading chunk "+t+" failed.\n("+i+": "+r+")",n.name="ChunkLoadError",n.type=i,n.request=r,a[1](n)}}),"chunk-"+t,t)}};var t=(t,s)=>{var a,i,[r,n,l]=s,f=0;if(r.some((t=>0!==e[t]))){for(a in n)o.o(n,a)&&(o.m[a]=n[a]);l&&l(o)}for(t&&t(s);f<r.length;f++)i=r[f],o.o(e,i)&&e[i]&&e[i][0](),e[i]=0},s=self.webpackChunksolo_project_pokemon_battle_prep_=self.webpackChunksolo_project_pokemon_battle_prep_||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})(),o.nc=void 0,(()=>{"use strict";var e,t,s=o(7294),a=o.t(s,2),i=o(3935);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},r.apply(this,arguments)}(t=e||(e={})).Pop="POP",t.Push="PUSH",t.Replace="REPLACE";const n="popstate";function l(e,t){if(!1===e||null==e)throw new Error(t)}function f(e,t){return{usr:e.state,key:e.key,idx:t}}function c(e,t,s,a){return void 0===s&&(s=null),r({pathname:"string"==typeof e?e:e.pathname,search:"",hash:""},"string"==typeof t?p(t):t,{state:s,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function u(e){let{pathname:t="/",search:s="",hash:a=""}=e;return s&&"?"!==s&&(t+="?"===s.charAt(0)?s:"?"+s),a&&"#"!==a&&(t+="#"===a.charAt(0)?a:"#"+a),t}function p(e){let t={};if(e){let s=e.indexOf("#");s>=0&&(t.hash=e.substr(s),e=e.substr(0,s));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}var g;function d(e,t,s,a){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(a)+"].  Please separate it out to the `to."+s+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(g||(g={})),new Set(["lazy","caseSensitive","path","id","index","children"]);const h=e=>e.join("/").replace(/\/\/+/g,"/"),m=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",y=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";class v extends Error{}const b=["post","put","patch","delete"],P=(new Set(b),["get",...b]);new Set(P),new Set([301,302,303,307,308]),new Set([307,308]),"undefined"!=typeof window&&void 0!==window.document&&window.document.createElement,Symbol("deferred");"function"==typeof Object.is&&Object.is;const{useState:w,useEffect:S,useLayoutEffect:k,useDebugValue:T}=a;"undefined"==typeof window||void 0===window.document||window.document.createElement,a.useSyncExternalStore;const x=s.createContext(null),M=s.createContext(null),D=s.createContext({outlet:null,matches:[]});function A(){return null!=s.useContext(M)}function B(){A()||l(!1);let{basename:e,navigator:t}=s.useContext(x),{matches:a}=s.useContext(D),{pathname:i}=(A()||l(!1),s.useContext(M).location),o=JSON.stringify(function(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}(a).map((e=>e.pathnameBase))),n=s.useRef(!1);s.useEffect((()=>{n.current=!0}));let f=s.useCallback((function(s,a){if(void 0===a&&(a={}),!n.current)return;if("number"==typeof s)return void t.go(s);let f=function(e,t,s,a){let i;void 0===a&&(a=!1),"string"==typeof e?i=p(e):(i=r({},e),l(!i.pathname||!i.pathname.includes("?"),d("?","pathname","search",i)),l(!i.pathname||!i.pathname.includes("#"),d("#","pathname","hash",i)),l(!i.search||!i.search.includes("#"),d("#","search","hash",i)));let o,n=""===e||""===i.pathname,f=n?"/":i.pathname;if(a||null==f)o=s;else{let e=t.length-1;if(f.startsWith("..")){let t=f.split("/");for(;".."===t[0];)t.shift(),e-=1;i.pathname=t.join("/")}o=e>=0?t[e]:"/"}let c=function(e,t){void 0===t&&(t="/");let{pathname:s,search:a="",hash:i=""}="string"==typeof e?p(e):e,r=s?s.startsWith("/")?s:function(e,t){let s=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?s.length>1&&s.pop():"."!==e&&s.push(e)})),s.length>1?s.join("/"):"/"}(s,t):t;return{pathname:r,search:m(a),hash:y(i)}}(i,o),u=f&&"/"!==f&&f.endsWith("/"),g=(n||"."===f)&&s.endsWith("/");return c.pathname.endsWith("/")||!u&&!g||(c.pathname+="/"),c}(s,JSON.parse(o),i,"path"===a.relative);"/"!==e&&(f.pathname="/"===f.pathname?e:h([e,f.pathname])),(a.replace?t.replace:t.push)(f,a.state,a)}),[e,t,o,i]);return f}class O extends s.Component{constructor(e){super(e),this.state={location:e.location,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location?{error:e.error,location:e.location}:{error:e.error||t.error,location:t.location}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return this.state.error?React.createElement(D.Provider,{value:this.props.routeContext},React.createElement(RouteErrorContext.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}var C,F,N,E,G;function I(t){let{basename:a="/",children:i=null,location:r,navigationType:o=e.Pop,navigator:n,static:f=!1}=t;A()&&l(!1);let c=a.replace(/^\/*/,"/"),u=s.useMemo((()=>({basename:c,navigator:n,static:f})),[c,n,f]);"string"==typeof r&&(r=p(r));let{pathname:g="/",search:d="",hash:h="",state:m=null,key:y="default"}=r,v=s.useMemo((()=>{let e=function(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let s=t.endsWith("/")?t.length-1:t.length,a=e.charAt(s);return a&&"/"!==a?null:e.slice(s)||"/"}(g,c);return null==e?null:{location:{pathname:e,search:d,hash:h,state:m,key:y},navigationType:o}}),[c,g,d,h,m,y,o]);return null==v?null:s.createElement(x.Provider,{value:u},s.createElement(M.Provider,{children:i,value:v}))}!function(e){e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator"}(C||(C={})),function(e){e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator"}(F||(F={})),function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(N||(N={})),new Promise((()=>{}));class z extends s.Component{constructor(e){super(e),this.state={error:null}}static getDerivedStateFromError(e){return{error:e}}componentDidCatch(e,t){console.error("<Await> caught the following error during render",e,t)}render(){let{children:e,errorElement:t,resolve:s}=this.props,a=null,i=N.pending;if(s instanceof Promise)if(this.state.error){N.error;let e=this.state.error;Promise.reject().catch((()=>{})),Object.defineProperty(a,"_tracked",{get:()=>!0}),Object.defineProperty(a,"_error",{get:()=>e})}else s._tracked?void 0!==a._error?N.error:void 0!==a._data?N.success:N.pending:(N.pending,Object.defineProperty(s,"_tracked",{get:()=>!0}),s.then((e=>Object.defineProperty(s,"_data",{get:()=>e})),(e=>Object.defineProperty(s,"_error",{get:()=>e}))));else N.success,Promise.resolve(),Object.defineProperty(a,"_tracked",{get:()=>!0}),Object.defineProperty(a,"_data",{get:()=>s});if(i===N.error&&a._error instanceof AbortedDeferredError)throw neverSettledPromise;if(i===N.error&&!t)throw a._error;if(i===N.error)return React.createElement(AwaitContext.Provider,{value:a,children:t});if(i===N.success)return React.createElement(AwaitContext.Provider,{value:a,children:e});throw a}}function R(t){let{basename:a,children:i,window:o}=t,p=s.useRef();null==p.current&&(p.current=function(t){return void 0===t&&(t={}),function(t,s,a,i){void 0===i&&(i={});let{window:o=document.defaultView,v5Compat:p=!1}=i,g=o.history,d=e.Pop,h=null,m=y();function y(){return(g.state||{idx:null}).idx}function v(){d=e.Pop;let t=y(),s=null==t?null:t-m;m=t,h&&h({action:d,location:P.location,delta:s})}function b(e){let t="null"!==o.location.origin?o.location.origin:o.location.href,s="string"==typeof e?e:u(e);return l(t,"No window.location.(origin|href) available to create URL for href: "+s),new URL(s,t)}null==m&&(m=0,g.replaceState(r({},g.state,{idx:m}),""));let P={get action(){return d},get location(){return t(o,g)},listen(e){if(h)throw new Error("A history only accepts one active listener");return o.addEventListener(n,v),h=e,()=>{o.removeEventListener(n,v),h=null}},createHref:e=>s(o,e),createURL:b,encodeLocation(e){let t=b(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(t,s){d=e.Push;let i=c(P.location,t,s);a&&a(i,t),m=y()+1;let r=f(i,m),n=P.createHref(i);try{g.pushState(r,"",n)}catch(e){o.location.assign(n)}p&&h&&h({action:d,location:P.location,delta:1})},replace:function(t,s){d=e.Replace;let i=c(P.location,t,s);a&&a(i,t),m=y();let r=f(i,m),o=P.createHref(i);g.replaceState(r,"",o),p&&h&&h({action:d,location:P.location,delta:0})},go:e=>g.go(e)};return P}((function(e,t){let{pathname:s,search:a,hash:i}=e.location;return c("",{pathname:s,search:a,hash:i},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"==typeof t?t:u(t)}),null,t)}({window:o,v5Compat:!0}));let g=p.current,[d,h]=s.useState({action:g.action,location:g.location});return s.useLayoutEffect((()=>g.listen(h)),[g]),s.createElement(I,{basename:a,children:i,location:d.location,navigationType:d.action,navigator:g})}"undefined"!=typeof window&&void 0!==window.document&&window.document.createElement,function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmitImpl="useSubmitImpl",e.UseFetcher="useFetcher"}(E||(E={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(G||(G={}));var H=o(8928),_=o(87);function L(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return W(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?W(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function W(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const Z=(0,H.$j)(null,(function(e){return{showTypingChart:function(){return e(_.Rn())}}}))((function(e){var t=L((0,s.useState)({status:!1,message:"please enter an username"}),2),a=t[0],i=t[1],r=L((0,s.useState)(!1),2),o=r[0],n=r[1],l=L((0,s.useState)(!1),2),f=l[0],c=l[1],u=e.show?"modal display-block":"modal display-none";return s.createElement("div",{className:u},s.createElement("form",{className:"modal-form",id:"signup-modal-form",onSubmit:function(e){!function(e){e.preventDefault(),i({status:!1,message:"please enter an username"}),n(!1);var t=document.getElementById("signup-username").value,s=document.getElementById("signup-password").value;console.log("inside submitHandler, ",t,s),""!==t?""!==s?fetch("/api/signup",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json, text/plain"},body:JSON.stringify({username:t,password:s})}).then((function(e){return e.json()})).then((function(e){console.log("inside SignupModal submitHandler, ",e),"success"===e.status?(alert("signup successful"),document.getElementById("signup-modal-form").remove(),c(!0)):"username already exists"===e.status&&i({status:!0,message:e.status})})):n(!0):i({status:!0,message:"please enter an username"})}(e)}},s.createElement("h2",null,"sign up"),a.status?s.createElement("h4",null,a.message):null,s.createElement("div",{className:"username-div"},s.createElement("label",null,"username: "),s.createElement("input",{type:"text",name:"username",placeholder:"",id:"signup-username"})),s.createElement("div",{className:"password-div"},s.createElement("label",null,"password"),s.createElement("input",{type:"text",name:"password",placeholder:"",id:"signup-password"})),o?s.createElement("h4",null,"please enter a password"):null,s.createElement("input",{type:"submit",id:"login-button",value:"sign up"})),s.createElement("button",{className:"close-button",onClick:function(t){console.log("in closeModal"),console.log(e),e.toggle(!1),i(!1),n(!1),c(!1)}},"close"),f?s.createElement("h3",null,"account successfully created!"):null)}));function U(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return j(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?j(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function j(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const K=(0,H.$j)((function(e){return{isLoggedIn:e.userFunctions.isLoggedIn,username:e.userFunctions.username,loginLoading:e.userFunctions.loginLoading}}),(function(e){return{toggleLoginLoading:function(){return e(_.Gg())},updateYourTeamKey:function(t){return e(_.LO(t))}}}))((function(e){var t=U((0,s.useState)({status:!1,message:null}),2),a=t[0],i=t[1],r=U((0,s.useState)({status:!1,message:null}),2),o=r[0],n=r[1],l=e.show?"modal display-block":"modal display-none";return s.createElement("div",{className:l},s.createElement("form",{className:"modal-form",onSubmit:function(t){!function(t){t.preventDefault(),console.log("inside submitHandler from logging in...");var s=document.getElementById("login-username").value,a=document.getElementById("login-password").value;""===s?(n({status:!1,message:null}),i({status:!0,message:"please enter an username"})):""===a?(i({status:!1,message:null}),n({status:!0,message:"please enter a password"})):(e.toggleLoginLoading(),fetch("/api/login",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json, text/plain"},body:JSON.stringify({username:s,password:a})}).then((function(e){return e.json()})).then((function(t){if(console.log("inside LoginModal submitHandler, ",t),"success"===t.status){var s=function(e){console.log("in parseResponse, ",e),e=e.savedTeams,e=JSON.stringify(e).replace("&apos;","'"),e=JSON.parse(e);for(var t=1;t<=Object.keys(e).length;t++)for(var s="team_"+t,a=1;a<=6;a++){var i="mon"+a;if(!e[s][i])break;e[s][i].activeAbility.description=e[s][i].activeAbility.description.replace("&apos;","'")}return e}(t.savedTeams);console.log("INSIDE LOGIN FETCH REQUEST RESPONSE: ",s),s=function(e){for(var t=1;t<=Object.keys(e).length;t++)for(var s="team_"+t,a=1;a<=6;a++){var i="mon"+a;if(!e[s][i])break;if(e[s][i].activeAbility.description=e[s][i].activeAbility.description.replace(/[\/\(\)\']/g,"&apos;"),e[s][i].item.item&&(e[s][i].item.url=decodeURIComponent(e[s][i].item.url)),e[s][i].activeMove.moveObj.name&&(e[s][i].activeMove.moveObj.typeImageUrl=decodeURIComponent(e[s][i].activeMove.moveObj.typeImageUrl),e[s][i].activeMove.moveObj.categoryUrl=decodeURIComponent(e[s][i].activeMove.moveObj.categoryUrl)),e[s][i].moves.move_1.name||e[s][i].moves.move_2.name||e[s][i].moves.move_3.name||e[s][i].moves.move_4.name)for(var r=1;r<=4;r++)e[s][i].moves["move_"+r].name&&(e[s][i].moves["move_"+r].typeImageUrl=decodeURIComponent(e[s][i].moves["move_"+r].typeImageUrl),e[s][i].moves["move_"+r].categoryImageUrl=decodeURIComponent(e[s][i].moves["move_"+r].categoryImageUrl))}return e}(s),e.changeUserState(t.username,s),e.updateYourTeamKey("team_"+(Object.keys(s).length+1)),e.toggleLoginLoading(),e.toggleShowLoginModal()}else"username not found"===t.status||"please enter an username"===t.status?i({status:!0,message:t.status}):"incorrect password"===t.status&&(e.toggleLoginLoading(),n({status:!0,message:t.status}))})))}(t)}},s.createElement("h2",null,"login"),a.status?s.createElement("h4",null,a.message):null,s.createElement("div",{className:"username-div"},s.createElement("label",null,"username: "),s.createElement("input",{type:"text",name:"username",placeholder:"",id:"login-username"})),s.createElement("div",{className:"password-div"},s.createElement("label",null,"password"),s.createElement("input",{type:"text",name:"password",placeholder:"",id:"login-password"})),o.status?s.createElement("h4",null,o.message):null,s.createElement("input",{type:"submit",id:"login-button",value:"log in"})),s.createElement("button",{className:"close-button",onClick:function(t){console.log("in closeModal"),e.toggle(!1)}},"close"),e.loginLoading?s.createElement("img",{id:"login-loading-gif",src:"/static/loading.gif",alt:""}):null)}));function V(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return q(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?q(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function q(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const $=(0,H.$j)((function(e){return{isLoggedIn:e.userFunctions.isLoggedIn,username:e.userFunctions.username}}),(function(e){return{toggleMainDivState:function(t){return e(_.ax(t))},changeUserState:function(t,s){return e(_.r_(t,s))}}}))((function(e){var t=V((0,s.useState)(!1),2),a=t[0],i=t[1],r=V((0,s.useState)(!1),2),o=r[0],n=r[1],l=V((0,s.useState)(!0),2),f=l[0],c=l[1],u=B();(0,s.useEffect)((function(){d()}),[e.isLoggedIn]);var p=function(){i(!a);var t=document.getElementById("main-div").className;console.log("inside toggleShowLoginModal, ",t),o?n(!1):e.toggleMainDivState(t)},g=function(){n(!o);var t=document.getElementById("main-div").className;console.log("inside toggleShowSignupModal, ",t),a?i(!1):e.toggleMainDivState(t)},d=function(){e.isLoggedIn&&f&&(c(!1),u("/users/"+e.username))};return s.createElement("div",{className:"top-nav-bar"},s.createElement("div",{className:"top-nav-bar-buttons"},e.isLoggedIn?s.createElement("div",{className:"after-login-username-display"},s.createElement("h2",null,"welcome back! "),s.createElement("h3",null,e.username),s.createElement("button",{onClick:function(){console.log("logout clicked"),console.log("inside logout "),document.cookie="PokemonTeamBuilder=; expires=Thu, 01 Jan 1970 00:00:01 GMT;",u("../../"),location.reload()}},"log out")):s.createElement("div",{className:"top-nav-bar-buttons-inner"},s.createElement("button",{onClick:function(){p()}},"login"),s.createElement("button",{onClick:function(){g()}},"signup"))),s.createElement(K,{show:a,toggle:p,changeUserState:e.changeUserState,toggleShowLoginModal:p}),s.createElement(Z,{show:o,toggle:g}))})),Y=(0,H.$j)(null,(function(e){return{addPokemon:function(t){return e(_.Sq(t))},updatePokemon:function(t,s){return e(_.M1(t,s))}}}))((function(e){return(0,s.useEffect)((function(){var e,t,s=document.getElementById("search-bar-element"),a=document.getElementById("pokemon-search-name");console.log("yayeet in useEffect",s),a.addEventListener("focus",(function(){console.log("FOCUSING"),s.classList.add("search-bar-element-focused")})),a.addEventListener("blur",(function(){s.classList.remove("search-bar-element-focused")})),e=(new Date).getHours(),t=document.querySelector("body"),console.log(e),document.querySelector("body"),e>=5&&e<3?t.classList.add("morning"):t.classList.add("afternoon")})),s.createElement("div",{className:"search-bar-element",id:"search-bar-element"},s.createElement("form",{onSubmit:function(t){t.preventDefault();var s=document.getElementById("pokemon-search-name"),a=s.value;a=a.trim(),fetch("/api/fetchPokeAPI",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json, text/plain"},body:JSON.stringify({pokemon:a})}).then((function(e){return e.json()})).then((function(t){console.log("fetchPokeAPI ",t),e.updatePokemon(a,t),404===t.error&&alert("Pokemon not found! Please check your spelling and try again :)"),s.value="",s.focus()}))}},s.createElement("input",{type:"text",id:"pokemon-search-name"}),s.createElement("button",{type:"submit"}," ",s.createElement("span",null," Search")," ")))}));var J=o(3300),Q=o.n(J),X=o(9697),ee=o.n(X);function te(e){return te="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},te(e)}function se(){se=function(){return e};var e={},t=Object.prototype,s=t.hasOwnProperty,a=Object.defineProperty||function(e,t,s){e[t]=s.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",n=i.toStringTag||"@@toStringTag";function l(e,t,s){return Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,s){return e[t]=s}}function f(e,t,s,i){var r=t&&t.prototype instanceof p?t:p,o=Object.create(r.prototype),n=new x(i||[]);return a(o,"_invoke",{value:w(e,s,n)}),o}function c(e,t,s){try{return{type:"normal",arg:e.call(t,s)}}catch(e){return{type:"throw",arg:e}}}e.wrap=f;var u={};function p(){}function g(){}function d(){}var h={};l(h,r,(function(){return this}));var m=Object.getPrototypeOf,y=m&&m(m(M([])));y&&y!==t&&s.call(y,r)&&(h=y);var v=d.prototype=p.prototype=Object.create(h);function b(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function i(a,r,o,n){var l=c(e[a],e,r);if("throw"!==l.type){var f=l.arg,u=f.value;return u&&"object"==te(u)&&s.call(u,"__await")?t.resolve(u.__await).then((function(e){i("next",e,o,n)}),(function(e){i("throw",e,o,n)})):t.resolve(u).then((function(e){f.value=e,o(f)}),(function(e){return i("throw",e,o,n)}))}n(l.arg)}var r;a(this,"_invoke",{value:function(e,s){function a(){return new t((function(t,a){i(e,s,t,a)}))}return r=r?r.then(a,a):a()}})}function w(e,t,s){var a="suspendedStart";return function(i,r){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw r;return{value:void 0,done:!0}}for(s.method=i,s.arg=r;;){var o=s.delegate;if(o){var n=S(o,s);if(n){if(n===u)continue;return n}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if("suspendedStart"===a)throw a="completed",s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);a="executing";var l=c(e,t,s);if("normal"===l.type){if(a=s.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:s.done}}"throw"===l.type&&(a="completed",s.method="throw",s.arg=l.arg)}}}function S(e,t){var s=t.method,a=e.iterator[s];if(void 0===a)return t.delegate=null,"throw"===s&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==s&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+s+"' method")),u;var i=c(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,u;var r=i.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function x(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function M(e){if(e){var t=e[r];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(s.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:D}}function D(){return{value:void 0,done:!0}}return g.prototype=d,a(v,"constructor",{value:d,configurable:!0}),a(d,"constructor",{value:g,configurable:!0}),g.displayName=l(d,n,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,l(e,n,"GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},b(P.prototype),l(P.prototype,o,(function(){return this})),e.AsyncIterator=P,e.async=function(t,s,a,i,r){void 0===r&&(r=Promise);var o=new P(f(t,s,a,i),r);return e.isGeneratorFunction(s)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},b(v),l(v,n,"Generator"),l(v,r,(function(){return this})),l(v,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),s=[];for(var a in t)s.push(a);return s.reverse(),function e(){for(;s.length;){var a=s.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=M,x.prototype={constructor:x,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&s.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(s,a){return o.type="throw",o.arg=e,t.next=s,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],o=r.completion;if("root"===r.tryLoc)return a("end");if(r.tryLoc<=this.prev){var n=s.call(r,"catchLoc"),l=s.call(r,"finallyLoc");if(n&&l){if(this.prev<r.catchLoc)return a(r.catchLoc,!0);if(this.prev<r.finallyLoc)return a(r.finallyLoc)}else if(n){if(this.prev<r.catchLoc)return a(r.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return a(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&s.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var r=i;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var o=r?r.completion:{};return o.type=e,o.arg=t,r?(this.method="next",this.next=r.finallyLoc,u):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var s=this.tryEntries[t];if(s.finallyLoc===e)return this.complete(s.completion,s.afterLoc),T(s),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var s=this.tryEntries[t];if(s.tryLoc===e){var a=s.completion;if("throw"===a.type){var i=a.arg;T(s)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,s){return this.delegate={iterator:M(e),resultName:t,nextLoc:s},"next"===this.method&&(this.arg=void 0),u}},e}function ae(e,t,s,a,i,r,o){try{var n=e[r](o),l=n.value}catch(e){return void s(e)}n.done?t(l):Promise.resolve(l).then(a,i)}function ie(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const re=function(e){var t,a,i=(t=(0,s.useState)(null),a=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(t,a)||function(e,t){if(e){if("string"==typeof e)return ie(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?ie(e,t):void 0}}(t,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=i[0],o=i[1],n=function(){var t,s=(t=se().mark((function t(s){var a,i,r,n,l,f,c,u,p,g,d,h;return se().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=s.target,i=a.naturalWidth,r=a.naturalHeight,n={width:e.maxWidth,height:e.maxHeight},t.next=4,ee()(i,r,n);case 4:l=t.sent,f=l.topCrop,c=f.x,u=f.y,p=f.width,g=f.height,(d=document.createElement("canvas")).width=p,d.height=g,d.getContext("2d").drawImage(s.target,c,u,p,g,0,0,p,g),h=d.toDataURL(),o(h),console.log(h);case 14:case"end":return t.stop()}}),t)})),function(){var e=this,s=arguments;return new Promise((function(a,i){var r=t.apply(e,s);function o(e){ae(r,a,i,o,n,"next",e)}function n(e){ae(r,a,i,o,n,"throw",e)}o(void 0)}))});return function(e){return s.apply(this,arguments)}}();return s.createElement("img",{src:r||e.src,alt:e.alt,onLoad:n,style:{maxWidth:e.maxWidth,maxHeight:e.maxHeight}})};function oe(e){return oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},oe(e)}function ne(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function le(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==oe(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==oe(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===oe(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function fe(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return ce(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?ce(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ce(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const ue=(0,H.$j)(null,(function(e){return{updateGif:function(t){return e(actions.updateGif(t))}}}))((function(e){var t=fe((0,s.useState)("/static/loading.gif"),2),a=t[0],i=t[1],r=fe((0,s.useState)(!0),2),o=(r[0],r[1],""),n=null;e.className&&(o=e.className),e.onClick&&(n=e.onClick),e.id;var l="https://play.pokemonshowdown.com/sprites/xyani/"+e.pokemon.toLowerCase()+".gif";if("hoshi"===e.pokemon)return"still"===e.type?s.createElement("img",{src:"/static/hoshi-hat.png",className:o}):s.createElement("img",{src:"/static/hoshi.png",className:o});if("lina"===e.pokemon)return s.createElement("img",{src:"/static/lina.png",className:o});if("still"===e.type){console.log("should be still");var f="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/".concat(e.pokedexId,".png");return s.createElement(re,{src:f,maxWidth:"105%",maxHeight:"105%"})}return(0,s.useEffect)((function(){var t=!1;localStorage.getItem("pokemon-team-builder-cache")||localStorage.setItem("pokemon-team-builder-cache","{}");var s=JSON.parse(localStorage.getItem("pokemon-team-builder-cache"));if(s.hasOwnProperty(e.pokemon.toLowerCase())){var a=s[e.pokemon.toLowerCase()].url;i(a),t=!0}return"still"===e.type?(console.log("should be still"),console.log(stillUrl),void i(stillUrl)):(t||Q()("/api/testForNewerSprites",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json, text/plain"},body:JSON.stringify({url:l,pokemon:e.pokemon.toLowerCase()})}).then((function(e){return e.json()})).then((function(t){if(console.log("testForNewerSprites FRONT ",t),i(t.url),localStorage.getItem("pokemon-team-builder-cache")){var s=function(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?ne(Object(s),!0).forEach((function(t){le(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):ne(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}({},JSON.parse(localStorage.getItem("pokemon-team-builder-cache")));s[e.pokemon.toLowerCase()]={url:t.url},localStorage.setItem("pokemon-team-builder-cache",JSON.stringify(s))}else localStorage.setItem("pokemon-team-builder-cache","{}");404===t.error&&alert("ERROR in testForNewerSprites FRONT ")})),function(){t=!0})}),[]),s.createElement("img",{onClick:n,className:o,id:e.id,src:a})}));function pe(e){return e+.5|0}const ge=(e,t,s)=>Math.max(Math.min(e,s),t);function de(e){return ge(pe(2.55*e),0,255)}function he(e){return ge(pe(255*e),0,255)}function me(e){return ge(pe(e/2.55)/100,0,1)}function ye(e){return ge(pe(100*e),0,100)}const ve={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15},be=[..."0123456789ABCDEF"],Pe=e=>be[15&e],we=e=>be[(240&e)>>4]+be[15&e],Se=e=>(240&e)>>4==(15&e),ke=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function Te(e,t,s){const a=t*Math.min(s,1-s),i=(t,i=(t+e/30)%12)=>s-a*Math.max(Math.min(i-3,9-i,1),-1);return[i(0),i(8),i(4)]}function xe(e,t,s){const a=(a,i=(a+e/60)%6)=>s-s*t*Math.max(Math.min(i,4-i,1),0);return[a(5),a(3),a(1)]}function Me(e,t,s){const a=Te(e,1,.5);let i;for(t+s>1&&(i=1/(t+s),t*=i,s*=i),i=0;i<3;i++)a[i]*=1-t-s,a[i]+=t;return a}function De(e){const t=e.r/255,s=e.g/255,a=e.b/255,i=Math.max(t,s,a),r=Math.min(t,s,a),o=(i+r)/2;let n,l,f;return i!==r&&(f=i-r,l=o>.5?f/(2-i-r):f/(i+r),n=function(e,t,s,a,i){return e===i?(t-s)/a+(t<s?6:0):t===i?(s-e)/a+2:(e-t)/a+4}(t,s,a,f,i),n=60*n+.5),[0|n,l||0,o]}function Ae(e,t,s,a){return(Array.isArray(t)?e(t[0],t[1],t[2]):e(t,s,a)).map(he)}function Be(e,t,s){return Ae(Te,e,t,s)}function Oe(e){return(e%360+360)%360}const Ce={x:"dark",Z:"light",Y:"re",X:"blu",W:"gr",V:"medium",U:"slate",A:"ee",T:"ol",S:"or",B:"ra",C:"lateg",D:"ights",R:"in",Q:"turquois",E:"hi",P:"ro",O:"al",N:"le",M:"de",L:"yello",F:"en",K:"ch",G:"arks",H:"ea",I:"ightg",J:"wh"},Fe={OiceXe:"f0f8ff",antiquewEte:"faebd7",aqua:"ffff",aquamarRe:"7fffd4",azuY:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"0",blanKedOmond:"ffebcd",Xe:"ff",XeviTet:"8a2be2",bPwn:"a52a2a",burlywood:"deb887",caMtXe:"5f9ea0",KartYuse:"7fff00",KocTate:"d2691e",cSO:"ff7f50",cSnflowerXe:"6495ed",cSnsilk:"fff8dc",crimson:"dc143c",cyan:"ffff",xXe:"8b",xcyan:"8b8b",xgTMnPd:"b8860b",xWay:"a9a9a9",xgYF:"6400",xgYy:"a9a9a9",xkhaki:"bdb76b",xmagFta:"8b008b",xTivegYF:"556b2f",xSange:"ff8c00",xScEd:"9932cc",xYd:"8b0000",xsOmon:"e9967a",xsHgYF:"8fbc8f",xUXe:"483d8b",xUWay:"2f4f4f",xUgYy:"2f4f4f",xQe:"ced1",xviTet:"9400d3",dAppRk:"ff1493",dApskyXe:"bfff",dimWay:"696969",dimgYy:"696969",dodgerXe:"1e90ff",fiYbrick:"b22222",flSOwEte:"fffaf0",foYstWAn:"228b22",fuKsia:"ff00ff",gaRsbSo:"dcdcdc",ghostwEte:"f8f8ff",gTd:"ffd700",gTMnPd:"daa520",Way:"808080",gYF:"8000",gYFLw:"adff2f",gYy:"808080",honeyMw:"f0fff0",hotpRk:"ff69b4",RdianYd:"cd5c5c",Rdigo:"4b0082",ivSy:"fffff0",khaki:"f0e68c",lavFMr:"e6e6fa",lavFMrXsh:"fff0f5",lawngYF:"7cfc00",NmoncEffon:"fffacd",ZXe:"add8e6",ZcSO:"f08080",Zcyan:"e0ffff",ZgTMnPdLw:"fafad2",ZWay:"d3d3d3",ZgYF:"90ee90",ZgYy:"d3d3d3",ZpRk:"ffb6c1",ZsOmon:"ffa07a",ZsHgYF:"20b2aa",ZskyXe:"87cefa",ZUWay:"778899",ZUgYy:"778899",ZstAlXe:"b0c4de",ZLw:"ffffe0",lime:"ff00",limegYF:"32cd32",lRF:"faf0e6",magFta:"ff00ff",maPon:"800000",VaquamarRe:"66cdaa",VXe:"cd",VScEd:"ba55d3",VpurpN:"9370db",VsHgYF:"3cb371",VUXe:"7b68ee",VsprRggYF:"fa9a",VQe:"48d1cc",VviTetYd:"c71585",midnightXe:"191970",mRtcYam:"f5fffa",mistyPse:"ffe4e1",moccasR:"ffe4b5",navajowEte:"ffdead",navy:"80",Tdlace:"fdf5e6",Tive:"808000",TivedBb:"6b8e23",Sange:"ffa500",SangeYd:"ff4500",ScEd:"da70d6",pOegTMnPd:"eee8aa",pOegYF:"98fb98",pOeQe:"afeeee",pOeviTetYd:"db7093",papayawEp:"ffefd5",pHKpuff:"ffdab9",peru:"cd853f",pRk:"ffc0cb",plum:"dda0dd",powMrXe:"b0e0e6",purpN:"800080",YbeccapurpN:"663399",Yd:"ff0000",Psybrown:"bc8f8f",PyOXe:"4169e1",saddNbPwn:"8b4513",sOmon:"fa8072",sandybPwn:"f4a460",sHgYF:"2e8b57",sHshell:"fff5ee",siFna:"a0522d",silver:"c0c0c0",skyXe:"87ceeb",UXe:"6a5acd",UWay:"708090",UgYy:"708090",snow:"fffafa",sprRggYF:"ff7f",stAlXe:"4682b4",tan:"d2b48c",teO:"8080",tEstN:"d8bfd8",tomato:"ff6347",Qe:"40e0d0",viTet:"ee82ee",JHt:"f5deb3",wEte:"ffffff",wEtesmoke:"f5f5f5",Lw:"ffff00",LwgYF:"9acd32"};let Ne;const Ee=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/,Ge=e=>e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055,Ie=e=>e<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4);function ze(e,t,s){if(e){let a=De(e);a[t]=Math.max(0,Math.min(a[t]+a[t]*s,0===t?360:1)),a=Be(a),e.r=a[0],e.g=a[1],e.b=a[2]}}function Re(e,t){return e?Object.assign(t||{},e):e}function He(e){var t={r:0,g:0,b:0,a:255};return Array.isArray(e)?e.length>=3&&(t={r:e[0],g:e[1],b:e[2],a:255},e.length>3&&(t.a=he(e[3]))):(t=Re(e,{r:0,g:0,b:0,a:1})).a=he(t.a),t}function _e(e){return"r"===e.charAt(0)?function(e){const t=Ee.exec(e);let s,a,i,r=255;if(t){if(t[7]!==s){const e=+t[7];r=t[8]?de(e):ge(255*e,0,255)}return s=+t[1],a=+t[3],i=+t[5],s=255&(t[2]?de(s):ge(s,0,255)),a=255&(t[4]?de(a):ge(a,0,255)),i=255&(t[6]?de(i):ge(i,0,255)),{r:s,g:a,b:i,a:r}}}(e):function(e){const t=ke.exec(e);let s,a=255;if(!t)return;t[5]!==s&&(a=t[6]?de(+t[5]):he(+t[5]));const i=Oe(+t[2]),r=+t[3]/100,o=+t[4]/100;return s="hwb"===t[1]?function(e,t,s){return Ae(Me,e,t,s)}(i,r,o):"hsv"===t[1]?function(e,t,s){return Ae(xe,e,t,s)}(i,r,o):Be(i,r,o),{r:s[0],g:s[1],b:s[2],a}}(e)}class Le{constructor(e){if(e instanceof Le)return e;const t=typeof e;let s;var a,i,r;"object"===t?s=He(e):"string"===t&&(r=(a=e).length,"#"===a[0]&&(4===r||5===r?i={r:255&17*ve[a[1]],g:255&17*ve[a[2]],b:255&17*ve[a[3]],a:5===r?17*ve[a[4]]:255}:7!==r&&9!==r||(i={r:ve[a[1]]<<4|ve[a[2]],g:ve[a[3]]<<4|ve[a[4]],b:ve[a[5]]<<4|ve[a[6]],a:9===r?ve[a[7]]<<4|ve[a[8]]:255})),s=i||function(e){Ne||(Ne=function(){const e={},t=Object.keys(Fe),s=Object.keys(Ce);let a,i,r,o,n;for(a=0;a<t.length;a++){for(o=n=t[a],i=0;i<s.length;i++)r=s[i],n=n.replace(r,Ce[r]);r=parseInt(Fe[o],16),e[n]=[r>>16&255,r>>8&255,255&r]}return e}(),Ne.transparent=[0,0,0,0]);const t=Ne[e.toLowerCase()];return t&&{r:t[0],g:t[1],b:t[2],a:4===t.length?t[3]:255}}(e)||_e(e)),this._rgb=s,this._valid=!!s}get valid(){return this._valid}get rgb(){var e=Re(this._rgb);return e&&(e.a=me(e.a)),e}set rgb(e){this._rgb=He(e)}rgbString(){return this._valid?(e=this._rgb)&&(e.a<255?`rgba(${e.r}, ${e.g}, ${e.b}, ${me(e.a)})`:`rgb(${e.r}, ${e.g}, ${e.b})`):void 0;var e}hexString(){return this._valid?(t=(e=>Se(e.r)&&Se(e.g)&&Se(e.b)&&Se(e.a))(e=this._rgb)?Pe:we,e?"#"+t(e.r)+t(e.g)+t(e.b)+((e,t)=>e<255?t(e):"")(e.a,t):void 0):void 0;var e,t}hslString(){return this._valid?function(e){if(!e)return;const t=De(e),s=t[0],a=ye(t[1]),i=ye(t[2]);return e.a<255?`hsla(${s}, ${a}%, ${i}%, ${me(e.a)})`:`hsl(${s}, ${a}%, ${i}%)`}(this._rgb):void 0}mix(e,t){if(e){const s=this.rgb,a=e.rgb;let i;const r=t===i?.5:t,o=2*r-1,n=s.a-a.a,l=((o*n==-1?o:(o+n)/(1+o*n))+1)/2;i=1-l,s.r=255&l*s.r+i*a.r+.5,s.g=255&l*s.g+i*a.g+.5,s.b=255&l*s.b+i*a.b+.5,s.a=r*s.a+(1-r)*a.a,this.rgb=s}return this}interpolate(e,t){return e&&(this._rgb=function(e,t,s){const a=Ie(me(e.r)),i=Ie(me(e.g)),r=Ie(me(e.b));return{r:he(Ge(a+s*(Ie(me(t.r))-a))),g:he(Ge(i+s*(Ie(me(t.g))-i))),b:he(Ge(r+s*(Ie(me(t.b))-r))),a:e.a+s*(t.a-e.a)}}(this._rgb,e._rgb,t)),this}clone(){return new Le(this.rgb)}alpha(e){return this._rgb.a=he(e),this}clearer(e){return this._rgb.a*=1-e,this}greyscale(){const e=this._rgb,t=pe(.3*e.r+.59*e.g+.11*e.b);return e.r=e.g=e.b=t,this}opaquer(e){return this._rgb.a*=1+e,this}negate(){const e=this._rgb;return e.r=255-e.r,e.g=255-e.g,e.b=255-e.b,this}lighten(e){return ze(this._rgb,2,e),this}darken(e){return ze(this._rgb,2,-e),this}saturate(e){return ze(this._rgb,1,e),this}desaturate(e){return ze(this._rgb,1,-e),this}rotate(e){return function(e,t){var s=De(e);s[0]=Oe(s[0]+t),s=Be(s),e.r=s[0],e.g=s[1],e.b=s[2]}(this._rgb,e),this}}function We(){}const Ze=(()=>{let e=0;return()=>e++})();function Ue(e){return null==e}function je(e){if(Array.isArray&&Array.isArray(e))return!0;const t=Object.prototype.toString.call(e);return"[object"===t.slice(0,7)&&"Array]"===t.slice(-6)}function Ke(e){return null!==e&&"[object Object]"===Object.prototype.toString.call(e)}function Ve(e){return("number"==typeof e||e instanceof Number)&&isFinite(+e)}function qe(e,t){return Ve(e)?e:t}function $e(e,t){return void 0===e?t:e}const Ye=(e,t)=>"string"==typeof e&&e.endsWith("%")?parseFloat(e)/100*t:+e;function Je(e,t,s){if(e&&"function"==typeof e.call)return e.apply(s,t)}function Qe(e,t,s,a){let i,r,o;if(je(e))if(r=e.length,a)for(i=r-1;i>=0;i--)t.call(s,e[i],i);else for(i=0;i<r;i++)t.call(s,e[i],i);else if(Ke(e))for(o=Object.keys(e),r=o.length,i=0;i<r;i++)t.call(s,e[o[i]],o[i])}function Xe(e,t){let s,a,i,r;if(!e||!t||e.length!==t.length)return!1;for(s=0,a=e.length;s<a;++s)if(i=e[s],r=t[s],i.datasetIndex!==r.datasetIndex||i.index!==r.index)return!1;return!0}function et(e){if(je(e))return e.map(et);if(Ke(e)){const t=Object.create(null),s=Object.keys(e),a=s.length;let i=0;for(;i<a;++i)t[s[i]]=et(e[s[i]]);return t}return e}function tt(e){return-1===["__proto__","prototype","constructor"].indexOf(e)}function st(e,t,s,a){if(!tt(e))return;const i=t[e],r=s[e];Ke(i)&&Ke(r)?at(i,r,a):t[e]=et(r)}function at(e,t,s){const a=je(t)?t:[t],i=a.length;if(!Ke(e))return e;const r=(s=s||{}).merger||st;let o;for(let t=0;t<i;++t){if(o=a[t],!Ke(o))continue;const i=Object.keys(o);for(let t=0,a=i.length;t<a;++t)r(i[t],e,o,s)}return e}function it(e,t){return at(e,t,{merger:rt})}function rt(e,t,s){if(!tt(e))return;const a=t[e],i=s[e];Ke(a)&&Ke(i)?it(a,i):Object.prototype.hasOwnProperty.call(t,e)||(t[e]=et(i))}const ot={"":e=>e,x:e=>e.x,y:e=>e.y};function nt(e,t){const s=ot[t]||(ot[t]=function(e){const t=function(e){const t=e.split("."),s=[];let a="";for(const e of t)a+=e,a.endsWith("\\")?a=a.slice(0,-1)+".":(s.push(a),a="");return s}(e);return e=>{for(const s of t){if(""===s)break;e=e&&e[s]}return e}}(t));return s(e)}function lt(e){return e.charAt(0).toUpperCase()+e.slice(1)}const ft=e=>void 0!==e,ct=e=>"function"==typeof e,ut=(e,t)=>{if(e.size!==t.size)return!1;for(const s of e)if(!t.has(s))return!1;return!0},pt=Math.PI,gt=2*pt,dt=gt+pt,ht=Number.POSITIVE_INFINITY,mt=pt/180,yt=pt/2,vt=pt/4,bt=2*pt/3,Pt=Math.log10,wt=Math.sign;function St(e,t,s){return Math.abs(e-t)<s}function kt(e){const t=Math.round(e);e=St(e,t,e/1e3)?t:e;const s=Math.pow(10,Math.floor(Pt(e))),a=e/s;return(a<=1?1:a<=2?2:a<=5?5:10)*s}function Tt(e){return!isNaN(parseFloat(e))&&isFinite(e)}function xt(e,t,s){let a,i,r;for(a=0,i=e.length;a<i;a++)r=e[a][s],isNaN(r)||(t.min=Math.min(t.min,r),t.max=Math.max(t.max,r))}function Mt(e){return e*(pt/180)}function Dt(e){return e*(180/pt)}function At(e){if(!Ve(e))return;let t=1,s=0;for(;Math.round(e*t)/t!==e;)t*=10,s++;return s}function Bt(e,t){const s=t.x-e.x,a=t.y-e.y,i=Math.sqrt(s*s+a*a);let r=Math.atan2(a,s);return r<-.5*pt&&(r+=gt),{angle:r,distance:i}}function Ot(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}function Ct(e,t){return(e-t+dt)%gt-pt}function Ft(e){return(e%gt+gt)%gt}function Nt(e,t,s,a){const i=Ft(e),r=Ft(t),o=Ft(s),n=Ft(r-i),l=Ft(o-i),f=Ft(i-r),c=Ft(i-o);return i===r||i===o||a&&r===o||n>l&&f<c}function Et(e,t,s){return Math.max(t,Math.min(s,e))}function Gt(e,t,s,a=1e-6){return e>=Math.min(t,s)-a&&e<=Math.max(t,s)+a}function It(e,t,s){s=s||(s=>e[s]<t);let a,i=e.length-1,r=0;for(;i-r>1;)a=r+i>>1,s(a)?r=a:i=a;return{lo:r,hi:i}}const zt=(e,t,s,a)=>It(e,s,a?a=>{const i=e[a][t];return i<s||i===s&&e[a+1][t]===s}:a=>e[a][t]<s),Rt=(e,t,s)=>It(e,s,(a=>e[a][t]>=s)),Ht=["push","pop","shift","splice","unshift"];function _t(e,t){const s=e._chartjs;if(!s)return;const a=s.listeners,i=a.indexOf(t);-1!==i&&a.splice(i,1),a.length>0||(Ht.forEach((t=>{delete e[t]})),delete e._chartjs)}function Lt(e){const t=new Set;let s,a;for(s=0,a=e.length;s<a;++s)t.add(e[s]);return t.size===a?e:Array.from(t)}const Wt="undefined"==typeof window?function(e){return e()}:window.requestAnimationFrame;function Zt(e,t){let s=[],a=!1;return function(...i){s=i,a||(a=!0,Wt.call(window,(()=>{a=!1,e.apply(t,s)})))}}const Ut=e=>"start"===e?"left":"end"===e?"right":"center",jt=(e,t,s)=>"start"===e?t:"end"===e?s:(t+s)/2;function Kt(e,t,s){const a=t.length;let i=0,r=a;if(e._sorted){const{iScale:o,_parsed:n}=e,l=o.axis,{min:f,max:c,minDefined:u,maxDefined:p}=o.getUserBounds();u&&(i=Et(Math.min(zt(n,o.axis,f).lo,s?a:zt(t,l,o.getPixelForValue(f)).lo),0,a-1)),r=p?Et(Math.max(zt(n,o.axis,c,!0).hi+1,s?0:zt(t,l,o.getPixelForValue(c),!0).hi+1),i,a)-i:a-i}return{start:i,count:r}}function Vt(e){const{xScale:t,yScale:s,_scaleRanges:a}=e,i={xmin:t.min,xmax:t.max,ymin:s.min,ymax:s.max};if(!a)return e._scaleRanges=i,!0;const r=a.xmin!==t.min||a.xmax!==t.max||a.ymin!==s.min||a.ymax!==s.max;return Object.assign(a,i),r}const qt=e=>0===e||1===e,$t=(e,t,s)=>-Math.pow(2,10*(e-=1))*Math.sin((e-t)*gt/s),Yt=(e,t,s)=>Math.pow(2,-10*e)*Math.sin((e-t)*gt/s)+1,Jt={linear:e=>e,easeInQuad:e=>e*e,easeOutQuad:e=>-e*(e-2),easeInOutQuad:e=>(e/=.5)<1?.5*e*e:-.5*(--e*(e-2)-1),easeInCubic:e=>e*e*e,easeOutCubic:e=>(e-=1)*e*e+1,easeInOutCubic:e=>(e/=.5)<1?.5*e*e*e:.5*((e-=2)*e*e+2),easeInQuart:e=>e*e*e*e,easeOutQuart:e=>-((e-=1)*e*e*e-1),easeInOutQuart:e=>(e/=.5)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2),easeInQuint:e=>e*e*e*e*e,easeOutQuint:e=>(e-=1)*e*e*e*e+1,easeInOutQuint:e=>(e/=.5)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2),easeInSine:e=>1-Math.cos(e*yt),easeOutSine:e=>Math.sin(e*yt),easeInOutSine:e=>-.5*(Math.cos(pt*e)-1),easeInExpo:e=>0===e?0:Math.pow(2,10*(e-1)),easeOutExpo:e=>1===e?1:1-Math.pow(2,-10*e),easeInOutExpo:e=>qt(e)?e:e<.5?.5*Math.pow(2,10*(2*e-1)):.5*(2-Math.pow(2,-10*(2*e-1))),easeInCirc:e=>e>=1?e:-(Math.sqrt(1-e*e)-1),easeOutCirc:e=>Math.sqrt(1-(e-=1)*e),easeInOutCirc:e=>(e/=.5)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1),easeInElastic:e=>qt(e)?e:$t(e,.075,.3),easeOutElastic:e=>qt(e)?e:Yt(e,.075,.3),easeInOutElastic(e){const t=.1125;return qt(e)?e:e<.5?.5*$t(2*e,t,.45):.5+.5*Yt(2*e-1,t,.45)},easeInBack(e){const t=1.70158;return e*e*((t+1)*e-t)},easeOutBack(e){const t=1.70158;return(e-=1)*e*((t+1)*e+t)+1},easeInOutBack(e){let t=1.70158;return(e/=.5)<1?e*e*((1+(t*=1.525))*e-t)*.5:.5*((e-=2)*e*((1+(t*=1.525))*e+t)+2)},easeInBounce:e=>1-Jt.easeOutBounce(1-e),easeOutBounce(e){const t=7.5625,s=2.75;return e<1/s?t*e*e:e<2/s?t*(e-=1.5/s)*e+.75:e<2.5/s?t*(e-=2.25/s)*e+.9375:t*(e-=2.625/s)*e+.984375},easeInOutBounce:e=>e<.5?.5*Jt.easeInBounce(2*e):.5*Jt.easeOutBounce(2*e-1)+.5};function Qt(e){if(e&&"object"==typeof e){const t=e.toString();return"[object CanvasPattern]"===t||"[object CanvasGradient]"===t}return!1}function Xt(e){return Qt(e)?e:new Le(e)}function es(e){return Qt(e)?e:new Le(e).saturate(.5).darken(.1).hexString()}const ts=["x","y","borderWidth","radius","tension"],ss=["color","borderColor","backgroundColor"],as=new Map;function is(e,t,s){return function(e,t){t=t||{};const s=e+JSON.stringify(t);let a=as.get(s);return a||(a=new Intl.NumberFormat(e,t),as.set(s,a)),a}(t,s).format(e)}const rs={values:e=>je(e)?e:""+e,numeric(e,t,s){if(0===e)return"0";const a=this.chart.options.locale;let i,r=e;if(s.length>1){const t=Math.max(Math.abs(s[0].value),Math.abs(s[s.length-1].value));(t<1e-4||t>1e15)&&(i="scientific"),r=function(e,t){let s=t.length>3?t[2].value-t[1].value:t[1].value-t[0].value;return Math.abs(s)>=1&&e!==Math.floor(e)&&(s=e-Math.floor(e)),s}(e,s)}const o=Pt(Math.abs(r)),n=Math.max(Math.min(-1*Math.floor(o),20),0),l={notation:i,minimumFractionDigits:n,maximumFractionDigits:n};return Object.assign(l,this.options.ticks.format),is(e,a,l)},logarithmic(e,t,s){if(0===e)return"0";const a=s[t].significand||e/Math.pow(10,Math.floor(Pt(e)));return[1,2,3,5,10,15].includes(a)||t>.8*s.length?rs.numeric.call(this,e,t,s):""}};var os={formatters:rs};const ns=Object.create(null),ls=Object.create(null);function fs(e,t){if(!t)return e;const s=t.split(".");for(let t=0,a=s.length;t<a;++t){const a=s[t];e=e[a]||(e[a]=Object.create(null))}return e}function cs(e,t,s){return"string"==typeof t?at(fs(e,t),s):at(fs(e,""),t)}class us{constructor(e,t){this.animation=void 0,this.backgroundColor="rgba(0,0,0,0.1)",this.borderColor="rgba(0,0,0,0.1)",this.color="#666",this.datasets={},this.devicePixelRatio=e=>e.chart.platform.getDevicePixelRatio(),this.elements={},this.events=["mousemove","mouseout","click","touchstart","touchmove"],this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:"normal",lineHeight:1.2,weight:null},this.hover={},this.hoverBackgroundColor=(e,t)=>es(t.backgroundColor),this.hoverBorderColor=(e,t)=>es(t.borderColor),this.hoverColor=(e,t)=>es(t.color),this.indexAxis="x",this.interaction={mode:"nearest",intersect:!0,includeInvisible:!1},this.maintainAspectRatio=!0,this.onHover=null,this.onClick=null,this.parsing=!0,this.plugins={},this.responsive=!0,this.scale=void 0,this.scales={},this.showLine=!0,this.drawActiveElementsOnTop=!0,this.describe(e),this.apply(t)}set(e,t){return cs(this,e,t)}get(e){return fs(this,e)}describe(e,t){return cs(ls,e,t)}override(e,t){return cs(ns,e,t)}route(e,t,s,a){const i=fs(this,e),r=fs(this,s),o="_"+t;Object.defineProperties(i,{[o]:{value:i[t],writable:!0},[t]:{enumerable:!0,get(){const e=this[o],t=r[a];return Ke(e)?Object.assign({},t,e):$e(e,t)},set(e){this[o]=e}}})}apply(e){e.forEach((e=>e(this)))}}var ps=new us({_scriptable:e=>!e.startsWith("on"),_indexable:e=>"events"!==e,hover:{_fallback:"interaction"},interaction:{_scriptable:!1,_indexable:!1}},[function(e){e.set("animation",{delay:void 0,duration:1e3,easing:"easeOutQuart",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0}),e.describe("animation",{_fallback:!1,_indexable:!1,_scriptable:e=>"onProgress"!==e&&"onComplete"!==e&&"fn"!==e}),e.set("animations",{colors:{type:"color",properties:ss},numbers:{type:"number",properties:ts}}),e.describe("animations",{_fallback:"animation"}),e.set("transitions",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:"transparent"},visible:{type:"boolean",duration:0}}},hide:{animations:{colors:{to:"transparent"},visible:{type:"boolean",easing:"linear",fn:e=>0|e}}}})},function(e){e.set("layout",{autoPadding:!0,padding:{top:0,right:0,bottom:0,left:0}})},function(e){e.set("scale",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:"ticks",grace:0,grid:{display:!0,lineWidth:1,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(e,t)=>t.lineWidth,tickColor:(e,t)=>t.color,offset:!1},border:{display:!0,dash:[],dashOffset:0,width:1},title:{display:!1,text:"",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:"",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:os.formatters.values,minor:{},major:{},align:"center",crossAlign:"near",showLabelBackdrop:!1,backdropColor:"rgba(255, 255, 255, 0.75)",backdropPadding:2}}),e.route("scale.ticks","color","","color"),e.route("scale.grid","color","","borderColor"),e.route("scale.border","color","","borderColor"),e.route("scale.title","color","","color"),e.describe("scale",{_fallback:!1,_scriptable:e=>!e.startsWith("before")&&!e.startsWith("after")&&"callback"!==e&&"parser"!==e,_indexable:e=>"borderDash"!==e&&"tickBorderDash"!==e&&"dash"!==e}),e.describe("scales",{_fallback:"scale"}),e.describe("scale.ticks",{_scriptable:e=>"backdropPadding"!==e&&"callback"!==e,_indexable:e=>"backdropPadding"!==e})}]);function gs(e,t,s,a,i){let r=t[i];return r||(r=t[i]=e.measureText(i).width,s.push(i)),r>a&&(a=r),a}function ds(e,t,s,a){let i=(a=a||{}).data=a.data||{},r=a.garbageCollect=a.garbageCollect||[];a.font!==t&&(i=a.data={},r=a.garbageCollect=[],a.font=t),e.save(),e.font=t;let o=0;const n=s.length;let l,f,c,u,p;for(l=0;l<n;l++)if(u=s[l],null!=u&&!0!==je(u))o=gs(e,i,r,o,u);else if(je(u))for(f=0,c=u.length;f<c;f++)p=u[f],null==p||je(p)||(o=gs(e,i,r,o,p));e.restore();const g=r.length/2;if(g>s.length){for(l=0;l<g;l++)delete i[r[l]];r.splice(0,g)}return o}function hs(e,t,s){const a=e.currentDevicePixelRatio,i=0!==s?Math.max(s/2,.5):0;return Math.round((t-i)*a)/a+i}function ms(e,t){(t=t||e.getContext("2d")).save(),t.resetTransform(),t.clearRect(0,0,e.width,e.height),t.restore()}function ys(e,t,s,a){vs(e,t,s,a,null)}function vs(e,t,s,a,i){let r,o,n,l,f,c,u,p;const g=t.pointStyle,d=t.rotation,h=t.radius;let m=(d||0)*mt;if(g&&"object"==typeof g&&(r=g.toString(),"[object HTMLImageElement]"===r||"[object HTMLCanvasElement]"===r))return e.save(),e.translate(s,a),e.rotate(m),e.drawImage(g,-g.width/2,-g.height/2,g.width,g.height),void e.restore();if(!(isNaN(h)||h<=0)){switch(e.beginPath(),g){default:i?e.ellipse(s,a,i/2,h,0,0,gt):e.arc(s,a,h,0,gt),e.closePath();break;case"triangle":c=i?i/2:h,e.moveTo(s+Math.sin(m)*c,a-Math.cos(m)*h),m+=bt,e.lineTo(s+Math.sin(m)*c,a-Math.cos(m)*h),m+=bt,e.lineTo(s+Math.sin(m)*c,a-Math.cos(m)*h),e.closePath();break;case"rectRounded":f=.516*h,l=h-f,o=Math.cos(m+vt)*l,u=Math.cos(m+vt)*(i?i/2-f:l),n=Math.sin(m+vt)*l,p=Math.sin(m+vt)*(i?i/2-f:l),e.arc(s-u,a-n,f,m-pt,m-yt),e.arc(s+p,a-o,f,m-yt,m),e.arc(s+u,a+n,f,m,m+yt),e.arc(s-p,a+o,f,m+yt,m+pt),e.closePath();break;case"rect":if(!d){l=Math.SQRT1_2*h,c=i?i/2:l,e.rect(s-c,a-l,2*c,2*l);break}m+=vt;case"rectRot":u=Math.cos(m)*(i?i/2:h),o=Math.cos(m)*h,n=Math.sin(m)*h,p=Math.sin(m)*(i?i/2:h),e.moveTo(s-u,a-n),e.lineTo(s+p,a-o),e.lineTo(s+u,a+n),e.lineTo(s-p,a+o),e.closePath();break;case"crossRot":m+=vt;case"cross":u=Math.cos(m)*(i?i/2:h),o=Math.cos(m)*h,n=Math.sin(m)*h,p=Math.sin(m)*(i?i/2:h),e.moveTo(s-u,a-n),e.lineTo(s+u,a+n),e.moveTo(s+p,a-o),e.lineTo(s-p,a+o);break;case"star":u=Math.cos(m)*(i?i/2:h),o=Math.cos(m)*h,n=Math.sin(m)*h,p=Math.sin(m)*(i?i/2:h),e.moveTo(s-u,a-n),e.lineTo(s+u,a+n),e.moveTo(s+p,a-o),e.lineTo(s-p,a+o),m+=vt,u=Math.cos(m)*(i?i/2:h),o=Math.cos(m)*h,n=Math.sin(m)*h,p=Math.sin(m)*(i?i/2:h),e.moveTo(s-u,a-n),e.lineTo(s+u,a+n),e.moveTo(s+p,a-o),e.lineTo(s-p,a+o);break;case"line":o=i?i/2:Math.cos(m)*h,n=Math.sin(m)*h,e.moveTo(s-o,a-n),e.lineTo(s+o,a+n);break;case"dash":e.moveTo(s,a),e.lineTo(s+Math.cos(m)*(i?i/2:h),a+Math.sin(m)*h);break;case!1:e.closePath()}e.fill(),t.borderWidth>0&&e.stroke()}}function bs(e,t,s){return s=s||.5,!t||e&&e.x>t.left-s&&e.x<t.right+s&&e.y>t.top-s&&e.y<t.bottom+s}function Ps(e,t){e.save(),e.beginPath(),e.rect(t.left,t.top,t.right-t.left,t.bottom-t.top),e.clip()}function ws(e){e.restore()}function Ss(e,t,s,a,i){if(!t)return e.lineTo(s.x,s.y);if("middle"===i){const a=(t.x+s.x)/2;e.lineTo(a,t.y),e.lineTo(a,s.y)}else"after"===i!=!!a?e.lineTo(t.x,s.y):e.lineTo(s.x,t.y);e.lineTo(s.x,s.y)}function ks(e,t,s,a){if(!t)return e.lineTo(s.x,s.y);e.bezierCurveTo(a?t.cp1x:t.cp2x,a?t.cp1y:t.cp2y,a?s.cp2x:s.cp1x,a?s.cp2y:s.cp1y,s.x,s.y)}function Ts(e,t,s,a,i,r={}){const o=je(t)?t:[t],n=r.strokeWidth>0&&""!==r.strokeColor;let l,f;for(e.save(),e.font=i.string,function(e,t){t.translation&&e.translate(t.translation[0],t.translation[1]),Ue(t.rotation)||e.rotate(t.rotation),t.color&&(e.fillStyle=t.color),t.textAlign&&(e.textAlign=t.textAlign),t.textBaseline&&(e.textBaseline=t.textBaseline)}(e,r),l=0;l<o.length;++l)f=o[l],r.backdrop&&Ms(e,r.backdrop),n&&(r.strokeColor&&(e.strokeStyle=r.strokeColor),Ue(r.strokeWidth)||(e.lineWidth=r.strokeWidth),e.strokeText(f,s,a,r.maxWidth)),e.fillText(f,s,a,r.maxWidth),xs(e,s,a,f,r),a+=i.lineHeight;e.restore()}function xs(e,t,s,a,i){if(i.strikethrough||i.underline){const r=e.measureText(a),o=t-r.actualBoundingBoxLeft,n=t+r.actualBoundingBoxRight,l=s-r.actualBoundingBoxAscent,f=s+r.actualBoundingBoxDescent,c=i.strikethrough?(l+f)/2:f;e.strokeStyle=e.fillStyle,e.beginPath(),e.lineWidth=i.decorationWidth||2,e.moveTo(o,c),e.lineTo(n,c),e.stroke()}}function Ms(e,t){const s=e.fillStyle;e.fillStyle=t.color,e.fillRect(t.left,t.top,t.width,t.height),e.fillStyle=s}function Ds(e,t){const{x:s,y:a,w:i,h:r,radius:o}=t;e.arc(s+o.topLeft,a+o.topLeft,o.topLeft,-yt,pt,!0),e.lineTo(s,a+r-o.bottomLeft),e.arc(s+o.bottomLeft,a+r-o.bottomLeft,o.bottomLeft,pt,yt,!0),e.lineTo(s+i-o.bottomRight,a+r),e.arc(s+i-o.bottomRight,a+r-o.bottomRight,o.bottomRight,yt,0,!0),e.lineTo(s+i,a+o.topRight),e.arc(s+i-o.topRight,a+o.topRight,o.topRight,0,-yt,!0),e.lineTo(s+o.topLeft,a)}const As=/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,Bs=/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;function Os(e,t){const s=(""+e).match(As);if(!s||"normal"===s[1])return 1.2*t;switch(e=+s[2],s[3]){case"px":return e;case"%":e/=100}return t*e}const Cs=e=>+e||0;function Fs(e,t){const s={},a=Ke(t),i=a?Object.keys(t):t,r=Ke(e)?a?s=>$e(e[s],e[t[s]]):t=>e[t]:()=>e;for(const e of i)s[e]=Cs(r(e));return s}function Ns(e){return Fs(e,{top:"y",right:"x",bottom:"y",left:"x"})}function Es(e){return Fs(e,["topLeft","topRight","bottomLeft","bottomRight"])}function Gs(e){const t=Ns(e);return t.width=t.left+t.right,t.height=t.top+t.bottom,t}function Is(e,t){e=e||{},t=t||ps.font;let s=$e(e.size,t.size);"string"==typeof s&&(s=parseInt(s,10));let a=$e(e.style,t.style);a&&!(""+a).match(Bs)&&(console.warn('Invalid font style specified: "'+a+'"'),a=void 0);const i={family:$e(e.family,t.family),lineHeight:Os($e(e.lineHeight,t.lineHeight),s),size:s,style:a,weight:$e(e.weight,t.weight),string:""};return i.string=function(e){return!e||Ue(e.size)||Ue(e.family)?null:(e.style?e.style+" ":"")+(e.weight?e.weight+" ":"")+e.size+"px "+e.family}(i),i}function zs(e,t,s,a){let i,r,o,n=!0;for(i=0,r=e.length;i<r;++i)if(o=e[i],void 0!==o&&(void 0!==t&&"function"==typeof o&&(o=o(t),n=!1),void 0!==s&&je(o)&&(o=o[s%o.length],n=!1),void 0!==o))return a&&!n&&(a.cacheable=!1),o}function Rs(e,t){return Object.assign(Object.create(e),t)}function Hs(e,t=[""],s=e,a,i=(()=>e[0])){ft(a)||(a=Ys("_fallback",e));const r={[Symbol.toStringTag]:"Object",_cacheable:!0,_scopes:e,_rootScopes:s,_fallback:a,_getTarget:i,override:i=>Hs([i,...e],t,s,a)};return new Proxy(r,{deleteProperty:(t,s)=>(delete t[s],delete t._keys,delete e[0][s],!0),get:(s,a)=>Us(s,a,(()=>function(e,t,s,a){let i;for(const r of t)if(i=Ys(Ws(r,e),s),ft(i))return Zs(e,i)?qs(s,a,e,i):i}(a,t,e,s))),getOwnPropertyDescriptor:(e,t)=>Reflect.getOwnPropertyDescriptor(e._scopes[0],t),getPrototypeOf:()=>Reflect.getPrototypeOf(e[0]),has:(e,t)=>Js(e).includes(t),ownKeys:e=>Js(e),set(e,t,s){const a=e._storage||(e._storage=i());return e[t]=a[t]=s,delete e._keys,!0}})}function _s(e,t,s,a){const i={_cacheable:!1,_proxy:e,_context:t,_subProxy:s,_stack:new Set,_descriptors:Ls(e,a),setContext:t=>_s(e,t,s,a),override:i=>_s(e.override(i),t,s,a)};return new Proxy(i,{deleteProperty:(t,s)=>(delete t[s],delete e[s],!0),get:(e,t,s)=>Us(e,t,(()=>function(e,t,s){const{_proxy:a,_context:i,_subProxy:r,_descriptors:o}=e;let n=a[t];return ct(n)&&o.isScriptable(t)&&(n=function(e,t,s,a){const{_proxy:i,_context:r,_subProxy:o,_stack:n}=s;if(n.has(e))throw new Error("Recursion detected: "+Array.from(n).join("->")+"->"+e);return n.add(e),t=t(r,o||a),n.delete(e),Zs(e,t)&&(t=qs(i._scopes,i,e,t)),t}(t,n,e,s)),je(n)&&n.length&&(n=function(e,t,s,a){const{_proxy:i,_context:r,_subProxy:o,_descriptors:n}=s;if(ft(r.index)&&a(e))t=t[r.index%t.length];else if(Ke(t[0])){const s=t,a=i._scopes.filter((e=>e!==s));t=[];for(const l of s){const s=qs(a,i,e,l);t.push(_s(s,r,o&&o[e],n))}}return t}(t,n,e,o.isIndexable)),Zs(t,n)&&(n=_s(n,i,r&&r[t],o)),n}(e,t,s))),getOwnPropertyDescriptor:(t,s)=>t._descriptors.allKeys?Reflect.has(e,s)?{enumerable:!0,configurable:!0}:void 0:Reflect.getOwnPropertyDescriptor(e,s),getPrototypeOf:()=>Reflect.getPrototypeOf(e),has:(t,s)=>Reflect.has(e,s),ownKeys:()=>Reflect.ownKeys(e),set:(t,s,a)=>(e[s]=a,delete t[s],!0)})}function Ls(e,t={scriptable:!0,indexable:!0}){const{_scriptable:s=t.scriptable,_indexable:a=t.indexable,_allKeys:i=t.allKeys}=e;return{allKeys:i,scriptable:s,indexable:a,isScriptable:ct(s)?s:()=>s,isIndexable:ct(a)?a:()=>a}}const Ws=(e,t)=>e?e+lt(t):t,Zs=(e,t)=>Ke(t)&&"adapters"!==e&&(null===Object.getPrototypeOf(t)||t.constructor===Object);function Us(e,t,s){if(Object.prototype.hasOwnProperty.call(e,t))return e[t];const a=s();return e[t]=a,a}function js(e,t,s){return ct(e)?e(t,s):e}const Ks=(e,t)=>!0===e?t:"string"==typeof e?nt(t,e):void 0;function Vs(e,t,s,a,i){for(const r of t){const t=Ks(s,r);if(t){e.add(t);const r=js(t._fallback,s,i);if(ft(r)&&r!==s&&r!==a)return r}else if(!1===t&&ft(a)&&s!==a)return null}return!1}function qs(e,t,s,a){const i=t._rootScopes,r=js(t._fallback,s,a),o=[...e,...i],n=new Set;n.add(a);let l=$s(n,o,s,r||s,a);return null!==l&&(!ft(r)||r===s||(l=$s(n,o,r,l,a),null!==l))&&Hs(Array.from(n),[""],i,r,(()=>function(e,t,s){const a=e._getTarget();t in a||(a[t]={});const i=a[t];return je(i)&&Ke(s)?s:i||{}}(t,s,a)))}function $s(e,t,s,a,i){for(;s;)s=Vs(e,t,s,a,i);return s}function Ys(e,t){for(const s of t){if(!s)continue;const t=s[e];if(ft(t))return t}}function Js(e){let t=e._keys;return t||(t=e._keys=function(e){const t=new Set;for(const s of e)for(const e of Object.keys(s).filter((e=>!e.startsWith("_"))))t.add(e);return Array.from(t)}(e._scopes)),t}function Qs(e,t,s,a){const{iScale:i}=e,{key:r="r"}=this._parsing,o=new Array(a);let n,l,f,c;for(n=0,l=a;n<l;++n)f=n+s,c=t[f],o[n]={r:i.parse(nt(c,r),f)};return o}const Xs=Number.EPSILON||1e-14,ea=(e,t)=>t<e.length&&!e[t].skip&&e[t],ta=e=>"x"===e?"y":"x";function sa(e,t,s,a){const i=e.skip?t:e,r=t,o=s.skip?t:s,n=Ot(r,i),l=Ot(o,r);let f=n/(n+l),c=l/(n+l);f=isNaN(f)?0:f,c=isNaN(c)?0:c;const u=a*f,p=a*c;return{previous:{x:r.x-u*(o.x-i.x),y:r.y-u*(o.y-i.y)},next:{x:r.x+p*(o.x-i.x),y:r.y+p*(o.y-i.y)}}}function aa(e,t,s){return Math.max(Math.min(e,s),t)}function ia(e,t,s,a,i){let r,o,n,l;if(t.spanGaps&&(e=e.filter((e=>!e.skip))),"monotone"===t.cubicInterpolationMode)!function(e,t="x"){const s=ta(t),a=e.length,i=Array(a).fill(0),r=Array(a);let o,n,l,f=ea(e,0);for(o=0;o<a;++o)if(n=l,l=f,f=ea(e,o+1),l){if(f){const e=f[t]-l[t];i[o]=0!==e?(f[s]-l[s])/e:0}r[o]=n?f?wt(i[o-1])!==wt(i[o])?0:(i[o-1]+i[o])/2:i[o-1]:i[o]}!function(e,t,s){const a=e.length;let i,r,o,n,l,f=ea(e,0);for(let c=0;c<a-1;++c)l=f,f=ea(e,c+1),l&&f&&(St(t[c],0,Xs)?s[c]=s[c+1]=0:(i=s[c]/t[c],r=s[c+1]/t[c],n=Math.pow(i,2)+Math.pow(r,2),n<=9||(o=3/Math.sqrt(n),s[c]=i*o*t[c],s[c+1]=r*o*t[c])))}(e,i,r),function(e,t,s="x"){const a=ta(s),i=e.length;let r,o,n,l=ea(e,0);for(let f=0;f<i;++f){if(o=n,n=l,l=ea(e,f+1),!n)continue;const i=n[s],c=n[a];o&&(r=(i-o[s])/3,n[`cp1${s}`]=i-r,n[`cp1${a}`]=c-r*t[f]),l&&(r=(l[s]-i)/3,n[`cp2${s}`]=i+r,n[`cp2${a}`]=c+r*t[f])}}(e,r,t)}(e,i);else{let s=a?e[e.length-1]:e[0];for(r=0,o=e.length;r<o;++r)n=e[r],l=sa(s,n,e[Math.min(r+1,o-(a?0:1))%o],t.tension),n.cp1x=l.previous.x,n.cp1y=l.previous.y,n.cp2x=l.next.x,n.cp2y=l.next.y,s=n}t.capBezierPoints&&function(e,t){let s,a,i,r,o,n=bs(e[0],t);for(s=0,a=e.length;s<a;++s)o=r,r=n,n=s<a-1&&bs(e[s+1],t),r&&(i=e[s],o&&(i.cp1x=aa(i.cp1x,t.left,t.right),i.cp1y=aa(i.cp1y,t.top,t.bottom)),n&&(i.cp2x=aa(i.cp2x,t.left,t.right),i.cp2y=aa(i.cp2y,t.top,t.bottom)))}(e,s)}function ra(){return"undefined"!=typeof window&&"undefined"!=typeof document}function oa(e){let t=e.parentNode;return t&&"[object ShadowRoot]"===t.toString()&&(t=t.host),t}function na(e,t,s){let a;return"string"==typeof e?(a=parseInt(e,10),-1!==e.indexOf("%")&&(a=a/100*t.parentNode[s])):a=e,a}const la=e=>e.ownerDocument.defaultView.getComputedStyle(e,null),fa=["top","right","bottom","left"];function ca(e,t,s){const a={};s=s?"-"+s:"";for(let i=0;i<4;i++){const r=fa[i];a[r]=parseFloat(e[t+"-"+r+s])||0}return a.width=a.left+a.right,a.height=a.top+a.bottom,a}const ua=(e,t,s)=>(e>0||t>0)&&(!s||!s.shadowRoot);function pa(e,t){if("native"in e)return e;const{canvas:s,currentDevicePixelRatio:a}=t,i=la(s),r="border-box"===i.boxSizing,o=ca(i,"padding"),n=ca(i,"border","width"),{x:l,y:f,box:c}=function(e,t){const s=e.touches,a=s&&s.length?s[0]:e,{offsetX:i,offsetY:r}=a;let o,n,l=!1;if(ua(i,r,e.target))o=i,n=r;else{const e=t.getBoundingClientRect();o=a.clientX-e.left,n=a.clientY-e.top,l=!0}return{x:o,y:n,box:l}}(e,s),u=o.left+(c&&n.left),p=o.top+(c&&n.top);let{width:g,height:d}=t;return r&&(g-=o.width+n.width,d-=o.height+n.height),{x:Math.round((l-u)/g*s.width/a),y:Math.round((f-p)/d*s.height/a)}}const ga=e=>Math.round(10*e)/10;function da(e,t,s){const a=t||1,i=Math.floor(e.height*a),r=Math.floor(e.width*a);e.height=Math.floor(e.height),e.width=Math.floor(e.width);const o=e.canvas;return o.style&&(s||!o.style.height&&!o.style.width)&&(o.style.height=`${e.height}px`,o.style.width=`${e.width}px`),(e.currentDevicePixelRatio!==a||o.height!==i||o.width!==r)&&(e.currentDevicePixelRatio=a,o.height=i,o.width=r,e.ctx.setTransform(a,0,0,a,0,0),!0)}const ha=function(){let e=!1;try{const t={get passive(){return e=!0,!1}};window.addEventListener("test",null,t),window.removeEventListener("test",null,t)}catch(e){}return e}();function ma(e,t){const s=function(e,t){return la(e).getPropertyValue(t)}(e,t),a=s&&s.match(/^(\d+)(\.\d+)?px$/);return a?+a[1]:void 0}function ya(e,t,s,a){return{x:e.x+s*(t.x-e.x),y:e.y+s*(t.y-e.y)}}function va(e,t,s,a){return{x:e.x+s*(t.x-e.x),y:"middle"===a?s<.5?e.y:t.y:"after"===a?s<1?e.y:t.y:s>0?t.y:e.y}}function ba(e,t,s,a){const i={x:e.cp2x,y:e.cp2y},r={x:t.cp1x,y:t.cp1y},o=ya(e,i,s),n=ya(i,r,s),l=ya(r,t,s),f=ya(o,n,s),c=ya(n,l,s);return ya(f,c,s)}const Pa=function(e,t){return{x:s=>e+e+t-s,setWidth(e){t=e},textAlign:e=>"center"===e?e:"right"===e?"left":"right",xPlus:(e,t)=>e-t,leftForLtr:(e,t)=>e-t}},wa=function(){return{x:e=>e,setWidth(e){},textAlign:e=>e,xPlus:(e,t)=>e+t,leftForLtr:(e,t)=>e}};function Sa(e,t,s){return e?Pa(t,s):wa()}function ka(e,t){let s,a;"ltr"!==t&&"rtl"!==t||(s=e.canvas.style,a=[s.getPropertyValue("direction"),s.getPropertyPriority("direction")],s.setProperty("direction",t,"important"),e.prevTextDirection=a)}function Ta(e,t){void 0!==t&&(delete e.prevTextDirection,e.canvas.style.setProperty("direction",t[0],t[1]))}function xa(e){return"angle"===e?{between:Nt,compare:Ct,normalize:Ft}:{between:Gt,compare:(e,t)=>e-t,normalize:e=>e}}function Ma({start:e,end:t,count:s,loop:a,style:i}){return{start:e%s,end:t%s,loop:a&&(t-e+1)%s==0,style:i}}function Da(e,t,s){if(!s)return[e];const{property:a,start:i,end:r}=s,o=t.length,{compare:n,between:l,normalize:f}=xa(a),{start:c,end:u,loop:p,style:g}=function(e,t,s){const{property:a,start:i,end:r}=s,{between:o,normalize:n}=xa(a),l=t.length;let f,c,{start:u,end:p,loop:g}=e;if(g){for(u+=l,p+=l,f=0,c=l;f<c&&o(n(t[u%l][a]),i,r);++f)u--,p--;u%=l,p%=l}return p<u&&(p+=l),{start:u,end:p,loop:g,style:e.style}}(e,t,s),d=[];let h,m,y,v=!1,b=null;for(let e=c,s=c;e<=u;++e)m=t[e%o],m.skip||(h=f(m[a]),h!==y&&(v=l(h,i,r),null===b&&(v||l(i,y,h)&&0!==n(i,y))&&(b=0===n(h,i)?e:s),null!==b&&(!v||0===n(r,h)||l(r,y,h))&&(d.push(Ma({start:b,end:e,loop:p,count:o,style:g})),b=null),s=e,y=h));return null!==b&&d.push(Ma({start:b,end:u,loop:p,count:o,style:g})),d}function Aa(e,t){const s=[],a=e.segments;for(let i=0;i<a.length;i++){const r=Da(a[i],e.points,t);r.length&&s.push(...r)}return s}function Ba(e){return{backgroundColor:e.backgroundColor,borderCapStyle:e.borderCapStyle,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderJoinStyle:e.borderJoinStyle,borderWidth:e.borderWidth,borderColor:e.borderColor}}function Oa(e,t){return t&&JSON.stringify(e)!==JSON.stringify(t)}class Ca{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(e,t,s,a){const i=t.listeners[a],r=t.duration;i.forEach((a=>a({chart:e,initial:t.initial,numSteps:r,currentStep:Math.min(s-t.start,r)})))}_refresh(){this._request||(this._running=!0,this._request=Wt.call(window,(()=>{this._update(),this._request=null,this._running&&this._refresh()})))}_update(e=Date.now()){let t=0;this._charts.forEach(((s,a)=>{if(!s.running||!s.items.length)return;const i=s.items;let r,o=i.length-1,n=!1;for(;o>=0;--o)r=i[o],r._active?(r._total>s.duration&&(s.duration=r._total),r.tick(e),n=!0):(i[o]=i[i.length-1],i.pop());n&&(a.draw(),this._notify(a,s,e,"progress")),i.length||(s.running=!1,this._notify(a,s,e,"complete"),s.initial=!1),t+=i.length})),this._lastDate=e,0===t&&(this._running=!1)}_getAnims(e){const t=this._charts;let s=t.get(e);return s||(s={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},t.set(e,s)),s}listen(e,t,s){this._getAnims(e).listeners[t].push(s)}add(e,t){t&&t.length&&this._getAnims(e).items.push(...t)}has(e){return this._getAnims(e).items.length>0}start(e){const t=this._charts.get(e);t&&(t.running=!0,t.start=Date.now(),t.duration=t.items.reduce(((e,t)=>Math.max(e,t._duration)),0),this._refresh())}running(e){if(!this._running)return!1;const t=this._charts.get(e);return!!(t&&t.running&&t.items.length)}stop(e){const t=this._charts.get(e);if(!t||!t.items.length)return;const s=t.items;let a=s.length-1;for(;a>=0;--a)s[a].cancel();t.items=[],this._notify(e,t,Date.now(),"complete")}remove(e){return this._charts.delete(e)}}var Fa=new Ca;const Na="transparent",Ea={boolean:(e,t,s)=>s>.5?t:e,color(e,t,s){const a=Xt(e||Na),i=a.valid&&Xt(t||Na);return i&&i.valid?i.mix(a,s).hexString():t},number:(e,t,s)=>e+(t-e)*s};class Ga{constructor(e,t,s,a){const i=t[s];a=zs([e.to,a,i,e.from]);const r=zs([e.from,i,a]);this._active=!0,this._fn=e.fn||Ea[e.type||typeof r],this._easing=Jt[e.easing]||Jt.linear,this._start=Math.floor(Date.now()+(e.delay||0)),this._duration=this._total=Math.floor(e.duration),this._loop=!!e.loop,this._target=t,this._prop=s,this._from=r,this._to=a,this._promises=void 0}active(){return this._active}update(e,t,s){if(this._active){this._notify(!1);const a=this._target[this._prop],i=s-this._start,r=this._duration-i;this._start=s,this._duration=Math.floor(Math.max(r,e.duration)),this._total+=i,this._loop=!!e.loop,this._to=zs([e.to,t,a,e.from]),this._from=zs([e.from,a,t])}}cancel(){this._active&&(this.tick(Date.now()),this._active=!1,this._notify(!1))}tick(e){const t=e-this._start,s=this._duration,a=this._prop,i=this._from,r=this._loop,o=this._to;let n;if(this._active=i!==o&&(r||t<s),!this._active)return this._target[a]=o,void this._notify(!0);t<0?this._target[a]=i:(n=t/s%2,n=r&&n>1?2-n:n,n=this._easing(Math.min(1,Math.max(0,n))),this._target[a]=this._fn(i,o,n))}wait(){const e=this._promises||(this._promises=[]);return new Promise(((t,s)=>{e.push({res:t,rej:s})}))}_notify(e){const t=e?"res":"rej",s=this._promises||[];for(let e=0;e<s.length;e++)s[e][t]()}}class Ia{constructor(e,t){this._chart=e,this._properties=new Map,this.configure(t)}configure(e){if(!Ke(e))return;const t=Object.keys(ps.animation),s=this._properties;Object.getOwnPropertyNames(e).forEach((a=>{const i=e[a];if(!Ke(i))return;const r={};for(const e of t)r[e]=i[e];(je(i.properties)&&i.properties||[a]).forEach((e=>{e!==a&&s.has(e)||s.set(e,r)}))}))}_animateOptions(e,t){const s=t.options,a=function(e,t){if(!t)return;let s=e.options;if(s)return s.$shared&&(e.options=s=Object.assign({},s,{$shared:!1,$animations:{}})),s;e.options=t}(e,s);if(!a)return[];const i=this._createAnimations(a,s);return s.$shared&&function(e,t){const s=[],a=Object.keys(t);for(let t=0;t<a.length;t++){const i=e[a[t]];i&&i.active()&&s.push(i.wait())}return Promise.all(s)}(e.options.$animations,s).then((()=>{e.options=s}),(()=>{})),i}_createAnimations(e,t){const s=this._properties,a=[],i=e.$animations||(e.$animations={}),r=Object.keys(t),o=Date.now();let n;for(n=r.length-1;n>=0;--n){const l=r[n];if("$"===l.charAt(0))continue;if("options"===l){a.push(...this._animateOptions(e,t));continue}const f=t[l];let c=i[l];const u=s.get(l);if(c){if(u&&c.active()){c.update(u,f,o);continue}c.cancel()}u&&u.duration?(i[l]=c=new Ga(u,e,l,f),a.push(c)):e[l]=f}return a}update(e,t){if(0===this._properties.size)return void Object.assign(e,t);const s=this._createAnimations(e,t);return s.length?(Fa.add(this._chart,s),!0):void 0}}function za(e,t){const s=e&&e.options||{},a=s.reverse,i=void 0===s.min?t:0,r=void 0===s.max?t:0;return{start:a?r:i,end:a?i:r}}function Ra(e,t){const s=[],a=e._getSortedDatasetMetas(t);let i,r;for(i=0,r=a.length;i<r;++i)s.push(a[i].index);return s}function Ha(e,t,s,a={}){const i=e.keys,r="single"===a.mode;let o,n,l,f;if(null!==t){for(o=0,n=i.length;o<n;++o){if(l=+i[o],l===s){if(a.all)continue;break}f=e.values[l],Ve(f)&&(r||0===t||wt(t)===wt(f))&&(t+=f)}return t}}function _a(e,t){const s=e&&e.options.stacked;return s||void 0===s&&void 0!==t.stack}function La(e,t,s){const a=e[t]||(e[t]={});return a[s]||(a[s]={})}function Wa(e,t,s,a){for(const i of t.getMatchingVisibleMetas(a).reverse()){const t=e[i.index];if(s&&t>0||!s&&t<0)return i.index}return null}function Za(e,t){const{chart:s,_cachedMeta:a}=e,i=s._stacks||(s._stacks={}),{iScale:r,vScale:o,index:n}=a,l=r.axis,f=o.axis,c=function(e,t,s){return`${e.id}.${t.id}.${s.stack||s.type}`}(r,o,a),u=t.length;let p;for(let e=0;e<u;++e){const s=t[e],{[l]:r,[f]:u}=s;p=(s._stacks||(s._stacks={}))[f]=La(i,c,r),p[n]=u,p._top=Wa(p,o,!0,a.type),p._bottom=Wa(p,o,!1,a.type),(p._visualValues||(p._visualValues={}))[n]=u}}function Ua(e,t){const s=e.scales;return Object.keys(s).filter((e=>s[e].axis===t)).shift()}function ja(e,t){const s=e.controller.index,a=e.vScale&&e.vScale.axis;if(a){t=t||e._parsed;for(const e of t){const t=e._stacks;if(!t||void 0===t[a]||void 0===t[a][s])return;delete t[a][s],void 0!==t[a]._visualValues&&void 0!==t[a]._visualValues[s]&&delete t[a]._visualValues[s]}}}const Ka=e=>"reset"===e||"none"===e,Va=(e,t)=>t?e:Object.assign({},e);class qa{static defaults={};static datasetElementType=null;static dataElementType=null;constructor(e,t){this.chart=e,this._ctx=e.ctx,this.index=t,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.supportsDecimation=!1,this.$context=void 0,this._syncList=[],this.datasetElementType=new.target.datasetElementType,this.dataElementType=new.target.dataElementType,this.initialize()}initialize(){const e=this._cachedMeta;this.configure(),this.linkScales(),e._stacked=_a(e.vScale,e),this.addElements(),this.options.fill&&!this.chart.isPluginEnabled("filler")&&console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options")}updateIndex(e){this.index!==e&&ja(this._cachedMeta),this.index=e}linkScales(){const e=this.chart,t=this._cachedMeta,s=this.getDataset(),a=(e,t,s,a)=>"x"===e?t:"r"===e?a:s,i=t.xAxisID=$e(s.xAxisID,Ua(e,"x")),r=t.yAxisID=$e(s.yAxisID,Ua(e,"y")),o=t.rAxisID=$e(s.rAxisID,Ua(e,"r")),n=t.indexAxis,l=t.iAxisID=a(n,i,r,o),f=t.vAxisID=a(n,r,i,o);t.xScale=this.getScaleForId(i),t.yScale=this.getScaleForId(r),t.rScale=this.getScaleForId(o),t.iScale=this.getScaleForId(l),t.vScale=this.getScaleForId(f)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(e){return this.chart.scales[e]}_getOtherScale(e){const t=this._cachedMeta;return e===t.iScale?t.vScale:t.iScale}reset(){this._update("reset")}_destroy(){const e=this._cachedMeta;this._data&&_t(this._data,this),e._stacked&&ja(e)}_dataCheck(){const e=this.getDataset(),t=e.data||(e.data=[]),s=this._data;if(Ke(t))this._data=function(e){const t=Object.keys(e),s=new Array(t.length);let a,i,r;for(a=0,i=t.length;a<i;++a)r=t[a],s[a]={x:r,y:e[r]};return s}(t);else if(s!==t){if(s){_t(s,this);const e=this._cachedMeta;ja(e),e._parsed=[]}t&&Object.isExtensible(t)&&(this,(a=t)._chartjs?a._chartjs.listeners.push(this):(Object.defineProperty(a,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[this]}}),Ht.forEach((e=>{const t="_onData"+lt(e),s=a[e];Object.defineProperty(a,e,{configurable:!0,enumerable:!1,value(...e){const i=s.apply(this,e);return a._chartjs.listeners.forEach((s=>{"function"==typeof s[t]&&s[t](...e)})),i}})})))),this._syncList=[],this._data=t}var a}addElements(){const e=this._cachedMeta;this._dataCheck(),this.datasetElementType&&(e.dataset=new this.datasetElementType)}buildOrUpdateElements(e){const t=this._cachedMeta,s=this.getDataset();let a=!1;this._dataCheck();const i=t._stacked;t._stacked=_a(t.vScale,t),t.stack!==s.stack&&(a=!0,ja(t),t.stack=s.stack),this._resyncElements(e),(a||i!==t._stacked)&&Za(this,t._parsed)}configure(){const e=this.chart.config,t=e.datasetScopeKeys(this._type),s=e.getOptionScopes(this.getDataset(),t,!0);this.options=e.createResolver(s,this.getContext()),this._parsing=this.options.parsing,this._cachedDataOpts={}}parse(e,t){const{_cachedMeta:s,_data:a}=this,{iScale:i,_stacked:r}=s,o=i.axis;let n,l,f,c=0===e&&t===a.length||s._sorted,u=e>0&&s._parsed[e-1];if(!1===this._parsing)s._parsed=a,s._sorted=!0,f=a;else{f=je(a[e])?this.parseArrayData(s,a,e,t):Ke(a[e])?this.parseObjectData(s,a,e,t):this.parsePrimitiveData(s,a,e,t);const i=()=>null===l[o]||u&&l[o]<u[o];for(n=0;n<t;++n)s._parsed[n+e]=l=f[n],c&&(i()&&(c=!1),u=l);s._sorted=c}r&&Za(this,f)}parsePrimitiveData(e,t,s,a){const{iScale:i,vScale:r}=e,o=i.axis,n=r.axis,l=i.getLabels(),f=i===r,c=new Array(a);let u,p,g;for(u=0,p=a;u<p;++u)g=u+s,c[u]={[o]:f||i.parse(l[g],g),[n]:r.parse(t[g],g)};return c}parseArrayData(e,t,s,a){const{xScale:i,yScale:r}=e,o=new Array(a);let n,l,f,c;for(n=0,l=a;n<l;++n)f=n+s,c=t[f],o[n]={x:i.parse(c[0],f),y:r.parse(c[1],f)};return o}parseObjectData(e,t,s,a){const{xScale:i,yScale:r}=e,{xAxisKey:o="x",yAxisKey:n="y"}=this._parsing,l=new Array(a);let f,c,u,p;for(f=0,c=a;f<c;++f)u=f+s,p=t[u],l[f]={x:i.parse(nt(p,o),u),y:r.parse(nt(p,n),u)};return l}getParsed(e){return this._cachedMeta._parsed[e]}getDataElement(e){return this._cachedMeta.data[e]}applyStack(e,t,s){const a=this.chart,i=this._cachedMeta,r=t[e.axis];return Ha({keys:Ra(a,!0),values:t._stacks[e.axis]._visualValues},r,i.index,{mode:s})}updateRangeFromParsed(e,t,s,a){const i=s[t.axis];let r=null===i?NaN:i;const o=a&&s._stacks[t.axis];a&&o&&(a.values=o,r=Ha(a,i,this._cachedMeta.index)),e.min=Math.min(e.min,r),e.max=Math.max(e.max,r)}getMinMax(e,t){const s=this._cachedMeta,a=s._parsed,i=s._sorted&&e===s.iScale,r=a.length,o=this._getOtherScale(e),n=((e,t,s)=>e&&!t.hidden&&t._stacked&&{keys:Ra(s,!0),values:null})(t,s,this.chart),l={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:f,max:c}=function(e){const{min:t,max:s,minDefined:a,maxDefined:i}=e.getUserBounds();return{min:a?t:Number.NEGATIVE_INFINITY,max:i?s:Number.POSITIVE_INFINITY}}(o);let u,p;function g(){p=a[u];const t=p[o.axis];return!Ve(p[e.axis])||f>t||c<t}for(u=0;u<r&&(g()||(this.updateRangeFromParsed(l,e,p,n),!i));++u);if(i)for(u=r-1;u>=0;--u)if(!g()){this.updateRangeFromParsed(l,e,p,n);break}return l}getAllParsedValues(e){const t=this._cachedMeta._parsed,s=[];let a,i,r;for(a=0,i=t.length;a<i;++a)r=t[a][e.axis],Ve(r)&&s.push(r);return s}getMaxOverflow(){return!1}getLabelAndValue(e){const t=this._cachedMeta,s=t.iScale,a=t.vScale,i=this.getParsed(e);return{label:s?""+s.getLabelForValue(i[s.axis]):"",value:a?""+a.getLabelForValue(i[a.axis]):""}}_update(e){const t=this._cachedMeta;this.update(e||"default"),t._clip=function(e){let t,s,a,i;return Ke(e)?(t=e.top,s=e.right,a=e.bottom,i=e.left):t=s=a=i=e,{top:t,right:s,bottom:a,left:i,disabled:!1===e}}($e(this.options.clip,function(e,t,s){if(!1===s)return!1;const a=za(e,s),i=za(t,s);return{top:i.end,right:a.end,bottom:i.start,left:a.start}}(t.xScale,t.yScale,this.getMaxOverflow())))}update(e){}draw(){const e=this._ctx,t=this.chart,s=this._cachedMeta,a=s.data||[],i=t.chartArea,r=[],o=this._drawStart||0,n=this._drawCount||a.length-o,l=this.options.drawActiveElementsOnTop;let f;for(s.dataset&&s.dataset.draw(e,i,o,n),f=o;f<o+n;++f){const t=a[f];t.hidden||(t.active&&l?r.push(t):t.draw(e,i))}for(f=0;f<r.length;++f)r[f].draw(e,i)}getStyle(e,t){const s=t?"active":"default";return void 0===e&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(s):this.resolveDataElementOptions(e||0,s)}getContext(e,t,s){const a=this.getDataset();let i;if(e>=0&&e<this._cachedMeta.data.length){const t=this._cachedMeta.data[e];i=t.$context||(t.$context=function(e,t,s){return Rs(e,{active:!1,dataIndex:t,parsed:void 0,raw:void 0,element:s,index:t,mode:"default",type:"data"})}(this.getContext(),e,t)),i.parsed=this.getParsed(e),i.raw=a.data[e],i.index=i.dataIndex=e}else i=this.$context||(this.$context=function(e,t){return Rs(e,{active:!1,dataset:void 0,datasetIndex:t,index:t,mode:"default",type:"dataset"})}(this.chart.getContext(),this.index)),i.dataset=a,i.index=i.datasetIndex=this.index;return i.active=!!t,i.mode=s,i}resolveDatasetElementOptions(e){return this._resolveElementOptions(this.datasetElementType.id,e)}resolveDataElementOptions(e,t){return this._resolveElementOptions(this.dataElementType.id,t,e)}_resolveElementOptions(e,t="default",s){const a="active"===t,i=this._cachedDataOpts,r=e+"-"+t,o=i[r],n=this.enableOptionSharing&&ft(s);if(o)return Va(o,n);const l=this.chart.config,f=l.datasetElementScopeKeys(this._type,e),c=a?[`${e}Hover`,"hover",e,""]:[e,""],u=l.getOptionScopes(this.getDataset(),f),p=Object.keys(ps.elements[e]),g=l.resolveNamedOptions(u,p,(()=>this.getContext(s,a,t)),c);return g.$shared&&(g.$shared=n,i[r]=Object.freeze(Va(g,n))),g}_resolveAnimations(e,t,s){const a=this.chart,i=this._cachedDataOpts,r=`animation-${t}`,o=i[r];if(o)return o;let n;if(!1!==a.options.animation){const a=this.chart.config,i=a.datasetAnimationScopeKeys(this._type,t),r=a.getOptionScopes(this.getDataset(),i);n=a.createResolver(r,this.getContext(e,s,t))}const l=new Ia(a,n&&n.animations);return n&&n._cacheable&&(i[r]=Object.freeze(l)),l}getSharedOptions(e){if(e.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},e))}includeOptions(e,t){return!t||Ka(e)||this.chart._animationsDisabled}_getSharedOptions(e,t){const s=this.resolveDataElementOptions(e,t),a=this._sharedOptions,i=this.getSharedOptions(s),r=this.includeOptions(t,i)||i!==a;return this.updateSharedOptions(i,t,s),{sharedOptions:i,includeOptions:r}}updateElement(e,t,s,a){Ka(a)?Object.assign(e,s):this._resolveAnimations(t,a).update(e,s)}updateSharedOptions(e,t,s){e&&!Ka(t)&&this._resolveAnimations(void 0,t).update(e,s)}_setStyle(e,t,s,a){e.active=a;const i=this.getStyle(t,a);this._resolveAnimations(t,s,a).update(e,{options:!a&&this.getSharedOptions(i)||i})}removeHoverStyle(e,t,s){this._setStyle(e,s,"active",!1)}setHoverStyle(e,t,s){this._setStyle(e,s,"active",!0)}_removeDatasetHoverStyle(){const e=this._cachedMeta.dataset;e&&this._setStyle(e,void 0,"active",!1)}_setDatasetHoverStyle(){const e=this._cachedMeta.dataset;e&&this._setStyle(e,void 0,"active",!0)}_resyncElements(e){const t=this._data,s=this._cachedMeta.data;for(const[e,t,s]of this._syncList)this[e](t,s);this._syncList=[];const a=s.length,i=t.length,r=Math.min(i,a);r&&this.parse(0,r),i>a?this._insertElements(a,i-a,e):i<a&&this._removeElements(i,a-i)}_insertElements(e,t,s=!0){const a=this._cachedMeta,i=a.data,r=e+t;let o;const n=e=>{for(e.length+=t,o=e.length-1;o>=r;o--)e[o]=e[o-t]};for(n(i),o=e;o<r;++o)i[o]=new this.dataElementType;this._parsing&&n(a._parsed),this.parse(e,t),s&&this.updateElements(i,e,t,"reset")}updateElements(e,t,s,a){}_removeElements(e,t){const s=this._cachedMeta;if(this._parsing){const a=s._parsed.splice(e,t);s._stacked&&ja(s,a)}s.data.splice(e,t)}_sync(e){if(this._parsing)this._syncList.push(e);else{const[t,s,a]=e;this[t](s,a)}this.chart._dataChanges.push([this.index,...e])}_onDataPush(){const e=arguments.length;this._sync(["_insertElements",this.getDataset().data.length-e,e])}_onDataPop(){this._sync(["_removeElements",this._cachedMeta.data.length-1,1])}_onDataShift(){this._sync(["_removeElements",0,1])}_onDataSplice(e,t){t&&this._sync(["_removeElements",e,t]);const s=arguments.length-2;s&&this._sync(["_insertElements",e,s])}_onDataUnshift(){this._sync(["_insertElements",0,arguments.length])}}function $a(e){const t=e.iScale,s=function(e,t){if(!e._cache.$bar){const s=e.getMatchingVisibleMetas(t);let a=[];for(let t=0,i=s.length;t<i;t++)a=a.concat(s[t].controller.getAllParsedValues(e));e._cache.$bar=Lt(a.sort(((e,t)=>e-t)))}return e._cache.$bar}(t,e.type);let a,i,r,o,n=t._length;const l=()=>{32767!==r&&-32768!==r&&(ft(o)&&(n=Math.min(n,Math.abs(r-o)||n)),o=r)};for(a=0,i=s.length;a<i;++a)r=t.getPixelForValue(s[a]),l();for(o=void 0,a=0,i=t.ticks.length;a<i;++a)r=t.getPixelForTick(a),l();return n}function Ya(e,t,s,a){return je(e)?function(e,t,s,a){const i=s.parse(e[0],a),r=s.parse(e[1],a),o=Math.min(i,r),n=Math.max(i,r);let l=o,f=n;Math.abs(o)>Math.abs(n)&&(l=n,f=o),t[s.axis]=f,t._custom={barStart:l,barEnd:f,start:i,end:r,min:o,max:n}}(e,t,s,a):t[s.axis]=s.parse(e,a),t}function Ja(e,t,s,a){const i=e.iScale,r=e.vScale,o=i.getLabels(),n=i===r,l=[];let f,c,u,p;for(f=s,c=s+a;f<c;++f)p=t[f],u={},u[i.axis]=n||i.parse(o[f],f),l.push(Ya(p,u,r,f));return l}function Qa(e){return e&&void 0!==e.barStart&&void 0!==e.barEnd}function Xa(e,t,s,a){let i=t.borderSkipped;const r={};if(!i)return void(e.borderSkipped=r);if(!0===i)return void(e.borderSkipped={top:!0,right:!0,bottom:!0,left:!0});const{start:o,end:n,reverse:l,top:f,bottom:c}=function(e){let t,s,a,i,r;return e.horizontal?(t=e.base>e.x,s="left",a="right"):(t=e.base<e.y,s="bottom",a="top"),t?(i="end",r="start"):(i="start",r="end"),{start:s,end:a,reverse:t,top:i,bottom:r}}(e);"middle"===i&&s&&(e.enableBorderRadius=!0,(s._top||0)===a?i=f:(s._bottom||0)===a?i=c:(r[ei(c,o,n,l)]=!0,i=f)),r[ei(i,o,n,l)]=!0,e.borderSkipped=r}function ei(e,t,s,a){var i,r,o;return a?(o=s,e=ti(e=(i=e)===(r=t)?o:i===o?r:i,s,t)):e=ti(e,t,s),e}function ti(e,t,s){return"start"===e?t:"end"===e?s:e}function si(e,{inflateAmount:t},s){e.inflateAmount="auto"===t?1===s?.33:0:t}class ai extends qa{static id="doughnut";static defaults={datasetElementType:!1,dataElementType:"arc",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:"number",properties:["circumference","endAngle","innerRadius","outerRadius","startAngle","x","y","offset","borderWidth","spacing"]}},cutout:"50%",rotation:0,circumference:360,radius:"100%",spacing:0,indexAxis:"r"};static descriptors={_scriptable:e=>"spacing"!==e,_indexable:e=>"spacing"!==e};static overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(e){const t=e.data;if(t.labels.length&&t.datasets.length){const{labels:{pointStyle:s,color:a}}=e.legend.options;return t.labels.map(((t,i)=>{const r=e.getDatasetMeta(0).controller.getStyle(i);return{text:t,fillStyle:r.backgroundColor,strokeStyle:r.borderColor,fontColor:a,lineWidth:r.borderWidth,pointStyle:s,hidden:!e.getDataVisibility(i),index:i}}))}return[]}},onClick(e,t,s){s.chart.toggleDataVisibility(t.index),s.chart.update()}}}};constructor(e,t){super(e,t),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(e,t){const s=this.getDataset().data,a=this._cachedMeta;if(!1===this._parsing)a._parsed=s;else{let i,r,o=e=>+s[e];if(Ke(s[e])){const{key:e="value"}=this._parsing;o=t=>+nt(s[t],e)}for(i=e,r=e+t;i<r;++i)a._parsed[i]=o(i)}}_getRotation(){return Mt(this.options.rotation-90)}_getCircumference(){return Mt(this.options.circumference)}_getRotationExtents(){let e=gt,t=-gt;for(let s=0;s<this.chart.data.datasets.length;++s)if(this.chart.isDatasetVisible(s)&&this.chart.getDatasetMeta(s).type===this._type){const a=this.chart.getDatasetMeta(s).controller,i=a._getRotation(),r=a._getCircumference();e=Math.min(e,i),t=Math.max(t,i+r)}return{rotation:e,circumference:t-e}}update(e){const t=this.chart,{chartArea:s}=t,a=this._cachedMeta,i=a.data,r=this.getMaxBorderWidth()+this.getMaxOffset(i)+this.options.spacing,o=Math.max((Math.min(s.width,s.height)-r)/2,0),n=Math.min((f=o,"string"==typeof(l=this.options.cutout)&&l.endsWith("%")?parseFloat(l)/100:+l/f),1);var l,f;const c=this._getRingWeight(this.index),{circumference:u,rotation:p}=this._getRotationExtents(),{ratioX:g,ratioY:d,offsetX:h,offsetY:m}=function(e,t,s){let a=1,i=1,r=0,o=0;if(t<gt){const n=e,l=n+t,f=Math.cos(n),c=Math.sin(n),u=Math.cos(l),p=Math.sin(l),g=(e,t,a)=>Nt(e,n,l,!0)?1:Math.max(t,t*s,a,a*s),d=(e,t,a)=>Nt(e,n,l,!0)?-1:Math.min(t,t*s,a,a*s),h=g(0,f,u),m=g(yt,c,p),y=d(pt,f,u),v=d(pt+yt,c,p);a=(h-y)/2,i=(m-v)/2,r=-(h+y)/2,o=-(m+v)/2}return{ratioX:a,ratioY:i,offsetX:r,offsetY:o}}(p,u,n),y=(s.width-r)/g,v=(s.height-r)/d,b=Math.max(Math.min(y,v)/2,0),P=Ye(this.options.radius,b),w=(P-Math.max(P*n,0))/this._getVisibleDatasetWeightTotal();this.offsetX=h*P,this.offsetY=m*P,a.total=this.calculateTotal(),this.outerRadius=P-w*this._getRingWeightOffset(this.index),this.innerRadius=Math.max(this.outerRadius-w*c,0),this.updateElements(i,0,i.length,e)}_circumference(e,t){const s=this.options,a=this._cachedMeta,i=this._getCircumference();return t&&s.animation.animateRotate||!this.chart.getDataVisibility(e)||null===a._parsed[e]||a.data[e].hidden?0:this.calculateCircumference(a._parsed[e]*i/gt)}updateElements(e,t,s,a){const i="reset"===a,r=this.chart,o=r.chartArea,n=r.options.animation,l=(o.left+o.right)/2,f=(o.top+o.bottom)/2,c=i&&n.animateScale,u=c?0:this.innerRadius,p=c?0:this.outerRadius,{sharedOptions:g,includeOptions:d}=this._getSharedOptions(t,a);let h,m=this._getRotation();for(h=0;h<t;++h)m+=this._circumference(h,i);for(h=t;h<t+s;++h){const t=this._circumference(h,i),s=e[h],r={x:l+this.offsetX,y:f+this.offsetY,startAngle:m,endAngle:m+t,circumference:t,outerRadius:p,innerRadius:u};d&&(r.options=g||this.resolveDataElementOptions(h,s.active?"active":a)),m+=t,this.updateElement(s,h,r,a)}}calculateTotal(){const e=this._cachedMeta,t=e.data;let s,a=0;for(s=0;s<t.length;s++){const i=e._parsed[s];null===i||isNaN(i)||!this.chart.getDataVisibility(s)||t[s].hidden||(a+=Math.abs(i))}return a}calculateCircumference(e){const t=this._cachedMeta.total;return t>0&&!isNaN(e)?gt*(Math.abs(e)/t):0}getLabelAndValue(e){const t=this._cachedMeta,s=this.chart,a=s.data.labels||[],i=is(t._parsed[e],s.options.locale);return{label:a[e]||"",value:i}}getMaxBorderWidth(e){let t=0;const s=this.chart;let a,i,r,o,n;if(!e)for(a=0,i=s.data.datasets.length;a<i;++a)if(s.isDatasetVisible(a)){r=s.getDatasetMeta(a),e=r.data,o=r.controller;break}if(!e)return 0;for(a=0,i=e.length;a<i;++a)n=o.resolveDataElementOptions(a),"inner"!==n.borderAlign&&(t=Math.max(t,n.borderWidth||0,n.hoverBorderWidth||0));return t}getMaxOffset(e){let t=0;for(let s=0,a=e.length;s<a;++s){const e=this.resolveDataElementOptions(s);t=Math.max(t,e.offset||0,e.hoverOffset||0)}return t}_getRingWeightOffset(e){let t=0;for(let s=0;s<e;++s)this.chart.isDatasetVisible(s)&&(t+=this._getRingWeight(s));return t}_getRingWeight(e){return Math.max($e(this.chart.data.datasets[e].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}class ii extends qa{static id="polarArea";static defaults={dataElementType:"arc",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:"number",properties:["x","y","startAngle","endAngle","innerRadius","outerRadius"]}},indexAxis:"r",startAngle:0};static overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(e){const t=e.data;if(t.labels.length&&t.datasets.length){const{labels:{pointStyle:s,color:a}}=e.legend.options;return t.labels.map(((t,i)=>{const r=e.getDatasetMeta(0).controller.getStyle(i);return{text:t,fillStyle:r.backgroundColor,strokeStyle:r.borderColor,fontColor:a,lineWidth:r.borderWidth,pointStyle:s,hidden:!e.getDataVisibility(i),index:i}}))}return[]}},onClick(e,t,s){s.chart.toggleDataVisibility(t.index),s.chart.update()}}},scales:{r:{type:"radialLinear",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}};constructor(e,t){super(e,t),this.innerRadius=void 0,this.outerRadius=void 0}getLabelAndValue(e){const t=this._cachedMeta,s=this.chart,a=s.data.labels||[],i=is(t._parsed[e].r,s.options.locale);return{label:a[e]||"",value:i}}parseObjectData(e,t,s,a){return Qs.bind(this)(e,t,s,a)}update(e){const t=this._cachedMeta.data;this._updateRadius(),this.updateElements(t,0,t.length,e)}getMinMax(){const e=this._cachedMeta,t={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY};return e.data.forEach(((e,s)=>{const a=this.getParsed(s).r;!isNaN(a)&&this.chart.getDataVisibility(s)&&(a<t.min&&(t.min=a),a>t.max&&(t.max=a))})),t}_updateRadius(){const e=this.chart,t=e.chartArea,s=e.options,a=Math.min(t.right-t.left,t.bottom-t.top),i=Math.max(a/2,0),r=(i-Math.max(s.cutoutPercentage?i/100*s.cutoutPercentage:1,0))/e.getVisibleDatasetCount();this.outerRadius=i-r*this.index,this.innerRadius=this.outerRadius-r}updateElements(e,t,s,a){const i="reset"===a,r=this.chart,o=r.options.animation,n=this._cachedMeta.rScale,l=n.xCenter,f=n.yCenter,c=n.getIndexAngle(0)-.5*pt;let u,p=c;const g=360/this.countVisibleElements();for(u=0;u<t;++u)p+=this._computeAngle(u,a,g);for(u=t;u<t+s;u++){const t=e[u];let s=p,d=p+this._computeAngle(u,a,g),h=r.getDataVisibility(u)?n.getDistanceFromCenterForValue(this.getParsed(u).r):0;p=d,i&&(o.animateScale&&(h=0),o.animateRotate&&(s=d=c));const m={x:l,y:f,innerRadius:0,outerRadius:h,startAngle:s,endAngle:d,options:this.resolveDataElementOptions(u,t.active?"active":a)};this.updateElement(t,u,m,a)}}countVisibleElements(){const e=this._cachedMeta;let t=0;return e.data.forEach(((e,s)=>{!isNaN(this.getParsed(s).r)&&this.chart.getDataVisibility(s)&&t++})),t}_computeAngle(e,t,s){return this.chart.getDataVisibility(e)?Mt(this.resolveDataElementOptions(e,t).angle||s):0}}class ri extends qa{static id="radar";static defaults={datasetElementType:"line",dataElementType:"point",indexAxis:"r",showLine:!0,elements:{line:{fill:"start"}}};static overrides={aspectRatio:1,scales:{r:{type:"radialLinear"}}};getLabelAndValue(e){const t=this._cachedMeta.vScale,s=this.getParsed(e);return{label:t.getLabels()[e],value:""+t.getLabelForValue(s[t.axis])}}parseObjectData(e,t,s,a){return Qs.bind(this)(e,t,s,a)}update(e){const t=this._cachedMeta,s=t.dataset,a=t.data||[],i=t.iScale.getLabels();if(s.points=a,"resize"!==e){const t=this.resolveDatasetElementOptions(e);this.options.showLine||(t.borderWidth=0);const r={_loop:!0,_fullLoop:i.length===a.length,options:t};this.updateElement(s,void 0,r,e)}this.updateElements(a,0,a.length,e)}updateElements(e,t,s,a){const i=this._cachedMeta.rScale,r="reset"===a;for(let o=t;o<t+s;o++){const t=e[o],s=this.resolveDataElementOptions(o,t.active?"active":a),n=i.getPointPositionForValue(o,this.getParsed(o).r),l=r?i.xCenter:n.x,f=r?i.yCenter:n.y,c={x:l,y:f,angle:n.angle,skip:isNaN(l)||isNaN(f),options:s};this.updateElement(t,o,c,a)}}}var oi=Object.freeze({__proto__:null,BarController:class extends qa{static id="bar";static defaults={datasetElementType:!1,dataElementType:"bar",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:"number",properties:["x","y","base","width","height"]}}};static overrides={scales:{_index_:{type:"category",offset:!0,grid:{offset:!0}},_value_:{type:"linear",beginAtZero:!0}}};parsePrimitiveData(e,t,s,a){return Ja(e,t,s,a)}parseArrayData(e,t,s,a){return Ja(e,t,s,a)}parseObjectData(e,t,s,a){const{iScale:i,vScale:r}=e,{xAxisKey:o="x",yAxisKey:n="y"}=this._parsing,l="x"===i.axis?o:n,f="x"===r.axis?o:n,c=[];let u,p,g,d;for(u=s,p=s+a;u<p;++u)d=t[u],g={},g[i.axis]=i.parse(nt(d,l),u),c.push(Ya(nt(d,f),g,r,u));return c}updateRangeFromParsed(e,t,s,a){super.updateRangeFromParsed(e,t,s,a);const i=s._custom;i&&t===this._cachedMeta.vScale&&(e.min=Math.min(e.min,i.min),e.max=Math.max(e.max,i.max))}getMaxOverflow(){return 0}getLabelAndValue(e){const t=this._cachedMeta,{iScale:s,vScale:a}=t,i=this.getParsed(e),r=i._custom,o=Qa(r)?"["+r.start+", "+r.end+"]":""+a.getLabelForValue(i[a.axis]);return{label:""+s.getLabelForValue(i[s.axis]),value:o}}initialize(){this.enableOptionSharing=!0,super.initialize(),this._cachedMeta.stack=this.getDataset().stack}update(e){const t=this._cachedMeta;this.updateElements(t.data,0,t.data.length,e)}updateElements(e,t,s,a){const i="reset"===a,{index:r,_cachedMeta:{vScale:o}}=this,n=o.getBasePixel(),l=o.isHorizontal(),f=this._getRuler(),{sharedOptions:c,includeOptions:u}=this._getSharedOptions(t,a);for(let p=t;p<t+s;p++){const t=this.getParsed(p),s=i||Ue(t[o.axis])?{base:n,head:n}:this._calculateBarValuePixels(p),g=this._calculateBarIndexPixels(p,f),d=(t._stacks||{})[o.axis],h={horizontal:l,base:s.base,enableBorderRadius:!d||Qa(t._custom)||r===d._top||r===d._bottom,x:l?s.head:g.center,y:l?g.center:s.head,height:l?g.size:Math.abs(s.size),width:l?Math.abs(s.size):g.size};u&&(h.options=c||this.resolveDataElementOptions(p,e[p].active?"active":a));const m=h.options||e[p].options;Xa(h,m,d,r),si(h,m,f.ratio),this.updateElement(e[p],p,h,a)}}_getStacks(e,t){const{iScale:s}=this._cachedMeta,a=s.getMatchingVisibleMetas(this._type).filter((e=>e.controller.options.grouped)),i=s.options.stacked,r=[],o=e=>{const s=e.controller.getParsed(t),a=s&&s[e.vScale.axis];if(Ue(a)||isNaN(a))return!0};for(const s of a)if((void 0===t||!o(s))&&((!1===i||-1===r.indexOf(s.stack)||void 0===i&&void 0===s.stack)&&r.push(s.stack),s.index===e))break;return r.length||r.push(void 0),r}_getStackCount(e){return this._getStacks(void 0,e).length}_getStackIndex(e,t,s){const a=this._getStacks(e,s),i=void 0!==t?a.indexOf(t):-1;return-1===i?a.length-1:i}_getRuler(){const e=this.options,t=this._cachedMeta,s=t.iScale,a=[];let i,r;for(i=0,r=t.data.length;i<r;++i)a.push(s.getPixelForValue(this.getParsed(i)[s.axis],i));const o=e.barThickness;return{min:o||$a(t),pixels:a,start:s._startPixel,end:s._endPixel,stackCount:this._getStackCount(),scale:s,grouped:e.grouped,ratio:o?1:e.categoryPercentage*e.barPercentage}}_calculateBarValuePixels(e){const{_cachedMeta:{vScale:t,_stacked:s,index:a},options:{base:i,minBarLength:r}}=this,o=i||0,n=this.getParsed(e),l=n._custom,f=Qa(l);let c,u,p=n[t.axis],g=0,d=s?this.applyStack(t,n,s):p;d!==p&&(g=d-p,d=p),f&&(p=l.barStart,d=l.barEnd-l.barStart,0!==p&&wt(p)!==wt(l.barEnd)&&(g=0),g+=p);const h=Ue(i)||f?g:i;let m=t.getPixelForValue(h);if(c=this.chart.getDataVisibility(e)?t.getPixelForValue(g+d):m,u=c-m,Math.abs(u)<r){u=function(e,t,s){return 0!==e?wt(e):(t.isHorizontal()?1:-1)*(t.min>=s?1:-1)}(u,t,o)*r,p===o&&(m-=u/2);const e=t.getPixelForDecimal(0),i=t.getPixelForDecimal(1),l=Math.min(e,i),g=Math.max(e,i);m=Math.max(Math.min(m,g),l),c=m+u,s&&!f&&(n._stacks[t.axis]._visualValues[a]=t.getValueForPixel(c)-t.getValueForPixel(m))}if(m===t.getPixelForValue(o)){const e=wt(u)*t.getLineWidthForValue(o)/2;m+=e,u-=e}return{size:u,base:m,head:c,center:c+u/2}}_calculateBarIndexPixels(e,t){const s=t.scale,a=this.options,i=a.skipNull,r=$e(a.maxBarThickness,1/0);let o,n;if(t.grouped){const s=i?this._getStackCount(e):t.stackCount,l="flex"===a.barThickness?function(e,t,s,a){const i=t.pixels,r=i[e];let o=e>0?i[e-1]:null,n=e<i.length-1?i[e+1]:null;const l=s.categoryPercentage;null===o&&(o=r-(null===n?t.end-t.start:n-r)),null===n&&(n=r+r-o);const f=r-(r-Math.min(o,n))/2*l;return{chunk:Math.abs(n-o)/2*l/a,ratio:s.barPercentage,start:f}}(e,t,a,s):function(e,t,s,a){const i=s.barThickness;let r,o;return Ue(i)?(r=t.min*s.categoryPercentage,o=s.barPercentage):(r=i*a,o=1),{chunk:r/a,ratio:o,start:t.pixels[e]-r/2}}(e,t,a,s),f=this._getStackIndex(this.index,this._cachedMeta.stack,i?e:void 0);o=l.start+l.chunk*f+l.chunk/2,n=Math.min(r,l.chunk*l.ratio)}else o=s.getPixelForValue(this.getParsed(e)[s.axis],e),n=Math.min(r,t.min*t.ratio);return{base:o-n/2,head:o+n/2,center:o,size:n}}draw(){const e=this._cachedMeta,t=e.vScale,s=e.data,a=s.length;let i=0;for(;i<a;++i)null!==this.getParsed(i)[t.axis]&&s[i].draw(this._ctx)}},BubbleController:class extends qa{static id="bubble";static defaults={datasetElementType:!1,dataElementType:"point",animations:{numbers:{type:"number",properties:["x","y","borderWidth","radius"]}}};static overrides={scales:{x:{type:"linear"},y:{type:"linear"}}};initialize(){this.enableOptionSharing=!0,super.initialize()}parsePrimitiveData(e,t,s,a){const i=super.parsePrimitiveData(e,t,s,a);for(let e=0;e<i.length;e++)i[e]._custom=this.resolveDataElementOptions(e+s).radius;return i}parseArrayData(e,t,s,a){const i=super.parseArrayData(e,t,s,a);for(let e=0;e<i.length;e++){const a=t[s+e];i[e]._custom=$e(a[2],this.resolveDataElementOptions(e+s).radius)}return i}parseObjectData(e,t,s,a){const i=super.parseObjectData(e,t,s,a);for(let e=0;e<i.length;e++){const a=t[s+e];i[e]._custom=$e(a&&a.r&&+a.r,this.resolveDataElementOptions(e+s).radius)}return i}getMaxOverflow(){const e=this._cachedMeta.data;let t=0;for(let s=e.length-1;s>=0;--s)t=Math.max(t,e[s].size(this.resolveDataElementOptions(s))/2);return t>0&&t}getLabelAndValue(e){const t=this._cachedMeta,s=this.chart.data.labels||[],{xScale:a,yScale:i}=t,r=this.getParsed(e),o=a.getLabelForValue(r.x),n=i.getLabelForValue(r.y),l=r._custom;return{label:s[e]||"",value:"("+o+", "+n+(l?", "+l:"")+")"}}update(e){const t=this._cachedMeta.data;this.updateElements(t,0,t.length,e)}updateElements(e,t,s,a){const i="reset"===a,{iScale:r,vScale:o}=this._cachedMeta,{sharedOptions:n,includeOptions:l}=this._getSharedOptions(t,a),f=r.axis,c=o.axis;for(let u=t;u<t+s;u++){const t=e[u],s=!i&&this.getParsed(u),p={},g=p[f]=i?r.getPixelForDecimal(.5):r.getPixelForValue(s[f]),d=p[c]=i?o.getBasePixel():o.getPixelForValue(s[c]);p.skip=isNaN(g)||isNaN(d),l&&(p.options=n||this.resolveDataElementOptions(u,t.active?"active":a),i&&(p.options.radius=0)),this.updateElement(t,u,p,a)}}resolveDataElementOptions(e,t){const s=this.getParsed(e);let a=super.resolveDataElementOptions(e,t);a.$shared&&(a=Object.assign({},a,{$shared:!1}));const i=a.radius;return"active"!==t&&(a.radius=0),a.radius+=$e(s&&s._custom,i),a}},DoughnutController:ai,LineController:class extends qa{static id="line";static defaults={datasetElementType:"line",dataElementType:"point",showLine:!0,spanGaps:!1};static overrides={scales:{_index_:{type:"category"},_value_:{type:"linear"}}};initialize(){this.enableOptionSharing=!0,this.supportsDecimation=!0,super.initialize()}update(e){const t=this._cachedMeta,{dataset:s,data:a=[],_dataset:i}=t,r=this.chart._animationsDisabled;let{start:o,count:n}=Kt(t,a,r);this._drawStart=o,this._drawCount=n,Vt(t)&&(o=0,n=a.length),s._chart=this.chart,s._datasetIndex=this.index,s._decimated=!!i._decimated,s.points=a;const l=this.resolveDatasetElementOptions(e);this.options.showLine||(l.borderWidth=0),l.segment=this.options.segment,this.updateElement(s,void 0,{animated:!r,options:l},e),this.updateElements(a,o,n,e)}updateElements(e,t,s,a){const i="reset"===a,{iScale:r,vScale:o,_stacked:n,_dataset:l}=this._cachedMeta,{sharedOptions:f,includeOptions:c}=this._getSharedOptions(t,a),u=r.axis,p=o.axis,{spanGaps:g,segment:d}=this.options,h=Tt(g)?g:Number.POSITIVE_INFINITY,m=this.chart._animationsDisabled||i||"none"===a,y=t+s,v=e.length;let b=t>0&&this.getParsed(t-1);for(let s=0;s<v;++s){const g=e[s],v=m?g:{};if(s<t||s>=y){v.skip=!0;continue}const P=this.getParsed(s),w=Ue(P[p]),S=v[u]=r.getPixelForValue(P[u],s),k=v[p]=i||w?o.getBasePixel():o.getPixelForValue(n?this.applyStack(o,P,n):P[p],s);v.skip=isNaN(S)||isNaN(k)||w,v.stop=s>0&&Math.abs(P[u]-b[u])>h,d&&(v.parsed=P,v.raw=l.data[s]),c&&(v.options=f||this.resolveDataElementOptions(s,g.active?"active":a)),m||this.updateElement(g,s,v,a),b=P}}getMaxOverflow(){const e=this._cachedMeta,t=e.dataset,s=t.options&&t.options.borderWidth||0,a=e.data||[];if(!a.length)return s;const i=a[0].size(this.resolveDataElementOptions(0)),r=a[a.length-1].size(this.resolveDataElementOptions(a.length-1));return Math.max(s,i,r)/2}draw(){const e=this._cachedMeta;e.dataset.updateControlPoints(this.chart.chartArea,e.iScale.axis),super.draw()}},PolarAreaController:ii,PieController:class extends ai{static id="pie";static defaults={cutout:0,rotation:0,circumference:360,radius:"100%"}},RadarController:ri,ScatterController:class extends qa{static id="scatter";static defaults={datasetElementType:!1,dataElementType:"point",showLine:!1,fill:!1};static overrides={interaction:{mode:"point"},scales:{x:{type:"linear"},y:{type:"linear"}}};getLabelAndValue(e){const t=this._cachedMeta,s=this.chart.data.labels||[],{xScale:a,yScale:i}=t,r=this.getParsed(e),o=a.getLabelForValue(r.x),n=i.getLabelForValue(r.y);return{label:s[e]||"",value:"("+o+", "+n+")"}}update(e){const t=this._cachedMeta,{data:s=[]}=t,a=this.chart._animationsDisabled;let{start:i,count:r}=Kt(t,s,a);if(this._drawStart=i,this._drawCount=r,Vt(t)&&(i=0,r=s.length),this.options.showLine){const{dataset:i,_dataset:r}=t;i._chart=this.chart,i._datasetIndex=this.index,i._decimated=!!r._decimated,i.points=s;const o=this.resolveDatasetElementOptions(e);o.segment=this.options.segment,this.updateElement(i,void 0,{animated:!a,options:o},e)}this.updateElements(s,i,r,e)}addElements(){const{showLine:e}=this.options;!this.datasetElementType&&e&&(this.datasetElementType=this.chart.registry.getElement("line")),super.addElements()}updateElements(e,t,s,a){const i="reset"===a,{iScale:r,vScale:o,_stacked:n,_dataset:l}=this._cachedMeta,f=this.resolveDataElementOptions(t,a),c=this.getSharedOptions(f),u=this.includeOptions(a,c),p=r.axis,g=o.axis,{spanGaps:d,segment:h}=this.options,m=Tt(d)?d:Number.POSITIVE_INFINITY,y=this.chart._animationsDisabled||i||"none"===a;let v=t>0&&this.getParsed(t-1);for(let f=t;f<t+s;++f){const t=e[f],s=this.getParsed(f),d=y?t:{},b=Ue(s[g]),P=d[p]=r.getPixelForValue(s[p],f),w=d[g]=i||b?o.getBasePixel():o.getPixelForValue(n?this.applyStack(o,s,n):s[g],f);d.skip=isNaN(P)||isNaN(w)||b,d.stop=f>0&&Math.abs(s[p]-v[p])>m,h&&(d.parsed=s,d.raw=l.data[f]),u&&(d.options=c||this.resolveDataElementOptions(f,t.active?"active":a)),y||this.updateElement(t,f,d,a),v=s}this.updateSharedOptions(c,a,f)}getMaxOverflow(){const e=this._cachedMeta,t=e.data||[];if(!this.options.showLine){let e=0;for(let s=t.length-1;s>=0;--s)e=Math.max(e,t[s].size(this.resolveDataElementOptions(s))/2);return e>0&&e}const s=e.dataset,a=s.options&&s.options.borderWidth||0;if(!t.length)return a;const i=t[0].size(this.resolveDataElementOptions(0)),r=t[t.length-1].size(this.resolveDataElementOptions(t.length-1));return Math.max(a,i,r)/2}}});function ni(){throw new Error("This method is not implemented: Check that a complete date adapter is provided.")}class li{static override(e){Object.assign(li.prototype,e)}constructor(e){this.options=e||{}}init(){}formats(){return ni()}parse(){return ni()}format(){return ni()}add(){return ni()}diff(){return ni()}startOf(){return ni()}endOf(){return ni()}}var fi=li;function ci(e,t,s,a){const{controller:i,data:r,_sorted:o}=e,n=i._cachedMeta.iScale;if(n&&t===n.axis&&"r"!==t&&o&&r.length){const e=n._reversePixels?Rt:zt;if(!a)return e(r,t,s);if(i._sharedOptions){const a=r[0],i="function"==typeof a.getRange&&a.getRange(t);if(i){const a=e(r,t,s-i),o=e(r,t,s+i);return{lo:a.lo,hi:o.hi}}}}return{lo:0,hi:r.length-1}}function ui(e,t,s,a,i){const r=e.getSortedVisibleDatasetMetas(),o=s[t];for(let e=0,s=r.length;e<s;++e){const{index:s,data:n}=r[e],{lo:l,hi:f}=ci(r[e],t,o,i);for(let e=l;e<=f;++e){const t=n[e];t.skip||a(t,s,e)}}}function pi(e,t,s,a,i){const r=[];return i||e.isPointInArea(t)?(ui(e,s,t,(function(s,o,n){(i||bs(s,e.chartArea,0))&&s.inRange(t.x,t.y,a)&&r.push({element:s,datasetIndex:o,index:n})}),!0),r):r}function gi(e,t,s,a,i,r){return r||e.isPointInArea(t)?"r"!==s||a?function(e,t,s,a,i,r){let o=[];const n=function(e){const t=-1!==e.indexOf("x"),s=-1!==e.indexOf("y");return function(e,a){const i=t?Math.abs(e.x-a.x):0,r=s?Math.abs(e.y-a.y):0;return Math.sqrt(Math.pow(i,2)+Math.pow(r,2))}}(s);let l=Number.POSITIVE_INFINITY;return ui(e,s,t,(function(s,f,c){const u=s.inRange(t.x,t.y,i);if(a&&!u)return;const p=s.getCenterPoint(i);if(!r&&!e.isPointInArea(p)&&!u)return;const g=n(t,p);g<l?(o=[{element:s,datasetIndex:f,index:c}],l=g):g===l&&o.push({element:s,datasetIndex:f,index:c})})),o}(e,t,s,a,i,r):function(e,t,s,a){let i=[];return ui(e,s,t,(function(e,s,r){const{startAngle:o,endAngle:n}=e.getProps(["startAngle","endAngle"],a),{angle:l}=Bt(e,{x:t.x,y:t.y});Nt(l,o,n)&&i.push({element:e,datasetIndex:s,index:r})})),i}(e,t,s,i):[]}function di(e,t,s,a,i){const r=[],o="x"===s?"inXRange":"inYRange";let n=!1;return ui(e,s,t,((e,a,l)=>{e[o](t[s],i)&&(r.push({element:e,datasetIndex:a,index:l}),n=n||e.inRange(t.x,t.y,i))})),a&&!n?[]:r}var hi={evaluateInteractionItems:ui,modes:{index(e,t,s,a){const i=pa(t,e),r=s.axis||"x",o=s.includeInvisible||!1,n=s.intersect?pi(e,i,r,a,o):gi(e,i,r,!1,a,o),l=[];return n.length?(e.getSortedVisibleDatasetMetas().forEach((e=>{const t=n[0].index,s=e.data[t];s&&!s.skip&&l.push({element:s,datasetIndex:e.index,index:t})})),l):[]},dataset(e,t,s,a){const i=pa(t,e),r=s.axis||"xy",o=s.includeInvisible||!1;let n=s.intersect?pi(e,i,r,a,o):gi(e,i,r,!1,a,o);if(n.length>0){const t=n[0].datasetIndex,s=e.getDatasetMeta(t).data;n=[];for(let e=0;e<s.length;++e)n.push({element:s[e],datasetIndex:t,index:e})}return n},point:(e,t,s,a)=>pi(e,pa(t,e),s.axis||"xy",a,s.includeInvisible||!1),nearest(e,t,s,a){const i=pa(t,e),r=s.axis||"xy",o=s.includeInvisible||!1;return gi(e,i,r,s.intersect,a,o)},x:(e,t,s,a)=>di(e,pa(t,e),"x",s.intersect,a),y:(e,t,s,a)=>di(e,pa(t,e),"y",s.intersect,a)}};const mi=["left","top","right","bottom"];function yi(e,t){return e.filter((e=>e.pos===t))}function vi(e,t){return e.filter((e=>-1===mi.indexOf(e.pos)&&e.box.axis===t))}function bi(e,t){return e.sort(((e,s)=>{const a=t?s:e,i=t?e:s;return a.weight===i.weight?a.index-i.index:a.weight-i.weight}))}function Pi(e,t,s,a){return Math.max(e[s],t[s])+Math.max(e[a],t[a])}function wi(e,t){e.top=Math.max(e.top,t.top),e.left=Math.max(e.left,t.left),e.bottom=Math.max(e.bottom,t.bottom),e.right=Math.max(e.right,t.right)}function Si(e,t,s,a){const{pos:i,box:r}=s,o=e.maxPadding;if(!Ke(i)){s.size&&(e[i]-=s.size);const t=a[s.stack]||{size:0,count:1};t.size=Math.max(t.size,s.horizontal?r.height:r.width),s.size=t.size/t.count,e[i]+=s.size}r.getPadding&&wi(o,r.getPadding());const n=Math.max(0,t.outerWidth-Pi(o,e,"left","right")),l=Math.max(0,t.outerHeight-Pi(o,e,"top","bottom")),f=n!==e.w,c=l!==e.h;return e.w=n,e.h=l,s.horizontal?{same:f,other:c}:{same:c,other:f}}function ki(e,t){const s=t.maxPadding;return function(e){const a={left:0,top:0,right:0,bottom:0};return e.forEach((e=>{a[e]=Math.max(t[e],s[e])})),a}(e?["left","right"]:["top","bottom"])}function Ti(e,t,s,a){const i=[];let r,o,n,l,f,c;for(r=0,o=e.length,f=0;r<o;++r){n=e[r],l=n.box,l.update(n.width||t.w,n.height||t.h,ki(n.horizontal,t));const{same:o,other:u}=Si(t,s,n,a);f|=o&&i.length,c=c||u,l.fullSize||i.push(n)}return f&&Ti(i,t,s,a)||c}function xi(e,t,s,a,i){e.top=s,e.left=t,e.right=t+a,e.bottom=s+i,e.width=a,e.height=i}function Mi(e,t,s,a){const i=s.padding;let{x:r,y:o}=t;for(const n of e){const e=n.box,l=a[n.stack]||{count:1,placed:0,weight:1},f=n.stackWeight/l.weight||1;if(n.horizontal){const a=t.w*f,r=l.size||e.height;ft(l.start)&&(o=l.start),e.fullSize?xi(e,i.left,o,s.outerWidth-i.right-i.left,r):xi(e,t.left+l.placed,o,a,r),l.start=o,l.placed+=a,o=e.bottom}else{const a=t.h*f,o=l.size||e.width;ft(l.start)&&(r=l.start),e.fullSize?xi(e,r,i.top,o,s.outerHeight-i.bottom-i.top):xi(e,r,t.top+l.placed,o,a),l.start=r,l.placed+=a,r=e.right}}t.x=r,t.y=o}var Di={addBox(e,t){e.boxes||(e.boxes=[]),t.fullSize=t.fullSize||!1,t.position=t.position||"top",t.weight=t.weight||0,t._layers=t._layers||function(){return[{z:0,draw(e){t.draw(e)}}]},e.boxes.push(t)},removeBox(e,t){const s=e.boxes?e.boxes.indexOf(t):-1;-1!==s&&e.boxes.splice(s,1)},configure(e,t,s){t.fullSize=s.fullSize,t.position=s.position,t.weight=s.weight},update(e,t,s,a){if(!e)return;const i=Gs(e.options.layout.padding),r=Math.max(t-i.width,0),o=Math.max(s-i.height,0),n=function(e){const t=function(e){const t=[];let s,a,i,r,o,n;for(s=0,a=(e||[]).length;s<a;++s)i=e[s],({position:r,options:{stack:o,stackWeight:n=1}}=i),t.push({index:s,box:i,pos:r,horizontal:i.isHorizontal(),weight:i.weight,stack:o&&r+o,stackWeight:n});return t}(e),s=bi(t.filter((e=>e.box.fullSize)),!0),a=bi(yi(t,"left"),!0),i=bi(yi(t,"right")),r=bi(yi(t,"top"),!0),o=bi(yi(t,"bottom")),n=vi(t,"x"),l=vi(t,"y");return{fullSize:s,leftAndTop:a.concat(r),rightAndBottom:i.concat(l).concat(o).concat(n),chartArea:yi(t,"chartArea"),vertical:a.concat(i).concat(l),horizontal:r.concat(o).concat(n)}}(e.boxes),l=n.vertical,f=n.horizontal;Qe(e.boxes,(e=>{"function"==typeof e.beforeLayout&&e.beforeLayout()}));const c=l.reduce(((e,t)=>t.box.options&&!1===t.box.options.display?e:e+1),0)||1,u=Object.freeze({outerWidth:t,outerHeight:s,padding:i,availableWidth:r,availableHeight:o,vBoxMaxWidth:r/2/c,hBoxMaxHeight:o/2}),p=Object.assign({},i);wi(p,Gs(a));const g=Object.assign({maxPadding:p,w:r,h:o,x:i.left,y:i.top},i),d=function(e,t){const s=function(e){const t={};for(const s of e){const{stack:e,pos:a,stackWeight:i}=s;if(!e||!mi.includes(a))continue;const r=t[e]||(t[e]={count:0,placed:0,weight:0,size:0});r.count++,r.weight+=i}return t}(e),{vBoxMaxWidth:a,hBoxMaxHeight:i}=t;let r,o,n;for(r=0,o=e.length;r<o;++r){n=e[r];const{fullSize:o}=n.box,l=s[n.stack],f=l&&n.stackWeight/l.weight;n.horizontal?(n.width=f?f*a:o&&t.availableWidth,n.height=i):(n.width=a,n.height=f?f*i:o&&t.availableHeight)}return s}(l.concat(f),u);Ti(n.fullSize,g,u,d),Ti(l,g,u,d),Ti(f,g,u,d)&&Ti(l,g,u,d),function(e){const t=e.maxPadding;function s(s){const a=Math.max(t[s]-e[s],0);return e[s]+=a,a}e.y+=s("top"),e.x+=s("left"),s("right"),s("bottom")}(g),Mi(n.leftAndTop,g,u,d),g.x+=g.w,g.y+=g.h,Mi(n.rightAndBottom,g,u,d),e.chartArea={left:g.left,top:g.top,right:g.left+g.w,bottom:g.top+g.h,height:g.h,width:g.w},Qe(n.chartArea,(t=>{const s=t.box;Object.assign(s,e.chartArea),s.update(g.w,g.h,{left:0,top:0,right:0,bottom:0})}))}};class Ai{acquireContext(e,t){}releaseContext(e){return!1}addEventListener(e,t,s){}removeEventListener(e,t,s){}getDevicePixelRatio(){return 1}getMaximumSize(e,t,s,a){return t=Math.max(0,t||e.width),s=s||e.height,{width:t,height:Math.max(0,a?Math.floor(t/a):s)}}isAttached(e){return!0}updateConfig(e){}}class Bi extends Ai{acquireContext(e){return e&&e.getContext&&e.getContext("2d")||null}updateConfig(e){e.options.animation=!1}}const Oi="$chartjs",Ci={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},Fi=e=>null===e||""===e,Ni=!!ha&&{passive:!0};function Ei(e,t,s){e.canvas.removeEventListener(t,s,Ni)}function Gi(e,t){for(const s of e)if(s===t||s.contains(t))return!0}function Ii(e,t,s){const a=e.canvas,i=new MutationObserver((e=>{let t=!1;for(const s of e)t=t||Gi(s.addedNodes,a),t=t&&!Gi(s.removedNodes,a);t&&s()}));return i.observe(document,{childList:!0,subtree:!0}),i}function zi(e,t,s){const a=e.canvas,i=new MutationObserver((e=>{let t=!1;for(const s of e)t=t||Gi(s.removedNodes,a),t=t&&!Gi(s.addedNodes,a);t&&s()}));return i.observe(document,{childList:!0,subtree:!0}),i}const Ri=new Map;let Hi=0;function _i(){const e=window.devicePixelRatio;e!==Hi&&(Hi=e,Ri.forEach(((t,s)=>{s.currentDevicePixelRatio!==e&&t()})))}function Li(e,t,s){const a=e.canvas,i=a&&oa(a);if(!i)return;const r=Zt(((e,t)=>{const a=i.clientWidth;s(e,t),a<i.clientWidth&&s()}),window),o=new ResizeObserver((e=>{const t=e[0],s=t.contentRect.width,a=t.contentRect.height;0===s&&0===a||r(s,a)}));return o.observe(i),function(e,t){Ri.size||window.addEventListener("resize",_i),Ri.set(e,t)}(e,r),o}function Wi(e,t,s){s&&s.disconnect(),"resize"===t&&function(e){Ri.delete(e),Ri.size||window.removeEventListener("resize",_i)}(e)}function Zi(e,t,s){const a=e.canvas,i=Zt((t=>{null!==e.ctx&&s(function(e,t){const s=Ci[e.type]||e.type,{x:a,y:i}=pa(e,t);return{type:s,chart:t,native:e,x:void 0!==a?a:null,y:void 0!==i?i:null}}(t,e))}),e);return function(e,t,s){e.addEventListener(t,s,Ni)}(a,t,i),i}class Ui extends Ai{acquireContext(e,t){const s=e&&e.getContext&&e.getContext("2d");return s&&s.canvas===e?(function(e,t){const s=e.style,a=e.getAttribute("height"),i=e.getAttribute("width");if(e[Oi]={initial:{height:a,width:i,style:{display:s.display,height:s.height,width:s.width}}},s.display=s.display||"block",s.boxSizing=s.boxSizing||"border-box",Fi(i)){const t=ma(e,"width");void 0!==t&&(e.width=t)}if(Fi(a))if(""===e.style.height)e.height=e.width/(t||2);else{const t=ma(e,"height");void 0!==t&&(e.height=t)}}(e,t),s):null}releaseContext(e){const t=e.canvas;if(!t[Oi])return!1;const s=t[Oi].initial;["height","width"].forEach((e=>{const a=s[e];Ue(a)?t.removeAttribute(e):t.setAttribute(e,a)}));const a=s.style||{};return Object.keys(a).forEach((e=>{t.style[e]=a[e]})),t.width=t.width,delete t[Oi],!0}addEventListener(e,t,s){this.removeEventListener(e,t);const a=e.$proxies||(e.$proxies={}),i={attach:Ii,detach:zi,resize:Li}[t]||Zi;a[t]=i(e,t,s)}removeEventListener(e,t){const s=e.$proxies||(e.$proxies={}),a=s[t];a&&(({attach:Wi,detach:Wi,resize:Wi}[t]||Ei)(e,t,a),s[t]=void 0)}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(e,t,s,a){return function(e,t,s,a){const i=la(e),r=ca(i,"margin"),o=na(i.maxWidth,e,"clientWidth")||ht,n=na(i.maxHeight,e,"clientHeight")||ht,l=function(e,t,s){let a,i;if(void 0===t||void 0===s){const r=oa(e);if(r){const e=r.getBoundingClientRect(),o=la(r),n=ca(o,"border","width"),l=ca(o,"padding");t=e.width-l.width-n.width,s=e.height-l.height-n.height,a=na(o.maxWidth,r,"clientWidth"),i=na(o.maxHeight,r,"clientHeight")}else t=e.clientWidth,s=e.clientHeight}return{width:t,height:s,maxWidth:a||ht,maxHeight:i||ht}}(e,t,s);let{width:f,height:c}=l;if("content-box"===i.boxSizing){const e=ca(i,"border","width"),t=ca(i,"padding");f-=t.width+e.width,c-=t.height+e.height}return f=Math.max(0,f-r.width),c=Math.max(0,a?f/a:c-r.height),f=ga(Math.min(f,o,l.maxWidth)),c=ga(Math.min(c,n,l.maxHeight)),f&&!c&&(c=ga(f/2)),(void 0!==t||void 0!==s)&&a&&l.height&&c>l.height&&(c=l.height,f=ga(Math.floor(c*a))),{width:f,height:c}}(e,t,s,a)}isAttached(e){const t=oa(e);return!(!t||!t.isConnected)}}class ji{static defaults={};static defaultRoutes=void 0;active=!1;tooltipPosition(e){const{x:t,y:s}=this.getProps(["x","y"],e);return{x:t,y:s}}hasValue(){return Tt(this.x)&&Tt(this.y)}getProps(e,t){const s=this.$animations;if(!t||!s)return this;const a={};return e.forEach((e=>{a[e]=s[e]&&s[e].active()?s[e]._to:this[e]})),a}}function Ki(e,t,s,a,i){const r=$e(a,0),o=Math.min($e(i,e.length),e.length);let n,l,f,c=0;for(s=Math.ceil(s),i&&(n=i-a,s=n/Math.floor(n/s)),f=r;f<0;)c++,f=Math.round(r+c*s);for(l=Math.max(r,0);l<o;l++)l===f&&(t.push(e[l]),c++,f=Math.round(r+c*s))}const Vi=e=>"left"===e?"right":"right"===e?"left":e,qi=(e,t,s)=>"top"===t||"left"===t?e[t]+s:e[t]-s,$i=(e,t)=>Math.min(t||e,e);function Yi(e,t){const s=[],a=e.length/t,i=e.length;let r=0;for(;r<i;r+=a)s.push(e[Math.floor(r)]);return s}function Ji(e,t,s){const a=e.ticks.length,i=Math.min(t,a-1),r=e._startPixel,o=e._endPixel,n=1e-6;let l,f=e.getPixelForTick(i);if(!(s&&(l=1===a?Math.max(f-r,o-f):0===t?(e.getPixelForTick(1)-f)/2:(f-e.getPixelForTick(i-1))/2,f+=i<t?l:-l,f<r-n||f>o+n)))return f}function Qi(e){return e.drawTicks?e.tickLength:0}function Xi(e,t){if(!e.display)return 0;const s=Is(e.font,t),a=Gs(e.padding);return(je(e.text)?e.text.length:1)*s.lineHeight+a.height}function er(e,t,s){let a=Ut(e);return(s&&"right"!==t||!s&&"right"===t)&&(a=Vi(a)),a}class tr extends ji{constructor(e){super(),this.id=e.id,this.type=e.type,this.options=void 0,this.ctx=e.ctx,this.chart=e.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(e){this.options=e.setContext(this.getContext()),this.axis=e.axis,this._userMin=this.parse(e.min),this._userMax=this.parse(e.max),this._suggestedMin=this.parse(e.suggestedMin),this._suggestedMax=this.parse(e.suggestedMax)}parse(e,t){return e}getUserBounds(){let{_userMin:e,_userMax:t,_suggestedMin:s,_suggestedMax:a}=this;return e=qe(e,Number.POSITIVE_INFINITY),t=qe(t,Number.NEGATIVE_INFINITY),s=qe(s,Number.POSITIVE_INFINITY),a=qe(a,Number.NEGATIVE_INFINITY),{min:qe(e,s),max:qe(t,a),minDefined:Ve(e),maxDefined:Ve(t)}}getMinMax(e){let t,{min:s,max:a,minDefined:i,maxDefined:r}=this.getUserBounds();if(i&&r)return{min:s,max:a};const o=this.getMatchingVisibleMetas();for(let n=0,l=o.length;n<l;++n)t=o[n].controller.getMinMax(this,e),i||(s=Math.min(s,t.min)),r||(a=Math.max(a,t.max));return s=r&&s>a?a:s,a=i&&s>a?s:a,{min:qe(s,qe(a,s)),max:qe(a,qe(s,a))}}getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const e=this.chart.data;return this.options.labels||(this.isHorizontal()?e.xLabels:e.yLabels)||e.labels||[]}getLabelItems(e=this.chart.chartArea){return this._labelItems||(this._labelItems=this._computeLabelItems(e))}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){Je(this.options.beforeUpdate,[this])}update(e,t,s){const{beginAtZero:a,grace:i,ticks:r}=this.options,o=r.sampleSize;this.beforeUpdate(),this.maxWidth=e,this.maxHeight=t,this._margins=s=Object.assign({left:0,right:0,top:0,bottom:0},s),this.ticks=null,this._labelSizes=null,this._gridLineItems=null,this._labelItems=null,this.beforeSetDimensions(),this.setDimensions(),this.afterSetDimensions(),this._maxLength=this.isHorizontal()?this.width+s.left+s.right:this.height+s.top+s.bottom,this._dataLimitsCached||(this.beforeDataLimits(),this.determineDataLimits(),this.afterDataLimits(),this._range=function(e,t,s){const{min:a,max:i}=e,r=Ye(t,(i-a)/2),o=(e,t)=>s&&0===e?0:e+t;return{min:o(a,-Math.abs(r)),max:o(i,r)}}(this,i,a),this._dataLimitsCached=!0),this.beforeBuildTicks(),this.ticks=this.buildTicks()||[],this.afterBuildTicks();const n=o<this.ticks.length;this._convertTicksToLabels(n?Yi(this.ticks,o):this.ticks),this.configure(),this.beforeCalculateLabelRotation(),this.calculateLabelRotation(),this.afterCalculateLabelRotation(),r.display&&(r.autoSkip||"auto"===r.source)&&(this.ticks=function(e,t){const s=e.options.ticks,a=function(e){const t=e.options.offset,s=e._tickSize(),a=e._length/s+(t?0:1),i=e._maxLength/s;return Math.floor(Math.min(a,i))}(e),i=Math.min(s.maxTicksLimit||a,a),r=s.major.enabled?function(e){const t=[];let s,a;for(s=0,a=e.length;s<a;s++)e[s].major&&t.push(s);return t}(t):[],o=r.length,n=r[0],l=r[o-1],f=[];if(o>i)return function(e,t,s,a){let i,r=0,o=s[0];for(a=Math.ceil(a),i=0;i<e.length;i++)i===o&&(t.push(e[i]),r++,o=s[r*a])}(t,f,r,o/i),f;const c=function(e,t,s){const a=function(e){const t=e.length;let s,a;if(t<2)return!1;for(a=e[0],s=1;s<t;++s)if(e[s]-e[s-1]!==a)return!1;return a}(e),i=t.length/s;if(!a)return Math.max(i,1);const r=function(e){const t=[],s=Math.sqrt(e);let a;for(a=1;a<s;a++)e%a==0&&(t.push(a),t.push(e/a));return s===(0|s)&&t.push(s),t.sort(((e,t)=>e-t)).pop(),t}(a);for(let e=0,t=r.length-1;e<t;e++){const t=r[e];if(t>i)return t}return Math.max(i,1)}(r,t,i);if(o>0){let e,s;const a=o>1?Math.round((l-n)/(o-1)):null;for(Ki(t,f,c,Ue(a)?0:n-a,n),e=0,s=o-1;e<s;e++)Ki(t,f,c,r[e],r[e+1]);return Ki(t,f,c,l,Ue(a)?t.length:l+a),f}return Ki(t,f,c),f}(this,this.ticks),this._labelSizes=null,this.afterAutoSkip()),n&&this._convertTicksToLabels(this.ticks),this.beforeFit(),this.fit(),this.afterFit(),this.afterUpdate()}configure(){let e,t,s=this.options.reverse;this.isHorizontal()?(e=this.left,t=this.right):(e=this.top,t=this.bottom,s=!s),this._startPixel=e,this._endPixel=t,this._reversePixels=s,this._length=t-e,this._alignToPixels=this.options.alignToPixels}afterUpdate(){Je(this.options.afterUpdate,[this])}beforeSetDimensions(){Je(this.options.beforeSetDimensions,[this])}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=0,this.right=this.width):(this.height=this.maxHeight,this.top=0,this.bottom=this.height),this.paddingLeft=0,this.paddingTop=0,this.paddingRight=0,this.paddingBottom=0}afterSetDimensions(){Je(this.options.afterSetDimensions,[this])}_callHooks(e){this.chart.notifyPlugins(e,this.getContext()),Je(this.options[e],[this])}beforeDataLimits(){this._callHooks("beforeDataLimits")}determineDataLimits(){}afterDataLimits(){this._callHooks("afterDataLimits")}beforeBuildTicks(){this._callHooks("beforeBuildTicks")}buildTicks(){return[]}afterBuildTicks(){this._callHooks("afterBuildTicks")}beforeTickToLabelConversion(){Je(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(e){const t=this.options.ticks;let s,a,i;for(s=0,a=e.length;s<a;s++)i=e[s],i.label=Je(t.callback,[i.value,s,e],this)}afterTickToLabelConversion(){Je(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){Je(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const e=this.options,t=e.ticks,s=$i(this.ticks.length,e.ticks.maxTicksLimit),a=t.minRotation||0,i=t.maxRotation;let r,o,n,l=a;if(!this._isVisible()||!t.display||a>=i||s<=1||!this.isHorizontal())return void(this.labelRotation=a);const f=this._getLabelSizes(),c=f.widest.width,u=f.highest.height,p=Et(this.chart.width-c,0,this.maxWidth);r=e.offset?this.maxWidth/s:p/(s-1),c+6>r&&(r=p/(s-(e.offset?.5:1)),o=this.maxHeight-Qi(e.grid)-t.padding-Xi(e.title,this.chart.options.font),n=Math.sqrt(c*c+u*u),l=Dt(Math.min(Math.asin(Et((f.highest.height+6)/r,-1,1)),Math.asin(Et(o/n,-1,1))-Math.asin(Et(u/n,-1,1)))),l=Math.max(a,Math.min(i,l))),this.labelRotation=l}afterCalculateLabelRotation(){Je(this.options.afterCalculateLabelRotation,[this])}afterAutoSkip(){}beforeFit(){Je(this.options.beforeFit,[this])}fit(){const e={width:0,height:0},{chart:t,options:{ticks:s,title:a,grid:i}}=this,r=this._isVisible(),o=this.isHorizontal();if(r){const r=Xi(a,t.options.font);if(o?(e.width=this.maxWidth,e.height=Qi(i)+r):(e.height=this.maxHeight,e.width=Qi(i)+r),s.display&&this.ticks.length){const{first:t,last:a,widest:i,highest:r}=this._getLabelSizes(),n=2*s.padding,l=Mt(this.labelRotation),f=Math.cos(l),c=Math.sin(l);if(o){const t=s.mirror?0:c*i.width+f*r.height;e.height=Math.min(this.maxHeight,e.height+t+n)}else{const t=s.mirror?0:f*i.width+c*r.height;e.width=Math.min(this.maxWidth,e.width+t+n)}this._calculatePadding(t,a,c,f)}}this._handleMargins(),o?(this.width=this._length=t.width-this._margins.left-this._margins.right,this.height=e.height):(this.width=e.width,this.height=this._length=t.height-this._margins.top-this._margins.bottom)}_calculatePadding(e,t,s,a){const{ticks:{align:i,padding:r},position:o}=this.options,n=0!==this.labelRotation,l="top"!==o&&"x"===this.axis;if(this.isHorizontal()){const o=this.getPixelForTick(0)-this.left,f=this.right-this.getPixelForTick(this.ticks.length-1);let c=0,u=0;n?l?(c=a*e.width,u=s*t.height):(c=s*e.height,u=a*t.width):"start"===i?u=t.width:"end"===i?c=e.width:"inner"!==i&&(c=e.width/2,u=t.width/2),this.paddingLeft=Math.max((c-o+r)*this.width/(this.width-o),0),this.paddingRight=Math.max((u-f+r)*this.width/(this.width-f),0)}else{let s=t.height/2,a=e.height/2;"start"===i?(s=0,a=e.height):"end"===i&&(s=t.height,a=0),this.paddingTop=s+r,this.paddingBottom=a+r}}_handleMargins(){this._margins&&(this._margins.left=Math.max(this.paddingLeft,this._margins.left),this._margins.top=Math.max(this.paddingTop,this._margins.top),this._margins.right=Math.max(this.paddingRight,this._margins.right),this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom))}afterFit(){Je(this.options.afterFit,[this])}isHorizontal(){const{axis:e,position:t}=this.options;return"top"===t||"bottom"===t||"x"===e}isFullSize(){return this.options.fullSize}_convertTicksToLabels(e){let t,s;for(this.beforeTickToLabelConversion(),this.generateTickLabels(e),t=0,s=e.length;t<s;t++)Ue(e[t].label)&&(e.splice(t,1),s--,t--);this.afterTickToLabelConversion()}_getLabelSizes(){let e=this._labelSizes;if(!e){const t=this.options.ticks.sampleSize;let s=this.ticks;t<s.length&&(s=Yi(s,t)),this._labelSizes=e=this._computeLabelSizes(s,s.length,this.options.ticks.maxTicksLimit)}return e}_computeLabelSizes(e,t,s){const{ctx:a,_longestTextCache:i}=this,r=[],o=[],n=Math.floor(t/$i(t,s));let l,f,c,u,p,g,d,h,m,y,v,b=0,P=0;for(l=0;l<t;l+=n){if(u=e[l].label,p=this._resolveTickFontOptions(l),a.font=g=p.string,d=i[g]=i[g]||{data:{},gc:[]},h=p.lineHeight,m=y=0,Ue(u)||je(u)){if(je(u))for(f=0,c=u.length;f<c;++f)v=u[f],Ue(v)||je(v)||(m=gs(a,d.data,d.gc,m,v),y+=h)}else m=gs(a,d.data,d.gc,m,u),y=h;r.push(m),o.push(y),b=Math.max(m,b),P=Math.max(y,P)}!function(e,t){Qe(e,(e=>{const s=e.gc,a=s.length/2;let i;if(a>t){for(i=0;i<a;++i)delete e.data[s[i]];s.splice(0,a)}}))}(i,t);const w=r.indexOf(b),S=o.indexOf(P),k=e=>({width:r[e]||0,height:o[e]||0});return{first:k(0),last:k(t-1),widest:k(w),highest:k(S),widths:r,heights:o}}getLabelForValue(e){return e}getPixelForValue(e,t){return NaN}getValueForPixel(e){}getPixelForTick(e){const t=this.ticks;return e<0||e>t.length-1?null:this.getPixelForValue(t[e].value)}getPixelForDecimal(e){this._reversePixels&&(e=1-e);const t=this._startPixel+e*this._length;return Et(this._alignToPixels?hs(this.chart,t,0):t,-32768,32767)}getDecimalForPixel(e){const t=(e-this._startPixel)/this._length;return this._reversePixels?1-t:t}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:e,max:t}=this;return e<0&&t<0?t:e>0&&t>0?e:0}getContext(e){const t=this.ticks||[];if(e>=0&&e<t.length){const s=t[e];return s.$context||(s.$context=function(e,t,s){return Rs(e,{tick:s,index:t,type:"tick"})}(this.getContext(),e,s))}return this.$context||(this.$context=Rs(this.chart.getContext(),{scale:this,type:"scale"}))}_tickSize(){const e=this.options.ticks,t=Mt(this.labelRotation),s=Math.abs(Math.cos(t)),a=Math.abs(Math.sin(t)),i=this._getLabelSizes(),r=e.autoSkipPadding||0,o=i?i.widest.width+r:0,n=i?i.highest.height+r:0;return this.isHorizontal()?n*s>o*a?o/s:n/a:n*a<o*s?n/s:o/a}_isVisible(){const e=this.options.display;return"auto"!==e?!!e:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(e){const t=this.axis,s=this.chart,a=this.options,{grid:i,position:r,border:o}=a,n=i.offset,l=this.isHorizontal(),f=this.ticks.length+(n?1:0),c=Qi(i),u=[],p=o.setContext(this.getContext()),g=p.display?p.width:0,d=g/2,h=function(e){return hs(s,e,g)};let m,y,v,b,P,w,S,k,T,x,M,D;if("top"===r)m=h(this.bottom),w=this.bottom-c,k=m-d,x=h(e.top)+d,D=e.bottom;else if("bottom"===r)m=h(this.top),x=e.top,D=h(e.bottom)-d,w=m+d,k=this.top+c;else if("left"===r)m=h(this.right),P=this.right-c,S=m-d,T=h(e.left)+d,M=e.right;else if("right"===r)m=h(this.left),T=e.left,M=h(e.right)-d,P=m+d,S=this.left+c;else if("x"===t){if("center"===r)m=h((e.top+e.bottom)/2+.5);else if(Ke(r)){const e=Object.keys(r)[0],t=r[e];m=h(this.chart.scales[e].getPixelForValue(t))}x=e.top,D=e.bottom,w=m+d,k=w+c}else if("y"===t){if("center"===r)m=h((e.left+e.right)/2);else if(Ke(r)){const e=Object.keys(r)[0],t=r[e];m=h(this.chart.scales[e].getPixelForValue(t))}P=m-d,S=P-c,T=e.left,M=e.right}const A=$e(a.ticks.maxTicksLimit,f),B=Math.max(1,Math.ceil(f/A));for(y=0;y<f;y+=B){const e=this.getContext(y),t=i.setContext(e),a=o.setContext(e),r=t.lineWidth,f=t.color,c=a.dash||[],p=a.dashOffset,g=t.tickWidth,d=t.tickColor,h=t.tickBorderDash||[],m=t.tickBorderDashOffset;v=Ji(this,y,n),void 0!==v&&(b=hs(s,v,r),l?P=S=T=M=b:w=k=x=D=b,u.push({tx1:P,ty1:w,tx2:S,ty2:k,x1:T,y1:x,x2:M,y2:D,width:r,color:f,borderDash:c,borderDashOffset:p,tickWidth:g,tickColor:d,tickBorderDash:h,tickBorderDashOffset:m}))}return this._ticksLength=f,this._borderValue=m,u}_computeLabelItems(e){const t=this.axis,s=this.options,{position:a,ticks:i}=s,r=this.isHorizontal(),o=this.ticks,{align:n,crossAlign:l,padding:f,mirror:c}=i,u=Qi(s.grid),p=u+f,g=c?-f:p,d=-Mt(this.labelRotation),h=[];let m,y,v,b,P,w,S,k,T,x,M,D,A="middle";if("top"===a)w=this.bottom-g,S=this._getXAxisLabelAlignment();else if("bottom"===a)w=this.top+g,S=this._getXAxisLabelAlignment();else if("left"===a){const e=this._getYAxisLabelAlignment(u);S=e.textAlign,P=e.x}else if("right"===a){const e=this._getYAxisLabelAlignment(u);S=e.textAlign,P=e.x}else if("x"===t){if("center"===a)w=(e.top+e.bottom)/2+p;else if(Ke(a)){const e=Object.keys(a)[0],t=a[e];w=this.chart.scales[e].getPixelForValue(t)+p}S=this._getXAxisLabelAlignment()}else if("y"===t){if("center"===a)P=(e.left+e.right)/2-p;else if(Ke(a)){const e=Object.keys(a)[0],t=a[e];P=this.chart.scales[e].getPixelForValue(t)}S=this._getYAxisLabelAlignment(u).textAlign}"y"===t&&("start"===n?A="top":"end"===n&&(A="bottom"));const B=this._getLabelSizes();for(m=0,y=o.length;m<y;++m){v=o[m],b=v.label;const e=i.setContext(this.getContext(m));k=this.getPixelForTick(m)+i.labelOffset,T=this._resolveTickFontOptions(m),x=T.lineHeight,M=je(b)?b.length:1;const t=M/2,s=e.color,n=e.textStrokeColor,f=e.textStrokeWidth;let u,p=S;if(r?(P=k,"inner"===S&&(p=m===y-1?this.options.reverse?"left":"right":0===m?this.options.reverse?"right":"left":"center"),D="top"===a?"near"===l||0!==d?-M*x+x/2:"center"===l?-B.highest.height/2-t*x+x:-B.highest.height+x/2:"near"===l||0!==d?x/2:"center"===l?B.highest.height/2-t*x:B.highest.height-M*x,c&&(D*=-1),0===d||e.showLabelBackdrop||(P+=x/2*Math.sin(d))):(w=k,D=(1-M)*x/2),e.showLabelBackdrop){const t=Gs(e.backdropPadding),s=B.heights[m],a=B.widths[m];let i=D-t.top,r=0-t.left;switch(A){case"middle":i-=s/2;break;case"bottom":i-=s}switch(S){case"center":r-=a/2;break;case"right":r-=a}u={left:r,top:i,width:a+t.width,height:s+t.height,color:e.backdropColor}}h.push({label:b,font:T,textOffset:D,options:{rotation:d,color:s,strokeColor:n,strokeWidth:f,textAlign:p,textBaseline:A,translation:[P,w],backdrop:u}})}return h}_getXAxisLabelAlignment(){const{position:e,ticks:t}=this.options;if(-Mt(this.labelRotation))return"top"===e?"left":"right";let s="center";return"start"===t.align?s="left":"end"===t.align?s="right":"inner"===t.align&&(s="inner"),s}_getYAxisLabelAlignment(e){const{position:t,ticks:{crossAlign:s,mirror:a,padding:i}}=this.options,r=e+i,o=this._getLabelSizes().widest.width;let n,l;return"left"===t?a?(l=this.right+i,"near"===s?n="left":"center"===s?(n="center",l+=o/2):(n="right",l+=o)):(l=this.right-r,"near"===s?n="right":"center"===s?(n="center",l-=o/2):(n="left",l=this.left)):"right"===t?a?(l=this.left+i,"near"===s?n="right":"center"===s?(n="center",l-=o/2):(n="left",l-=o)):(l=this.left+r,"near"===s?n="left":"center"===s?(n="center",l+=o/2):(n="right",l=this.right)):n="right",{textAlign:n,x:l}}_computeLabelArea(){if(this.options.ticks.mirror)return;const e=this.chart,t=this.options.position;return"left"===t||"right"===t?{top:0,left:this.left,bottom:e.height,right:this.right}:"top"===t||"bottom"===t?{top:this.top,left:0,bottom:this.bottom,right:e.width}:void 0}drawBackground(){const{ctx:e,options:{backgroundColor:t},left:s,top:a,width:i,height:r}=this;t&&(e.save(),e.fillStyle=t,e.fillRect(s,a,i,r),e.restore())}getLineWidthForValue(e){const t=this.options.grid;if(!this._isVisible()||!t.display)return 0;const s=this.ticks.findIndex((t=>t.value===e));return s>=0?t.setContext(this.getContext(s)).lineWidth:0}drawGrid(e){const t=this.options.grid,s=this.ctx,a=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(e));let i,r;const o=(e,t,a)=>{a.width&&a.color&&(s.save(),s.lineWidth=a.width,s.strokeStyle=a.color,s.setLineDash(a.borderDash||[]),s.lineDashOffset=a.borderDashOffset,s.beginPath(),s.moveTo(e.x,e.y),s.lineTo(t.x,t.y),s.stroke(),s.restore())};if(t.display)for(i=0,r=a.length;i<r;++i){const e=a[i];t.drawOnChartArea&&o({x:e.x1,y:e.y1},{x:e.x2,y:e.y2},e),t.drawTicks&&o({x:e.tx1,y:e.ty1},{x:e.tx2,y:e.ty2},{color:e.tickColor,width:e.tickWidth,borderDash:e.tickBorderDash,borderDashOffset:e.tickBorderDashOffset})}}drawBorder(){const{chart:e,ctx:t,options:{border:s,grid:a}}=this,i=s.setContext(this.getContext()),r=s.display?i.width:0;if(!r)return;const o=a.setContext(this.getContext(0)).lineWidth,n=this._borderValue;let l,f,c,u;this.isHorizontal()?(l=hs(e,this.left,r)-r/2,f=hs(e,this.right,o)+o/2,c=u=n):(c=hs(e,this.top,r)-r/2,u=hs(e,this.bottom,o)+o/2,l=f=n),t.save(),t.lineWidth=i.width,t.strokeStyle=i.color,t.beginPath(),t.moveTo(l,c),t.lineTo(f,u),t.stroke(),t.restore()}drawLabels(e){if(!this.options.ticks.display)return;const t=this.ctx,s=this._computeLabelArea();s&&Ps(t,s);const a=this.getLabelItems(e);for(const e of a){const s=e.options,a=e.font;Ts(t,e.label,0,e.textOffset,a,s)}s&&ws(t)}drawTitle(){const{ctx:e,options:{position:t,title:s,reverse:a}}=this;if(!s.display)return;const i=Is(s.font),r=Gs(s.padding),o=s.align;let n=i.lineHeight/2;"bottom"===t||"center"===t||Ke(t)?(n+=r.bottom,je(s.text)&&(n+=i.lineHeight*(s.text.length-1))):n+=r.top;const{titleX:l,titleY:f,maxWidth:c,rotation:u}=function(e,t,s,a){const{top:i,left:r,bottom:o,right:n,chart:l}=e,{chartArea:f,scales:c}=l;let u,p,g,d=0;const h=o-i,m=n-r;if(e.isHorizontal()){if(p=jt(a,r,n),Ke(s)){const e=Object.keys(s)[0],a=s[e];g=c[e].getPixelForValue(a)+h-t}else g="center"===s?(f.bottom+f.top)/2+h-t:qi(e,s,t);u=n-r}else{if(Ke(s)){const e=Object.keys(s)[0],a=s[e];p=c[e].getPixelForValue(a)-m+t}else p="center"===s?(f.left+f.right)/2-m+t:qi(e,s,t);g=jt(a,o,i),d="left"===s?-yt:yt}return{titleX:p,titleY:g,maxWidth:u,rotation:d}}(this,n,t,o);Ts(e,s.text,0,0,i,{color:s.color,maxWidth:c,rotation:u,textAlign:er(o,t,a),textBaseline:"middle",translation:[l,f]})}draw(e){this._isVisible()&&(this.drawBackground(),this.drawGrid(e),this.drawBorder(),this.drawTitle(),this.drawLabels(e))}_layers(){const e=this.options,t=e.ticks&&e.ticks.z||0,s=$e(e.grid&&e.grid.z,-1),a=$e(e.border&&e.border.z,0);return this._isVisible()&&this.draw===tr.prototype.draw?[{z:s,draw:e=>{this.drawBackground(),this.drawGrid(e),this.drawTitle()}},{z:a,draw:()=>{this.drawBorder()}},{z:t,draw:e=>{this.drawLabels(e)}}]:[{z:t,draw:e=>{this.draw(e)}}]}getMatchingVisibleMetas(e){const t=this.chart.getSortedVisibleDatasetMetas(),s=this.axis+"AxisID",a=[];let i,r;for(i=0,r=t.length;i<r;++i){const r=t[i];r[s]!==this.id||e&&r.type!==e||a.push(r)}return a}_resolveTickFontOptions(e){return Is(this.options.ticks.setContext(this.getContext(e)).font)}_maxDigits(){const e=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/e}}class sr{constructor(e,t,s){this.type=e,this.scope=t,this.override=s,this.items=Object.create(null)}isForType(e){return Object.prototype.isPrototypeOf.call(this.type.prototype,e.prototype)}register(e){const t=Object.getPrototypeOf(e);let s;(function(e){return"id"in e&&"defaults"in e})(t)&&(s=this.register(t));const a=this.items,i=e.id,r=this.scope+"."+i;if(!i)throw new Error("class does not have id: "+e);return i in a||(a[i]=e,function(e,t,s){const a=at(Object.create(null),[s?ps.get(s):{},ps.get(t),e.defaults]);ps.set(t,a),e.defaultRoutes&&function(e,t){Object.keys(t).forEach((s=>{const a=s.split("."),i=a.pop(),r=[e].concat(a).join("."),o=t[s].split("."),n=o.pop(),l=o.join(".");ps.route(r,i,l,n)}))}(t,e.defaultRoutes),e.descriptors&&ps.describe(t,e.descriptors)}(e,r,s),this.override&&ps.override(e.id,e.overrides)),r}get(e){return this.items[e]}unregister(e){const t=this.items,s=e.id,a=this.scope;s in t&&delete t[s],a&&s in ps[a]&&(delete ps[a][s],this.override&&delete ns[s])}}class ar{constructor(){this.controllers=new sr(qa,"datasets",!0),this.elements=new sr(ji,"elements"),this.plugins=new sr(Object,"plugins"),this.scales=new sr(tr,"scales"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...e){this._each("register",e)}remove(...e){this._each("unregister",e)}addControllers(...e){this._each("register",e,this.controllers)}addElements(...e){this._each("register",e,this.elements)}addPlugins(...e){this._each("register",e,this.plugins)}addScales(...e){this._each("register",e,this.scales)}getController(e){return this._get(e,this.controllers,"controller")}getElement(e){return this._get(e,this.elements,"element")}getPlugin(e){return this._get(e,this.plugins,"plugin")}getScale(e){return this._get(e,this.scales,"scale")}removeControllers(...e){this._each("unregister",e,this.controllers)}removeElements(...e){this._each("unregister",e,this.elements)}removePlugins(...e){this._each("unregister",e,this.plugins)}removeScales(...e){this._each("unregister",e,this.scales)}_each(e,t,s){[...t].forEach((t=>{const a=s||this._getRegistryForType(t);s||a.isForType(t)||a===this.plugins&&t.id?this._exec(e,a,t):Qe(t,(t=>{const a=s||this._getRegistryForType(t);this._exec(e,a,t)}))}))}_exec(e,t,s){const a=lt(e);Je(s["before"+a],[],s),t[e](s),Je(s["after"+a],[],s)}_getRegistryForType(e){for(let t=0;t<this._typedRegistries.length;t++){const s=this._typedRegistries[t];if(s.isForType(e))return s}return this.plugins}_get(e,t,s){const a=t.get(e);if(void 0===a)throw new Error('"'+e+'" is not a registered '+s+".");return a}}var ir=new ar;class rr{constructor(){this._init=[]}notify(e,t,s,a){"beforeInit"===t&&(this._init=this._createDescriptors(e,!0),this._notify(this._init,e,"install"));const i=a?this._descriptors(e).filter(a):this._descriptors(e),r=this._notify(i,e,t,s);return"afterDestroy"===t&&(this._notify(i,e,"stop"),this._notify(this._init,e,"uninstall")),r}_notify(e,t,s,a){a=a||{};for(const i of e){const e=i.plugin;if(!1===Je(e[s],[t,a,i.options],e)&&a.cancelable)return!1}return!0}invalidate(){Ue(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(e){if(this._cache)return this._cache;const t=this._cache=this._createDescriptors(e);return this._notifyStateChanges(e),t}_createDescriptors(e,t){const s=e&&e.config,a=$e(s.options&&s.options.plugins,{}),i=function(e){const t={},s=[],a=Object.keys(ir.plugins.items);for(let e=0;e<a.length;e++)s.push(ir.getPlugin(a[e]));const i=e.plugins||[];for(let e=0;e<i.length;e++){const a=i[e];-1===s.indexOf(a)&&(s.push(a),t[a.id]=!0)}return{plugins:s,localIds:t}}(s);return!1!==a||t?function(e,{plugins:t,localIds:s},a,i){const r=[],o=e.getContext();for(const n of t){const t=n.id,l=or(a[t],i);null!==l&&r.push({plugin:n,options:nr(e.config,{plugin:n,local:s[t]},l,o)})}return r}(e,i,a,t):[]}_notifyStateChanges(e){const t=this._oldCache||[],s=this._cache,a=(e,t)=>e.filter((e=>!t.some((t=>e.plugin.id===t.plugin.id))));this._notify(a(t,s),e,"stop"),this._notify(a(s,t),e,"start")}}function or(e,t){return t||!1!==e?!0===e?{}:e:null}function nr(e,{plugin:t,local:s},a,i){const r=e.pluginScopeKeys(t),o=e.getOptionScopes(a,r);return s&&t.defaults&&o.push(t.defaults),e.createResolver(o,i,[""],{scriptable:!1,indexable:!1,allKeys:!0})}function lr(e,t){const s=ps.datasets[e]||{};return((t.datasets||{})[e]||{}).indexAxis||t.indexAxis||s.indexAxis||"x"}function fr(e,t){if("x"===e||"y"===e||"r"===e)return e;var s;if(e=t.axis||("top"===(s=t.position)||"bottom"===s?"x":"left"===s||"right"===s?"y":void 0)||e.length>1&&fr(e[0].toLowerCase(),t))return e;throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`)}function cr(e){const t=e.options||(e.options={});t.plugins=$e(t.plugins,{}),t.scales=function(e,t){const s=ns[e.type]||{scales:{}},a=t.scales||{},i=lr(e.type,t),r=Object.create(null);return Object.keys(a).forEach((e=>{const t=a[e];if(!Ke(t))return console.error(`Invalid scale configuration for scale: ${e}`);if(t._proxy)return console.warn(`Ignoring resolver passed as options for scale: ${e}`);const o=fr(e,t),n=function(e,t){return e===t?"_index_":"_value_"}(o,i),l=s.scales||{};r[e]=it(Object.create(null),[{axis:o},t,l[o],l[n]])})),e.data.datasets.forEach((s=>{const i=s.type||e.type,o=s.indexAxis||lr(i,t),n=(ns[i]||{}).scales||{};Object.keys(n).forEach((e=>{const t=function(e,t){let s=e;return"_index_"===e?s=t:"_value_"===e&&(s="x"===t?"y":"x"),s}(e,o),i=s[t+"AxisID"]||t;r[i]=r[i]||Object.create(null),it(r[i],[{axis:t},a[i],n[e]])}))})),Object.keys(r).forEach((e=>{const t=r[e];it(t,[ps.scales[t.type],ps.scale])})),r}(e,t)}function ur(e){return(e=e||{}).datasets=e.datasets||[],e.labels=e.labels||[],e}const pr=new Map,gr=new Set;function dr(e,t){let s=pr.get(e);return s||(s=t(),pr.set(e,s),gr.add(s)),s}const hr=(e,t,s)=>{const a=nt(t,s);void 0!==a&&e.add(a)};class mr{constructor(e){this._config=function(e){return(e=e||{}).data=ur(e.data),cr(e),e}(e),this._scopeCache=new Map,this._resolverCache=new Map}get platform(){return this._config.platform}get type(){return this._config.type}set type(e){this._config.type=e}get data(){return this._config.data}set data(e){this._config.data=ur(e)}get options(){return this._config.options}set options(e){this._config.options=e}get plugins(){return this._config.plugins}update(){const e=this._config;this.clearCache(),cr(e)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(e){return dr(e,(()=>[[`datasets.${e}`,""]]))}datasetAnimationScopeKeys(e,t){return dr(`${e}.transition.${t}`,(()=>[[`datasets.${e}.transitions.${t}`,`transitions.${t}`],[`datasets.${e}`,""]]))}datasetElementScopeKeys(e,t){return dr(`${e}-${t}`,(()=>[[`datasets.${e}.elements.${t}`,`datasets.${e}`,`elements.${t}`,""]]))}pluginScopeKeys(e){const t=e.id;return dr(`${this.type}-plugin-${t}`,(()=>[[`plugins.${t}`,...e.additionalOptionScopes||[]]]))}_cachedScopes(e,t){const s=this._scopeCache;let a=s.get(e);return a&&!t||(a=new Map,s.set(e,a)),a}getOptionScopes(e,t,s){const{options:a,type:i}=this,r=this._cachedScopes(e,s),o=r.get(t);if(o)return o;const n=new Set;t.forEach((t=>{e&&(n.add(e),t.forEach((t=>hr(n,e,t)))),t.forEach((e=>hr(n,a,e))),t.forEach((e=>hr(n,ns[i]||{},e))),t.forEach((e=>hr(n,ps,e))),t.forEach((e=>hr(n,ls,e)))}));const l=Array.from(n);return 0===l.length&&l.push(Object.create(null)),gr.has(t)&&r.set(t,l),l}chartOptionScopes(){const{options:e,type:t}=this;return[e,ns[t]||{},ps.datasets[t]||{},{type:t},ps,ls]}resolveNamedOptions(e,t,s,a=[""]){const i={$shared:!0},{resolver:r,subPrefixes:o}=yr(this._resolverCache,e,a);let n=r;(function(e,t){const{isScriptable:s,isIndexable:a}=Ls(e);for(const i of t){const t=s(i),r=a(i),o=(r||t)&&e[i];if(t&&(ct(o)||vr(o))||r&&je(o))return!0}return!1})(r,t)&&(i.$shared=!1,n=_s(r,s=ct(s)?s():s,this.createResolver(e,s,o)));for(const e of t)i[e]=n[e];return i}createResolver(e,t,s=[""],a){const{resolver:i}=yr(this._resolverCache,e,s);return Ke(t)?_s(i,t,void 0,a):i}}function yr(e,t,s){let a=e.get(t);a||(a=new Map,e.set(t,a));const i=s.join();let r=a.get(i);return r||(r={resolver:Hs(t,s),subPrefixes:s.filter((e=>!e.toLowerCase().includes("hover")))},a.set(i,r)),r}const vr=e=>Ke(e)&&Object.getOwnPropertyNames(e).reduce(((t,s)=>t||ct(e[s])),!1),br=["top","bottom","left","right","chartArea"];function Pr(e,t){return"top"===e||"bottom"===e||-1===br.indexOf(e)&&"x"===t}function wr(e,t){return function(s,a){return s[e]===a[e]?s[t]-a[t]:s[e]-a[e]}}function Sr(e){const t=e.chart,s=t.options.animation;t.notifyPlugins("afterRender"),Je(s&&s.onComplete,[e],t)}function kr(e){const t=e.chart,s=t.options.animation;Je(s&&s.onProgress,[e],t)}function Tr(e){return ra()&&"string"==typeof e?e=document.getElementById(e):e&&e.length&&(e=e[0]),e&&e.canvas&&(e=e.canvas),e}const xr={},Mr=e=>{const t=Tr(e);return Object.values(xr).filter((e=>e.canvas===t)).pop()};function Dr(e,t,s){const a=Object.keys(e);for(const i of a){const a=+i;if(a>=t){const r=e[i];delete e[i],(s>0||a>t)&&(e[a+s]=r)}}}class Ar{static defaults=ps;static instances=xr;static overrides=ns;static registry=ir;static version="4.2.1";static getChart=Mr;static register(...e){ir.add(...e),Br()}static unregister(...e){ir.remove(...e),Br()}constructor(e,t){const s=this.config=new mr(t),a=Tr(e),i=Mr(a);if(i)throw new Error("Canvas is already in use. Chart with ID '"+i.id+"' must be destroyed before the canvas with ID '"+i.canvas.id+"' can be reused.");const r=s.createResolver(s.chartOptionScopes(),this.getContext());this.platform=new(s.platform||function(e){return!ra()||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas?Bi:Ui}(a)),this.platform.updateConfig(s);const o=this.platform.acquireContext(a,r.aspectRatio),n=o&&o.canvas,l=n&&n.height,f=n&&n.width;this.id=Ze(),this.ctx=o,this.canvas=n,this.width=f,this.height=l,this._options=r,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this._plugins=new rr,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=function(e,t){let s;return function(...a){return t?(clearTimeout(s),s=setTimeout(e,t,a)):e.apply(this,a),t}}((e=>this.update(e)),r.resizeDelay||0),this._dataChanges=[],xr[this.id]=this,o&&n?(Fa.listen(this,"complete",Sr),Fa.listen(this,"progress",kr),this._initialize(),this.attached&&this.update()):console.error("Failed to create chart: can't acquire context from the given item")}get aspectRatio(){const{options:{aspectRatio:e,maintainAspectRatio:t},width:s,height:a,_aspectRatio:i}=this;return Ue(e)?t&&i?i:a?s/a:null:e}get data(){return this.config.data}set data(e){this.config.data=e}get options(){return this._options}set options(e){this.config.options=e}get registry(){return ir}_initialize(){return this.notifyPlugins("beforeInit"),this.options.responsive?this.resize():da(this,this.options.devicePixelRatio),this.bindEvents(),this.notifyPlugins("afterInit"),this}clear(){return ms(this.canvas,this.ctx),this}stop(){return Fa.stop(this),this}resize(e,t){Fa.running(this)?this._resizeBeforeDraw={width:e,height:t}:this._resize(e,t)}_resize(e,t){const s=this.options,a=this.canvas,i=s.maintainAspectRatio&&this.aspectRatio,r=this.platform.getMaximumSize(a,e,t,i),o=s.devicePixelRatio||this.platform.getDevicePixelRatio(),n=this.width?"resize":"attach";this.width=r.width,this.height=r.height,this._aspectRatio=this.aspectRatio,da(this,o,!0)&&(this.notifyPlugins("resize",{size:r}),Je(s.onResize,[this,r],this),this.attached&&this._doResize(n)&&this.render())}ensureScalesHaveIDs(){Qe(this.options.scales||{},((e,t)=>{e.id=t}))}buildOrUpdateScales(){const e=this.options,t=e.scales,s=this.scales,a=Object.keys(s).reduce(((e,t)=>(e[t]=!1,e)),{});let i=[];t&&(i=i.concat(Object.keys(t).map((e=>{const s=t[e],a=fr(e,s),i="r"===a,r="x"===a;return{options:s,dposition:i?"chartArea":r?"bottom":"left",dtype:i?"radialLinear":r?"category":"linear"}})))),Qe(i,(t=>{const i=t.options,r=i.id,o=fr(r,i),n=$e(i.type,t.dtype);void 0!==i.position&&Pr(i.position,o)===Pr(t.dposition)||(i.position=t.dposition),a[r]=!0;let l=null;r in s&&s[r].type===n?l=s[r]:(l=new(ir.getScale(n))({id:r,type:n,ctx:this.ctx,chart:this}),s[l.id]=l),l.init(i,e)})),Qe(a,((e,t)=>{e||delete s[t]})),Qe(s,(e=>{Di.configure(this,e,e.options),Di.addBox(this,e)}))}_updateMetasets(){const e=this._metasets,t=this.data.datasets.length,s=e.length;if(e.sort(((e,t)=>e.index-t.index)),s>t){for(let e=t;e<s;++e)this._destroyDatasetMeta(e);e.splice(t,s-t)}this._sortedMetasets=e.slice(0).sort(wr("order","index"))}_removeUnreferencedMetasets(){const{_metasets:e,data:{datasets:t}}=this;e.length>t.length&&delete this._stacks,e.forEach(((e,s)=>{0===t.filter((t=>t===e._dataset)).length&&this._destroyDatasetMeta(s)}))}buildOrUpdateControllers(){const e=[],t=this.data.datasets;let s,a;for(this._removeUnreferencedMetasets(),s=0,a=t.length;s<a;s++){const a=t[s];let i=this.getDatasetMeta(s);const r=a.type||this.config.type;if(i.type&&i.type!==r&&(this._destroyDatasetMeta(s),i=this.getDatasetMeta(s)),i.type=r,i.indexAxis=a.indexAxis||lr(r,this.options),i.order=a.order||0,i.index=s,i.label=""+a.label,i.visible=this.isDatasetVisible(s),i.controller)i.controller.updateIndex(s),i.controller.linkScales();else{const t=ir.getController(r),{datasetElementType:a,dataElementType:o}=ps.datasets[r];Object.assign(t,{dataElementType:ir.getElement(o),datasetElementType:a&&ir.getElement(a)}),i.controller=new t(this,s),e.push(i.controller)}}return this._updateMetasets(),e}_resetElements(){Qe(this.data.datasets,((e,t)=>{this.getDatasetMeta(t).controller.reset()}),this)}reset(){this._resetElements(),this.notifyPlugins("reset")}update(e){const t=this.config;t.update();const s=this._options=t.createResolver(t.chartOptionScopes(),this.getContext()),a=this._animationsDisabled=!s.animation;if(this._updateScales(),this._checkEventBindings(),this._updateHiddenIndices(),this._plugins.invalidate(),!1===this.notifyPlugins("beforeUpdate",{mode:e,cancelable:!0}))return;const i=this.buildOrUpdateControllers();this.notifyPlugins("beforeElementsUpdate");let r=0;for(let e=0,t=this.data.datasets.length;e<t;e++){const{controller:t}=this.getDatasetMeta(e),s=!a&&-1===i.indexOf(t);t.buildOrUpdateElements(s),r=Math.max(+t.getMaxOverflow(),r)}r=this._minPadding=s.layout.autoPadding?r:0,this._updateLayout(r),a||Qe(i,(e=>{e.reset()})),this._updateDatasets(e),this.notifyPlugins("afterUpdate",{mode:e}),this._layers.sort(wr("z","_idx"));const{_active:o,_lastEvent:n}=this;n?this._eventHandler(n,!0):o.length&&this._updateHoverStyles(o,o,!0),this.render()}_updateScales(){Qe(this.scales,(e=>{Di.removeBox(this,e)})),this.ensureScalesHaveIDs(),this.buildOrUpdateScales()}_checkEventBindings(){const e=this.options,t=new Set(Object.keys(this._listeners)),s=new Set(e.events);ut(t,s)&&!!this._responsiveListeners===e.responsive||(this.unbindEvents(),this.bindEvents())}_updateHiddenIndices(){const{_hiddenIndices:e}=this,t=this._getUniformDataChanges()||[];for(const{method:s,start:a,count:i}of t)Dr(e,a,"_removeElements"===s?-i:i)}_getUniformDataChanges(){const e=this._dataChanges;if(!e||!e.length)return;this._dataChanges=[];const t=this.data.datasets.length,s=t=>new Set(e.filter((e=>e[0]===t)).map(((e,t)=>t+","+e.splice(1).join(",")))),a=s(0);for(let e=1;e<t;e++)if(!ut(a,s(e)))return;return Array.from(a).map((e=>e.split(","))).map((e=>({method:e[1],start:+e[2],count:+e[3]})))}_updateLayout(e){if(!1===this.notifyPlugins("beforeLayout",{cancelable:!0}))return;Di.update(this,this.width,this.height,e);const t=this.chartArea,s=t.width<=0||t.height<=0;this._layers=[],Qe(this.boxes,(e=>{s&&"chartArea"===e.position||(e.configure&&e.configure(),this._layers.push(...e._layers()))}),this),this._layers.forEach(((e,t)=>{e._idx=t})),this.notifyPlugins("afterLayout")}_updateDatasets(e){if(!1!==this.notifyPlugins("beforeDatasetsUpdate",{mode:e,cancelable:!0})){for(let e=0,t=this.data.datasets.length;e<t;++e)this.getDatasetMeta(e).controller.configure();for(let t=0,s=this.data.datasets.length;t<s;++t)this._updateDataset(t,ct(e)?e({datasetIndex:t}):e);this.notifyPlugins("afterDatasetsUpdate",{mode:e})}}_updateDataset(e,t){const s=this.getDatasetMeta(e),a={meta:s,index:e,mode:t,cancelable:!0};!1!==this.notifyPlugins("beforeDatasetUpdate",a)&&(s.controller._update(t),a.cancelable=!1,this.notifyPlugins("afterDatasetUpdate",a))}render(){!1!==this.notifyPlugins("beforeRender",{cancelable:!0})&&(Fa.has(this)?this.attached&&!Fa.running(this)&&Fa.start(this):(this.draw(),Sr({chart:this})))}draw(){let e;if(this._resizeBeforeDraw){const{width:e,height:t}=this._resizeBeforeDraw;this._resize(e,t),this._resizeBeforeDraw=null}if(this.clear(),this.width<=0||this.height<=0)return;if(!1===this.notifyPlugins("beforeDraw",{cancelable:!0}))return;const t=this._layers;for(e=0;e<t.length&&t[e].z<=0;++e)t[e].draw(this.chartArea);for(this._drawDatasets();e<t.length;++e)t[e].draw(this.chartArea);this.notifyPlugins("afterDraw")}_getSortedDatasetMetas(e){const t=this._sortedMetasets,s=[];let a,i;for(a=0,i=t.length;a<i;++a){const i=t[a];e&&!i.visible||s.push(i)}return s}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){if(!1===this.notifyPlugins("beforeDatasetsDraw",{cancelable:!0}))return;const e=this.getSortedVisibleDatasetMetas();for(let t=e.length-1;t>=0;--t)this._drawDataset(e[t]);this.notifyPlugins("afterDatasetsDraw")}_drawDataset(e){const t=this.ctx,s=e._clip,a=!s.disabled,i=function(e){const{xScale:t,yScale:s}=e;if(t&&s)return{left:t.left,right:t.right,top:s.top,bottom:s.bottom}}(e)||this.chartArea,r={meta:e,index:e.index,cancelable:!0};!1!==this.notifyPlugins("beforeDatasetDraw",r)&&(a&&Ps(t,{left:!1===s.left?0:i.left-s.left,right:!1===s.right?this.width:i.right+s.right,top:!1===s.top?0:i.top-s.top,bottom:!1===s.bottom?this.height:i.bottom+s.bottom}),e.controller.draw(),a&&ws(t),r.cancelable=!1,this.notifyPlugins("afterDatasetDraw",r))}isPointInArea(e){return bs(e,this.chartArea,this._minPadding)}getElementsAtEventForMode(e,t,s,a){const i=hi.modes[t];return"function"==typeof i?i(this,e,s,a):[]}getDatasetMeta(e){const t=this.data.datasets[e],s=this._metasets;let a=s.filter((e=>e&&e._dataset===t)).pop();return a||(a={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:t&&t.order||0,index:e,_dataset:t,_parsed:[],_sorted:!1},s.push(a)),a}getContext(){return this.$context||(this.$context=Rs(null,{chart:this,type:"chart"}))}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(e){const t=this.data.datasets[e];if(!t)return!1;const s=this.getDatasetMeta(e);return"boolean"==typeof s.hidden?!s.hidden:!t.hidden}setDatasetVisibility(e,t){this.getDatasetMeta(e).hidden=!t}toggleDataVisibility(e){this._hiddenIndices[e]=!this._hiddenIndices[e]}getDataVisibility(e){return!this._hiddenIndices[e]}_updateVisibility(e,t,s){const a=s?"show":"hide",i=this.getDatasetMeta(e),r=i.controller._resolveAnimations(void 0,a);ft(t)?(i.data[t].hidden=!s,this.update()):(this.setDatasetVisibility(e,s),r.update(i,{visible:s}),this.update((t=>t.datasetIndex===e?a:void 0)))}hide(e,t){this._updateVisibility(e,t,!1)}show(e,t){this._updateVisibility(e,t,!0)}_destroyDatasetMeta(e){const t=this._metasets[e];t&&t.controller&&t.controller._destroy(),delete this._metasets[e]}_stop(){let e,t;for(this.stop(),Fa.remove(this),e=0,t=this.data.datasets.length;e<t;++e)this._destroyDatasetMeta(e)}destroy(){this.notifyPlugins("beforeDestroy");const{canvas:e,ctx:t}=this;this._stop(),this.config.clearCache(),e&&(this.unbindEvents(),ms(e,t),this.platform.releaseContext(t),this.canvas=null,this.ctx=null),delete xr[this.id],this.notifyPlugins("afterDestroy")}toBase64Image(...e){return this.canvas.toDataURL(...e)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const e=this._listeners,t=this.platform,s=(s,a)=>{t.addEventListener(this,s,a),e[s]=a},a=(e,t,s)=>{e.offsetX=t,e.offsetY=s,this._eventHandler(e)};Qe(this.options.events,(e=>s(e,a)))}bindResponsiveEvents(){this._responsiveListeners||(this._responsiveListeners={});const e=this._responsiveListeners,t=this.platform,s=(s,a)=>{t.addEventListener(this,s,a),e[s]=a},a=(s,a)=>{e[s]&&(t.removeEventListener(this,s,a),delete e[s])},i=(e,t)=>{this.canvas&&this.resize(e,t)};let r;const o=()=>{a("attach",o),this.attached=!0,this.resize(),s("resize",i),s("detach",r)};r=()=>{this.attached=!1,a("resize",i),this._stop(),this._resize(0,0),s("attach",o)},t.isAttached(this.canvas)?o():r()}unbindEvents(){Qe(this._listeners,((e,t)=>{this.platform.removeEventListener(this,t,e)})),this._listeners={},Qe(this._responsiveListeners,((e,t)=>{this.platform.removeEventListener(this,t,e)})),this._responsiveListeners=void 0}updateHoverStyle(e,t,s){const a=s?"set":"remove";let i,r,o,n;for("dataset"===t&&(i=this.getDatasetMeta(e[0].datasetIndex),i.controller["_"+a+"DatasetHoverStyle"]()),o=0,n=e.length;o<n;++o){r=e[o];const t=r&&this.getDatasetMeta(r.datasetIndex).controller;t&&t[a+"HoverStyle"](r.element,r.datasetIndex,r.index)}}getActiveElements(){return this._active||[]}setActiveElements(e){const t=this._active||[],s=e.map((({datasetIndex:e,index:t})=>{const s=this.getDatasetMeta(e);if(!s)throw new Error("No dataset found at index "+e);return{datasetIndex:e,element:s.data[t],index:t}}));!Xe(s,t)&&(this._active=s,this._lastEvent=null,this._updateHoverStyles(s,t))}notifyPlugins(e,t,s){return this._plugins.notify(this,e,t,s)}isPluginEnabled(e){return 1===this._plugins._cache.filter((t=>t.plugin.id===e)).length}_updateHoverStyles(e,t,s){const a=this.options.hover,i=(e,t)=>e.filter((e=>!t.some((t=>e.datasetIndex===t.datasetIndex&&e.index===t.index)))),r=i(t,e),o=s?e:i(e,t);r.length&&this.updateHoverStyle(r,a.mode,!1),o.length&&a.mode&&this.updateHoverStyle(o,a.mode,!0)}_eventHandler(e,t){const s={event:e,replay:t,cancelable:!0,inChartArea:this.isPointInArea(e)},a=t=>(t.options.events||this.options.events).includes(e.native.type);if(!1===this.notifyPlugins("beforeEvent",s,a))return;const i=this._handleEvent(e,t,s.inChartArea);return s.cancelable=!1,this.notifyPlugins("afterEvent",s,a),(i||s.changed)&&this.render(),this}_handleEvent(e,t,s){const{_active:a=[],options:i}=this,r=t,o=this._getActiveElements(e,a,s,r),n=function(e){return"mouseup"===e.type||"click"===e.type||"contextmenu"===e.type}(e),l=function(e,t,s,a){return s&&"mouseout"!==e.type?a?t:e:null}(e,this._lastEvent,s,n);s&&(this._lastEvent=null,Je(i.onHover,[e,o,this],this),n&&Je(i.onClick,[e,o,this],this));const f=!Xe(o,a);return(f||t)&&(this._active=o,this._updateHoverStyles(o,a,t)),this._lastEvent=l,f}_getActiveElements(e,t,s,a){if("mouseout"===e.type)return[];if(!s)return t;const i=this.options.hover;return this.getElementsAtEventForMode(e,i.mode,i,a)}}function Br(){return Qe(Ar.instances,(e=>e._plugins.invalidate()))}function Or(e,t,s,a){return{x:s+e*Math.cos(t),y:a+e*Math.sin(t)}}function Cr(e,t,s,a,i,r){const{x:o,y:n,startAngle:l,pixelMargin:f,innerRadius:c}=t,u=Math.max(t.outerRadius+a+s-f,0),p=c>0?c+a+s+f:0;let g=0;const d=i-l;if(a){const e=((c>0?c-a:0)+(u>0?u-a:0))/2;g=(d-(0!==e?d*e/(e+a):d))/2}const h=(d-Math.max(.001,d*u-s/pt)/u)/2,m=l+h+g,y=i-h-g,{outerStart:v,outerEnd:b,innerStart:P,innerEnd:w}=function(e,t,s,a){const i=Fs(e.options.borderRadius,["outerStart","outerEnd","innerStart","innerEnd"]),r=(s-t)/2,o=Math.min(r,a*t/2),n=e=>{const t=(s-Math.min(r,e))*a/2;return Et(e,0,Math.min(r,t))};return{outerStart:n(i.outerStart),outerEnd:n(i.outerEnd),innerStart:Et(i.innerStart,0,o),innerEnd:Et(i.innerEnd,0,o)}}(t,p,u,y-m),S=u-v,k=u-b,T=m+v/S,x=y-b/k,M=p+P,D=p+w,A=m+P/M,B=y-w/D;if(e.beginPath(),r){const t=(T+x)/2;if(e.arc(o,n,u,T,t),e.arc(o,n,u,t,x),b>0){const t=Or(k,x,o,n);e.arc(t.x,t.y,b,x,y+yt)}const s=Or(D,y,o,n);if(e.lineTo(s.x,s.y),w>0){const t=Or(D,B,o,n);e.arc(t.x,t.y,w,y+yt,B+Math.PI)}const a=(y-w/p+(m+P/p))/2;if(e.arc(o,n,p,y-w/p,a,!0),e.arc(o,n,p,a,m+P/p,!0),P>0){const t=Or(M,A,o,n);e.arc(t.x,t.y,P,A+Math.PI,m-yt)}const i=Or(S,m,o,n);if(e.lineTo(i.x,i.y),v>0){const t=Or(S,T,o,n);e.arc(t.x,t.y,v,m-yt,T)}}else{e.moveTo(o,n);const t=Math.cos(T)*u+o,s=Math.sin(T)*u+n;e.lineTo(t,s);const a=Math.cos(x)*u+o,i=Math.sin(x)*u+n;e.lineTo(a,i)}e.closePath()}function Fr(e,t,s=t){e.lineCap=$e(s.borderCapStyle,t.borderCapStyle),e.setLineDash($e(s.borderDash,t.borderDash)),e.lineDashOffset=$e(s.borderDashOffset,t.borderDashOffset),e.lineJoin=$e(s.borderJoinStyle,t.borderJoinStyle),e.lineWidth=$e(s.borderWidth,t.borderWidth),e.strokeStyle=$e(s.borderColor,t.borderColor)}function Nr(e,t,s){e.lineTo(s.x,s.y)}function Er(e,t,s={}){const a=e.length,{start:i=0,end:r=a-1}=s,{start:o,end:n}=t,l=Math.max(i,o),f=Math.min(r,n),c=i<o&&r<o||i>n&&r>n;return{count:a,start:l,loop:t.loop,ilen:f<l&&!c?a+f-l:f-l}}function Gr(e,t,s,a){const{points:i,options:r}=t,{count:o,start:n,loop:l,ilen:f}=Er(i,s,a),c=function(e){return e.stepped?Ss:e.tension||"monotone"===e.cubicInterpolationMode?ks:Nr}(r);let u,p,g,{move:d=!0,reverse:h}=a||{};for(u=0;u<=f;++u)p=i[(n+(h?f-u:u))%o],p.skip||(d?(e.moveTo(p.x,p.y),d=!1):c(e,g,p,h,r.stepped),g=p);return l&&(p=i[(n+(h?f:0))%o],c(e,g,p,h,r.stepped)),!!l}function Ir(e,t,s,a){const i=t.points,{count:r,start:o,ilen:n}=Er(i,s,a),{move:l=!0,reverse:f}=a||{};let c,u,p,g,d,h,m=0,y=0;const v=e=>(o+(f?n-e:e))%r,b=()=>{g!==d&&(e.lineTo(m,d),e.lineTo(m,g),e.lineTo(m,h))};for(l&&(u=i[v(0)],e.moveTo(u.x,u.y)),c=0;c<=n;++c){if(u=i[v(c)],u.skip)continue;const t=u.x,s=u.y,a=0|t;a===p?(s<g?g=s:s>d&&(d=s),m=(y*m+t)/++y):(b(),e.lineTo(t,s),p=a,y=0,g=d=s),h=s}b()}function zr(e){const t=e.options,s=t.borderDash&&t.borderDash.length;return e._decimated||e._loop||t.tension||"monotone"===t.cubicInterpolationMode||t.stepped||s?Gr:Ir}const Rr="function"==typeof Path2D;class Hr extends ji{static id="line";static defaults={borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:"default",fill:!1,spanGaps:!1,stepped:!1,tension:0};static defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"};static descriptors={_scriptable:!0,_indexable:e=>"borderDash"!==e&&"fill"!==e};constructor(e){super(),this.animated=!0,this.options=void 0,this._chart=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,this._datasetIndex=void 0,e&&Object.assign(this,e)}updateControlPoints(e,t){const s=this.options;if((s.tension||"monotone"===s.cubicInterpolationMode)&&!s.stepped&&!this._pointsUpdated){const a=s.spanGaps?this._loop:this._fullLoop;ia(this._points,s,e,a,t),this._pointsUpdated=!0}}set points(e){this._points=e,delete this._segments,delete this._path,this._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=function(e,t){const s=e.points,a=e.options.spanGaps,i=s.length;if(!i)return[];const r=!!e._loop,{start:o,end:n}=function(e,t,s,a){let i=0,r=t-1;if(s&&!a)for(;i<t&&!e[i].skip;)i++;for(;i<t&&e[i].skip;)i++;for(i%=t,s&&(r+=i);r>i&&e[r%t].skip;)r--;return r%=t,{start:i,end:r}}(s,i,r,a);return function(e,t,s,a){return a&&a.setContext&&s?function(e,t,s,a){const i=e._chart.getContext(),r=Ba(e.options),{_datasetIndex:o,options:{spanGaps:n}}=e,l=s.length,f=[];let c=r,u=t[0].start,p=u;function g(e,t,a,i){const r=n?-1:1;if(e!==t){for(e+=l;s[e%l].skip;)e-=r;for(;s[t%l].skip;)t+=r;e%l!=t%l&&(f.push({start:e%l,end:t%l,loop:a,style:i}),c=i,u=t%l)}}for(const e of t){u=n?u:e.start;let t,r=s[u%l];for(p=u+1;p<=e.end;p++){const n=s[p%l];t=Ba(a.setContext(Rs(i,{type:"segment",p0:r,p1:n,p0DataIndex:(p-1)%l,p1DataIndex:p%l,datasetIndex:o}))),Oa(t,c)&&g(u,p-1,e.loop,c),r=n,c=t}u<p-1&&g(u,p-1,e.loop,c)}return f}(e,t,s,a):t}(e,!0===a?[{start:o,end:n,loop:r}]:function(e,t,s,a){const i=e.length,r=[];let o,n=t,l=e[t];for(o=t+1;o<=s;++o){const s=e[o%i];s.skip||s.stop?l.skip||(a=!1,r.push({start:t%i,end:(o-1)%i,loop:a}),t=n=s.stop?o:null):(n=o,l.skip&&(t=o)),l=s}return null!==n&&r.push({start:t%i,end:n%i,loop:a}),r}(s,o,n<o?n+i:n,!!e._fullLoop&&0===o&&n===i-1),s,t)}(this,this.options.segment))}first(){const e=this.segments,t=this.points;return e.length&&t[e[0].start]}last(){const e=this.segments,t=this.points,s=e.length;return s&&t[e[s-1].end]}interpolate(e,t){const s=this.options,a=e[t],i=this.points,r=Aa(this,{property:t,start:a,end:a});if(!r.length)return;const o=[],n=function(e){return e.stepped?va:e.tension||"monotone"===e.cubicInterpolationMode?ba:ya}(s);let l,f;for(l=0,f=r.length;l<f;++l){const{start:f,end:c}=r[l],u=i[f],p=i[c];if(u===p){o.push(u);continue}const g=n(u,p,Math.abs((a-u[t])/(p[t]-u[t])),s.stepped);g[t]=e[t],o.push(g)}return 1===o.length?o[0]:o}pathSegment(e,t,s){return zr(this)(e,this,t,s)}path(e,t,s){const a=this.segments,i=zr(this);let r=this._loop;t=t||0,s=s||this.points.length-t;for(const o of a)r&=i(e,this,o,{start:t,end:t+s-1});return!!r}draw(e,t,s,a){const i=this.options||{};(this.points||[]).length&&i.borderWidth&&(e.save(),function(e,t,s,a){Rr&&!t.options.segment?function(e,t,s,a){let i=t._path;i||(i=t._path=new Path2D,t.path(i,s,a)&&i.closePath()),Fr(e,t.options),e.stroke(i)}(e,t,s,a):function(e,t,s,a){const{segments:i,options:r}=t,o=zr(t);for(const n of i)Fr(e,r,n.style),e.beginPath(),o(e,t,n,{start:s,end:s+a-1})&&e.closePath(),e.stroke()}(e,t,s,a)}(e,this,s,a),e.restore()),this.animated&&(this._pointsUpdated=!1,this._path=void 0)}}function _r(e,t,s,a){const i=e.options,{[s]:r}=e.getProps([s],a);return Math.abs(t-r)<i.radius+i.hitRadius}function Lr(e,t){const{x:s,y:a,base:i,width:r,height:o}=e.getProps(["x","y","base","width","height"],t);let n,l,f,c,u;return e.horizontal?(u=o/2,n=Math.min(s,i),l=Math.max(s,i),f=a-u,c=a+u):(u=r/2,n=s-u,l=s+u,f=Math.min(a,i),c=Math.max(a,i)),{left:n,top:f,right:l,bottom:c}}function Wr(e,t,s,a){return e?0:Et(t,s,a)}function Zr(e,t,s,a){const i=null===t,r=null===s,o=e&&!(i&&r)&&Lr(e,a);return o&&(i||Gt(t,o.left,o.right))&&(r||Gt(s,o.top,o.bottom))}function Ur(e,t){e.rect(t.x,t.y,t.w,t.h)}function jr(e,t,s={}){const a=e.x!==s.x?-t:0,i=e.y!==s.y?-t:0,r=(e.x+e.w!==s.x+s.w?t:0)-a,o=(e.y+e.h!==s.y+s.h?t:0)-i;return{x:e.x+a,y:e.y+i,w:e.w+r,h:e.h+o,radius:e.radius}}var Kr=Object.freeze({__proto__:null,ArcElement:class extends ji{static id="arc";static defaults={borderAlign:"center",borderColor:"#fff",borderJoinStyle:void 0,borderRadius:0,borderWidth:2,offset:0,spacing:0,angle:void 0,circular:!0};static defaultRoutes={backgroundColor:"backgroundColor"};constructor(e){super(),this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,e&&Object.assign(this,e)}inRange(e,t,s){const a=this.getProps(["x","y"],s),{angle:i,distance:r}=Bt(a,{x:e,y:t}),{startAngle:o,endAngle:n,innerRadius:l,outerRadius:f,circumference:c}=this.getProps(["startAngle","endAngle","innerRadius","outerRadius","circumference"],s),u=this.options.spacing/2,p=$e(c,n-o)>=gt||Nt(i,o,n),g=Gt(r,l+u,f+u);return p&&g}getCenterPoint(e){const{x:t,y:s,startAngle:a,endAngle:i,innerRadius:r,outerRadius:o}=this.getProps(["x","y","startAngle","endAngle","innerRadius","outerRadius"],e),{offset:n,spacing:l}=this.options,f=(a+i)/2,c=(r+o+l+n)/2;return{x:t+Math.cos(f)*c,y:s+Math.sin(f)*c}}tooltipPosition(e){return this.getCenterPoint(e)}draw(e){const{options:t,circumference:s}=this,a=(t.offset||0)/4,i=(t.spacing||0)/2,r=t.circular;if(this.pixelMargin="inner"===t.borderAlign?.33:0,this.fullCircles=s>gt?Math.floor(s/gt):0,0===s||this.innerRadius<0||this.outerRadius<0)return;e.save();const o=(this.startAngle+this.endAngle)/2;e.translate(Math.cos(o)*a,Math.sin(o)*a);const n=a*(1-Math.sin(Math.min(pt,s||0)));e.fillStyle=t.backgroundColor,e.strokeStyle=t.borderColor,function(e,t,s,a,i){const{fullCircles:r,startAngle:o,circumference:n}=t;let l=t.endAngle;if(r){Cr(e,t,s,a,l,i);for(let t=0;t<r;++t)e.fill();isNaN(n)||(l=o+(n%gt||gt))}Cr(e,t,s,a,l,i),e.fill()}(e,this,n,i,r),function(e,t,s,a,i){const{fullCircles:r,startAngle:o,circumference:n,options:l}=t,{borderWidth:f,borderJoinStyle:c}=l,u="inner"===l.borderAlign;if(!f)return;u?(e.lineWidth=2*f,e.lineJoin=c||"round"):(e.lineWidth=f,e.lineJoin=c||"bevel");let p=t.endAngle;if(r){Cr(e,t,s,a,p,i);for(let t=0;t<r;++t)e.stroke();isNaN(n)||(p=o+(n%gt||gt))}u&&function(e,t,s){const{startAngle:a,pixelMargin:i,x:r,y:o,outerRadius:n,innerRadius:l}=t;let f=i/n;e.beginPath(),e.arc(r,o,n,a-f,s+f),l>i?(f=i/l,e.arc(r,o,l,s+f,a-f,!0)):e.arc(r,o,i,s+yt,a-yt),e.closePath(),e.clip()}(e,t,p),r||(Cr(e,t,s,a,p,i),e.stroke())}(e,this,n,i,r),e.restore()}},LineElement:Hr,PointElement:class extends ji{static id="point";static defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:"circle",radius:3,rotation:0};static defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"};constructor(e){super(),this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,e&&Object.assign(this,e)}inRange(e,t,s){const a=this.options,{x:i,y:r}=this.getProps(["x","y"],s);return Math.pow(e-i,2)+Math.pow(t-r,2)<Math.pow(a.hitRadius+a.radius,2)}inXRange(e,t){return _r(this,e,"x",t)}inYRange(e,t){return _r(this,e,"y",t)}getCenterPoint(e){const{x:t,y:s}=this.getProps(["x","y"],e);return{x:t,y:s}}size(e){let t=(e=e||this.options||{}).radius||0;return t=Math.max(t,t&&e.hoverRadius||0),2*(t+(t&&e.borderWidth||0))}draw(e,t){const s=this.options;this.skip||s.radius<.1||!bs(this,t,this.size(s)/2)||(e.strokeStyle=s.borderColor,e.lineWidth=s.borderWidth,e.fillStyle=s.backgroundColor,ys(e,s,this.x,this.y))}getRange(){const e=this.options||{};return e.radius+e.hitRadius}},BarElement:class extends ji{static id="bar";static defaults={borderSkipped:"start",borderWidth:0,borderRadius:0,inflateAmount:"auto",pointStyle:void 0};static defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor"};constructor(e){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,this.inflateAmount=void 0,e&&Object.assign(this,e)}draw(e){const{inflateAmount:t,options:{borderColor:s,backgroundColor:a}}=this,{inner:i,outer:r}=function(e){const t=Lr(e),s=t.right-t.left,a=t.bottom-t.top,i=function(e,t,s){const a=e.options.borderWidth,i=e.borderSkipped,r=Ns(a);return{t:Wr(i.top,r.top,0,s),r:Wr(i.right,r.right,0,t),b:Wr(i.bottom,r.bottom,0,s),l:Wr(i.left,r.left,0,t)}}(e,s/2,a/2),r=function(e,t,s){const{enableBorderRadius:a}=e.getProps(["enableBorderRadius"]),i=e.options.borderRadius,r=Es(i),o=Math.min(t,s),n=e.borderSkipped,l=a||Ke(i);return{topLeft:Wr(!l||n.top||n.left,r.topLeft,0,o),topRight:Wr(!l||n.top||n.right,r.topRight,0,o),bottomLeft:Wr(!l||n.bottom||n.left,r.bottomLeft,0,o),bottomRight:Wr(!l||n.bottom||n.right,r.bottomRight,0,o)}}(e,s/2,a/2);return{outer:{x:t.left,y:t.top,w:s,h:a,radius:r},inner:{x:t.left+i.l,y:t.top+i.t,w:s-i.l-i.r,h:a-i.t-i.b,radius:{topLeft:Math.max(0,r.topLeft-Math.max(i.t,i.l)),topRight:Math.max(0,r.topRight-Math.max(i.t,i.r)),bottomLeft:Math.max(0,r.bottomLeft-Math.max(i.b,i.l)),bottomRight:Math.max(0,r.bottomRight-Math.max(i.b,i.r))}}}}(this),o=(n=r.radius).topLeft||n.topRight||n.bottomLeft||n.bottomRight?Ds:Ur;var n;e.save(),r.w===i.w&&r.h===i.h||(e.beginPath(),o(e,jr(r,t,i)),e.clip(),o(e,jr(i,-t,r)),e.fillStyle=s,e.fill("evenodd")),e.beginPath(),o(e,jr(i,t)),e.fillStyle=a,e.fill(),e.restore()}inRange(e,t,s){return Zr(this,e,t,s)}inXRange(e,t){return Zr(this,e,null,t)}inYRange(e,t){return Zr(this,null,e,t)}getCenterPoint(e){const{x:t,y:s,base:a,horizontal:i}=this.getProps(["x","y","base","horizontal"],e);return{x:i?(t+a)/2:t,y:i?s:(s+a)/2}}getRange(e){return"x"===e?this.width/2:this.height/2}}});const Vr=["rgb(54, 162, 235)","rgb(255, 99, 132)","rgb(255, 159, 64)","rgb(255, 205, 86)","rgb(75, 192, 192)","rgb(153, 102, 255)","rgb(201, 203, 207)"],qr=Vr.map((e=>e.replace("rgb(","rgba(").replace(")",", 0.5)")));function $r(e){return Vr[e%Vr.length]}function Yr(e){return qr[e%qr.length]}function Jr(e){let t;for(t in e)if(e[t].borderColor||e[t].backgroundColor)return!0;return!1}var Qr={id:"colors",defaults:{enabled:!0,forceOverride:!1},beforeLayout(e,t,s){if(!s.enabled)return;const{data:{datasets:a},options:i}=e.config,{elements:r}=i;if(!s.forceOverride&&(Jr(a)||(o=i)&&(o.borderColor||o.backgroundColor)||r&&Jr(r)))return;var o;const n=function(e){let t=0;return(s,a)=>{const i=e.getDatasetMeta(a).controller;i instanceof ai?t=function(e,t){return e.backgroundColor=e.data.map((()=>$r(t++))),t}(s,t):i instanceof ii?t=function(e,t){return e.backgroundColor=e.data.map((()=>Yr(t++))),t}(s,t):i&&(t=function(e,t){return e.borderColor=$r(t),e.backgroundColor=Yr(t),++t}(s,t))}}(e);a.forEach(n)}};function Xr(e){if(e._decimated){const t=e._data;delete e._decimated,delete e._data,Object.defineProperty(e,"data",{configurable:!0,enumerable:!0,writable:!0,value:t})}}function eo(e){e.data.datasets.forEach((e=>{Xr(e)}))}var to={id:"decimation",defaults:{algorithm:"min-max",enabled:!1},beforeElementsUpdate:(e,t,s)=>{if(!s.enabled)return void eo(e);const a=e.width;e.data.datasets.forEach(((t,i)=>{const{_data:r,indexAxis:o}=t,n=e.getDatasetMeta(i),l=r||t.data;if("y"===zs([o,e.options.indexAxis]))return;if(!n.controller.supportsDecimation)return;const f=e.scales[n.xAxisID];if("linear"!==f.type&&"time"!==f.type)return;if(e.options.parsing)return;let c,{start:u,count:p}=function(e,t){const s=t.length;let a,i=0;const{iScale:r}=e,{min:o,max:n,minDefined:l,maxDefined:f}=r.getUserBounds();return l&&(i=Et(zt(t,r.axis,o).lo,0,s-1)),a=f?Et(zt(t,r.axis,n).hi+1,i,s)-i:s-i,{start:i,count:a}}(n,l);if(p<=(s.threshold||4*a))Xr(t);else{switch(Ue(r)&&(t._data=l,delete t.data,Object.defineProperty(t,"data",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(e){this._data=e}})),s.algorithm){case"lttb":c=function(e,t,s,a,i){const r=i.samples||a;if(r>=s)return e.slice(t,t+s);const o=[],n=(s-2)/(r-2);let l=0;const f=t+s-1;let c,u,p,g,d,h=t;for(o[l++]=e[h],c=0;c<r-2;c++){let a,i=0,r=0;const f=Math.floor((c+1)*n)+1+t,m=Math.min(Math.floor((c+2)*n)+1,s)+t,y=m-f;for(a=f;a<m;a++)i+=e[a].x,r+=e[a].y;i/=y,r/=y;const v=Math.floor(c*n)+1+t,b=Math.min(Math.floor((c+1)*n)+1,s)+t,{x:P,y:w}=e[h];for(p=g=-1,a=v;a<b;a++)g=.5*Math.abs((P-i)*(e[a].y-w)-(P-e[a].x)*(r-w)),g>p&&(p=g,u=e[a],d=a);o[l++]=u,h=d}return o[l++]=e[f],o}(l,u,p,a,s);break;case"min-max":c=function(e,t,s,a){let i,r,o,n,l,f,c,u,p,g,d=0,h=0;const m=[],y=t+s-1,v=e[t].x,b=e[y].x-v;for(i=t;i<t+s;++i){r=e[i],o=(r.x-v)/b*a,n=r.y;const t=0|o;if(t===l)n<p?(p=n,f=i):n>g&&(g=n,c=i),d=(h*d+r.x)/++h;else{const s=i-1;if(!Ue(f)&&!Ue(c)){const t=Math.min(f,c),a=Math.max(f,c);t!==u&&t!==s&&m.push({...e[t],x:d}),a!==u&&a!==s&&m.push({...e[a],x:d})}i>0&&s!==u&&m.push(e[s]),m.push(r),l=t,h=0,p=g=n,f=c=u=i}}return m}(l,u,p,a);break;default:throw new Error(`Unsupported decimation algorithm '${s.algorithm}'`)}t._decimated=c}}))},destroy(e){eo(e)}};function so(e,t,s,a){if(a)return;let i=t[e],r=s[e];return"angle"===e&&(i=Ft(i),r=Ft(r)),{property:e,start:i,end:r}}function ao(e,t,s){for(;t>e;t--){const e=s[t];if(!isNaN(e.x)&&!isNaN(e.y))break}return t}function io(e,t,s,a){return e&&t?a(e[s],t[s]):e?e[s]:t?t[s]:0}function ro(e,t){let s=[],a=!1;return je(e)?(a=!0,s=e):s=function(e,t){const{x:s=null,y:a=null}=e||{},i=t.points,r=[];return t.segments.forEach((({start:e,end:t})=>{t=ao(e,t,i);const o=i[e],n=i[t];null!==a?(r.push({x:o.x,y:a}),r.push({x:n.x,y:a})):null!==s&&(r.push({x:s,y:o.y}),r.push({x:s,y:n.y}))})),r}(e,t),s.length?new Hr({points:s,options:{tension:0},_loop:a,_fullLoop:a}):null}function oo(e){return e&&!1!==e.fill}function no(e,t,s){let a=e[t].fill;const i=[t];let r;if(!s)return a;for(;!1!==a&&-1===i.indexOf(a);){if(!Ve(a))return a;if(r=e[a],!r)return!1;if(r.visible)return a;i.push(a),a=r.fill}return!1}function lo(e,t,s){const a=function(e){const t=e.options,s=t.fill;let a=$e(s&&s.target,s);return void 0===a&&(a=!!t.backgroundColor),!1!==a&&null!==a&&(!0===a?"origin":a)}(e);if(Ke(a))return!isNaN(a.value)&&a;let i=parseFloat(a);return Ve(i)&&Math.floor(i)===i?function(e,t,s,a){return"-"!==e&&"+"!==e||(s=t+s),!(s===t||s<0||s>=a)&&s}(a[0],t,i,s):["origin","start","end","stack","shape"].indexOf(a)>=0&&a}function fo(e,t,s){const a=[];for(let i=0;i<s.length;i++){const r=s[i],{first:o,last:n,point:l}=co(r,t,"x");if(!(!l||o&&n))if(o)a.unshift(l);else if(e.push(l),!n)break}e.push(...a)}function co(e,t,s){const a=e.interpolate(t,s);if(!a)return{};const i=a[s],r=e.segments,o=e.points;let n=!1,l=!1;for(let e=0;e<r.length;e++){const t=r[e],a=o[t.start][s],f=o[t.end][s];if(Gt(i,a,f)){n=i===a,l=i===f;break}}return{first:n,last:l,point:a}}class uo{constructor(e){this.x=e.x,this.y=e.y,this.radius=e.radius}pathSegment(e,t,s){const{x:a,y:i,radius:r}=this;return t=t||{start:0,end:gt},e.arc(a,i,r,t.end,t.start,!0),!s.bounds}interpolate(e){const{x:t,y:s,radius:a}=this,i=e.angle;return{x:t+Math.cos(i)*a,y:s+Math.sin(i)*a,angle:i}}}function po(e,t,s){const a=function(e){const{chart:t,fill:s,line:a}=e;if(Ve(s))return function(e,t){const s=e.getDatasetMeta(t);return s&&e.isDatasetVisible(t)?s.dataset:null}(t,s);if("stack"===s)return function(e){const{scale:t,index:s,line:a}=e,i=[],r=a.segments,o=a.points,n=function(e,t){const s=[],a=e.getMatchingVisibleMetas("line");for(let e=0;e<a.length;e++){const i=a[e];if(i.index===t)break;i.hidden||s.unshift(i.dataset)}return s}(t,s);n.push(ro({x:null,y:t.bottom},a));for(let e=0;e<r.length;e++){const t=r[e];for(let e=t.start;e<=t.end;e++)fo(i,o[e],n)}return new Hr({points:i,options:{}})}(e);if("shape"===s)return!0;const i=function(e){return(e.scale||{}).getPointPositionForValue?function(e){const{scale:t,fill:s}=e,a=t.options,i=t.getLabels().length,r=a.reverse?t.max:t.min,o=function(e,t,s){let a;return a="start"===e?s:"end"===e?t.options.reverse?t.min:t.max:Ke(e)?e.value:t.getBaseValue(),a}(s,t,r),n=[];if(a.grid.circular){const e=t.getPointPositionForValue(0,r);return new uo({x:e.x,y:e.y,radius:t.getDistanceFromCenterForValue(o)})}for(let e=0;e<i;++e)n.push(t.getPointPositionForValue(e,o));return n}(e):function(e){const{scale:t={},fill:s}=e,a=function(e,t){let s=null;return"start"===e?s=t.bottom:"end"===e?s=t.top:Ke(e)?s=t.getPixelForValue(e.value):t.getBasePixel&&(s=t.getBasePixel()),s}(s,t);if(Ve(a)){const e=t.isHorizontal();return{x:e?a:null,y:e?null:a}}return null}(e)}(e);return i instanceof uo?i:ro(i,a)}(t),{line:i,scale:r,axis:o}=t,n=i.options,l=n.fill,f=n.backgroundColor,{above:c=f,below:u=f}=l||{};a&&i.points.length&&(Ps(e,s),function(e,t){const{line:s,target:a,above:i,below:r,area:o,scale:n}=t,l=s._loop?"angle":t.axis;e.save(),"x"===l&&r!==i&&(go(e,a,o.top),ho(e,{line:s,target:a,color:i,scale:n,property:l}),e.restore(),e.save(),go(e,a,o.bottom)),ho(e,{line:s,target:a,color:r,scale:n,property:l}),e.restore()}(e,{line:i,target:a,above:c,below:u,area:s,scale:r,axis:o}),ws(e))}function go(e,t,s){const{segments:a,points:i}=t;let r=!0,o=!1;e.beginPath();for(const n of a){const{start:a,end:l}=n,f=i[a],c=i[ao(a,l,i)];r?(e.moveTo(f.x,f.y),r=!1):(e.lineTo(f.x,s),e.lineTo(f.x,f.y)),o=!!t.pathSegment(e,n,{move:o}),o?e.closePath():e.lineTo(c.x,s)}e.lineTo(t.first().x,s),e.closePath(),e.clip()}function ho(e,t){const{line:s,target:a,property:i,color:r,scale:o}=t,n=function(e,t,s){const a=e.segments,i=e.points,r=t.points,o=[];for(const e of a){let{start:a,end:n}=e;n=ao(a,n,i);const l=so(s,i[a],i[n],e.loop);if(!t.segments){o.push({source:e,target:l,start:i[a],end:i[n]});continue}const f=Aa(t,l);for(const t of f){const a=so(s,r[t.start],r[t.end],t.loop),n=Da(e,i,a);for(const e of n)o.push({source:e,target:t,start:{[s]:io(l,a,"start",Math.max)},end:{[s]:io(l,a,"end",Math.min)}})}}return o}(s,a,i);for(const{source:t,target:l,start:f,end:c}of n){const{style:{backgroundColor:n=r}={}}=t,u=!0!==a;e.save(),e.fillStyle=n,mo(e,o,u&&so(i,f,c)),e.beginPath();const p=!!s.pathSegment(e,t);let g;if(u){p?e.closePath():yo(e,a,c,i);const t=!!a.pathSegment(e,l,{move:p,reverse:!0});g=p&&t,g||yo(e,a,f,i)}e.closePath(),e.fill(g?"evenodd":"nonzero"),e.restore()}}function mo(e,t,s){const{top:a,bottom:i}=t.chart.chartArea,{property:r,start:o,end:n}=s||{};"x"===r&&(e.beginPath(),e.rect(o,a,n-o,i-a),e.clip())}function yo(e,t,s,a){const i=t.interpolate(s,a);i&&e.lineTo(i.x,i.y)}var vo={id:"filler",afterDatasetsUpdate(e,t,s){const a=(e.data.datasets||[]).length,i=[];let r,o,n,l;for(o=0;o<a;++o)r=e.getDatasetMeta(o),n=r.dataset,l=null,n&&n.options&&n instanceof Hr&&(l={visible:e.isDatasetVisible(o),index:o,fill:lo(n,o,a),chart:e,axis:r.controller.options.indexAxis,scale:r.vScale,line:n}),r.$filler=l,i.push(l);for(o=0;o<a;++o)l=i[o],l&&!1!==l.fill&&(l.fill=no(i,o,s.propagate))},beforeDraw(e,t,s){const a="beforeDraw"===s.drawTime,i=e.getSortedVisibleDatasetMetas(),r=e.chartArea;for(let t=i.length-1;t>=0;--t){const s=i[t].$filler;s&&(s.line.updateControlPoints(r,s.axis),a&&s.fill&&po(e.ctx,s,r))}},beforeDatasetsDraw(e,t,s){if("beforeDatasetsDraw"!==s.drawTime)return;const a=e.getSortedVisibleDatasetMetas();for(let t=a.length-1;t>=0;--t){const s=a[t].$filler;oo(s)&&po(e.ctx,s,e.chartArea)}},beforeDatasetDraw(e,t,s){const a=t.meta.$filler;oo(a)&&"beforeDatasetDraw"===s.drawTime&&po(e.ctx,a,e.chartArea)},defaults:{propagate:!0,drawTime:"beforeDatasetDraw"}};const bo=(e,t)=>{let{boxHeight:s=t,boxWidth:a=t}=e;return e.usePointStyle&&(s=Math.min(s,t),a=e.pointStyleWidth||Math.min(a,t)),{boxWidth:a,boxHeight:s,itemHeight:Math.max(t,s)}};class Po extends ji{constructor(e){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=e.chart,this.options=e.options,this.ctx=e.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(e,t,s){this.maxWidth=e,this.maxHeight=t,this._margins=s,this.setDimensions(),this.buildLabels(),this.fit()}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=this._margins.left,this.right=this.width):(this.height=this.maxHeight,this.top=this._margins.top,this.bottom=this.height)}buildLabels(){const e=this.options.labels||{};let t=Je(e.generateLabels,[this.chart],this)||[];e.filter&&(t=t.filter((t=>e.filter(t,this.chart.data)))),e.sort&&(t=t.sort(((t,s)=>e.sort(t,s,this.chart.data)))),this.options.reverse&&t.reverse(),this.legendItems=t}fit(){const{options:e,ctx:t}=this;if(!e.display)return void(this.width=this.height=0);const s=e.labels,a=Is(s.font),i=a.size,r=this._computeTitleHeight(),{boxWidth:o,itemHeight:n}=bo(s,i);let l,f;t.font=a.string,this.isHorizontal()?(l=this.maxWidth,f=this._fitRows(r,i,o,n)+10):(f=this.maxHeight,l=this._fitCols(r,a,o,n)+10),this.width=Math.min(l,e.maxWidth||this.maxWidth),this.height=Math.min(f,e.maxHeight||this.maxHeight)}_fitRows(e,t,s,a){const{ctx:i,maxWidth:r,options:{labels:{padding:o}}}=this,n=this.legendHitBoxes=[],l=this.lineWidths=[0],f=a+o;let c=e;i.textAlign="left",i.textBaseline="middle";let u=-1,p=-f;return this.legendItems.forEach(((e,g)=>{const d=s+t/2+i.measureText(e.text).width;(0===g||l[l.length-1]+d+2*o>r)&&(c+=f,l[l.length-(g>0?0:1)]=0,p+=f,u++),n[g]={left:0,top:p,row:u,width:d,height:a},l[l.length-1]+=d+o})),c}_fitCols(e,t,s,a){const{ctx:i,maxHeight:r,options:{labels:{padding:o}}}=this,n=this.legendHitBoxes=[],l=this.columnSizes=[],f=r-e;let c=o,u=0,p=0,g=0,d=0;return this.legendItems.forEach(((e,r)=>{const{itemWidth:h,itemHeight:m}=function(e,t,s,a,i){const r=function(e,t,s,a){let i=e.text;return i&&"string"!=typeof i&&(i=i.reduce(((e,t)=>e.length>t.length?e:t))),t+s.size/2+a.measureText(i).width}(a,e,t,s),o=function(e,t,s){let a=e;return"string"!=typeof t.text&&(a=wo(t,s)),a}(i,a,t.lineHeight);return{itemWidth:r,itemHeight:o}}(s,t,i,e,a);r>0&&p+m+2*o>f&&(c+=u+o,l.push({width:u,height:p}),g+=u+o,d++,u=p=0),n[r]={left:g,top:p,col:d,width:h,height:m},u=Math.max(u,h),p+=m+o})),c+=u,l.push({width:u,height:p}),c}adjustHitBoxes(){if(!this.options.display)return;const e=this._computeTitleHeight(),{legendHitBoxes:t,options:{align:s,labels:{padding:a},rtl:i}}=this,r=Sa(i,this.left,this.width);if(this.isHorizontal()){let i=0,o=jt(s,this.left+a,this.right-this.lineWidths[i]);for(const n of t)i!==n.row&&(i=n.row,o=jt(s,this.left+a,this.right-this.lineWidths[i])),n.top+=this.top+e+a,n.left=r.leftForLtr(r.x(o),n.width),o+=n.width+a}else{let i=0,o=jt(s,this.top+e+a,this.bottom-this.columnSizes[i].height);for(const n of t)n.col!==i&&(i=n.col,o=jt(s,this.top+e+a,this.bottom-this.columnSizes[i].height)),n.top=o,n.left+=this.left+a,n.left=r.leftForLtr(r.x(n.left),n.width),o+=n.height+a}}isHorizontal(){return"top"===this.options.position||"bottom"===this.options.position}draw(){if(this.options.display){const e=this.ctx;Ps(e,this),this._draw(),ws(e)}}_draw(){const{options:e,columnSizes:t,lineWidths:s,ctx:a}=this,{align:i,labels:r}=e,o=ps.color,n=Sa(e.rtl,this.left,this.width),l=Is(r.font),{padding:f}=r,c=l.size,u=c/2;let p;this.drawTitle(),a.textAlign=n.textAlign("left"),a.textBaseline="middle",a.lineWidth=.5,a.font=l.string;const{boxWidth:g,boxHeight:d,itemHeight:h}=bo(r,c),m=this.isHorizontal(),y=this._computeTitleHeight();p=m?{x:jt(i,this.left+f,this.right-s[0]),y:this.top+f+y,line:0}:{x:this.left+f,y:jt(i,this.top+y+f,this.bottom-t[0].height),line:0},ka(this.ctx,e.textDirection);const v=h+f;this.legendItems.forEach(((b,P)=>{a.strokeStyle=b.fontColor,a.fillStyle=b.fontColor;const w=a.measureText(b.text).width,S=n.textAlign(b.textAlign||(b.textAlign=r.textAlign)),k=g+u+w;let T=p.x,x=p.y;if(n.setWidth(this.width),m?P>0&&T+k+f>this.right&&(x=p.y+=v,p.line++,T=p.x=jt(i,this.left+f,this.right-s[p.line])):P>0&&x+v>this.bottom&&(T=p.x=T+t[p.line].width+f,p.line++,x=p.y=jt(i,this.top+y+f,this.bottom-t[p.line].height)),function(e,t,s){if(isNaN(g)||g<=0||isNaN(d)||d<0)return;a.save();const i=$e(s.lineWidth,1);if(a.fillStyle=$e(s.fillStyle,o),a.lineCap=$e(s.lineCap,"butt"),a.lineDashOffset=$e(s.lineDashOffset,0),a.lineJoin=$e(s.lineJoin,"miter"),a.lineWidth=i,a.strokeStyle=$e(s.strokeStyle,o),a.setLineDash($e(s.lineDash,[])),r.usePointStyle){const o={radius:d*Math.SQRT2/2,pointStyle:s.pointStyle,rotation:s.rotation,borderWidth:i},l=n.xPlus(e,g/2);vs(a,o,l,t+u,r.pointStyleWidth&&g)}else{const r=t+Math.max((c-d)/2,0),o=n.leftForLtr(e,g),l=Es(s.borderRadius);a.beginPath(),Object.values(l).some((e=>0!==e))?Ds(a,{x:o,y:r,w:g,h:d,radius:l}):a.rect(o,r,g,d),a.fill(),0!==i&&a.stroke()}a.restore()}(n.x(T),x,b),T=((e,t,s,a)=>e===(a?"left":"right")?s:"center"===e?(t+s)/2:t)(S,T+g+u,m?T+k:this.right,e.rtl),function(e,t,s){Ts(a,s.text,e,t+h/2,l,{strikethrough:s.hidden,textAlign:n.textAlign(s.textAlign)})}(n.x(T),x,b),m)p.x+=k+f;else if("string"!=typeof b.text){const e=l.lineHeight;p.y+=wo(b,e)}else p.y+=v})),Ta(this.ctx,e.textDirection)}drawTitle(){const e=this.options,t=e.title,s=Is(t.font),a=Gs(t.padding);if(!t.display)return;const i=Sa(e.rtl,this.left,this.width),r=this.ctx,o=t.position,n=s.size/2,l=a.top+n;let f,c=this.left,u=this.width;if(this.isHorizontal())u=Math.max(...this.lineWidths),f=this.top+l,c=jt(e.align,c,this.right-u);else{const t=this.columnSizes.reduce(((e,t)=>Math.max(e,t.height)),0);f=l+jt(e.align,this.top,this.bottom-t-e.labels.padding-this._computeTitleHeight())}const p=jt(o,c,c+u);r.textAlign=i.textAlign(Ut(o)),r.textBaseline="middle",r.strokeStyle=t.color,r.fillStyle=t.color,r.font=s.string,Ts(r,t.text,p,f,s)}_computeTitleHeight(){const e=this.options.title,t=Is(e.font),s=Gs(e.padding);return e.display?t.lineHeight+s.height:0}_getLegendItemAt(e,t){let s,a,i;if(Gt(e,this.left,this.right)&&Gt(t,this.top,this.bottom))for(i=this.legendHitBoxes,s=0;s<i.length;++s)if(a=i[s],Gt(e,a.left,a.left+a.width)&&Gt(t,a.top,a.top+a.height))return this.legendItems[s];return null}handleEvent(e){const t=this.options;if(!function(e,t){return!("mousemove"!==e&&"mouseout"!==e||!t.onHover&&!t.onLeave)||!(!t.onClick||"click"!==e&&"mouseup"!==e)}(e.type,t))return;const s=this._getLegendItemAt(e.x,e.y);if("mousemove"===e.type||"mouseout"===e.type){const r=this._hoveredItem,o=(i=s,null!==(a=r)&&null!==i&&a.datasetIndex===i.datasetIndex&&a.index===i.index);r&&!o&&Je(t.onLeave,[e,r,this],this),this._hoveredItem=s,s&&!o&&Je(t.onHover,[e,s,this],this)}else s&&Je(t.onClick,[e,s,this],this);var a,i}}function wo(e,t){return t*(e.text?e.text.length+.5:0)}var So={id:"legend",_element:Po,start(e,t,s){const a=e.legend=new Po({ctx:e.ctx,options:s,chart:e});Di.configure(e,a,s),Di.addBox(e,a)},stop(e){Di.removeBox(e,e.legend),delete e.legend},beforeUpdate(e,t,s){const a=e.legend;Di.configure(e,a,s),a.options=s},afterUpdate(e){const t=e.legend;t.buildLabels(),t.adjustHitBoxes()},afterEvent(e,t){t.replay||e.legend.handleEvent(t.event)},defaults:{display:!0,position:"top",align:"center",fullSize:!0,reverse:!1,weight:1e3,onClick(e,t,s){const a=t.datasetIndex,i=s.chart;i.isDatasetVisible(a)?(i.hide(a),t.hidden=!0):(i.show(a),t.hidden=!1)},onHover:null,onLeave:null,labels:{color:e=>e.chart.options.color,boxWidth:40,padding:10,generateLabels(e){const t=e.data.datasets,{labels:{usePointStyle:s,pointStyle:a,textAlign:i,color:r,useBorderRadius:o,borderRadius:n}}=e.legend.options;return e._getSortedDatasetMetas().map((e=>{const l=e.controller.getStyle(s?0:void 0),f=Gs(l.borderWidth);return{text:t[e.index].label,fillStyle:l.backgroundColor,fontColor:r,hidden:!e.visible,lineCap:l.borderCapStyle,lineDash:l.borderDash,lineDashOffset:l.borderDashOffset,lineJoin:l.borderJoinStyle,lineWidth:(f.width+f.height)/4,strokeStyle:l.borderColor,pointStyle:a||l.pointStyle,rotation:l.rotation,textAlign:i||l.textAlign,borderRadius:o&&(n||l.borderRadius),datasetIndex:e.index}}),this)}},title:{color:e=>e.chart.options.color,display:!1,position:"center",text:""}},descriptors:{_scriptable:e=>!e.startsWith("on"),labels:{_scriptable:e=>!["generateLabels","filter","sort"].includes(e)}}};class ko extends ji{constructor(e){super(),this.chart=e.chart,this.options=e.options,this.ctx=e.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(e,t){const s=this.options;if(this.left=0,this.top=0,!s.display)return void(this.width=this.height=this.right=this.bottom=0);this.width=this.right=e,this.height=this.bottom=t;const a=je(s.text)?s.text.length:1;this._padding=Gs(s.padding);const i=a*Is(s.font).lineHeight+this._padding.height;this.isHorizontal()?this.height=i:this.width=i}isHorizontal(){const e=this.options.position;return"top"===e||"bottom"===e}_drawArgs(e){const{top:t,left:s,bottom:a,right:i,options:r}=this,o=r.align;let n,l,f,c=0;return this.isHorizontal()?(l=jt(o,s,i),f=t+e,n=i-s):("left"===r.position?(l=s+e,f=jt(o,a,t),c=-.5*pt):(l=i-e,f=jt(o,t,a),c=.5*pt),n=a-t),{titleX:l,titleY:f,maxWidth:n,rotation:c}}draw(){const e=this.ctx,t=this.options;if(!t.display)return;const s=Is(t.font),a=s.lineHeight/2+this._padding.top,{titleX:i,titleY:r,maxWidth:o,rotation:n}=this._drawArgs(a);Ts(e,t.text,0,0,s,{color:t.color,maxWidth:o,rotation:n,textAlign:Ut(t.align),textBaseline:"middle",translation:[i,r]})}}var To={id:"title",_element:ko,start(e,t,s){!function(e,t){const s=new ko({ctx:e.ctx,options:t,chart:e});Di.configure(e,s,t),Di.addBox(e,s),e.titleBlock=s}(e,s)},stop(e){const t=e.titleBlock;Di.removeBox(e,t),delete e.titleBlock},beforeUpdate(e,t,s){const a=e.titleBlock;Di.configure(e,a,s),a.options=s},defaults:{align:"center",display:!1,font:{weight:"bold"},fullSize:!0,padding:10,position:"top",text:"",weight:2e3},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const xo=new WeakMap;var Mo={id:"subtitle",start(e,t,s){const a=new ko({ctx:e.ctx,options:s,chart:e});Di.configure(e,a,s),Di.addBox(e,a),xo.set(e,a)},stop(e){Di.removeBox(e,xo.get(e)),xo.delete(e)},beforeUpdate(e,t,s){const a=xo.get(e);Di.configure(e,a,s),a.options=s},defaults:{align:"center",display:!1,font:{weight:"normal"},fullSize:!0,padding:0,position:"top",text:"",weight:1500},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const Do={average(e){if(!e.length)return!1;let t,s,a=0,i=0,r=0;for(t=0,s=e.length;t<s;++t){const s=e[t].element;if(s&&s.hasValue()){const e=s.tooltipPosition();a+=e.x,i+=e.y,++r}}return{x:a/r,y:i/r}},nearest(e,t){if(!e.length)return!1;let s,a,i,r=t.x,o=t.y,n=Number.POSITIVE_INFINITY;for(s=0,a=e.length;s<a;++s){const a=e[s].element;if(a&&a.hasValue()){const e=Ot(t,a.getCenterPoint());e<n&&(n=e,i=a)}}if(i){const e=i.tooltipPosition();r=e.x,o=e.y}return{x:r,y:o}}};function Ao(e,t){return t&&(je(t)?Array.prototype.push.apply(e,t):e.push(t)),e}function Bo(e){return("string"==typeof e||e instanceof String)&&e.indexOf("\n")>-1?e.split("\n"):e}function Oo(e,t){const{element:s,datasetIndex:a,index:i}=t,r=e.getDatasetMeta(a).controller,{label:o,value:n}=r.getLabelAndValue(i);return{chart:e,label:o,parsed:r.getParsed(i),raw:e.data.datasets[a].data[i],formattedValue:n,dataset:r.getDataset(),dataIndex:i,datasetIndex:a,element:s}}function Co(e,t){const s=e.chart.ctx,{body:a,footer:i,title:r}=e,{boxWidth:o,boxHeight:n}=t,l=Is(t.bodyFont),f=Is(t.titleFont),c=Is(t.footerFont),u=r.length,p=i.length,g=a.length,d=Gs(t.padding);let h=d.height,m=0,y=a.reduce(((e,t)=>e+t.before.length+t.lines.length+t.after.length),0);y+=e.beforeBody.length+e.afterBody.length,u&&(h+=u*f.lineHeight+(u-1)*t.titleSpacing+t.titleMarginBottom),y&&(h+=g*(t.displayColors?Math.max(n,l.lineHeight):l.lineHeight)+(y-g)*l.lineHeight+(y-1)*t.bodySpacing),p&&(h+=t.footerMarginTop+p*c.lineHeight+(p-1)*t.footerSpacing);let v=0;const b=function(e){m=Math.max(m,s.measureText(e).width+v)};return s.save(),s.font=f.string,Qe(e.title,b),s.font=l.string,Qe(e.beforeBody.concat(e.afterBody),b),v=t.displayColors?o+2+t.boxPadding:0,Qe(a,(e=>{Qe(e.before,b),Qe(e.lines,b),Qe(e.after,b)})),v=0,s.font=c.string,Qe(e.footer,b),s.restore(),m+=d.width,{width:m,height:h}}function Fo(e,t,s,a){const{x:i,width:r}=s,{width:o,chartArea:{left:n,right:l}}=e;let f="center";return"center"===a?f=i<=(n+l)/2?"left":"right":i<=r/2?f="left":i>=o-r/2&&(f="right"),function(e,t,s,a){const{x:i,width:r}=a,o=s.caretSize+s.caretPadding;return"left"===e&&i+r+o>t.width||"right"===e&&i-r-o<0||void 0}(f,e,t,s)&&(f="center"),f}function No(e,t,s){const a=s.yAlign||t.yAlign||function(e,t){const{y:s,height:a}=t;return s<a/2?"top":s>e.height-a/2?"bottom":"center"}(e,s);return{xAlign:s.xAlign||t.xAlign||Fo(e,t,s,a),yAlign:a}}function Eo(e,t,s,a){const{caretSize:i,caretPadding:r,cornerRadius:o}=e,{xAlign:n,yAlign:l}=s,f=i+r,{topLeft:c,topRight:u,bottomLeft:p,bottomRight:g}=Es(o);let d=function(e,t){let{x:s,width:a}=e;return"right"===t?s-=a:"center"===t&&(s-=a/2),s}(t,n);const h=function(e,t,s){let{y:a,height:i}=e;return"top"===t?a+=s:a-="bottom"===t?i+s:i/2,a}(t,l,f);return"center"===l?"left"===n?d+=f:"right"===n&&(d-=f):"left"===n?d-=Math.max(c,p)+i:"right"===n&&(d+=Math.max(u,g)+i),{x:Et(d,0,a.width-t.width),y:Et(h,0,a.height-t.height)}}function Go(e,t,s){const a=Gs(s.padding);return"center"===t?e.x+e.width/2:"right"===t?e.x+e.width-a.right:e.x+a.left}function Io(e){return Ao([],Bo(e))}function zo(e,t){const s=t&&t.dataset&&t.dataset.tooltip&&t.dataset.tooltip.callbacks;return s?e.override(s):e}const Ro={beforeTitle:We,title(e){if(e.length>0){const t=e[0],s=t.chart.data.labels,a=s?s.length:0;if(this&&this.options&&"dataset"===this.options.mode)return t.dataset.label||"";if(t.label)return t.label;if(a>0&&t.dataIndex<a)return s[t.dataIndex]}return""},afterTitle:We,beforeBody:We,beforeLabel:We,label(e){if(this&&this.options&&"dataset"===this.options.mode)return e.label+": "+e.formattedValue||e.formattedValue;let t=e.dataset.label||"";t&&(t+=": ");const s=e.formattedValue;return Ue(s)||(t+=s),t},labelColor(e){const t=e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);return{borderColor:t.borderColor,backgroundColor:t.backgroundColor,borderWidth:t.borderWidth,borderDash:t.borderDash,borderDashOffset:t.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(e){const t=e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);return{pointStyle:t.pointStyle,rotation:t.rotation}},afterLabel:We,afterBody:We,beforeFooter:We,footer:We,afterFooter:We};function Ho(e,t,s,a){const i=e[t].call(s,a);return void 0===i?Ro[t].call(s,a):i}class _o extends ji{static positioners=Do;constructor(e){super(),this.opacity=0,this._active=[],this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.chart=e.chart,this.options=e.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(e){this.options=e,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const e=this._cachedAnimations;if(e)return e;const t=this.chart,s=this.options.setContext(this.getContext()),a=s.enabled&&t.options.animation&&s.animations,i=new Ia(this.chart,a);return a._cacheable&&(this._cachedAnimations=Object.freeze(i)),i}getContext(){return this.$context||(this.$context=(this,Rs(this.chart.getContext(),{tooltip:this,tooltipItems:this._tooltipItems,type:"tooltip"})))}getTitle(e,t){const{callbacks:s}=t,a=Ho(s,"beforeTitle",this,e),i=Ho(s,"title",this,e),r=Ho(s,"afterTitle",this,e);let o=[];return o=Ao(o,Bo(a)),o=Ao(o,Bo(i)),o=Ao(o,Bo(r)),o}getBeforeBody(e,t){return Io(Ho(t.callbacks,"beforeBody",this,e))}getBody(e,t){const{callbacks:s}=t,a=[];return Qe(e,(e=>{const t={before:[],lines:[],after:[]},i=zo(s,e);Ao(t.before,Bo(Ho(i,"beforeLabel",this,e))),Ao(t.lines,Ho(i,"label",this,e)),Ao(t.after,Bo(Ho(i,"afterLabel",this,e))),a.push(t)})),a}getAfterBody(e,t){return Io(Ho(t.callbacks,"afterBody",this,e))}getFooter(e,t){const{callbacks:s}=t,a=Ho(s,"beforeFooter",this,e),i=Ho(s,"footer",this,e),r=Ho(s,"afterFooter",this,e);let o=[];return o=Ao(o,Bo(a)),o=Ao(o,Bo(i)),o=Ao(o,Bo(r)),o}_createItems(e){const t=this._active,s=this.chart.data,a=[],i=[],r=[];let o,n,l=[];for(o=0,n=t.length;o<n;++o)l.push(Oo(this.chart,t[o]));return e.filter&&(l=l.filter(((t,a,i)=>e.filter(t,a,i,s)))),e.itemSort&&(l=l.sort(((t,a)=>e.itemSort(t,a,s)))),Qe(l,(t=>{const s=zo(e.callbacks,t);a.push(Ho(s,"labelColor",this,t)),i.push(Ho(s,"labelPointStyle",this,t)),r.push(Ho(s,"labelTextColor",this,t))})),this.labelColors=a,this.labelPointStyles=i,this.labelTextColors=r,this.dataPoints=l,l}update(e,t){const s=this.options.setContext(this.getContext()),a=this._active;let i,r=[];if(a.length){const e=Do[s.position].call(this,a,this._eventPosition);r=this._createItems(s),this.title=this.getTitle(r,s),this.beforeBody=this.getBeforeBody(r,s),this.body=this.getBody(r,s),this.afterBody=this.getAfterBody(r,s),this.footer=this.getFooter(r,s);const t=this._size=Co(this,s),o=Object.assign({},e,t),n=No(this.chart,s,o),l=Eo(s,o,n,this.chart);this.xAlign=n.xAlign,this.yAlign=n.yAlign,i={opacity:1,x:l.x,y:l.y,width:t.width,height:t.height,caretX:e.x,caretY:e.y}}else 0!==this.opacity&&(i={opacity:0});this._tooltipItems=r,this.$context=void 0,i&&this._resolveAnimations().update(this,i),e&&s.external&&s.external.call(this,{chart:this.chart,tooltip:this,replay:t})}drawCaret(e,t,s,a){const i=this.getCaretPosition(e,s,a);t.lineTo(i.x1,i.y1),t.lineTo(i.x2,i.y2),t.lineTo(i.x3,i.y3)}getCaretPosition(e,t,s){const{xAlign:a,yAlign:i}=this,{caretSize:r,cornerRadius:o}=s,{topLeft:n,topRight:l,bottomLeft:f,bottomRight:c}=Es(o),{x:u,y:p}=e,{width:g,height:d}=t;let h,m,y,v,b,P;return"center"===i?(b=p+d/2,"left"===a?(h=u,m=h-r,v=b+r,P=b-r):(h=u+g,m=h+r,v=b-r,P=b+r),y=h):(m="left"===a?u+Math.max(n,f)+r:"right"===a?u+g-Math.max(l,c)-r:this.caretX,"top"===i?(v=p,b=v-r,h=m-r,y=m+r):(v=p+d,b=v+r,h=m+r,y=m-r),P=v),{x1:h,x2:m,x3:y,y1:v,y2:b,y3:P}}drawTitle(e,t,s){const a=this.title,i=a.length;let r,o,n;if(i){const l=Sa(s.rtl,this.x,this.width);for(e.x=Go(this,s.titleAlign,s),t.textAlign=l.textAlign(s.titleAlign),t.textBaseline="middle",r=Is(s.titleFont),o=s.titleSpacing,t.fillStyle=s.titleColor,t.font=r.string,n=0;n<i;++n)t.fillText(a[n],l.x(e.x),e.y+r.lineHeight/2),e.y+=r.lineHeight+o,n+1===i&&(e.y+=s.titleMarginBottom-o)}}_drawColorBox(e,t,s,a,i){const r=this.labelColors[s],o=this.labelPointStyles[s],{boxHeight:n,boxWidth:l,boxPadding:f}=i,c=Is(i.bodyFont),u=Go(this,"left",i),p=a.x(u),g=n<c.lineHeight?(c.lineHeight-n)/2:0,d=t.y+g;if(i.usePointStyle){const t={radius:Math.min(l,n)/2,pointStyle:o.pointStyle,rotation:o.rotation,borderWidth:1},s=a.leftForLtr(p,l)+l/2,f=d+n/2;e.strokeStyle=i.multiKeyBackground,e.fillStyle=i.multiKeyBackground,ys(e,t,s,f),e.strokeStyle=r.borderColor,e.fillStyle=r.backgroundColor,ys(e,t,s,f)}else{e.lineWidth=Ke(r.borderWidth)?Math.max(...Object.values(r.borderWidth)):r.borderWidth||1,e.strokeStyle=r.borderColor,e.setLineDash(r.borderDash||[]),e.lineDashOffset=r.borderDashOffset||0;const t=a.leftForLtr(p,l-f),s=a.leftForLtr(a.xPlus(p,1),l-f-2),o=Es(r.borderRadius);Object.values(o).some((e=>0!==e))?(e.beginPath(),e.fillStyle=i.multiKeyBackground,Ds(e,{x:t,y:d,w:l,h:n,radius:o}),e.fill(),e.stroke(),e.fillStyle=r.backgroundColor,e.beginPath(),Ds(e,{x:s,y:d+1,w:l-2,h:n-2,radius:o}),e.fill()):(e.fillStyle=i.multiKeyBackground,e.fillRect(t,d,l,n),e.strokeRect(t,d,l,n),e.fillStyle=r.backgroundColor,e.fillRect(s,d+1,l-2,n-2))}e.fillStyle=this.labelTextColors[s]}drawBody(e,t,s){const{body:a}=this,{bodySpacing:i,bodyAlign:r,displayColors:o,boxHeight:n,boxWidth:l,boxPadding:f}=s,c=Is(s.bodyFont);let u=c.lineHeight,p=0;const g=Sa(s.rtl,this.x,this.width),d=function(s){t.fillText(s,g.x(e.x+p),e.y+u/2),e.y+=u+i},h=g.textAlign(r);let m,y,v,b,P,w,S;for(t.textAlign=r,t.textBaseline="middle",t.font=c.string,e.x=Go(this,h,s),t.fillStyle=s.bodyColor,Qe(this.beforeBody,d),p=o&&"right"!==h?"center"===r?l/2+f:l+2+f:0,b=0,w=a.length;b<w;++b){for(m=a[b],y=this.labelTextColors[b],t.fillStyle=y,Qe(m.before,d),v=m.lines,o&&v.length&&(this._drawColorBox(t,e,b,g,s),u=Math.max(c.lineHeight,n)),P=0,S=v.length;P<S;++P)d(v[P]),u=c.lineHeight;Qe(m.after,d)}p=0,u=c.lineHeight,Qe(this.afterBody,d),e.y-=i}drawFooter(e,t,s){const a=this.footer,i=a.length;let r,o;if(i){const n=Sa(s.rtl,this.x,this.width);for(e.x=Go(this,s.footerAlign,s),e.y+=s.footerMarginTop,t.textAlign=n.textAlign(s.footerAlign),t.textBaseline="middle",r=Is(s.footerFont),t.fillStyle=s.footerColor,t.font=r.string,o=0;o<i;++o)t.fillText(a[o],n.x(e.x),e.y+r.lineHeight/2),e.y+=r.lineHeight+s.footerSpacing}}drawBackground(e,t,s,a){const{xAlign:i,yAlign:r}=this,{x:o,y:n}=e,{width:l,height:f}=s,{topLeft:c,topRight:u,bottomLeft:p,bottomRight:g}=Es(a.cornerRadius);t.fillStyle=a.backgroundColor,t.strokeStyle=a.borderColor,t.lineWidth=a.borderWidth,t.beginPath(),t.moveTo(o+c,n),"top"===r&&this.drawCaret(e,t,s,a),t.lineTo(o+l-u,n),t.quadraticCurveTo(o+l,n,o+l,n+u),"center"===r&&"right"===i&&this.drawCaret(e,t,s,a),t.lineTo(o+l,n+f-g),t.quadraticCurveTo(o+l,n+f,o+l-g,n+f),"bottom"===r&&this.drawCaret(e,t,s,a),t.lineTo(o+p,n+f),t.quadraticCurveTo(o,n+f,o,n+f-p),"center"===r&&"left"===i&&this.drawCaret(e,t,s,a),t.lineTo(o,n+c),t.quadraticCurveTo(o,n,o+c,n),t.closePath(),t.fill(),a.borderWidth>0&&t.stroke()}_updateAnimationTarget(e){const t=this.chart,s=this.$animations,a=s&&s.x,i=s&&s.y;if(a||i){const s=Do[e.position].call(this,this._active,this._eventPosition);if(!s)return;const r=this._size=Co(this,e),o=Object.assign({},s,this._size),n=No(t,e,o),l=Eo(e,o,n,t);a._to===l.x&&i._to===l.y||(this.xAlign=n.xAlign,this.yAlign=n.yAlign,this.width=r.width,this.height=r.height,this.caretX=s.x,this.caretY=s.y,this._resolveAnimations().update(this,l))}}_willRender(){return!!this.opacity}draw(e){const t=this.options.setContext(this.getContext());let s=this.opacity;if(!s)return;this._updateAnimationTarget(t);const a={width:this.width,height:this.height},i={x:this.x,y:this.y};s=Math.abs(s)<.001?0:s;const r=Gs(t.padding),o=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;t.enabled&&o&&(e.save(),e.globalAlpha=s,this.drawBackground(i,e,a,t),ka(e,t.textDirection),i.y+=r.top,this.drawTitle(i,e,t),this.drawBody(i,e,t),this.drawFooter(i,e,t),Ta(e,t.textDirection),e.restore())}getActiveElements(){return this._active||[]}setActiveElements(e,t){const s=this._active,a=e.map((({datasetIndex:e,index:t})=>{const s=this.chart.getDatasetMeta(e);if(!s)throw new Error("Cannot find a dataset at index "+e);return{datasetIndex:e,element:s.data[t],index:t}})),i=!Xe(s,a),r=this._positionChanged(a,t);(i||r)&&(this._active=a,this._eventPosition=t,this._ignoreReplayEvents=!0,this.update(!0))}handleEvent(e,t,s=!0){if(t&&this._ignoreReplayEvents)return!1;this._ignoreReplayEvents=!1;const a=this.options,i=this._active||[],r=this._getActiveElements(e,i,t,s),o=this._positionChanged(r,e),n=t||!Xe(r,i)||o;return n&&(this._active=r,(a.enabled||a.external)&&(this._eventPosition={x:e.x,y:e.y},this.update(!0,t))),n}_getActiveElements(e,t,s,a){const i=this.options;if("mouseout"===e.type)return[];if(!a)return t;const r=this.chart.getElementsAtEventForMode(e,i.mode,i,s);return i.reverse&&r.reverse(),r}_positionChanged(e,t){const{caretX:s,caretY:a,options:i}=this,r=Do[i.position].call(this,e,t);return!1!==r&&(s!==r.x||a!==r.y)}}var Lo={id:"tooltip",_element:_o,positioners:Do,afterInit(e,t,s){s&&(e.tooltip=new _o({chart:e,options:s}))},beforeUpdate(e,t,s){e.tooltip&&e.tooltip.initialize(s)},reset(e,t,s){e.tooltip&&e.tooltip.initialize(s)},afterDraw(e){const t=e.tooltip;if(t&&t._willRender()){const s={tooltip:t};if(!1===e.notifyPlugins("beforeTooltipDraw",{...s,cancelable:!0}))return;t.draw(e.ctx),e.notifyPlugins("afterTooltipDraw",s)}},afterEvent(e,t){if(e.tooltip){const s=t.replay;e.tooltip.handleEvent(t.event,s,t.inChartArea)&&(t.changed=!0)}},defaults:{enabled:!0,external:null,position:"average",backgroundColor:"rgba(0,0,0,0.8)",titleColor:"#fff",titleFont:{weight:"bold"},titleSpacing:2,titleMarginBottom:6,titleAlign:"left",bodyColor:"#fff",bodySpacing:2,bodyFont:{},bodyAlign:"left",footerColor:"#fff",footerSpacing:2,footerMarginTop:6,footerFont:{weight:"bold"},footerAlign:"left",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(e,t)=>t.bodyFont.size,boxWidth:(e,t)=>t.bodyFont.size,multiKeyBackground:"#fff",displayColors:!0,boxPadding:0,borderColor:"rgba(0,0,0,0)",borderWidth:0,animation:{duration:400,easing:"easeOutQuart"},animations:{numbers:{type:"number",properties:["x","y","width","height","caretX","caretY"]},opacity:{easing:"linear",duration:200}},callbacks:Ro},defaultRoutes:{bodyFont:"font",footerFont:"font",titleFont:"font"},descriptors:{_scriptable:e=>"filter"!==e&&"itemSort"!==e&&"external"!==e,_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:"animation"}},additionalOptionScopes:["interaction"]},Wo=Object.freeze({__proto__:null,Colors:Qr,Decimation:to,Filler:vo,Legend:So,SubTitle:Mo,Title:To,Tooltip:Lo});function Zo(e){const t=this.getLabels();return e>=0&&e<t.length?t[e]:e}function Uo(e,t,{horizontal:s,minRotation:a}){const i=Mt(a),r=(s?Math.sin(i):Math.cos(i))||.001,o=.75*t*(""+e).length;return Math.min(t/r,o)}class jo extends tr{constructor(e){super(e),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(e,t){return Ue(e)||("number"==typeof e||e instanceof Number)&&!isFinite(+e)?null:+e}handleTickRangeOptions(){const{beginAtZero:e}=this.options,{minDefined:t,maxDefined:s}=this.getUserBounds();let{min:a,max:i}=this;const r=e=>a=t?a:e,o=e=>i=s?i:e;if(e){const e=wt(a),t=wt(i);e<0&&t<0?o(0):e>0&&t>0&&r(0)}if(a===i){let t=0===i?1:Math.abs(.05*i);o(i+t),e||r(a-t)}this.min=a,this.max=i}getTickLimit(){const e=this.options.ticks;let t,{maxTicksLimit:s,stepSize:a}=e;return a?(t=Math.ceil(this.max/a)-Math.floor(this.min/a)+1,t>1e3&&(console.warn(`scales.${this.id}.ticks.stepSize: ${a} would result generating up to ${t} ticks. Limiting to 1000.`),t=1e3)):(t=this.computeTickLimit(),s=s||11),s&&(t=Math.min(s,t)),t}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const e=this.options,t=e.ticks;let s=this.getTickLimit();s=Math.max(2,s);const a=function(e,t){const s=[],{bounds:a,step:i,min:r,max:o,precision:n,count:l,maxTicks:f,maxDigits:c,includeBounds:u}=e,p=i||1,g=f-1,{min:d,max:h}=t,m=!Ue(r),y=!Ue(o),v=!Ue(l),b=(h-d)/(c+1);let P,w,S,k,T=kt((h-d)/g/p)*p;if(T<1e-14&&!m&&!y)return[{value:d},{value:h}];k=Math.ceil(h/T)-Math.floor(d/T),k>g&&(T=kt(k*T/g/p)*p),Ue(n)||(P=Math.pow(10,n),T=Math.ceil(T*P)/P),"ticks"===a?(w=Math.floor(d/T)*T,S=Math.ceil(h/T)*T):(w=d,S=h),m&&y&&i&&function(e,t){const s=Math.round(e);return s-t<=e&&s+t>=e}((o-r)/i,T/1e3)?(k=Math.round(Math.min((o-r)/T,f)),T=(o-r)/k,w=r,S=o):v?(w=m?r:w,S=y?o:S,k=l-1,T=(S-w)/k):(k=(S-w)/T,k=St(k,Math.round(k),T/1e3)?Math.round(k):Math.ceil(k));const x=Math.max(At(T),At(w));P=Math.pow(10,Ue(n)?x:n),w=Math.round(w*P)/P,S=Math.round(S*P)/P;let M=0;for(m&&(u&&w!==r?(s.push({value:r}),w<r&&M++,St(Math.round((w+M*T)*P)/P,r,Uo(r,b,e))&&M++):w<r&&M++);M<k;++M)s.push({value:Math.round((w+M*T)*P)/P});return y&&u&&S!==o?s.length&&St(s[s.length-1].value,o,Uo(o,b,e))?s[s.length-1].value=o:s.push({value:o}):y&&S!==o||s.push({value:S}),s}({maxTicks:s,bounds:e.bounds,min:e.min,max:e.max,precision:t.precision,step:t.stepSize,count:t.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:t.minRotation||0,includeBounds:!1!==t.includeBounds},this._range||this);return"ticks"===e.bounds&&xt(a,this,"value"),e.reverse?(a.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),a}configure(){const e=this.ticks;let t=this.min,s=this.max;if(super.configure(),this.options.offset&&e.length){const a=(s-t)/Math.max(e.length-1,1)/2;t-=a,s+=a}this._startValue=t,this._endValue=s,this._valueRange=s-t}getLabelForValue(e){return is(e,this.chart.options.locale,this.options.ticks.format)}}class Ko extends jo{static id="linear";static defaults={ticks:{callback:os.formatters.numeric}};determineDataLimits(){const{min:e,max:t}=this.getMinMax(!0);this.min=Ve(e)?e:0,this.max=Ve(t)?t:1,this.handleTickRangeOptions()}computeTickLimit(){const e=this.isHorizontal(),t=e?this.width:this.height,s=Mt(this.options.ticks.minRotation),a=(e?Math.sin(s):Math.cos(s))||.001,i=this._resolveTickFontOptions(0);return Math.ceil(t/Math.min(40,i.lineHeight/a))}getPixelForValue(e){return null===e?NaN:this.getPixelForDecimal((e-this._startValue)/this._valueRange)}getValueForPixel(e){return this._startValue+this.getDecimalForPixel(e)*this._valueRange}}const Vo=e=>Math.floor(Pt(e)),qo=(e,t)=>Math.pow(10,Vo(e)+t);function $o(e){return 1==e/Math.pow(10,Vo(e))}function Yo(e,t,s){const a=Math.pow(10,s),i=Math.floor(e/a);return Math.ceil(t/a)-i}class Jo extends tr{static id="logarithmic";static defaults={ticks:{callback:os.formatters.logarithmic,major:{enabled:!0}}};constructor(e){super(e),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(e,t){const s=jo.prototype.parse.apply(this,[e,t]);if(0!==s)return Ve(s)&&s>0?s:null;this._zero=!0}determineDataLimits(){const{min:e,max:t}=this.getMinMax(!0);this.min=Ve(e)?Math.max(0,e):null,this.max=Ve(t)?Math.max(0,t):null,this.options.beginAtZero&&(this._zero=!0),this._zero&&this.min!==this._suggestedMin&&!Ve(this._userMin)&&(this.min=e===qo(this.min,0)?qo(this.min,-1):qo(this.min,0)),this.handleTickRangeOptions()}handleTickRangeOptions(){const{minDefined:e,maxDefined:t}=this.getUserBounds();let s=this.min,a=this.max;const i=t=>s=e?s:t,r=e=>a=t?a:e;s===a&&(s<=0?(i(1),r(10)):(i(qo(s,-1)),r(qo(a,1)))),s<=0&&i(qo(a,-1)),a<=0&&r(qo(s,1)),this.min=s,this.max=a}buildTicks(){const e=this.options,t=function(e,{min:t,max:s}){t=qe(e.min,t);const a=[],i=Vo(t);let r=function(e,t){let s=Vo(t-e);for(;Yo(e,t,s)>10;)s++;for(;Yo(e,t,s)<10;)s--;return Math.min(s,Vo(e))}(t,s),o=r<0?Math.pow(10,Math.abs(r)):1;const n=Math.pow(10,r),l=i>r?Math.pow(10,i):0,f=Math.round((t-l)*o)/o,c=Math.floor((t-l)/n/10)*n*10;let u=Math.floor((f-c)/Math.pow(10,r)),p=qe(e.min,Math.round((l+c+u*Math.pow(10,r))*o)/o);for(;p<s;)a.push({value:p,major:$o(p),significand:u}),u>=10?u=u<15?15:20:u++,u>=20&&(r++,u=2,o=r>=0?1:o),p=Math.round((l+c+u*Math.pow(10,r))*o)/o;const g=qe(e.max,p);return a.push({value:g,major:$o(g),significand:u}),a}({min:this._userMin,max:this._userMax},this);return"ticks"===e.bounds&&xt(t,this,"value"),e.reverse?(t.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),t}getLabelForValue(e){return void 0===e?"0":is(e,this.chart.options.locale,this.options.ticks.format)}configure(){const e=this.min;super.configure(),this._startValue=Pt(e),this._valueRange=Pt(this.max)-Pt(e)}getPixelForValue(e){return void 0!==e&&0!==e||(e=this.min),null===e||isNaN(e)?NaN:this.getPixelForDecimal(e===this.min?0:(Pt(e)-this._startValue)/this._valueRange)}getValueForPixel(e){const t=this.getDecimalForPixel(e);return Math.pow(10,this._startValue+t*this._valueRange)}}function Qo(e){const t=e.ticks;if(t.display&&e.display){const e=Gs(t.backdropPadding);return $e(t.font&&t.font.size,ps.font.size)+e.height}return 0}function Xo(e,t,s,a,i){return e===a||e===i?{start:t-s/2,end:t+s/2}:e<a||e>i?{start:t-s,end:t}:{start:t,end:t+s}}function en(e,t,s,a,i){const r=Math.abs(Math.sin(s)),o=Math.abs(Math.cos(s));let n=0,l=0;a.start<t.l?(n=(t.l-a.start)/r,e.l=Math.min(e.l,t.l-n)):a.end>t.r&&(n=(a.end-t.r)/r,e.r=Math.max(e.r,t.r+n)),i.start<t.t?(l=(t.t-i.start)/o,e.t=Math.min(e.t,t.t-l)):i.end>t.b&&(l=(i.end-t.b)/o,e.b=Math.max(e.b,t.b+l))}function tn(e){return 0===e||180===e?"center":e<180?"left":"right"}function sn(e,t,s){return 90===s||270===s?e-=t/2:(s>270||s<90)&&(e-=t),e}function an(e,t,s,a){const{ctx:i}=e;if(s)i.arc(e.xCenter,e.yCenter,t,0,gt);else{let s=e.getPointPosition(0,t);i.moveTo(s.x,s.y);for(let r=1;r<a;r++)s=e.getPointPosition(r,t),i.lineTo(s.x,s.y)}}class rn extends jo{static id="radialLinear";static defaults={display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,callback:os.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback:e=>e,padding:5,centerPointLabels:!1}};static defaultRoutes={"angleLines.color":"borderColor","pointLabels.color":"color","ticks.color":"color"};static descriptors={angleLines:{_fallback:"grid"}};constructor(e){super(e),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const e=this._padding=Gs(Qo(this.options)/2),t=this.width=this.maxWidth-e.width,s=this.height=this.maxHeight-e.height;this.xCenter=Math.floor(this.left+t/2+e.left),this.yCenter=Math.floor(this.top+s/2+e.top),this.drawingArea=Math.floor(Math.min(t,s)/2)}determineDataLimits(){const{min:e,max:t}=this.getMinMax(!1);this.min=Ve(e)&&!isNaN(e)?e:0,this.max=Ve(t)&&!isNaN(t)?t:0,this.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/Qo(this.options))}generateTickLabels(e){jo.prototype.generateTickLabels.call(this,e),this._pointLabels=this.getLabels().map(((e,t)=>{const s=Je(this.options.pointLabels.callback,[e,t],this);return s||0===s?s:""})).filter(((e,t)=>this.chart.getDataVisibility(t)))}fit(){const e=this.options;e.display&&e.pointLabels.display?function(e){const t={l:e.left+e._padding.left,r:e.right-e._padding.right,t:e.top+e._padding.top,b:e.bottom-e._padding.bottom},s=Object.assign({},t),a=[],i=[],r=e._pointLabels.length,o=e.options.pointLabels,n=o.centerPointLabels?pt/r:0;for(let u=0;u<r;u++){const r=o.setContext(e.getPointLabelContext(u));i[u]=r.padding;const p=e.getPointPosition(u,e.drawingArea+i[u],n),g=Is(r.font),d=(l=e.ctx,f=g,c=je(c=e._pointLabels[u])?c:[c],{w:ds(l,f.string,c),h:c.length*f.lineHeight});a[u]=d;const h=Ft(e.getIndexAngle(u)+n),m=Math.round(Dt(h));en(s,t,h,Xo(m,p.x,d.w,0,180),Xo(m,p.y,d.h,90,270))}var l,f,c;e.setCenterPoint(t.l-s.l,s.r-t.r,t.t-s.t,s.b-t.b),e._pointLabelItems=function(e,t,s){const a=[],i=e._pointLabels.length,r=e.options,o=Qo(r)/2,n=e.drawingArea,l=r.pointLabels.centerPointLabels?pt/i:0;for(let r=0;r<i;r++){const i=e.getPointPosition(r,n+o+s[r],l),p=Math.round(Dt(Ft(i.angle+yt))),g=t[r],d=sn(i.y,g.h,p),h=tn(p),m=(f=i.x,c=g.w,"right"===(u=h)?f-=c:"center"===u&&(f-=c/2),f);a.push({x:i.x,y:d,textAlign:h,left:m,top:d,right:m+g.w,bottom:d+g.h})}var f,c,u;return a}(e,a,i)}(this):this.setCenterPoint(0,0,0,0)}setCenterPoint(e,t,s,a){this.xCenter+=Math.floor((e-t)/2),this.yCenter+=Math.floor((s-a)/2),this.drawingArea-=Math.min(this.drawingArea/2,Math.max(e,t,s,a))}getIndexAngle(e){return Ft(e*(gt/(this._pointLabels.length||1))+Mt(this.options.startAngle||0))}getDistanceFromCenterForValue(e){if(Ue(e))return NaN;const t=this.drawingArea/(this.max-this.min);return this.options.reverse?(this.max-e)*t:(e-this.min)*t}getValueForDistanceFromCenter(e){if(Ue(e))return NaN;const t=e/(this.drawingArea/(this.max-this.min));return this.options.reverse?this.max-t:this.min+t}getPointLabelContext(e){const t=this._pointLabels||[];if(e>=0&&e<t.length){const s=t[e];return function(e,t,s){return Rs(e,{label:s,index:t,type:"pointLabel"})}(this.getContext(),e,s)}}getPointPosition(e,t,s=0){const a=this.getIndexAngle(e)-yt+s;return{x:Math.cos(a)*t+this.xCenter,y:Math.sin(a)*t+this.yCenter,angle:a}}getPointPositionForValue(e,t){return this.getPointPosition(e,this.getDistanceFromCenterForValue(t))}getBasePosition(e){return this.getPointPositionForValue(e||0,this.getBaseValue())}getPointLabelPosition(e){const{left:t,top:s,right:a,bottom:i}=this._pointLabelItems[e];return{left:t,top:s,right:a,bottom:i}}drawBackground(){const{backgroundColor:e,grid:{circular:t}}=this.options;if(e){const s=this.ctx;s.save(),s.beginPath(),an(this,this.getDistanceFromCenterForValue(this._endValue),t,this._pointLabels.length),s.closePath(),s.fillStyle=e,s.fill(),s.restore()}}drawGrid(){const e=this.ctx,t=this.options,{angleLines:s,grid:a,border:i}=t,r=this._pointLabels.length;let o,n,l;if(t.pointLabels.display&&function(e,t){const{ctx:s,options:{pointLabels:a}}=e;for(let i=t-1;i>=0;i--){const t=a.setContext(e.getPointLabelContext(i)),r=Is(t.font),{x:o,y:n,textAlign:l,left:f,top:c,right:u,bottom:p}=e._pointLabelItems[i],{backdropColor:g}=t;if(!Ue(g)){const e=Es(t.borderRadius),a=Gs(t.backdropPadding);s.fillStyle=g;const i=f-a.left,r=c-a.top,o=u-f+a.width,n=p-c+a.height;Object.values(e).some((e=>0!==e))?(s.beginPath(),Ds(s,{x:i,y:r,w:o,h:n,radius:e}),s.fill()):s.fillRect(i,r,o,n)}Ts(s,e._pointLabels[i],o,n+r.lineHeight/2,r,{color:t.color,textAlign:l,textBaseline:"middle"})}}(this,r),a.display&&this.ticks.forEach(((e,t)=>{if(0!==t){n=this.getDistanceFromCenterForValue(e.value);const s=this.getContext(t),o=a.setContext(s),l=i.setContext(s);!function(e,t,s,a,i){const r=e.ctx,o=t.circular,{color:n,lineWidth:l}=t;!o&&!a||!n||!l||s<0||(r.save(),r.strokeStyle=n,r.lineWidth=l,r.setLineDash(i.dash),r.lineDashOffset=i.dashOffset,r.beginPath(),an(e,s,o,a),r.closePath(),r.stroke(),r.restore())}(this,o,n,r,l)}})),s.display){for(e.save(),o=r-1;o>=0;o--){const a=s.setContext(this.getPointLabelContext(o)),{color:i,lineWidth:r}=a;r&&i&&(e.lineWidth=r,e.strokeStyle=i,e.setLineDash(a.borderDash),e.lineDashOffset=a.borderDashOffset,n=this.getDistanceFromCenterForValue(t.ticks.reverse?this.min:this.max),l=this.getPointPosition(o,n),e.beginPath(),e.moveTo(this.xCenter,this.yCenter),e.lineTo(l.x,l.y),e.stroke())}e.restore()}}drawBorder(){}drawLabels(){const e=this.ctx,t=this.options,s=t.ticks;if(!s.display)return;const a=this.getIndexAngle(0);let i,r;e.save(),e.translate(this.xCenter,this.yCenter),e.rotate(a),e.textAlign="center",e.textBaseline="middle",this.ticks.forEach(((a,o)=>{if(0===o&&!t.reverse)return;const n=s.setContext(this.getContext(o)),l=Is(n.font);if(i=this.getDistanceFromCenterForValue(this.ticks[o].value),n.showLabelBackdrop){e.font=l.string,r=e.measureText(a.label).width,e.fillStyle=n.backdropColor;const t=Gs(n.backdropPadding);e.fillRect(-r/2-t.left,-i-l.size/2-t.top,r+t.width,l.size+t.height)}Ts(e,a.label,0,-i,l,{color:n.color})})),e.restore()}drawTitle(){}}const on={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},nn=Object.keys(on);function ln(e,t){return e-t}function fn(e,t){if(Ue(t))return null;const s=e._adapter,{parser:a,round:i,isoWeekday:r}=e._parseOpts;let o=t;return"function"==typeof a&&(o=a(o)),Ve(o)||(o="string"==typeof a?s.parse(o,a):s.parse(o)),null===o?null:(i&&(o="week"!==i||!Tt(r)&&!0!==r?s.startOf(o,i):s.startOf(o,"isoWeek",r)),+o)}function cn(e,t,s,a){const i=nn.length;for(let r=nn.indexOf(e);r<i-1;++r){const e=on[nn[r]],i=e.steps?e.steps:Number.MAX_SAFE_INTEGER;if(e.common&&Math.ceil((s-t)/(i*e.size))<=a)return nn[r]}return nn[i-1]}function un(e,t,s){if(s){if(s.length){const{lo:a,hi:i}=It(s,t);e[s[a]>=t?s[a]:s[i]]=!0}}else e[t]=!0}function pn(e,t,s){const a=[],i={},r=t.length;let o,n;for(o=0;o<r;++o)n=t[o],i[n]=o,a.push({value:n,major:!1});return 0!==r&&s?function(e,t,s,a){const i=e._adapter,r=+i.startOf(t[0].value,a),o=t[t.length-1].value;let n,l;for(n=r;n<=o;n=+i.add(n,1,a))l=s[n],l>=0&&(t[l].major=!0);return t}(e,a,i,s):a}class gn extends tr{static id="time";static defaults={bounds:"data",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{source:"auto",callback:!1,major:{enabled:!1}}};constructor(e){super(e),this._cache={data:[],labels:[],all:[]},this._unit="day",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(e,t={}){const s=e.time||(e.time={}),a=this._adapter=new fi(e.adapters.date);a.init(t),it(s.displayFormats,a.formats()),this._parseOpts={parser:s.parser,round:s.round,isoWeekday:s.isoWeekday},super.init(e),this._normalized=t.normalized}parse(e,t){return void 0===e?null:fn(this,e)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const e=this.options,t=this._adapter,s=e.time.unit||"day";let{min:a,max:i,minDefined:r,maxDefined:o}=this.getUserBounds();function n(e){r||isNaN(e.min)||(a=Math.min(a,e.min)),o||isNaN(e.max)||(i=Math.max(i,e.max))}r&&o||(n(this._getLabelBounds()),"ticks"===e.bounds&&"labels"===e.ticks.source||n(this.getMinMax(!1))),a=Ve(a)&&!isNaN(a)?a:+t.startOf(Date.now(),s),i=Ve(i)&&!isNaN(i)?i:+t.endOf(Date.now(),s)+1,this.min=Math.min(a,i-1),this.max=Math.max(a+1,i)}_getLabelBounds(){const e=this.getLabelTimestamps();let t=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY;return e.length&&(t=e[0],s=e[e.length-1]),{min:t,max:s}}buildTicks(){const e=this.options,t=e.time,s=e.ticks,a="labels"===s.source?this.getLabelTimestamps():this._generate();"ticks"===e.bounds&&a.length&&(this.min=this._userMin||a[0],this.max=this._userMax||a[a.length-1]);const i=this.min,r=function(e,t,s){let a=0,i=e.length;for(;a<i&&e[a]<t;)a++;for(;i>a&&e[i-1]>s;)i--;return a>0||i<e.length?e.slice(a,i):e}(a,i,this.max);return this._unit=t.unit||(s.autoSkip?cn(t.minUnit,this.min,this.max,this._getLabelCapacity(i)):function(e,t,s,a,i){for(let r=nn.length-1;r>=nn.indexOf(s);r--){const s=nn[r];if(on[s].common&&e._adapter.diff(i,a,s)>=t-1)return s}return nn[s?nn.indexOf(s):0]}(this,r.length,t.minUnit,this.min,this.max)),this._majorUnit=s.major.enabled&&"year"!==this._unit?function(e){for(let t=nn.indexOf(e)+1,s=nn.length;t<s;++t)if(on[nn[t]].common)return nn[t]}(this._unit):void 0,this.initOffsets(a),e.reverse&&r.reverse(),pn(this,r,this._majorUnit)}afterAutoSkip(){this.options.offsetAfterAutoskip&&this.initOffsets(this.ticks.map((e=>+e.value)))}initOffsets(e=[]){let t,s,a=0,i=0;this.options.offset&&e.length&&(t=this.getDecimalForValue(e[0]),a=1===e.length?1-t:(this.getDecimalForValue(e[1])-t)/2,s=this.getDecimalForValue(e[e.length-1]),i=1===e.length?s:(s-this.getDecimalForValue(e[e.length-2]))/2);const r=e.length<3?.5:.25;a=Et(a,0,r),i=Et(i,0,r),this._offsets={start:a,end:i,factor:1/(a+1+i)}}_generate(){const e=this._adapter,t=this.min,s=this.max,a=this.options,i=a.time,r=i.unit||cn(i.minUnit,t,s,this._getLabelCapacity(t)),o=$e(a.ticks.stepSize,1),n="week"===r&&i.isoWeekday,l=Tt(n)||!0===n,f={};let c,u,p=t;if(l&&(p=+e.startOf(p,"isoWeek",n)),p=+e.startOf(p,l?"day":r),e.diff(s,t,r)>1e5*o)throw new Error(t+" and "+s+" are too far apart with stepSize of "+o+" "+r);const g="data"===a.ticks.source&&this.getDataTimestamps();for(c=p,u=0;c<s;c=+e.add(c,o,r),u++)un(f,c,g);return c!==s&&"ticks"!==a.bounds&&1!==u||un(f,c,g),Object.keys(f).sort(((e,t)=>e-t)).map((e=>+e))}getLabelForValue(e){const t=this._adapter,s=this.options.time;return s.tooltipFormat?t.format(e,s.tooltipFormat):t.format(e,s.displayFormats.datetime)}format(e,t){const s=this.options.time.displayFormats,a=this._unit,i=t||s[a];return this._adapter.format(e,i)}_tickFormatFunction(e,t,s,a){const i=this.options,r=i.ticks.callback;if(r)return Je(r,[e,t,s],this);const o=i.time.displayFormats,n=this._unit,l=this._majorUnit,f=n&&o[n],c=l&&o[l],u=s[t],p=l&&c&&u&&u.major;return this._adapter.format(e,a||(p?c:f))}generateTickLabels(e){let t,s,a;for(t=0,s=e.length;t<s;++t)a=e[t],a.label=this._tickFormatFunction(a.value,t,e)}getDecimalForValue(e){return null===e?NaN:(e-this.min)/(this.max-this.min)}getPixelForValue(e){const t=this._offsets,s=this.getDecimalForValue(e);return this.getPixelForDecimal((t.start+s)*t.factor)}getValueForPixel(e){const t=this._offsets,s=this.getDecimalForPixel(e)/t.factor-t.end;return this.min+s*(this.max-this.min)}_getLabelSize(e){const t=this.options.ticks,s=this.ctx.measureText(e).width,a=Mt(this.isHorizontal()?t.maxRotation:t.minRotation),i=Math.cos(a),r=Math.sin(a),o=this._resolveTickFontOptions(0).size;return{w:s*i+o*r,h:s*r+o*i}}_getLabelCapacity(e){const t=this.options.time,s=t.displayFormats,a=s[t.unit]||s.millisecond,i=this._tickFormatFunction(e,0,pn(this,[e],this._majorUnit),a),r=this._getLabelSize(i),o=Math.floor(this.isHorizontal()?this.width/r.w:this.height/r.h)-1;return o>0?o:1}getDataTimestamps(){let e,t,s=this._cache.data||[];if(s.length)return s;const a=this.getMatchingVisibleMetas();if(this._normalized&&a.length)return this._cache.data=a[0].controller.getAllParsedValues(this);for(e=0,t=a.length;e<t;++e)s=s.concat(a[e].controller.getAllParsedValues(this));return this._cache.data=this.normalize(s)}getLabelTimestamps(){const e=this._cache.labels||[];let t,s;if(e.length)return e;const a=this.getLabels();for(t=0,s=a.length;t<s;++t)e.push(fn(this,a[t]));return this._cache.labels=this._normalized?e:this.normalize(e)}normalize(e){return Lt(e.sort(ln))}}function dn(e,t,s){let a,i,r,o,n=0,l=e.length-1;s?(t>=e[n].pos&&t<=e[l].pos&&({lo:n,hi:l}=zt(e,"pos",t)),({pos:a,time:r}=e[n]),({pos:i,time:o}=e[l])):(t>=e[n].time&&t<=e[l].time&&({lo:n,hi:l}=zt(e,"time",t)),({time:a,pos:r}=e[n]),({time:i,pos:o}=e[l]));const f=i-a;return f?r+(o-r)*(t-a)/f:r}var hn=Object.freeze({__proto__:null,CategoryScale:class extends tr{static id="category";static defaults={ticks:{callback:Zo}};constructor(e){super(e),this._startValue=void 0,this._valueRange=0,this._addedLabels=[]}init(e){const t=this._addedLabels;if(t.length){const e=this.getLabels();for(const{index:s,label:a}of t)e[s]===a&&e.splice(s,1);this._addedLabels=[]}super.init(e)}parse(e,t){if(Ue(e))return null;const s=this.getLabels();return t=isFinite(t)&&s[t]===e?t:function(e,t,s,a){const i=e.indexOf(t);return-1===i?((e,t,s,a)=>("string"==typeof t?(s=e.push(t)-1,a.unshift({index:s,label:t})):isNaN(t)&&(s=null),s))(e,t,s,a):i!==e.lastIndexOf(t)?s:i}(s,e,$e(t,e),this._addedLabels),((e,t)=>null===e?null:Et(Math.round(e),0,t))(t,s.length-1)}determineDataLimits(){const{minDefined:e,maxDefined:t}=this.getUserBounds();let{min:s,max:a}=this.getMinMax(!0);"ticks"===this.options.bounds&&(e||(s=0),t||(a=this.getLabels().length-1)),this.min=s,this.max=a}buildTicks(){const e=this.min,t=this.max,s=this.options.offset,a=[];let i=this.getLabels();i=0===e&&t===i.length-1?i:i.slice(e,t+1),this._valueRange=Math.max(i.length-(s?0:1),1),this._startValue=this.min-(s?.5:0);for(let s=e;s<=t;s++)a.push({value:s});return a}getLabelForValue(e){return Zo.call(this,e)}configure(){super.configure(),this.isHorizontal()||(this._reversePixels=!this._reversePixels)}getPixelForValue(e){return"number"!=typeof e&&(e=this.parse(e)),null===e?NaN:this.getPixelForDecimal((e-this._startValue)/this._valueRange)}getPixelForTick(e){const t=this.ticks;return e<0||e>t.length-1?null:this.getPixelForValue(t[e].value)}getValueForPixel(e){return Math.round(this._startValue+this.getDecimalForPixel(e)*this._valueRange)}getBasePixel(){return this.bottom}},LinearScale:Ko,LogarithmicScale:Jo,RadialLinearScale:rn,TimeScale:gn,TimeSeriesScale:class extends gn{static id="timeseries";static defaults=gn.defaults;constructor(e){super(e),this._table=[],this._minPos=void 0,this._tableRange=void 0}initOffsets(){const e=this._getTimestampsForTable(),t=this._table=this.buildLookupTable(e);this._minPos=dn(t,this.min),this._tableRange=dn(t,this.max)-this._minPos,super.initOffsets(e)}buildLookupTable(e){const{min:t,max:s}=this,a=[],i=[];let r,o,n,l,f;for(r=0,o=e.length;r<o;++r)l=e[r],l>=t&&l<=s&&a.push(l);if(a.length<2)return[{time:t,pos:0},{time:s,pos:1}];for(r=0,o=a.length;r<o;++r)f=a[r+1],n=a[r-1],l=a[r],Math.round((f+n)/2)!==l&&i.push({time:l,pos:r/(o-1)});return i}_getTimestampsForTable(){let e=this._cache.all||[];if(e.length)return e;const t=this.getDataTimestamps(),s=this.getLabelTimestamps();return e=t.length&&s.length?this.normalize(t.concat(s)):t.length?t:s,e=this._cache.all=e,e}getDecimalForValue(e){return(dn(this._table,e)-this._minPos)/this._tableRange}getValueForPixel(e){const t=this._offsets,s=this.getDecimalForPixel(e)/t.factor-t.end;return dn(this._table,s*this._tableRange+this._minPos,!0)}}});const mn=[oi,Kr,Wo,hn];Ar.register(...mn);const yn="label";function vn(e,t){"function"==typeof e?e(t):e&&(e.current=t)}function bn(e,t){e.labels=t}function Pn(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:yn;const a=[];e.datasets=t.map((t=>{const i=e.datasets.find((e=>e[s]===t[s]));return i&&t.data&&!a.includes(i)?(a.push(i),Object.assign(i,t),i):{...t}}))}function wn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:yn;const s={labels:[],datasets:[]};return bn(s,e.labels),Pn(s,e.datasets,t),s}function Sn(e,t){const{height:a=150,width:i=300,redraw:r=!1,datasetIdKey:o,type:n,data:l,options:f,plugins:c=[],fallbackContent:u,updateMode:p,...g}=e,d=(0,s.useRef)(null),h=(0,s.useRef)(),m=()=>{d.current&&(h.current=new Ar(d.current,{type:n,data:wn(l,o),options:f&&{...f},plugins:c}),vn(t,h.current))},y=()=>{vn(t,null),h.current&&(h.current.destroy(),h.current=null)};return(0,s.useEffect)((()=>{!r&&h.current&&f&&function(e,t){const s=e.options;s&&t&&Object.assign(s,t)}(h.current,f)}),[r,f]),(0,s.useEffect)((()=>{!r&&h.current&&bn(h.current.config.data,l.labels)}),[r,l.labels]),(0,s.useEffect)((()=>{!r&&h.current&&l.datasets&&Pn(h.current.config.data,l.datasets,o)}),[r,l.datasets]),(0,s.useEffect)((()=>{h.current&&(r?(y(),setTimeout(m)):h.current.update(p))}),[r,f,l.labels,l.datasets,p]),(0,s.useEffect)((()=>{h.current&&(y(),setTimeout(m))}),[n]),(0,s.useEffect)((()=>(m(),()=>y())),[]),s.createElement("canvas",Object.assign({ref:d,role:"img",height:a,width:i},g),u)}const kn=(0,s.forwardRef)(Sn);function Tn(e,t){return Ar.register(t),(0,s.forwardRef)(((t,a)=>s.createElement(kn,Object.assign({},t,{ref:a,type:e}))))}const xn=Tn("radar",ri);var Mn=o(3621);function Dn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return An(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?An(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function An(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}var Bn=140,On=15,Cn=["HP","Defense","Sp. Def","Speed","Sp. Atk.","Atack"],Fn=["hp","defense","specialD","speed","specialA","attack"],Nn={labels:Cn,datasets:[{data:[],backgroundColor:[],borderColor:[],pointRadius:6,pointHitRadius:10,pointHoverRadius:10}]},En={plugins:{title:{display:!1},legend:{display:!1},label:{color:"black"}},scale:{ticks:{beginAtZero:!0}},scales:{r:{display:!0,grid:{display:!0},ticks:{display:!1},max:155,min:25}},animation:{easing:"easeOutCirc"},startAngle:290,responsive:!0,maintainAspectRatio:!0};function Gn(e){var t,s,a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Bn;return(t=e>i?100:e<(arguments.length>2&&void 0!==arguments[2]?arguments[2]:On)?0:e/(i/100))<50?(s=255,a=Math.round(5.1*t)):(a=255,s=Math.round(510-5.1*t)),"#"+("000000"+(65536*s+256*a+0).toString(16)).slice(-6)}const In=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon}}),null)((function(e){var t=Dn((0,s.useState)(!1),2),a=(t[0],t[1],Dn((0,s.useState)({}),2)),i=(a[0],a[1],function(){for(var t=[],s=0;s<Fn.length;s++)t.push(e.currentPokemon.stats[Fn[s]]);Nn.datasets[0].data=t;for(var a=[],i=0;i<t.length;i++)a.push(Gn(t[i]));for(var r=0;r<Cn.length;r++);Nn.datasets[0].backgroundColor="rgba(111, 136, 97, 0.404)",Nn.datasets[0].borderColor="rgba(103, 129, 147, 0.757)",Nn.datasets[0].pointBackgroundColor=a;var o=Math.max.apply(Math,t),n=Math.max(Bn,1.1*o);console.log("maxStat: ",n),En.scales.r.max=n});return i(),(0,s.useEffect)((function(){i()}),[e.currentPokemon.stats]),s.createElement("div",{className:"stat-chart-"+e.id,id:"stat-chart-"+e.name+e.id},s.createElement(xn,{data:Nn,options:En}))}));function zn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Rn(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?Rn(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Rn(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}var Hn=165,_n=40;function Ln(e){var t,s,a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Hn;return(t=e>i?100:e<(arguments.length>2&&void 0!==arguments[2]?arguments[2]:_n)?0:e/(i/100))<50?(s=255,a=Math.round(5.1*t)):(a=255,s=Math.round(510-5.1*t)),"#"+("000000"+(65536*s+256*a+0).toString(16)).slice(-6)}var Wn=["HP","Atack","Defense","Sp. Atk.","Sp. Def","Speed"],Zn={labels:Wn,datasets:[{data:[],backgroundColor:[],barPercentage:1,categoryPercentage:.6}]},Un={type:"bar",data:Zn,options:{indexAxis:"y",maintainAspectRatio:!1,responsive:!0,plugins:{title:{display:!1,text:"BASE STATS",color:"black",font:{size:18}},legend:{display:!1},label:{color:"black"}},scales:{x:{grid:{display:!1},max:Hn,ticks:{display:!1},display:!1},y:{grid:{display:!1},scaleLabel:{display:!1}}}}};const jn=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon}}),null)((function(e){var t,a=zn((0,s.useState)(!1),2),i=(a[0],a[1],zn((0,s.useState)({}),2));i[0],i[1],(0,s.useEffect)((function(){"current-pokemon-chart"===e.id?(function(){var t=[],s=[],a=0;for(var i in e.currentPokemon.stats)t.push(e.currentPokemon.stats[i]),s.push(Wn[a]+" "+e.currentPokemon.stats[i].toString()),a++;Zn.datasets[0].data=t,Zn.labels=s,Un.options.scales.x.max=Hn;for(var r=[],o=0;o<t.length;o++)r.push(Ln(t[o]));Zn.datasets[0].backgroundColor=r;for(var n=0;n<Wn.length;n++);}(),r(),t=new Ar(document.getElementById(e.id),Un)):"calculated-stat-chart"===e.id&&(function(){var t=[],s=[],a=0;for(var i in e.currentPokemon.stats)t.push(e.currentPokemon.calculatedStats[a]),s.push(Wn[a]+" "),a++;Zn.datasets[0].data=t,Zn.labels=s,Un.options.scales.x.max=500;for(var r=[],o=0;o<t.length;o++)r.push(Ln(t[o],500,50));Zn.datasets[0].backgroundColor=r;for(var n=0;n<Wn.length;n++);}(),r(),t=new Ar(document.getElementById(e.id),Un))}),[e.currentPokemon.stats,e.currentPokemon.calculatedStats]);var r=function(){t&&t.destroy(),document.getElementById(e.id).remove();var s=document.createElement("canvas");s.setAttribute("id",e.id),document.getElementById("stat-chart-"+e.name+e.id).append(s)};return s.createElement("div",{className:"stat-chart-"+e.id,id:"stat-chart-"+e.name+e.id},s.createElement("canvas",{id:e.id}))}));function Kn(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}var Vn=o(5226);function qn(e){var t,s,a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:maxStat,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:minStat;return(t=e>i?100:e<r?0:e/(i/100))<50?(s=255,a=Math.round(5.1*t)):(a=255,s=Math.round(510-5.1*t)),"#"+("000000"+(65536*s+256*a+0).toString(16)).slice(-6)}var $n=function(e){var t=[];return["hp","attack","defense","specialA","specialD","speed"].forEach((function(s){t.push(e[s])})),console.log("END OF STAT->OBJ ",t),t};const Yn=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon}}),(function(e){return{updateNature:function(t){return e(_.iq(t))},updateCalculatedStats:function(t,s,a,i){return e(_.mp(t,s,a,i))}}}))((function(e){var t,a,i=(t=(0,s.useState)([]),a=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(t,a)||function(e,t){if(e){if("string"==typeof e)return Kn(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?Kn(e,t):void 0}}(t,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=i[0],o=i[1],n=["Atk","Def","SpA","SpD","Spe"],l=function(t){var s=document.getElementById("remaining-Ev-value");Number(s.innerHTML)<0?s.style.color="red":s.style.color="black";var a=document.getElementById(t),i=["hp-slider","attack-slider","defense-slider","specialA-slider","specialD-slider","speed-slider"].indexOf(t);if(e.currentPokemon.remainingEv<=0&&a.value>e.currentPokemon.evs.array[i])return alert("exceeded total EV allowed"),void(s.style.color="red");for(var r=document.getElementsByClassName("slider"),o=[],n=0;n<r.length;n++){var l=r[n].value;o.push(l)}var f=$n(e.currentPokemon.stats),c=e.currentPokemon.ivs.array,u=Vn.getNatureValue(e.currentPokemon.nature),p=508-o.reduce((function(e,t){return Number(e)+Number(t)})),g=Vn.calAllStats(c,f,o,e.currentPokemon.level,u);e.updateCalculatedStats(o,c,p,g)};return(0,s.useEffect)((function(){!function(){console.log("inside populateNatures");var e=[];Vn.getNatureNames.forEach((function(t){for(var a=Vn.getNatureValue(t),i="",r=0;r<n.length;r++)1.1===a[r]&&(i+=" (+"+n[r]+", ");for(var o=0;o<n.length;o++).9===a[o]&&(i+="-"+n[o]+")");e.push(s.createElement("option",{value:t},t+i))})),o(e)}()}),[e.currentPokemon]),s.createElement("div",{className:"ev-browser-area"},s.createElement("div",{className:"dynamic-chart-container"},s.createElement(jn,{name:e.currentPokemon.pokemon,currentPokemon:e.currentPokemon,id:"calculated-stat-chart"}),s.createElement("div",{className:"calculated-stat-chart-labels"},s.createElement("h4",{style:{color:qn(e.currentPokemon.calculatedStats[0],500,50)}},e.currentPokemon.calculatedStats[0]),s.createElement("h4",{style:{color:qn(e.currentPokemon.calculatedStats[1],500,50)}},e.currentPokemon.calculatedStats[1]),s.createElement("h4",{style:{color:qn(e.currentPokemon.calculatedStats[2],500,50)}},e.currentPokemon.calculatedStats[2]),s.createElement("h4",{style:{color:qn(e.currentPokemon.calculatedStats[3],500,50)}},e.currentPokemon.calculatedStats[3]),s.createElement("h4",{style:{color:qn(e.currentPokemon.calculatedStats[4],500,50)}},e.currentPokemon.calculatedStats[4]),s.createElement("h4",{style:{color:qn(e.currentPokemon.calculatedStats[5],500,50)}},e.currentPokemon.calculatedStats[5]))),s.createElement("div",{className:"nature-container"},s.createElement("h4",null,"nature: "),s.createElement("select",{name:"",id:"nature-select",onChange:function(){return function(){console.log("inside selectNature");var t=document.getElementById("nature-select"),s=t.options[t.selectedIndex].value;e.updateNature(s);var a=$n(e.currentPokemon.stats),i=e.currentPokemon.ivs.array,r=e.currentPokemon.evs.array,o=Vn.getNatureValue(s);console.log(a,r,i,o);var n=Vn.calAllStats(i,a,r,e.currentPokemon.level,o);e.updateCalculatedStats(r,i,e.currentPokemon.remainingEv,n)}()}},s.createElement("option",{value:e.currentPokemon.nature},e.currentPokemon.nature),r)),s.createElement("div",{className:"remaining-ev-container"},s.createElement("h4",null,"remaining EVs:"),s.createElement("h5",{id:"remaining-Ev-value"},e.currentPokemon.remainingEv)),s.createElement("div",{className:"ev-sliders-container"},s.createElement("div",{className:"ev-slider-container"},s.createElement("h4",null,"HP :"),s.createElement("input",{type:"range",step:"4",min:"0",max:"252",value:e.currentPokemon.evs.array[0],class:"slider",id:"hp-slider",onChange:function(){l("hp-slider")}})),s.createElement("div",{className:"ev-slider-container"},s.createElement("h4",null,"Attak :"),s.createElement("input",{type:"range",step:"4",min:"0",max:"252",value:e.currentPokemon.evs.array[1],class:"slider",id:"attack-slider",onChange:function(){l("attack-slider")}})),s.createElement("div",{className:"ev-slider-container"},s.createElement("h4",null,"Defense :"),s.createElement("input",{type:"range",step:"4",min:"0",max:"252",value:e.currentPokemon.evs.array[2],class:"slider",id:"defense-slider",onChange:function(){l("defense-slider")}})),s.createElement("div",{className:"ev-slider-container"},s.createElement("h4",null,"Sp. Atk. :"),s.createElement("input",{type:"range",step:"4",min:"0",max:"252",value:e.currentPokemon.evs.array[3],class:"slider",id:"specialA-slider",onChange:function(){l("specialA-slider")}})),s.createElement("div",{className:"ev-slider-container"},s.createElement("h4",null,"Sp. Def. :"),s.createElement("input",{type:"range",step:"4",min:"0",max:"252",value:e.currentPokemon.evs.array[4],class:"slider",id:"specialD-slider",onChange:function(){l("specialD-slider")}})),s.createElement("div",{className:"ev-slider-container"},s.createElement("h4",null,"Speed :"),s.createElement("input",{type:"range",step:"4",min:"0",max:"252",value:e.currentPokemon.evs.array[5],class:"slider",id:"speed-slider",onChange:function(){l("speed-slider")}}))),s.createElement("div",{className:"ev-used-container"},s.createElement("h4",{className:"ev-used"},e.currentPokemon.evs.array[0]),s.createElement("h4",{className:"ev-used"},e.currentPokemon.evs.array[1]),s.createElement("h4",{className:"ev-used"},e.currentPokemon.evs.array[2]),s.createElement("h4",{className:"ev-used"},e.currentPokemon.evs.array[3]),s.createElement("h4",{className:"ev-used"},e.currentPokemon.evs.array[4]),s.createElement("h4",{className:"ev-used"},e.currentPokemon.evs.array[5])))}));function Jn(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}var Qn=o(5226),Xn=function(e){var t=[];return["hp","attack","defense","specialA","specialD","speed"].forEach((function(s){t.push(e[s])})),console.log("END OF STAT->OBJ EvContainer ",t),t};const el=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon,yourTeam:e.pokemon.yourTeam}}),(function(e){return{toggleMainDivState:function(t){return e(_.ax(t))},updateCalculatedStats:function(t,s,a,i){return e(_.mp(t,s,a,i))},updateSavedTeam:function(t){return e(_.ni(t))}}}))((function(e){console.log("inside EvContainer, ",e.currentPokemon);var t=function(t,s){var a,i=e.currentPokemon.ivs.array,r=Number(t.target.value);if(NaN!==r){r>252&&(r=252);var o=function(e){if(Array.isArray(e))return Jn(e)}(a=e.currentPokemon.evs.array)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(a)||function(e,t){if(e){if("string"==typeof e)return Jn(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?Jn(e,t):void 0}}(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}();o[s]=r;var n=Xn(e.currentPokemon.stats),l=Qn.getNatureValue(e.currentPokemon.nature);console.log(n,o,i,l);var f=Qn.calAllStats(i,n,o,e.currentPokemon.level,l);console.log(f);var c=508-o.reduce((function(e,t){return Number(e)+Number(t)}));document.getElementById("remaining-Ev-value").style.color=c<0?"red":"black",e.updateCalculatedStats(o,i,c,f),e.updateSavedTeam(e.yourTeam)}};return(0,s.useEffect)((function(){console.log("inside 5/8 bug useEffect"),function(){for(var t=document.getElementsByClassName("ev-input"),s=0;s<t.length;s++)t[s].value=e.currentPokemon.evs.array[s]}(),e.currentPokemon.calculatedStats.length||function(){var t=e.currentPokemon.ivs.array,s=e.currentPokemon.evs.array,a=Xn(e.currentPokemon.stats),i=Qn.getNatureValue(e.currentPokemon.nature);console.log("after nature"),console.log(a,s,t,i);var r=Qn.calAllStats(t,a,s,e.currentPokemon.level,i);console.log(r),e.updateCalculatedStats(s,t,508,r)}()}),[]),s.createElement("div",{className:"evs-container",onClick:function(){e.makeDivActive("evs-container","active-pokemon-detail-container","evs-container")}},s.createElement("h3",null,"EVs"),s.createElement("div",{className:"ev-table-labels"},s.createElement("h4",{className:"base-table-label"},"base"),s.createElement("h4",{className:"ev-table-label"},"EVs"),s.createElement("h4",{className:"iv-table-label"},"IVs")),s.createElement("div",{className:"evs-display-container"},s.createElement("div",{className:"hp-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"HP: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.hp),s.createElement("input",{className:"ev-input",id:"ev-input-hp",type:"text",value:e.currentPokemon.evs.array[0],onChange:function(e){t(e,0)}}),s.createElement("input",{className:"iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat"},e.currentPokemon.calculatedStats[0])),s.createElement("div",{className:"attack-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Attack: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.attack),s.createElement("input",{className:"ev-input",type:"text",value:e.currentPokemon.evs.array[1],onChange:function(e){t(e,1)}}),s.createElement("input",{className:"iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat"},e.currentPokemon.calculatedStats[1])),s.createElement("div",{className:"defense-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Defense: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.defense),s.createElement("input",{className:"ev-input",type:"text",value:e.currentPokemon.evs.array[2],onChange:function(e){t(e,2)}}),s.createElement("input",{className:"iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat"},e.currentPokemon.calculatedStats[2])),s.createElement("div",{className:"spatk-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Sp. Atk.: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.specialA),s.createElement("input",{className:"ev-input",type:"text",value:e.currentPokemon.evs.array[3],onChange:function(e){t(e,3)}}),s.createElement("input",{className:"iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat"},e.currentPokemon.calculatedStats[3])),s.createElement("div",{className:"spdef-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Sp. Def.: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.specialD),s.createElement("input",{className:"ev-input",type:"text",value:e.currentPokemon.evs.array[4],onChange:function(e){t(e,4)}}),s.createElement("input",{className:"iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat"},e.currentPokemon.calculatedStats[4])),s.createElement("div",{className:"speed-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Speed: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.speed),s.createElement("input",{className:"ev-input",type:"text",value:e.currentPokemon.evs.array[5],onChange:function(e){t(e,5)}}),s.createElement("input",{className:"iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat"},e.currentPokemon.calculatedStats[5]))))}));var tl=o(4202);function sl(e){return sl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},sl(e)}function al(){al=function(){return e};var e={},t=Object.prototype,s=t.hasOwnProperty,a=Object.defineProperty||function(e,t,s){e[t]=s.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",n=i.toStringTag||"@@toStringTag";function l(e,t,s){return Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,s){return e[t]=s}}function f(e,t,s,i){var r=t&&t.prototype instanceof p?t:p,o=Object.create(r.prototype),n=new x(i||[]);return a(o,"_invoke",{value:w(e,s,n)}),o}function c(e,t,s){try{return{type:"normal",arg:e.call(t,s)}}catch(e){return{type:"throw",arg:e}}}e.wrap=f;var u={};function p(){}function g(){}function d(){}var h={};l(h,r,(function(){return this}));var m=Object.getPrototypeOf,y=m&&m(m(M([])));y&&y!==t&&s.call(y,r)&&(h=y);var v=d.prototype=p.prototype=Object.create(h);function b(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function i(a,r,o,n){var l=c(e[a],e,r);if("throw"!==l.type){var f=l.arg,u=f.value;return u&&"object"==sl(u)&&s.call(u,"__await")?t.resolve(u.__await).then((function(e){i("next",e,o,n)}),(function(e){i("throw",e,o,n)})):t.resolve(u).then((function(e){f.value=e,o(f)}),(function(e){return i("throw",e,o,n)}))}n(l.arg)}var r;a(this,"_invoke",{value:function(e,s){function a(){return new t((function(t,a){i(e,s,t,a)}))}return r=r?r.then(a,a):a()}})}function w(e,t,s){var a="suspendedStart";return function(i,r){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw r;return{value:void 0,done:!0}}for(s.method=i,s.arg=r;;){var o=s.delegate;if(o){var n=S(o,s);if(n){if(n===u)continue;return n}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if("suspendedStart"===a)throw a="completed",s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);a="executing";var l=c(e,t,s);if("normal"===l.type){if(a=s.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:s.done}}"throw"===l.type&&(a="completed",s.method="throw",s.arg=l.arg)}}}function S(e,t){var s=t.method,a=e.iterator[s];if(void 0===a)return t.delegate=null,"throw"===s&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==s&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+s+"' method")),u;var i=c(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,u;var r=i.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function x(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function M(e){if(e){var t=e[r];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(s.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:D}}function D(){return{value:void 0,done:!0}}return g.prototype=d,a(v,"constructor",{value:d,configurable:!0}),a(d,"constructor",{value:g,configurable:!0}),g.displayName=l(d,n,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,l(e,n,"GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},b(P.prototype),l(P.prototype,o,(function(){return this})),e.AsyncIterator=P,e.async=function(t,s,a,i,r){void 0===r&&(r=Promise);var o=new P(f(t,s,a,i),r);return e.isGeneratorFunction(s)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},b(v),l(v,n,"Generator"),l(v,r,(function(){return this})),l(v,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),s=[];for(var a in t)s.push(a);return s.reverse(),function e(){for(;s.length;){var a=s.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=M,x.prototype={constructor:x,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&s.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(s,a){return o.type="throw",o.arg=e,t.next=s,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],o=r.completion;if("root"===r.tryLoc)return a("end");if(r.tryLoc<=this.prev){var n=s.call(r,"catchLoc"),l=s.call(r,"finallyLoc");if(n&&l){if(this.prev<r.catchLoc)return a(r.catchLoc,!0);if(this.prev<r.finallyLoc)return a(r.finallyLoc)}else if(n){if(this.prev<r.catchLoc)return a(r.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return a(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&s.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var r=i;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var o=r?r.completion:{};return o.type=e,o.arg=t,r?(this.method="next",this.next=r.finallyLoc,u):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var s=this.tryEntries[t];if(s.finallyLoc===e)return this.complete(s.completion,s.afterLoc),T(s),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var s=this.tryEntries[t];if(s.tryLoc===e){var a=s.completion;if("throw"===a.type){var i=a.arg;T(s)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,s){return this.delegate={iterator:M(e),resultName:t,nextLoc:s},"next"===this.method&&(this.arg=void 0),u}},e}function il(e,t,s,a,i,r,o){try{var n=e[r](o),l=n.value}catch(e){return void s(e)}n.done?t(l):Promise.resolve(l).then(a,i)}function rl(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return ol(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?ol(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ol(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}var nl=tl.Z.allItemsJSON,ll=tl.Z.allMovesJSON;const fl=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon,activeAbility:e.pokemon.currentPokemon.activeAbility,yourTeam:e.pokemon.yourTeam}}),(function(e){return{selectAbility:function(t){return e(_.H(t))},saveItemToMon:function(t,s,a){return e(_.rd(t,s,a))},updateSavedTeam:function(t){return e(_.ni(t))},updateActiveMove:function(t,s){return e(_.TV(t,s))},selectMoveFromList:function(t,s){return e(_.uN(t,s))}}}))((function(e){console.log("inside CurrentPokemonDetails",e.currentPokemon);var t=rl((0,s.useState)({div:""}),2),a=t[0],i=t[1],r=rl((0,s.useState)(!1),2),o=r[0],n=r[1],l=rl((0,s.useState)([]),2),f=(l[0],l[1],rl((0,s.useState)([]),2)),c=f[0],u=f[1],p=rl((0,s.useState)([]),2),g=p[0],d=p[1],h=rl((0,s.useState)([]),2),m=h[0],y=h[1],v=function(e,t,s){var a=document.getElementsByClassName(t);0!==a.length&&a[0].classList!==e&&a[0].classList.remove(t);var r=document.getElementsByClassName(e)[0];if(console.log("inside makeDivActive ",e,t,s,r),r.classList.add(t),"abilities-container"===e||"evs-container"===e)n(!1),document.getElementsByClassName("pokemon-details-container")[0].classList.add("pokemon-details-container-stretched"),"evs-container"===e&&n(!0);else{n(!0);var o=document.getElementsByClassName("pokemon-details-container-stretched");0!==o.length&&o[0].classList!==e&&o[0].classList.remove("pokemon-details-container-stretched")}if("moves-container"!==s&&"move-container"!==s){var l=document.getElementsByClassName("active-move-container");0!==l.length&&l[0].classList!==e&&l[0].classList.remove("active-move-container"),i({div:s})}else i({div:s})};function b(e,t){return P.apply(this,arguments)}function P(){var t;return t=al().mark((function t(s,a){return al().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(decodeURIComponent(a)).then((function(e){return e.json()})).then((function(t){var a=t.effect_entries[1].effect.split(/\r?\n|\r|\n/g)[0],i={name:s,description:a};e.selectAbility(i)}));case 2:case"end":return t.stop()}}),t)})),P=function(){var e=this,s=arguments;return new Promise((function(a,i){var r=t.apply(e,s);function o(e){il(r,a,i,o,n,"next",e)}function n(e){il(r,a,i,o,n,"throw",e)}o(void 0)}))},P.apply(this,arguments)}var w=function(t){var a=[],i=function(i){var r=nl[i].spriteUrl,o=nl[i].desc,n="item-row item-row-"+i,l=nl[i].nameLowerCase.replace("-"," "),f="",c=l;t&&(f=l.slice(0,t.length),c=l.slice(t.length,l.length)),t&&f!==t||(t&&(f=t),a.push(s.createElement("div",{key:i,className:n,onClick:function(){!function(t,s,a,i,r,o){v(i,"active-item-browse-area","item-container"),e.saveItemToMon(t,a,s),e.updateSavedTeam(e.yourTeam),document.getElementById("item-search-input").value="",N()}(i,r,o,"item-row-"+i)}},s.createElement("div",{className:"item-row-top"},s.createElement("img",{src:r,alt:""}),s.createElement("h4",null,s.createElement("span",null,f),c)),s.createElement("div",{className:"item-row-bottom"},s.createElement("h5",null,o)))))};for(var r in nl)i(r);d(a)},S=function(t){v("moves-container","active-pokemon-detail-container","moves-container"),v("move-container-"+t,"active-move-container","move-container"),e.updateActiveMove("move_"+t,e.currentPokemon.moves["move_"+t])},k=function(t){var a=[],i=function(){if(!e.currentPokemon.movePool[r])return"continue";var i=ll[r],o=i.category,n=i.shortDesc,l=i.type,f=i.basePower,c=i.accuracy+"%",u="https://play.pokemonshowdown.com/sprites/types/".concat(l,".png"),p="";switch(o){case"Physical":p="https://play.pokemonshowdown.com/sprites/categories/Physical.png";break;case"Special":p="https://play.pokemonshowdown.com/sprites/categories/Special.png";break;case"Status":p="https://play.pokemonshowdown.com/sprites/categories/Status.png"}i.typeImageUrl=u,i.categoryImageUrl=p,0===f&&(f=null),"true%"===c&&(c="100%");var g="",d=r,h=r.replace(" ","-"),m="move-row move-row-"+h;t&&(g=r.slice(0,t.length),d=r.slice(t.length,r.length)),t&&g!==t||(t&&(g=t),a.push(s.createElement("div",{key:m,className:m,onClick:function(){var t,s;t=e.currentPokemon.activeMove.moveId,s=i,v("move-row-"+h,"active-move-browse-area","moves-container"),e.selectMoveFromList(t,s),"move_4"===t&&e.currentPokemon.moves.move_1.name&&e.currentPokemon.moves.move_2.name&&e.currentPokemon.moves.move_3.name?v("evs-container","active-pokemon-detail-container","evs-container"):(S(Number(t[t.length-1])+1),document.getElementById("move-search-input").value="")}},s.createElement("div",{className:"move-row-top"},s.createElement("h4",null,s.createElement("span",null,g),d),s.createElement("img",{className:"type-symbol",src:u,alt:""}),s.createElement("img",{className:"category-symbol",src:p,alt:""}),s.createElement("h4",{className:"basepower"},f),s.createElement("h4",{className:"accuracy"},c)),s.createElement("div",{className:"move-row-bottom"},s.createElement("h5",null,n)))))};for(var r in ll)i();y(a)},T=rl((0,s.useState)({hp:0,attack:0,defense:0,specialA:0,specialD:0,speed:0}),2),x=T[0],M=T[1],D=rl((0,s.useState)({hp:31,attack:31,defense:31,specialA:31,specialD:31,speed:31}),2),A=D[0],B=D[1],O=rl((0,s.useState)({hp:0,attack:0,defense:0,specialA:0,specialD:0,speed:0}),2),C=O[0],F=O[1],N=function(e){"moves-container"!==a.div&&"move-container"!==a.div&&(S(1),e&&(e.preventDefault(),e.stopPropagation()))};return(0,s.useEffect)((function(){(function(){for(var t=[],a=function(a){var i=e.currentPokemon.abilities[a].ability.name.replace(/\b\w/g,(function(e){return e.toUpperCase()})).replace(/-/g," "),r=e.currentPokemon.abilities[a].ability.url,o="ability ability"+(a+1)+" pokemon-details-"+i;e.currentPokemon.activeAbility.name&&e.currentPokemon.activeAbility.name===i&&(o+=" active-ability-highlighted"),t.push(s.createElement("div",{key:i,className:o,onClick:function(){!function(t,s,a,i){b(t,s),v(a,"active-ability-highlighted"),e.updateSavedTeam(e.yourTeam)}(i,r,"ability"+(a+1))}},s.createElement("h4",null,i)))},i=0;i<e.currentPokemon.abilities.length;i++)a(i);if(u(t),!e.currentPokemon.activeAbility.name){var r=e.currentPokemon.abilities[0].ability,o=r.url;b(r.name,o)}})(),w(),k()}),[e.currentPokemon,e.activeAbility]),s.createElement("div",{className:"current-pokemon-rightside-container"},s.createElement("div",{className:"pokemon-details-container"},s.createElement("div",{className:"abilities-container",onClick:function(){v("abilities-container","active-pokemon-detail-container","abilities-container")}},s.createElement("h3",null,"ability"),s.createElement("div",{className:"abilities-container-inner"},c),"abilities-container"===a.div?s.createElement("div",{className:"ability-description-container"},s.createElement("h4",{className:"ability-description"}," ",e.activeAbility.description," ")):null),s.createElement("div",{className:"item-container",onClick:function(){v("item-container","active-pokemon-detail-container","item-container")}},s.createElement("h3",null,"item"),e.currentPokemon.item.url?s.createElement("div",{key:e.currentPokemon.item.item,className:"item"},s.createElement("img",{src:e.currentPokemon.item.url,alt:""}),s.createElement("h4",null,e.currentPokemon.item.item.replace("-"," "))):null),s.createElement("div",{className:"moves-container",onClick:function(e){v("moves-container","active-pokemon-detail-container","moves-container"),N(e)}},s.createElement("h3",null,"moves"),s.createElement("div",{className:"moves-container-row"},s.createElement("div",{className:"move-container move-container-1",onClick:function(){S(1)}},s.createElement("div",{className:"move-container-top-row"},s.createElement("img",{src:e.currentPokemon.moves.move_1.typeImageUrl,alt:""}),s.createElement("img",{src:e.currentPokemon.moves.move_1.categoryImageUrl,alt:""})),s.createElement("h4",{key:e.currentPokemon.moves.move_1.name},e.currentPokemon.moves.move_1.name)),s.createElement("div",{className:"move-container move-container-2",onClick:function(){S(2)}},s.createElement("div",{className:"move-container-top-row"},s.createElement("img",{src:e.currentPokemon.moves.move_2.typeImageUrl,alt:""}),s.createElement("img",{src:e.currentPokemon.moves.move_2.categoryImageUrl,alt:""})),s.createElement("h4",{key:e.currentPokemon.moves.move_2.name},e.currentPokemon.moves.move_2.name))),s.createElement("div",{className:"moves-container-row"},s.createElement("div",{className:"move-container move-container-3",onClick:function(){S(3)}},s.createElement("div",{className:"move-container-top-row"},s.createElement("img",{src:e.currentPokemon.moves.move_3.typeImageUrl,alt:""}),s.createElement("img",{src:e.currentPokemon.moves.move_3.categoryImageUrl,alt:""})),s.createElement("h4",{key:e.currentPokemon.moves.move_3.name},e.currentPokemon.moves.move_3.name)),s.createElement("div",{className:"move-container move-container-4",onClick:function(){S(4)}},s.createElement("div",{className:"move-container-top-row"},s.createElement("img",{src:e.currentPokemon.moves.move_4.typeImageUrl,alt:""}),s.createElement("img",{src:e.currentPokemon.moves.move_4.categoryImageUrl,alt:""})),s.createElement("h4",{key:e.currentPokemon.moves.move_4.name},e.currentPokemon.moves.move_4.name)))),s.createElement(el,{makeDivActive:v,valuesOfEV:x,setValuesOfEv:M,valuesOfIV:A,setValuesOfIv:B,calculatedStat:C,setCalculatedStat:F})),o?s.createElement("div",{className:"browse-area-container"},"item-container"===a.div||"item-row"===a.div?s.createElement("div",{className:"browse-items-container"},s.createElement("h3",null,"items"),s.createElement("div",{className:"search-area"},s.createElement("input",{type:"text",id:"item-search-input",onKeyUp:function(){var e;e=document.getElementById("item-search-input").value,w(e)}})),e.currentPokemon.item.item?s.createElement("div",{className:"item-selected"},s.createElement("div",{className:"item-row-top"},s.createElement("img",{src:e.currentPokemon.item.url,alt:""}),s.createElement("h4",null,e.currentPokemon.item.item)),s.createElement("div",{className:"item-row-bottom"},s.createElement("h5",null,e.currentPokemon.item.description))):s.createElement("div",{className:"item-selected-placeholder"}," "),s.createElement("div",{className:"item-list"},g)):null,"move-container"===a.div||"moves-container"===a.div?s.createElement("div",{className:"browse-moves-container"},s.createElement("h3",null,"available moves"),s.createElement("div",{className:"search-area"},s.createElement("input",{type:"text",id:"move-search-input",onKeyUp:function(){var e;e=document.getElementById("move-search-input").value,k(e)}})),e.currentPokemon.activeMove.moveObj.exists?s.createElement("div",{className:"move-selected"},s.createElement("div",{className:"move-row-top"},s.createElement("h4",null,e.currentPokemon.activeMove.moveObj.name),s.createElement("img",{className:"type-symbol",src:e.currentPokemon.activeMove.moveObj.typeImageUrl,alt:""}),s.createElement("img",{className:"category-symbol",src:e.currentPokemon.activeMove.moveObj.categoryImageUrl,alt:""}),s.createElement("h4",{className:"basepower"},e.currentPokemon.activeMove.moveObj.basePower),s.createElement("h4",{className:"accuracy"},e.currentPokemon.activeMove.moveObj.accuracy)),s.createElement("div",{className:"move-row-bottom"},s.createElement("h5",null,e.currentPokemon.activeMove.moveObj.shortDesc))):s.createElement("div",{className:"move-selected-placeholder"}," "),s.createElement("div",{className:"moves-list-labels"},s.createElement("h5",{className:"name"},"name"),s.createElement("h5",{className:"type-l"},"type"),s.createElement("h5",{className:"cat"},"cat"),s.createElement("h5",{className:"pow"},"pow"),s.createElement("h5",{className:"acc"},"acc")),s.createElement("div",{className:"moves-list"},m)):null,"evs-container"===a.div?s.createElement(Yn,{valuesOfEV:x}):null):null)})),cl=(0,H.$j)(null,(function(e){return{selectTeamMember:function(t){return e(_.Wi(t))}}}))((function(e){return s.createElement("div",{className:"saved-team-member-container"},s.createElement("div",{className:"saved-team-member"},s.createElement(ue,{key:e.key,pokemon:e.pokemonName,pokedexId:e.pokemonData.pokedexId,className:"pokemon-sprite-saved-team",type:"still"})))}));function ul(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return pl(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?pl(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function pl(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const gl=(0,H.$j)((function(e){return{savedTeams:e.userFunctions.savedTeams}}),(function(e){return{setYourTeam:function(t){return e(_.Ht(t))},editTeam:function(t,s){return e(_.fB(t,s))},removeTeam:function(t){return e(_.Si(t))},updatePreviousTeamKey:function(t){return e(_.ds(t))}}}))((function(e){var t=ul((0,s.useState)([]),2),a=t[0],i=t[1],r=ul((0,s.useState)("team-members need-saved-team-hover-effect"),2);r[0],r[1],(0,s.useEffect)((function(){e.savedTeam&&n()}),[e.savedTeam]);var o=!0,n=function(){for(var t=[],a=1;a<=6;a++){var r="mon"+a.toString();e.savedTeam&&e.savedTeam[r]?t.push(s.createElement(cl,{key:a+e.savedTeam[r].pokemon,selectedMon:r,pokemonData:e.savedTeam[r],pokemonName:e.savedTeam[r].pokemon})):e.savedTeam&&!e.savedTeam[r]&&o?(t.push(s.createElement("div",{className:"saved-team-member-container"})),o=!1):t.push(s.createElement("div",{className:"saved-team-member-container"}))}i(t)},l=function(){var t=document.getElementsByClassName("active-saved-team");0!==t.length&&t[0].id!==e.savedTeamKey&&t[0].classList.remove("active-saved-team"),document.getElementById(e.savedTeamKey).classList.add("active-saved-team")};return s.createElement("div",{className:"saved-team",onClick:function(){console.log("in onclick0",e.savedTeamKey),e.editTeam(e.savedTeamKey,e.savedTeam),e.updatePreviousTeamKey("E")}},s.createElement("h5",null,e.savedTeamName),s.createElement("div",{className:"team-members need-saved-team-hover-effect",id:e.savedTeamKey,onClick:function(){l()}},a),s.createElement("img",{className:"edit-team-button",src:"https://cdn-icons-png.flaticon.com/512/6065/6065488.png",onClick:function(t){console.log("in onclick1",e.savedTeamKey),e.editTeam(e.savedTeamKey,e.savedTeam),l()}}),s.createElement("img",{className:"remove-team-button",src:"https://www.pngplay.com/wp-content/uploads/7/Delete-Logo-PNG-HD-Quality.png",onClick:function(t){!function(t){t.stopPropagation(),console.log("in onclick2",e.savedTeamKey),e.removeTeam(e.savedTeamKey)}(t)}}))}));function dl(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return hl(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?hl(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function hl(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const ml=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon}}),(function(e){return{refreshAndDecodeSavedTeams:function(t){return e(_.U8(t))},updatePokemon:function(t,s){return e(_.M1(t,s))}}}))((function(e){var t=dl((0,s.useState)("evolution-container-inner-active evolution-container-inner"),2),a=t[0],i=(t[1],dl((0,s.useState)(!1),2)),r=(i[0],i[1],dl((0,s.useState)([]),2)),o=r[0],n=r[1],l=dl((0,s.useState)([]),2),f=(l[0],l[1],function(t,s){t.stopPropagation(),fetch("/api/fetchPokeAPI",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json, text/plain"},body:JSON.stringify({pokemon:s})}).then((function(e){return e.json()})).then((function(t){e.updatePokemon(s,t),404===t.error&&alert("Pokemon not found! Please check your spelling and try again :)")}))});return(0,s.useEffect)((function(){!function(){console.log("inside populateEvolutionTree ",e.currentPokemon);var t=[],a=e.currentPokemon.evolution_chain,i="evolution-sprite",r="";a.species.name===e.currentPokemon.pokemon&&(i+=" evolution-sprite-current",r="evolution-text-current"),t.push(s.createElement("div",{key:Math.random(),className:"evolution-row evolution-tier-1"},s.createElement(ue,{key:e.currentPokemon.pokemon,pokemon:a.species.name,className:i}),s.createElement("a",{className:r,onClick:function(e){f(e,a.species.name)}},a.species.name))),function a(i){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;i.evolves_to.length&&i.evolves_to.forEach((function(i){var o="evolution-sprite",n="";i.species.name===e.currentPokemon.pokemon&&(o+=" evolution-sprite-current",n="evolution-text-current"),t.push(s.createElement("div",{key:Math.random(),className:"evolution-row evolution-tier-"+r},s.createElement("img",{className:"arrows",src:"https://cdn-icons-png.flaticon.com/512/109/109617.png",alt:""}),s.createElement(ue,{key:e.currentPokemon.pokemon,pokemon:i.species.name,className:o}),s.createElement("a",{className:n,onClick:function(e){f(e,i.species.name)}},i.species.name))),i.evolves_to.length&&(r++,a(i,r))}))}(a),n(t)}()}),[e.currentPokemon]),s.createElement("div",{className:"evolution-container",key:e.currentPokemon.name},s.createElement("div",{className:a},s.createElement("h4",null,"Evolutions"),s.createElement("div",{className:"evolution-tree-container"},o)))}));function yl(e){return yl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},yl(e)}function vl(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function bl(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?vl(Object(s),!0).forEach((function(t){Tl(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):vl(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function Pl(e,t){for(var s=0;s<t.length;s++){var a=t[s];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,xl(a.key),a)}}function wl(e,t){return wl=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},wl(e,t)}function Sl(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function kl(e){return kl=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},kl(e)}function Tl(e,t,s){return(t=xl(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function xl(e){var t=function(e,t){if("object"!==yl(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==yl(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===yl(t)?t:String(t)}var Ml=["bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water"],Dl=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&wl(e,t)}(n,e);var t,a,i,r,o=(i=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=kl(i);if(r){var s=kl(this).constructor;e=Reflect.construct(t,arguments,s)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===yl(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Sl(e)}(this,e)});function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Tl(Sl(t=o.call(this,e)),"componentWillMount",(function(){t.generateWeakness(t.props.currentPokemon.pokemon),t.playCrySound()})),Tl(Sl(t),"componentDidUpdate",(function(e){e.currentPokemon.pokemon!==t.props.currentPokemon.pokemon&&(t.playCrySound(),t.generateWeakness(),null===t.props.currentPokemon.slot.mon&&t.updateActiveAbilityOnNewSearch())})),t.state={pokemon:t.props.currentPokemon,immunities:[],weaknesses:[],resistances:[]},t}return t=n,a=[{key:"playCrySound",value:function(){var e=this.props.currentPokemon.pokemon.replace("-",""),t="https://play.pokemonshowdown.com/audio/cries/".concat(e,".mp3");new Audio(t).play()}},{key:"generateWeakness",value:function(e){for(var t=[],a=[],i=[],r=0,o=Ml;r<o.length;r++){var n=o[r];switch(this.props.currentPokemon.weakness[n]){case 0:t.push(s.createElement("h5",{key:n,className:"type resistance-immune",id:n},n));break;case.25:i.unshift(s.createElement("h5",{key:n,className:"type resistance-x4",id:n},n));break;case.5:i.push(s.createElement("h5",{key:n,className:"type resistance-x2",id:n},n));break;case 2:a.push(s.createElement("h5",{key:n,className:"type weakness-x2",id:n},n));break;case 4:a.unshift(s.createElement("h5",{key:n,className:"type weakness-x4",id:n},n))}}this.setState((function(s){return{pokemon:e,immunities:t,weaknesses:a,resistances:i}}))}},{key:"addToTeam",value:function(e,t){"friendly"===t?this.props.addPokemonToYourTeam(e):this.props.addPokemonToEnemeyTeam(e)}},{key:"updateActiveAbilityOnNewSearch",value:function(){var e=this,t=(this.props.currentPokemon.activeAbility,this.props.currentPokemon.abilities[0].ability),s=t.url;fetch(decodeURIComponent(s)).then((function(e){return e.json()})).then((function(s){var a=s.effect_entries[1].effect.split(/\r?\n|\r|\n/g)[0],i={name:t.name,description:a};e.props.selectAbility(i),e.makeDivActive("ability1","active-ability-highlighted")}))}},{key:"makeDivActive",value:function(e,t){var s=document.getElementsByClassName(t);0!==s.length&&s[0].classList!==e&&s[0].classList.remove(t),document.getElementsByClassName(e)[0].classList.add(t)}},{key:"render",value:function(){var e=this;return console.log("inside current pokemon display",this.props.currentPokemon.pokemon),s.createElement("div",{className:"current-pokemon-container",key:this.props.currentPokemon.slot.mon},s.createElement(ml,null),s.createElement("div",{className:"current-pokemon-outter-flexbox"},s.createElement("div",{key:this.props.currentPokemon.pokemon,className:"current-pokemon"},s.createElement("div",{className:"top-flexbox"},s.createElement("h3",{id:this.props.currentPokemon.pokemon}," ",this.props.currentPokemon.pokemon," "),s.createElement("div",{className:"types"},s.createElement("h4",{className:"type",id:this.props.currentPokemon.types[0]},this.props.currentPokemon.types[0]),s.createElement("h4",{className:"type type-"+this.props.currentPokemon.types[1],id:this.props.currentPokemon.types[1]},this.props.currentPokemon.types[1])),s.createElement("div",{className:"current-pokemon-spacer"}),s.createElement("div",{className:"levels"},s.createElement("h4",null,"level 100"))),s.createElement("div",{className:"current-pokemon-flexbox"},s.createElement("div",{className:"current-sprite-main-container"},s.createElement(ue,{key:this.props.currentPokemon.slot.mon,pokemon:this.props.currentPokemon.pokemon,className:"current-sprite-main"})),s.createElement("div",{className:"stats"},s.createElement(In,{name:this.props.currentPokemon.pokemon,pokemonStats:this.props.currentPokemon.stats,currentPokemon:this.props.currentPokemon,id:"current-pokemon-chart"}))),s.createElement("div",{className:"oval-ground type-"+this.props.currentPokemon.types[0]}),s.createElement("div",{className:"current-pokemon-weakness-summary"},s.createElement("div",{className:"weaknesses"},s.createElement("h4",null,"immunity : "),s.createElement("div",{className:"weaknesses-inner"},this.state.immunities)),s.createElement("div",{className:"weaknesses"},s.createElement("h4",null,"weakness : "),s.createElement("div",{className:"weaknesses-inner"},this.state.weaknesses)),s.createElement("div",{className:"weaknesses"},s.createElement("h4",null,"resistance : "),s.createElement("div",{className:"weaknesses-inner"},this.state.resistances)))),s.createElement("div",{className:"add-to-team-option-buttons"},s.createElement("div",{className:"f"},s.createElement("button",{className:"add-to-your-team",onClick:function(){e.addToTeam(bl({},e.props.currentPokemon),"friendly")}},"Add"),s.createElement("button",{className:"add-to-calc",onClick:function(){e.props.addMonToCalc(bl({},e.props.currentPokemon),"friendly")}},"Calc")),s.createElement("div",{className:"add-to-team-option-spacer"}),s.createElement("div",{className:"e"},s.createElement("button",{className:"add-to-enemy-team",onClick:function(){e.addToTeam(bl({},e.props.currentPokemon),"enemy")}},"Add"),s.createElement("button",{className:"add-to-calc",onClick:function(){e.props.addMonToCalc(bl({},e.props.currentPokemon),"enemy")}},"Calc"))),s.createElement("div",{className:"down-arrow-gifs"},s.createElement("img",{className:"arrow1",src:"https://media3.giphy.com/media/deKZM8D0orxwQ18qtB/giphy.gif?cid=ecf05e47wdglkthtva45fblr1v52dyqktaeiws7a2zi294tv&rid=giphy.gif&ct=s",alt:""}),s.createElement("img",{className:"arrow2",src:"https://media3.giphy.com/media/deKZM8D0orxwQ18qtB/giphy.gif?cid=ecf05e47wdglkthtva45fblr1v52dyqktaeiws7a2zi294tv&rid=giphy.gif&ct=s",alt:""}))),s.createElement(fl,null))}}],a&&Pl(t.prototype,a),Object.defineProperty(t,"prototype",{writable:!1}),n}(s.Component);const Al=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon,moveSet:e.pokemon.currentPokemon.moves,abilities:e.pokemon.currentPokemon.abilities,competetiveStatus:e.pokemon.currentPokemon.competetiveStatus}}),(function(e){return{addPokemonToYourTeam:function(t){return e(_.Tt(t))},addPokemonToEnemeyTeam:function(t){return e(_.MI(t))},selectAbility:function(t){return e(_.H(t))},addMonToCalc:function(t,s){return e(_.qb(t,s))}}}))(Dl),Bl=(0,H.$j)(null,(function(e){return{removeTeamMember:function(t,s){return e(_.zT(t,s))},selectTeamMember:function(t,s,a){return e(_.Wi(t,s,a))}}}))((function(e){console.log("inside <TeamMember/>",e);var t=e.selectedTeamName+"_"+e.selectedMon;return s.createElement("div",{className:"team-member-container"},s.createElement("div",{className:"team-member"},s.createElement(ue,{pokemon:e.pokemonName,className:"pokemon-sprite-class-small",id:e.selectedTeamName+"_"+e.selectedMon,onClick:function(){var s;(s=document.getElementsByClassName("need-active-team-member-hover-effect"))&&0!==s.length&&s[0].id!==t&&s[0].classList.remove("need-active-team-member-hover-effect"),document.getElementById(t).classList.add("need-active-team-member-hover-effect"),console.log("about to send this to props.selectTeammember()",e.pokemonData,e.selectedTeam.key,e.selectedMon),e.selectTeamMember(e.pokemonData,e.selectedTeam.key,e.selectedMon)}}),s.createElement("img",{className:"remove-button",onClick:function(){return e.removeTeamMember(e.selectedTeamName,e.selectedMon)},src:"https://cdn-icons-png.flaticon.com/512/66/66847.png"})),s.createElement("div",{className:"types-colors"},s.createElement("div",{className:"types-colors-inner",id:e.pokemonData.types[0]}),e.pokemonData.types[1]?s.createElement("div",{className:"types-colors-inner",id:e.pokemonData.types[1]}):null))}));function Ol(e){return Ol="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ol(e)}function Cl(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function Fl(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?Cl(Object(s),!0).forEach((function(t){Nl(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):Cl(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function Nl(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==Ol(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==Ol(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===Ol(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function El(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const Gl=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon,yourTeam:e.pokemon.yourTeam,enemyTeam:e.pokemon.enemyTeam,username:e.userFunctions.name,savedTeams:e.userFunctions.savedTeams,previousTeamKeyF:e.pokemon.previousTeamKeyF,previousTeamKeyE:e.pokemon.previousTeamKeyE}}),(function(e){return{saveCurrentTeamAsNew:function(t){return e(_.y7(t))},updateSavedTeam:function(t){return e(_.ni(t))},clearTeam:function(t){return e(_.NY(t))}}}))((function(e){if(!e.yourTeam)return null;var t,a,i=(t=(0,s.useState)({color:e.team,selectedTeam:{},selectedTeamName:e.yourTeam.name,title:e.yourTeam.name,teamToBeDisplayed:[]}),a=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(t,a)||function(e,t){if(e){if("string"==typeof e)return El(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?El(e,t):void 0}}(t,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=i[0],o=i[1];(0,s.useEffect)((function(){n(r.color),e.updateSavedTeam(e.yourTeam)}),[e.yourTeam,e.enemyTeam]);var n=function(t){"green"===e.team?(r.selectedTeam=e.yourTeam,r.selectedTeamName="yourTeam",r.title=e.yourTeam.name,r.previousTeamKey=e.previousTeamKeyF):(r.selectedTeam=e.enemyTeam,r.selectedTeamName="enemyTeam",r.title="enemy team",r.previousTeamKey=e.previousTeamKeyE),e.title||o(Fl(Fl({},r),{},{title:"untitled"}));for(var a=[],i=1;i<=6;i++){var n="mon"+i.toString();e.previousTeamKeyE!==r.selectedTeam.key&&Math.random(),r.selectedTeam[n]?a.push(s.createElement(Bl,{key:e.yourTeam.key+n+r.selectedTeam[n].pokemon,selectedTeamName:r.selectedTeamName,selectedTeam:r.selectedTeam,selectedMon:n,pokemonData:r.selectedTeam[n],pokemonName:r.selectedTeam[n].pokemon})):a.push(s.createElement("div",{className:"team-member-container"}))}o(Fl(Fl({},r),{},{teamToBeDisplayed:[a]}))};return s.createElement("div",{className:e.team},s.createElement("h4",{className:"team-name-text-input",contenteditable:"true"},r.title),s.createElement("div",{className:"team-members"},r.teamToBeDisplayed),"green"===r.color?s.createElement("div",{className:"save-buttons-container"},s.createElement("img",{className:"save-team-icon",src:"/static/save-icon.png",alt:"",onClick:function(t){!function(){console.log("inside saveTeam");var t=document.querySelector("#main-div > div.teams > div.green > h4").innerHTML;void 0===t&&(t="untitled");var s=Fl({},r.selectedTeam);s.name=t,"green"===r.color&&e.updateSavedTeam(s)}()}}),s.createElement("img",{className:"copy-team-icon",src:"https://cdn-icons-png.flaticon.com/512/1621/1621635.png",alt:"",onClick:function(t){!function(t){t.preventDefault();var s=document.querySelector("#main-div > div.teams > div.green > h4").innerHTML;void 0===s&&(s="untitled");var a={name:s,team:Fl({},r.selectedTeam)};a.team.name=s,e.saveCurrentTeamAsNew(a)}(t)}}),s.createElement("button",{className:"clear-team-button",id:"clear-team-button-f",onClick:function(t){e.clearTeam("yourTeam")}},"clear")):s.createElement("button",{className:"clear-team-button",id:"clear-team-button-e",onClick:function(t){e.clearTeam("enemyTeam")}},"clear"))})),Il=(0,H.$j)((function(e){return{yourTeam:e.pokemon.yourTeam,enemyTeam:e.pokemon.enemyTeam,savedTeams:e.userFunctions.savedTeams}}),(function(e){return{switchTeams:function(t,s,a){return e(_.wI(t,s,a))}}}))((function(e){var t="team_"+(Object.keys(e.savedTeams).length+1);return s.createElement("div",{className:"switch-teams-button-container"},s.createElement("img",{onClick:function(){e.switchTeams(e.yourTeam,e.enemyTeam,t)},src:"https://cdn-icons-png.flaticon.com/512/258/258488.png"}))}));function zl(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Rl(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?Rl(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Rl(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}function Hl(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon}}),null)((function(e){console.log("inside MoreInfo");var t=zl((0,s.useState)({}),2),a=t[0],i=t[1],r=zl((0,s.useState)({}),2),o=r[0],n=r[1];function l(){for(var t={},s=0;s<3;s++){var r=Object.keys(e.currentPokemon.teammates)[s],o=e.currentPokemon.teammates[r];t[s]=[r,o]}console.log("inside getTeammates()"),console.log(t),i(t),console.log(a)}function f(){for(var t={},s=0;s<3;s++){var a=Object.keys(e.currentPokemon.checks)[s],i=e.currentPokemon.checks[a].ko;t[s]=[a,i]}n(t)}return console.log("initial: "),console.log(e.currentPokemon),l(),f(),console.log("after functions: "),console.log(a,o),(0,s.useEffect)((function(){console.log("inside useEffect: "),l(),f()}),[e.currentPokemon]),s.createElement("div",{className:"more-info-container"},s.createElement("div",{className:"more-info"},s.createElement("div",{className:"common-teammates"},s.createElement("h4",null,"Top Teammates"),s.createElement("div",{className:"common-teammates-inner"},s.createElement("div",{className:"teammate1"},s.createElement("h5",null,a[0][0]),s.createElement("p",null,a[0][1]),s.createElement(ue,{pokemon:a[0][0]})),s.createElement("div",{className:"teammate2"},s.createElement("h5",null,a[1][0]),s.createElement("p",null,a[1][1]),s.createElement(ue,{pokemon:a[1][0]})),s.createElement("div",{className:"teammate3"},s.createElement("h5",null,a[2][0]),s.createElement("p",null,a[2][1]),s.createElement(ue,{pokemon:a[2][0]})))),s.createElement("div",{className:"common-counters"},s.createElement("h4",null,"Top Counters"),s.createElement("div",{className:"common-counters-inner"},s.createElement("div",{className:"counter1"},s.createElement("h5",null,o[0][0]),s.createElement("p",null,"KO Rate: ",o[0][1]),s.createElement(ue,{pokemon:o[0][0]})),s.createElement("div",{className:"counter2"},s.createElement("h5",null,o[1][0]),s.createElement("p",null,o[1][1]),s.createElement(ue,{pokemon:o[1][0]})),s.createElement("div",{className:"counter3"},s.createElement("h5",null,o[2][0]),s.createElement("p",null,o[2][1]),s.createElement(ue,{pokemon:o[2][0]}))))))}));var _l=o(5226),Ll=["hp","atk","def","spa","spd","spe"];function Wl(e){var t,s,a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:maxStat,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:minStat;return(t=e>i?100:e<r?0:e/(i/100))<50?(s=255,a=Math.round(5.1*t)):(a=255,s=Math.round(510-5.1*t)),"#"+("000000"+(65536*s+256*a+0).toString(16)).slice(-6)}const Zl=(0,H.$j)((function(e,t){var s=e.damageCalc.pokemonCalcDataFriendly,a=e.damageCalc.pokemonCalcDataEnemy;return{currentPokemon:"friendly"===t.team?s:a}}),(function(e){return{updateCalculatedStatsCalc:function(t,s,a){return e(_.Zd(t,s,a))},updateSavedTeam:function(t){return e(_.ni(t))}}}))((function(e){var t,a,i=(t=(0,s.useState)({team:!0,mon:!0}),a=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(t,a)||function(e,t){if(e){if("string"==typeof e)return Hl(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?Hl(e,t):void 0}}(t,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());i[0],i[1],console.log("inside CalcEV, ",e.team,e.currentPokemon),(0,s.useEffect)((function(){}),[]);var r=function(t,s){!function(t,s){for(var a=[],i=[],r=0;r<Ll.length;r++)a.push(31),i.push(e.currentPokemon.evs[Ll[r]]);var o,n,l=Number(t.target.value);if(NaN!==l){l>252&&(l=252),i[s]=l;var f=(o=e.currentPokemon.stats,n=[],["hp","atk","def","spa","spd","spe"].forEach((function(e){n.push(o[e])})),console.log("END OF STAT->OBJ CalcEV",n),n),c=_l.getNatureValue(e.currentPokemon.nature);console.log(f,i,a,c);var u=_l.calAllStats(a,f,i,100,c);console.log(u),e.updateCalculatedStatsCalc(e.team,i,u)}}(t,s)};return s.createElement("div",{className:"evs-container calc-ev-container"},s.createElement("div",{className:"ev-table-labels"},s.createElement("h4",{className:"base-table-label"},"base"),s.createElement("h4",{className:"ev-table-label"},"EVs"),s.createElement("h4",{className:"iv-table-label"},"IVs")),s.createElement("div",{className:"evs-display-container"},s.createElement("div",{className:"hp-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"HP: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.hp),s.createElement("input",{className:"calc-ev-input",id:"ev-input-hp",type:"text",value:e.currentPokemon.evs.hp,onChange:function(e){r(e,0)}}),s.createElement("input",{className:"calc-iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat",key:e.currentPokemon.calculatedStats[0],style:{color:Wl(e.currentPokemon.calculatedStats[0],500,50)}},e.currentPokemon.calculatedStats[0])),s.createElement("div",{className:"attack-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Attack: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.atk),s.createElement("input",{className:"calc-ev-input",type:"text",value:e.currentPokemon.evs.atk,onChange:function(e){r(e,1)}}),s.createElement("input",{className:"calc-iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat",key:e.currentPokemon.calculatedStats[1],style:{color:Wl(e.currentPokemon.calculatedStats[1],500,50)}}," ",e.currentPokemon.calculatedStats[1])),s.createElement("div",{className:"defense-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Defense: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.def),s.createElement("input",{className:"calc-ev-input",type:"text",value:e.currentPokemon.evs.def,onChange:function(e){r(e,2)}}),s.createElement("input",{className:"calc-iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat",key:e.currentPokemon.calculatedStats[2],style:{color:Wl(e.currentPokemon.calculatedStats[2],500,50)}}," ",e.currentPokemon.calculatedStats[2])),s.createElement("div",{className:"spatk-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Sp. Atk.: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.spa),s.createElement("input",{className:"calc-ev-input",type:"text",value:e.currentPokemon.evs.spa,onChange:function(e){r(e,3)}}),s.createElement("input",{className:"calc-iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat",key:e.currentPokemon.calculatedStats[3],style:{color:Wl(e.currentPokemon.calculatedStats[3],500,50)}},e.currentPokemon.calculatedStats[3])),s.createElement("div",{className:"spdef-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Sp. Def.: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.spd),s.createElement("input",{className:"calc-ev-input",type:"text",value:e.currentPokemon.evs.spd,onChange:function(e){r(e,4)}}),s.createElement("input",{className:"calc-iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat",key:e.currentPokemon.calculatedStats[4],style:{color:Wl(e.currentPokemon.calculatedStats[4],500,50)}},e.currentPokemon.calculatedStats[4])),s.createElement("div",{className:"speed-ev-container ev-container"},s.createElement("h4",{className:"base-stat-label"},"Speed: "),s.createElement("h4",{className:"base-stat"},e.currentPokemon.stats.spe),s.createElement("input",{className:"calc-ev-input",type:"text",value:e.currentPokemon.evs.spe,onChange:function(e){r(e,5)}}),s.createElement("input",{className:"calc-iv-input",type:"text",value:31}),s.createElement("h4",{className:"result-stat",key:e.currentPokemon.calculatedStats[5],style:{color:Wl(e.currentPokemon.calculatedStats[5],500,50)}},e.currentPokemon.calculatedStats[5]))))}));function Ul(e){return Ul="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ul(e)}function jl(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function Kl(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?jl(Object(s),!0).forEach((function(t){Vl(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):jl(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function Vl(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==Ul(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==Ul(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===Ul(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function ql(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return $l(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?$l(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function $l(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}var Yl=o(5226),Jl=tl.Z.allItemsJSON,Ql=(tl.Z.allMovesJSON,tl.Z.natureArray,tl.Z.statusArray);function Xl(e){return e.charAt(0).toUpperCase()+e.slice(1)}function ef(e){return e.replace(/\b\w/g,(function(e){return e.toUpperCase()})).replace(/-/g," ")}const tf=(0,H.$j)((function(e){return{pokemonCalcDataFriendly:e.damageCalc.pokemonCalcDataFriendly,pokemonCalcDataEnemy:e.damageCalc.pokemonCalcDataEnemy}}),(function(e){return{changeCalcAttribute:function(t,s,a){return e(_.Pp(t,s,a))}}}))((function(e){console.log("inside CalcPokemonDetails",e.team,e.pokemonCalcDataFriendly,e.pokemonCalcDataEnemy);var t=ql((0,s.useState)({name:null,abilities:[{ability:{name:"",url:"",description:""},is_hidden:!1,slot:0}]}),2),a=t[0],i=t[1],r=ql((0,s.useState)({matchupChart:!1,damageCalculator:!1,exportCurrentTeam:!1,importTeam:!1}),2),o=(r[0],r[1],ql((0,s.useState)({team:!0,mon:!0}),2)),n=o[0],l=o[1],f=ql((0,s.useState)([]),2),c=f[0],u=f[1],p=ql((0,s.useState)([]),2),g=p[0],d=p[1],h=ql((0,s.useState)([]),2),m=h[0],y=h[1],v=ql((0,s.useState)([]),2),b=v[0],P=v[1],w=["Atk","Def","SpA","SpD","Spe"];(0,s.useEffect)((function(){n.team&&("friendly"===e.team?i(Kl({},e.pokemonCalcDataFriendly)):i(Kl({},e.pokemonCalcDataEnemy)),l(Kl(Kl({},n),{},{team:!1}))),a.name&&n.mon&&(S(),l(Kl(Kl({},n),{},{mon:!1})))}),[a.name]);var S=function(){var e;!function(){for(var e=[],t=Yl.getNatureNames,i=0;i<t.length;i++){var r=Xl(t[i]);if(r!==Xl(a.nature)){for(var o=Yl.getNatureValue(r),n="",l=0;l<w.length;l++)1.1===o[l]&&(n+=" (+"+w[l]+", ");for(var f=0;f<w.length;f++).9===o[f]&&(n+="-"+w[f]+")");e.push(s.createElement("option",{value:r},r+n))}}u(e)}(),function(){var e=[];for(var t in Jl)Jl[t].name!==a.item&&e.push(s.createElement("option",{value:Jl[t].name},Jl[t].name));y(e)}(),function(){for(var e=[],t=0;t<a.abilities.length;t++){var i=ef(a.abilities[t].ability.name);i!==ef(a.activeAbility)&&e.push(s.createElement("option",{value:i},i))}d(e)}(),e=[],Ql.forEach((function(t){e.push(s.createElement("option",{value:Xl(t)},Xl(t)))})),P(e)};return s.createElement("div",{className:e.className},a.name?s.createElement("div",{className:"calc-pokemon-display-inner"},s.createElement("h3",null,a.name),s.createElement("div",{className:"calc-sprite-container"},s.createElement(ue,{pokemon:a.name,className:"calc-sprite"})),s.createElement("div",{className:"calc-pokemon-types-container"},s.createElement("img",{src:"https://play.pokemonshowdown.com/sprites/types/".concat(Xl(a.types[0]),".png"),alt:""}),a.types[1]?s.createElement("img",{src:"https://play.pokemonshowdown.com/sprites/types/".concat(Xl(a.types[1]),".png"),alt:""}):null)):s.createElement("div",{className:"calc-pokemon-display-inner",onClick:function(){!function(){var e=document.getElementById("pokemon-search-name"),t=document.getElementById("search-bar-element");e.scrollIntoView({behavior:"smooth"});var s=setInterval((function(){t.classList.toggle("search-bar-element-flashing")}),220);setTimeout((function(){clearInterval(s),t.classList.remove("search-bar-element-flashing"),e.focus()}),1200)}()}},s.createElement("h3",null,"choose a pokemon"),s.createElement("div",{className:"calc-sprite-container"},s.createElement("img",{className:"calc-sprite-placeholder",src:"https://www.clipartmax.com/png/full/185-1853692_flat-mark-circle-round-question-help-icon-question-mark-in-circle.png",alt:""})),s.createElement("div",{className:"calc-pokemon-types-container"},s.createElement("h4",null),s.createElement("h4",null))),s.createElement(Zl,{team:e.team}),s.createElement("div",{className:"calc-details-container"},s.createElement("div",{className:"calc-nature-container"},s.createElement("h4",null,"nature:"),s.createElement("select",{className:"calc-nature-container",id:"calc-nature-select",onChange:function(t){return e.changeCalcAttribute(e.team,"nature",t.target.value)}},s.createElement("option",{value:a.nature},a.nature),c)),s.createElement("div",{className:"calc-ability-container"},s.createElement("h4",null,"ability:"),s.createElement("select",{className:"calc-ability-container",id:"calc-ability-select",onChange:function(t){return e.changeCalcAttribute(e.team,"ability",t.target.value)}},a.activeAbility?s.createElement("option",{value:ef(a.activeAbility)},ef(a.activeAbility)):s.createElement("option",{value:ef(a.abilities[0].ability.name)},ef(a.abilities[0].ability.name)),g)),s.createElement("div",{className:"calc-item-container"},s.createElement("h4",null,"item:"),s.createElement("select",{className:"calc-item-container",id:"calc-item-select",onChange:function(t){return e.changeCalcAttribute(e.team,"item",t.target.value)}},s.createElement("option",{value:a.item},a.item),m)),s.createElement("div",{className:"calc-status-container",onChange:function(t){return e.changeCalcAttribute(e.team,"status",t.target.value)}},s.createElement("h4",null,"status:"),s.createElement("select",{name:"",id:""},b))))}));var sf=o(9781);function af(e){return af="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},af(e)}function rf(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function of(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?rf(Object(s),!0).forEach((function(t){nf(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):rf(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function nf(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==af(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==af(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===af(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function lf(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return ff(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?ff(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ff(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}var cf=(0,s.lazy)((function(){return o.e(68).then(o.bind(o,6068))})),uf=(o(5226),tl.Z.allItemsJSON,tl.Z.allMovesJSON,tl.Z.natureArray,tl.Z.statusArray,{healthy:"",poisoned:"psn","badly poisoned":"tox",burned:"brn",paralyzed:"par",asleep:"slp",frozen:"frz"});function pf(e){return e.charAt(0).toUpperCase()+e.slice(1)}const gf=(0,H.$j)((function(e,t){var s=e.damageCalc.pokemonCalcDataFriendly,a=e.damageCalc.pokemonCalcDataEnemy;return{currentPokemon:"friendly"===t.team?s:a,opposingPokemon:"friendly"===t.team?a:s,pokemonCalcDataFriendly:s,pokemonCalcDataEnemy:a}}),(function(e){return{updateCalculatedStatsCalc:function(t,s,a){return e(_.Zd(t,s,a))},chooseMoveForCalc:function(t,s,a,i,r){return e(_.dc(t,s,a,i,r))}}}))((function(e){var t=lf((0,s.useState)(""),2),a=t[0],i=t[1],r=lf((0,s.useState)(""),2),o=(r[0],r[1]),n=lf((0,s.useState)({str:"",value:""}),2),l=n[0],f=n[1],c=e.moveId;return(0,s.useEffect)((function(){i(""),function(){var t,s;if(e.pokemonCalcDataFriendly.name&&e.pokemonCalcDataEnemy.name&&e.currentPokemon.moves[c].name){"friendly"===e.team?(t=e.pokemonCalcDataFriendly,s=e.pokemonCalcDataEnemy):(t=e.pokemonCalcDataEnemy,s=e.pokemonCalcDataFriendly);var a=function(e,t,s){console.log("inside calculateDamage",e,t,s);for(var a=9;a>0;)try{var i=pf(e.name),r=pf(t.name),o=(0,sf.calculate)(a,new sf.Pokemon(a,i,{ability:pf(e.activeAbility),abilityOn:!0,item:"(none)"===e.item?"":e.item,nature:e.nature,evs:e.evs,status:uf[e.status.toLowerCase()]}),new sf.Pokemon(a,r,{ability:pf(t.activeAbility),abilityOn:!0,item:"(none)"===t.item?"":t.item,nature:t.nature,evs:t.evs,status:uf[t.status.toLowerCase()]}),new sf.Move(a,s));console.log("inside calculateDamage",a,o);var n=o.damage[0],l=o.damage[o.damage.length-1];if(!n)return"0%";var f=o.defender.stats.hp;return(n/f*100).toFixed(1)+"%-"+(l/f*100).toFixed(1)+"%"}catch(e){a--}}(t,s,e.currentPokemon.moves[c].name),r="";console.log("checking for super effective! ");var o=e.opposingPokemon.weakness[e.currentPokemon.moves[c].type.toLowerCase()];0===o?r="it does not effect "+e.opposingPokemon.name+"...":.5===o?r="it's not very effective against "+e.opposingPokemon.name+"...":.25===o?r="it's not very effective (x0.25) against "+e.opposingPokemon.name+"...":2===o?r="it's super effective against "+e.opposingPokemon.name+"!":4===o&&(r="it's super effective (x4) against "+e.opposingPokemon.name+"!"),f({str:r,value:o.toString()}),i(a)}}()}),[e.pokemonCalcDataFriendly,e.pokemonCalcDataEnemy,e.popUpDisplay]),s.createElement("div",{className:"calc-result-row-container"},s.createElement(s.Suspense,{fallback:s.createElement("div",{className:"calc-fallback-"+e.team},"loading...")},s.createElement(cf,{moveId:c,team:e.team,popUpDisplay:e.popUpDisplay,setPopUpDisplay:e.setPopUpDisplay,setCategoryUrl:o})),s.createElement("div",{className:"calc-move-container calc-move-container-".concat(e.currentPokemon.moves[c].type?e.currentPokemon.moves[c].type.toLowerCase():null),onClick:function(){var t;t=document.getElementById("calc-modal-search-"+e.team+c),console.log("inside handleMoveClick",t),t.contentEditable=!0,setTimeout((function(){t.focus()}),500),t.focus(),e.setPopUpDisplay(of(of({},e.PopUpState),{},nf({},c,!e.popUpDisplay[c])))}},s.createElement("h4",null,e.currentPokemon.moves[c].name),e.currentPokemon.moves[c].categoryUrl?s.createElement("img",{className:"category-icon-small",src:e.currentPokemon.moves[c].categoryUrl,alt:""}):null),e.opposingPokemon.name&&e.currentPokemon.moves[c].name?s.createElement("h4",{className:"calc-super-effective calc-super-effective-".concat(l.value.replace(".",""))},l.str):s.createElement("div",{className:"calc-super-effective"}),s.createElement("h4",{className:"calc-move-basepower"}," ",e.currentPokemon.moves[c].basepower),s.createElement("h4",{key:a,className:"calc-result"},a))}));function df(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return hf(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?hf(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function hf(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}o(5226),tl.Z.allItemsJSON,tl.Z.allMovesJSON,tl.Z.natureArray,tl.Z.statusArray;const mf=(0,H.$j)((function(e,t){var s=e.damageCalc.pokemonCalcDataFriendly,a=e.damageCalc.pokemonCalcDataEnemy;return{currentPokemon:"friendly"===t.team?s:a,pokemonCalcDataFriendly:s,pokemonCalcDataEnemy:a}}),(function(e){return{updateCalculatedStatsCalc:function(t,s,a){return e(_.Zd(t,s,a))},chooseMoveForCalc:function(t,s,a,i,r){return e(_.dc(t,s,a,i,r))}}}))((function(e){var t=df((0,s.useState)(),2),a=(t[0],t[1],df((0,s.useState)({move_1:!1,move_2:!1,move_3:!1,move_4:!1}),2)),i=a[0],r=a[1];return(0,s.useEffect)((function(){}),[e.pokemonCalcDataFriendly,e.pokemonCalcDataEnemy,i]),s.createElement("div",{className:"calc-results-container"},s.createElement("div",{className:"calc-results-summary"},s.createElement("h4",null,"you got OHKO'd")),s.createElement("div",{className:"calc-results-labels"},s.createElement("h4",{className:"calc-label-move"},"move"),s.createElement("h4",{className:"calc-label-basepower"},"base power"),s.createElement("h4",{className:"calc-label-damage"},"damage")),s.createElement(gf,{moveId:"move_1",team:e.team,popUpDisplay:i,setPopUpDisplay:r}),s.createElement(gf,{moveId:"move_2",team:e.team,popUpDisplay:i,setPopUpDisplay:r}),s.createElement(gf,{moveId:"move_3",team:e.team,popUpDisplay:i,setPopUpDisplay:r}),s.createElement(gf,{moveId:"move_4",team:e.team,popUpDisplay:i,setPopUpDisplay:r}))}));function yf(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}const vf=(0,H.$j)((function(e){return{pokemonCalcDataFriendly:e.damageCalc.pokemonCalcDataFriendly,pokemonCalcDataEnemy:e.damageCalc.pokemonCalcDataEnemy}}),(function(e){return{showTypingChart:function(){return e(_.Rn())}}}))((function(e){var t,a,i=(t=(0,s.useState)({matchupChart:!1,damageCalculator:!1,exportCurrentTeam:!1,importTeam:!1}),a=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(t,a)||function(e,t){if(e){if("string"==typeof e)return yf(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?yf(e,t):void 0}}(t,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return i[0],i[1],s.createElement("div",{className:"damage-calculator-container"},s.createElement(tf,{key:e.pokemonCalcDataFriendly.name+"f",team:"friendly",className:"calc-pokemon-display-container calc-pokemon-display-container-friendly"}),s.createElement("div",{className:"calc-results friendly-calc-results"},s.createElement(mf,{team:"friendly"})),s.createElement("div",{className:"calc-results enemy-calc-results"},s.createElement(mf,{team:"enemy"})),s.createElement(tf,{key:e.pokemonCalcDataEnemy.name+"e",team:"enemy",className:"calc-pokemon-display-container calc-pokemon-display-container-enemy"}))})),bf=function(e){var t=1===e.pokemon.weakness[e.column]?" ":e.pokemon.weakness[e.column],a="weakness-"+e.pokemon.weakness[e.column].toString().replace(".","");return s.createElement("div",{className:"box "+a},s.createElement("h3",null,t))};var Pf=["bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water"];const wf=function(e){console.log("inside Row, ",e);var t=[],a=[],i="row-outter";return e.legend?(t=Pf.map((function(e){return s.createElement("div",{className:"chart-legends",id:e},e)})),i="row-outter-legends"):function(i){(a=[s.createElement(ue,{key:e.pokemon.pokemon,className:"chart-sprite",pokemon:e.pokemon.pokemon})]).push();for(var r=0;r<Pf.length;r++)t.push(s.createElement(bf,{key:r,pokemon:i,column:Pf[r]}))}(e.pokemon),s.createElement("div",{className:i},s.createElement("div",{className:"chart-sprite-container"},a),s.createElement("div",{className:"row-inner"},t))},Sf=(0,H.$j)((function(e){return{yourTeam:e.pokemon.yourTeam,enemyTeam:e.pokemon.enemyTeam}}),null)((function(e){var t=[],a=function(){t=[];for(var a=0;a<e.yourTeam.size;a++){var i=e.yourTeam["mon"+(a+1)];if(console.log("inside populateChart ",i),!i)break;t.push(s.createElement(wf,{id:"row"+a,pokemon:i}))}};return(0,s.useEffect)((function(){console.log("inside matchup chart useEffect"),a(),console.log(t)}),[e.yourTeam]),a(),console.log(t),s.createElement("div",{className:"matchup-chart",id:"matchup-chart"},s.createElement(wf,{legend:!0}),t)}));function kf(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Tf(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?Tf(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Tf(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}var xf=o(5226);function Mf(e){var t,s,a,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:maxStat,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:minStat;return(t=e>i?100:e<r?0:e/(i/100))<50?(s=255,a=Math.round(5.1*t)):(a=255,s=Math.round(510-5.1*t)),"#"+("000000"+(65536*s+256*a+0).toString(16)).slice(-6)}var Df=function(e){var t=[];return["hp","attack","defense","specialA","specialD","speed"].forEach((function(s){t.push(e[s])})),t};const Af=(0,H.$j)((function(e){return{yourTeam:e.pokemon.yourTeam,enemyTeam:e.pokemon.enemyTeam}}),(function(e){return{showTypingChart:function(){return e(_.Rn())}}}))((function(e){var t=kf((0,s.useState)([]),2),a=t[0],i=t[1],r=kf((0,s.useState)([]),2),o=r[0],n=r[1],l=kf((0,s.useState)([]),2),f=l[0],c=l[1],u=function(e,t){var a=[],i=[31,31,31,31,31,31];if("friendly-speed-tier-row"!==t){for(var r=1;r<=6;r++)if(e["mon"+r]){var o=Df(e["mon"+r].stats),l=xf.calAllStats(i,o,[0,0,0,0,0,0],100,"Brave"),f=xf.calAllStats(i,o,[0,0,0,0,0,252],100,"Jolly"),u="".concat(l[5]," - ").concat(f[5]);a.push(s.createElement("div",{className:"speed-tier-row "+t},s.createElement("h4",null,u),s.createElement(ue,{key:e["mon"+r].pokemon,pokemon:e["mon"+r].pokemon,className:"speed-tier-range-sprite"})))}c(a)}else{for(var p=1;p<=6;p++)if(e["mon"+p]){console.log(p,e["mon"+p]);var g=Df(e["mon"+p].stats),d=xf.calAllStats(i,g,[0,0,0,0,0,0],100,"Brave"),h=xf.calAllStats(i,g,[0,0,0,0,0,252],100,"Jolly"),m="".concat(d[5]," - ").concat(h[5]);a.push(s.createElement("div",{className:"speed-tier-row "+t},s.createElement(ue,{key:e["mon"+p].pokemon,pokemon:e["mon"+p].pokemon,className:"speed-tier-range-sprite"}),s.createElement("h4",null,m)))}n(a)}};return(0,s.useEffect)((function(){var t,a,r;a=[],(t=[],(r=function(e,t,s){for(var a=1;a<=6;a++)e["mon"+a]&&s.push({name:e["mon"+a].pokemon,baseSpeed:e["mon"+a].stats.speed,teamStr:t})})(e.yourTeam,"yourTeam",t),r(e.enemyTeam,"enemyTeam",t),t.sort((function(e,t){var s=e.baseSpeed,a=t.baseSpeed;return s>a?-1:a<s?1:0})),t).forEach((function(e){a.push(s.createElement("div",{key:Math.random(),className:"speed-order-member"},s.createElement(ue,{key:e.name,pokemon:e.name,className:"speed-tier-order-sprite speed-order-member-".concat(e.teamStr)}),s.createElement("h4",{style:{color:Mf(e.baseSpeed,110,20)}},e.baseSpeed)))})),i(a),u(e.yourTeam,"friendly-speed-tier-row"),u(e.enemyTeam,"enemy-speed-tier-row")}),[e.yourTeam,e.enemyTeam]),s.createElement("div",{className:"speed-tier-container"},s.createElement("div",{className:"speed-order-container"},s.createElement("h3",{className:"speed-tier-order-label"},"base speed : "),a),s.createElement("div",{className:"team-speed-container"},s.createElement("div",{className:"friendly-speed-tier"},o),s.createElement("div",{className:"enemy-speed-tier"},f)))}));function Bf(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Of(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?Of(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Of(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}o(5226),tl.Z.allMovesJSON;var Cf=tl.Z.specialMovesObj;function Ff(e){return e.replace(/\b\w/g,(function(e){return e.toUpperCase()})).replace(/-/g," ")}const Nf=(0,H.$j)((function(e){return{yourTeam:e.pokemon.yourTeam,enemyTeam:e.pokemon.enemyTeam}}),(function(e){return{showTypingChart:function(){return e(_.Rn())}}}))((function(e){var t=Bf((0,s.useState)([]),2),a=t[0],i=t[1],r=Bf((0,s.useState)([]),2),o=r[0],n=r[1],l=function(e,t){console.log("inside populateSpecialMoves");var a=[],r=Object.keys(Cf);console.log(r);for(var o=0;o<r.length;o++){for(var l=r[o],f=[],c=1;c<=6;c++)if(e["mon"+c]){var u=e["mon"+c];for(var p in u.movePool)console.log(l,u.pokemon,Ff(p),Cf[l][Ff(p)]),Cf[l][Ff(p)]&&f.push(s.createElement("div",{className:"special-move-row"},s.createElement(ue,{pokemon:u.pokemon,className:"special-moves-sprite"}),s.createElement("h4",null,Ff(p))))}a.push(s.createElement("div",{className:"special-move-container"},s.createElement("h4",{className:"special-category-label"},l),s.createElement("div",{className:"special-move-inner"},f),s.createElement("h5",{className:"special-move-category-counter counter-"+t},f.length)))}"friendly"===t?i(a):n(a)};return(0,s.useEffect)((function(){l(e.yourTeam,"friendly"),l(e.enemyTeam,"enemy")}),[e.yourTeam,e.enemyTeam]),s.createElement("div",{className:"special-moves-container"},s.createElement("div",{className:"friendly-special-moves-container"},a),s.createElement("div",{className:"enemy-special-moves-container"},o))}));function Ef(e){return Ef="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ef(e)}function Gf(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function If(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==Ef(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==Ef(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===Ef(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function zf(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Rf(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?Rf(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Rf(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}function Hf(e,t,s,a){var i=function(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?Gf(Object(s),!0).forEach((function(t){If(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):Gf(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}({},e);for(var r in i)i[r]=r===t?s:a;return i}const _f=(0,H.$j)((function(e){return{teamStatus:e.pokemon.teamStatus,showTypingChart:e.pokemon.showTypingChart,pokemonCalcDataFriendly:e.damageCalc.pokemonCalcDataFriendly,pokemonCalcDataEnemy:e.damageCalc.pokemonCalcDataEnemy}}),(function(e){return{showTypingChart:function(){return e(_.Rn())}}}))((function(e){var t=zf((0,s.useState)({matchupChart:!1,damageCalculator:!1,speedTier:!1,specialMoves:!1,exportCurrentTeam:!1,importTeam:!1}),2),a=t[0],i=t[1],r=zf((0,s.useState)({matchupChart:"menu-button",damageCalculator:"menu-button",speedTier:"menu-button",specialMoves:"menu-button",exportCurrentTeam:"menu-button",importTeam:"menu-button"}),2),o=r[0],n=r[1],l=function(e){console.log("inside handleclick",e),"show-matchup-chart-button"===e?(i(Hf(a,"matchupChart",!0,!1)),n(Hf(o,"matchupChart","menu-button menu-button-active","menu-button"))):"show-damage-calculator-button"===e?(i(Hf(a,"damageCalculator",!0,!1)),n(Hf(o,"damageCalculator","menu-button menu-button-active","menu-button"))):"show-speed-tier-button"===e?(i(Hf(a,"speedTier",!0,!1)),n(Hf(o,"speedTier","menu-button menu-button-active","menu-button"))):"show-special-moves-button"===e&&(i(Hf(a,"specialMoves",!0,!1)),n(Hf(o,"specialMoves","menu-button menu-button-active","menu-button")))};return(0,s.useEffect)((function(){(e.pokemonCalcDataFriendly.name||e.pokemonCalcDataEnemy.name)&&l("show-damage-calculator-button")}),[e.pokemonCalcDataFriendly.name,e.pokemonCalcDataEnemy.name]),s.createElement("div",{className:"analysis-menu-and-content-container"},s.createElement("div",{className:"analysis-menu"},s.createElement("button",{className:o.matchupChart,id:"show-matchup-chart-button",onClick:function(e){l(e.target.id)}},"matchup chart"),s.createElement("button",{className:o.damageCalculator,id:"show-damage-calculator-button",onClick:function(e){l(e.target.id)}},"damage calculator"),s.createElement("button",{className:o.speedTier,id:"show-speed-tier-button",onClick:function(e){l(e.target.id)}},"speed tiers"),s.createElement("button",{className:o.specialMoves,id:"show-special-moves-button",onClick:function(e){l(e.target.id)}},"special moves"),s.createElement("button",{className:o.exportCurrentTeam,id:"export-current-team-button",onClick:function(e){l(e.target.id)}},"export current team"),s.createElement("button",{className:o.importTeam,id:"import-team-button",onClick:function(e){l(e.target.id)}},"import team")),s.createElement("div",{className:"analysis-content-container"},a.matchupChart?s.createElement(Sf,null):null,a.damageCalculator?s.createElement(vf,null):null,a.speedTier?s.createElement(Af,null):null,a.specialMoves?s.createElement(Nf,null):null,(a.exportCurrentTeam,null),(a.matchuimportTeampChart,null)))}));var Lf=o(3379),Wf=o.n(Lf),Zf=o(7795),Uf=o.n(Zf),jf=o(569),Kf=o.n(jf),Vf=o(3565),qf=o.n(Vf),$f=o(9216),Yf=o.n($f),Jf=o(4589),Qf=o.n(Jf),Xf=o(3778),ec={};function tc(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,a=new Array(t);s<t;s++)a[s]=e[s];return a}ec.styleTagTransform=Qf(),ec.setAttributes=qf(),ec.insert=Kf().bind(null,"head"),ec.domAPI=Uf(),ec.insertStyleElement=Yf(),Wf()(Xf.Z,ec),Xf.Z&&Xf.Z.locals&&Xf.Z.locals;const sc=(0,H.$j)((function(e){return{savedTeams:e.userFunctions.savedTeams,username:e.userFunctions.username}}),(function(e){return{refreshAndDecodeSavedTeams:function(t){return e(_.U8(t))}}}))((function(e){var t,a,i=(t=(0,s.useState)([]),a=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var s=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=s){var a,i,r,o,n=[],l=!0,f=!1;try{if(r=(s=s.call(e)).next,0===t){if(Object(s)!==s)return;l=!1}else for(;!(l=(a=r.call(s)).done)&&(n.push(a.value),n.length!==t);l=!0);}catch(e){f=!0,i=e}finally{try{if(!l&&null!=s.return&&(o=s.return(),Object(o)!==o))return}finally{if(f)throw i}}return n}}(t,a)||function(e,t){if(e){if("string"==typeof e)return tc(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?tc(e,t):void 0}}(t,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=i[0],o=i[1];(0,s.useEffect)((function(){console.log("inside AllSavedTeams useEffect"),n(),console.log(r),e.username&&e.savedTeams.team_1&&l(e.savedTeams)}),[e.savedTeams]);var n=function(){if(console.log("inside populateSavedTeams",e.savedTeams),e.savedTeams){for(var t=JSON.parse(JSON.stringify(e.savedTeams)),a=[],i=1;i<=Object.keys(t).length;i++){var r="untitled "+i,n=null,l="team_"+i;if(t[l]){r=t[l].name,(n=t[l]).key=l;for(var f=1;f<=6;f++){var c="mon"+f;n[c]&&n[c].item.url&&(n[c].item.url=decodeURIComponent(n[c].item.url))}}if(console.log("inside populateSavedTeams for loop: ",e.savedTeams,l,e.savedTeams[l]),a.push(s.createElement(gl,{key:i+l,savedTeamName:r,savedTeam:n,savedTeamKey:l})),i===Object.keys(e.savedTeams).length)break}o(a)}},l=function(t){var s=JSON.parse(JSON.stringify(t));if(s.team_1.mon1)for(var a=1;a<=Object.keys(s).length;a++)for(var i="team_"+a,r=1;r<=6;r++){var o="mon"+r;if(!s[i][o])break;if(s[i][o].activeAbility.description=s[i][o].activeAbility.description.replace(/[\/\(\)\']/g,"&apos;"),s[i][o].item.item&&(s[i][o].item.url=encodeURIComponent(s[i][o].item.url)),s[i][o].activeMove.moveObj.name&&(s[i][o].activeMove.moveObj.typeImageUrl=encodeURIComponent(s[i][o].activeMove.moveObj.typeImageUrl),s[i][o].activeMove.moveObj.categoryUrl=encodeURIComponent(s[i][o].activeMove.moveObj.categoryUrl)),s[i][o].moves.move_1.name||s[i][o].moves.move_2.name||s[i][o].moves.move_3.name||s[i][o].moves.move_4.name)for(var n=1;n<=4;n++)s[i][o].moves["move_"+n].name&&(s[i][o].moves["move_"+n].typeImageUrl=encodeURIComponent(s[i][o].moves["move_"+n].typeImageUrl),s[i][o].moves["move_"+n].categoryImageUrl=encodeURIComponent(s[i][o].moves["move_"+n].categoryImageUrl))}console.log("about to send this thing: ",{username:e.username,team:s}),fetch("/api/saveUserTeams",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json, text/plain"},body:JSON.stringify({username:e.username,team:s})}).then((function(e){console.log(e),console.log("saved teams to database!")}))};return s.createElement("div",{className:"all-saved-teams-container"},s.createElement("h4",null,"Saved Teams"),s.createElement("div",{className:"all-saved-teams"},r))}));function ac(e){return ac="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ac(e)}function ic(e,t){for(var s=0;s<t.length;s++){var a=t[s];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,fc(a.key),a)}}function rc(e,t){return rc=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},rc(e,t)}function oc(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function nc(e){return nc=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},nc(e)}function lc(e,t,s){return(t=fc(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function fc(e){var t=function(e,t){if("object"!==ac(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==ac(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===ac(t)?t:String(t)}var cc=new Audio("/static/theme.mp3"),uc=new Audio("/static/button-sound-effect.mp3");cc.addEventListener("loadeddata",(function(){cc.play()})),window.addEventListener("click",(function(){pc(),cc.play()}));var pc=function(){var e=function(){uc.play()};document.querySelectorAll("button").forEach((function(t){t.addEventListener("click",e)}))};function gc(e){return e.charAt(0).toUpperCase()+e.slice(1)}console.log("in APP");for(var dc={name:"charizard",activeAbility:"blaze",abilityOn:!0,item:"Choice Band",nature:"serious",status:"brn"},hc={name:"bronzong",activeAbility:"Bulletproof",abilityOn:!0,item:"choice specs",nature:"serious",status:"healthy"},mc=9;mc>0;)try{var yc=gc(dc.name),vc=gc(hc.name),bc=(0,sf.calculate)(mc,new sf.Pokemon(mc,yc,{ability:dc.activeAbility,abilityOn:!0,item:dc.item,nature:dc.nature,evs:dc.evs,status:dc.status}),new sf.Pokemon(mc,vc,{ability:hc.activeAbility,abilityOn:!0,item:hc.item,nature:hc.nature,evs:hc.evs,status:hc.status}),new sf.Move(mc,"earthquake"));console.log("inside calculateDamage",mc,bc);var Pc=bc.damage[0],wc=bc.damage[bc.damage.length-1];Pc||console.log(0,"damage");var Sc=bc.defender.stats.hp,kc=(Pc/Sc*100).toFixed(1)+"%",Tc=(wc/Sc*100).toFixed(1)+"%";console.log(Pc,wc,kc,Tc);break}catch(e){console.log(e),mc--}var xc=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&rc(e,t)}(n,e);var t,a,i,r,o=(i=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=nc(i);if(r){var s=nc(this).constructor;e=Reflect.construct(t,arguments,s)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===ac(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return oc(e)}(this,e)});function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),lc(oc(t=o.call(this,e)),"componentWillMount",(function(){pc()})),lc(oc(t),"componentDidUpdate",(function(){pc()})),lc(oc(t),"changeAppVolume",(function(){console.log("in change volume");var e=document.getElementById("volume-slider").value;console.log("new app volume:",e),t.setState({volume:e}),cc.volume=e,uc.volume=e})),t.state={volume:.5},t}return t=n,(a=[{key:"addSliderOnChange",value:function(){var e=document.getElementById("volume-slider");console.log("inside addSliderOnChange, ",e,this.changeAppVolume),e.addEventListener("change",(function(){console.log("Slider value changed!"),this.changeAppVolume()}))}},{key:"render",value:function(){var e=this;return s.createElement("div",{className:"app-container"},s.createElement($,null),s.createElement("div",{className:this.props.mainDivClassName,id:"main-div"},s.createElement("div",{className:"title-container"},s.createElement("h1",null,"electabuzzed.gg"),s.createElement("img",{src:"https://cdn.discordapp.com/emojis/933421274091360346.webp?size=96&quality=lossless",alt:""}),s.createElement("h4",null,"volume: "),s.createElement("input",{type:"range",min:"0",max:"1",step:"0.05",defaultValue:this.state.volume,id:"volume-slider",onChange:function(){e.changeAppVolume()}})),this.props.currentPokemon.isActive?null:s.createElement("div",{className:"explore-tip"},s.createElement("h4",null,"start exploring/team building by looking up a pokemon!")),s.createElement("img",{className:"electabuzzes",src:"https://www.models-resource.com/resources/big_icons/24/23144.png?updated=1510574730",alt:""}),s.createElement(Y,null),s.createElement("div",{className:"main-row-container"},s.createElement(sc,null),s.createElement("div",{className:"current-pokemon-display-container"},this.props.currentPokemon.isActive?s.createElement(Al,null):null)),s.createElement("div",{className:"teams"},this.props.teamStatus?[s.createElement(Gl,{key:"green",team:"green"}),s.createElement(Il,null),s.createElement(Gl,{key:"red",team:"red"})]:null),this.props.teamStatus||this.props.analysisMenuStatus?s.createElement(_f,null):null,s.createElement("div",{className:"footer-container"},s.createElement("h4",null,"electabuzzed.gg"),s.createElement("h5",null,"developed by zihao li, your buddy. source code at: "),s.createElement("a",{href:"https://github.com/zihaoli518/Pokemon-Team-Builder"},"https://github.com/zihaoli518/Pokemon-Team-Builder"))))}}])&&ic(t.prototype,a),Object.defineProperty(t,"prototype",{writable:!1}),n}(s.Component);const Mc=(0,H.$j)((function(e){return{currentPokemon:e.pokemon.currentPokemon,teamStatus:e.pokemon.teamStatus,analysisMenuStatus:e.damageCalc.analysisMenuStatus,yourTeam:e.pokemon.yourTeam,enemyTeam:e.pokemon.enemyTeam,showTypingChart:e.pokemon.showTypingChart,mainDivClassName:e.userFunctions.mainDivClassName}}),null)(xc);o.p;var Dc=o(4890),Ac=o(8500),Bc=o(2909);const Oc={reOrderTeam:function(e){for(var t=[],s=1;s<=6;s++){var a="mon"+s;e[a]&&t.push(e[a])}for(var i={size:e.size,key:e.key,name:e.name,mon1:null,mon2:null,mon3:null,mon4:null,mon5:null,mon6:null},r=0;r<t.length;r++)i["mon"+(r+1).toString()]=t[r];return i},reOrderSavedTeams:function(e){console.log("insdie helper ");var t=[];console.log(Object.keys(e).length);for(var s=1;s<=Object.keys(e).length+1;s++){var a="team_"+s;console.log(a),e.hasOwnProperty(a)&&e[a]?t.push(e[a]):e.hasOwnProperty(a)&&null===e[a]&&t.push(null)}console.log(t);for(var i={},r=0;r<t.length;r++){var o="team_"+(r+1).toString();i[o]=t[r],i[o].key=o}return console.log(i),i},statObjToArray:function(e){var t=[];return["hp","attack","defense","specialA","specialD","speed"].forEach((function(s){t.push(e[s])})),console.log("END OF STAT->OBJ ",t),t}};function Cc(e){return Cc="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Cc(e)}function Fc(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function Nc(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?Fc(Object(s),!0).forEach((function(t){Ec(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):Fc(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function Ec(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==Cc(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==Cc(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===Cc(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var Gc=o(5226),Ic={currentPokemon:{pokemon:null,pokedexId:0,level:100,types:[],abilities:[{ability:{name:"",url:"",description:""},is_hidden:!1,slot:0}],activeAbility:{name:null,description:null},item:{item:"",description:"",url:""},moves:{move_1:{name:null,type:""},move_2:{name:null,type:""},move_3:{name:null,type:""},move_4:{name:null,type:""}},activeMove:{moveId:"",moveObj:{name:null}},evs:{obj:{hp:0,attack:0,defense:0,specialA:0,specialD:0,speed:0},array:[0,0,0,0,0,0]},ivs:{obj:{hp:31,attack:31,defense:31,specialA:31,specialD:31,speed:31},array:[0,0,0,0,0,0]},remainingEv:508,nature:"serious",calculatedStats:[0,0,0,0,0,0],movePool:{},stats:{},weakness:{},isActive:!1,slot:{team:null,mon:null}},yourTeam:{size:0,name:"your team",key:"team_1",mon1:null,mon2:null,mon3:null,mon4:null,mon5:null,mon6:null},enemyTeam:{size:0,key:"team_1_e",name:"enemy team",mon1:null,mon2:null,mon3:null,mon4:null,mon5:null,mon6:null},previousTeamKeyF:"team_1",previousTeamKeyE:"team_1",teamStatus:!1,showChartOption:!1,showTypingChart:!1};function zc(e){return zc="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zc(e)}function Rc(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function Hc(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?Rc(Object(s),!0).forEach((function(t){_c(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):Rc(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function _c(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==zc(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==zc(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===zc(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var Lc={mainDivClassName:"main",isLoggedIn:!1,loginLoading:!1,username:null,savedTeams:{team_1:null}};function Wc(e){return Wc="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Wc(e)}function Zc(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function Uc(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?Zc(Object(s),!0).forEach((function(t){jc(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):Zc(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function jc(e,t,s){return(t=function(e){var t=function(e,t){if("object"!==Wc(e)||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,"string");if("object"!==Wc(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===Wc(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var Kc=o(5226),Vc={pokemonCalcDataFriendly:{name:null,types:[],nature:"Serious",abilities:[{ability:{name:"",url:"",description:""},is_hidden:!1,slot:0}],activeAbility:"",item:"(none)",status:"Healthy",stats:{hp:0,atk:0,def:0,spa:0,spd:0,spe:0},calculatedStats:[0,0,0,0,0,0],evs:{hp:0,atk:0,def:0,spa:0,spd:0,spe:0},boosts:{hp:0,atk:0,def:0,spa:0,spd:0,spe:0},moves:{move_1:{name:null,type:null,basepower:null,categoryUrl:""},move_2:{name:null,type:null,basepower:null,categoryUrl:""},move_3:{name:null,type:null,basepower:null,categoryUrl:""},move_4:{name:null,type:null,basepower:null,categoryUrl:""}},categoryUrl:""},pokemonCalcDataEnemy:{name:null,types:[],nature:"Serious",abilities:[{ability:{name:"",url:"",description:""},is_hidden:!1,slot:0}],activeAbility:"",item:"(none)",status:"Healthy",stats:{hp:0,atk:0,def:0,spa:0,spd:0,spe:0},calculatedStats:[0,0,0,0,0,0],evs:{hp:0,atk:0,def:0,spa:0,spd:0,spe:0},boosts:{hp:0,atk:0,def:0,spa:0,spd:0,spe:0},moves:{move_1:{name:null,type:null,basepower:null,categoryUrl:""},move_2:{name:null,type:null,basepower:null,categoryUrl:""},move_3:{name:null,type:null,basepower:null,categoryUrl:""},move_4:{name:null,type:null,basepower:null,categoryUrl:""}}},analysisMenuStatus:!1};function qc(e){return e.replace(/\b\w/g,(function(e){return e.toUpperCase()})).replace(/-/g," ")}var $c=function(e){console.log("in statObjToArray",e);var t=[];return["hp","atk","def","spa","spd","spe"].forEach((function(s){console.log(s,e[s]),t.push(e[s])})),console.log("END OF STAT->OBJ ",t),t};const Yc=(0,Dc.UY)({pokemon:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ic,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Bc.T5:var s=Nc({},e.currentPokemon);s.pokemon=t.payload.pokemon;var a=t.payload.pokemonData;s.isActive=!0,s.types=[];for(var i=0;i<a.types.length;i++)s.types.push(a.types[i].type.name);s.pokedexId=a.id,s.stats={},s.stats.hp=a.stats[0].base_stat,s.stats.attack=a.stats[1].base_stat,s.stats.defense=a.stats[2].base_stat,s.stats.specialA=a.stats[3].base_stat,s.stats.specialD=a.stats[4].base_stat,s.stats.speed=a.stats[5].base_stat,1===s.types.length?s.weakness=(0,Mn.M3)(s.types[0]):s.weakness=(0,Mn.M3)(s.types[0],s.types[1]),s.abilities=a.abilities;for(var r=0;r<s.abilities.length;r++)s.abilities[r].ability.url=encodeURIComponent(s.abilities[r].ability.url);for(var o={},n=0;n<a.moves.length;n++)o[a.moves[n].move.name.replace("-"," ")]=!0;"corviknight"===s.pokemon&&(o.defog=!0),s.movePool=o,s.evolution_chain=a.evolution_chain,s.slot={team:null,mon:null},s.item={},s.moves={move_1:{name:null,type:""},move_2:{name:null,type:""},move_3:{name:null,type:""},move_4:{name:null,type:""}},s.evs={obj:{hp:0,attack:0,defense:0,specialA:0,specialD:0,Speed:0},array:[0,0,0,0,0,0]},s.ivs={obj:{hp:31,attack:31,defense:31,specialA:31,specialD:31,Speed:31},array:[31,31,31,31,31,31]},s.nature="serious",s.remainingEv=508;var l=Oc.statObjToArray(s.stats),f=Gc.getNatureValue(s.nature);return s.calculatedStats=Gc.calAllStats(s.ivs.array,l,s.evs.array,s.level,f),Nc(Nc({},e),{},{currentPokemon:s});case Bc._q:var c=e.currentPokemon;return c.gif=t.payload,Nc(Nc({},e),{},{currentPokemon:c});case Bc.Dl:console.log("inside ADD_POKEMON_TO_YOUR_TEAM",t.payload);var u=JSON.parse(JSON.stringify(e.yourTeam)),p=JSON.parse(JSON.stringify(e.currentPokemon));if(u.size>=6)return;return u.size++,u["mon"+u.size]=Nc({},p),u["mon"+u.size].slot.mon="mon"+u.size,Nc(Nc({},e),{},{yourTeam:u,teamStatus:!0});case Bc.ve:var g=Nc({},e.enemyTeam),d=t.payload;if(g.size>=6)return;g.size++;for(var h=1;h<=6;h++){var m="mon"+h.toString();if(!g[m]){g[m]=d;break}}return Nc(Nc({},e),{},{enemyTeam:g,teamStatus:!0});case Bc.fb:console.log("inside SELECT_TEAM_MEMBER",t.payload);var y=Nc({},t.payload.pokemonData);return y.slot.team=t.payload.team,y.slot.mon=t.payload.mon,Nc(Nc({},e),{},{currentPokemon:y});case Bc.g0:var v=t.payload.team,b=t.payload.mon,P=Nc({},e[v]);console.log("inside REMOVE_TEAM_MEMBER, ",P),P[b]=null,P.size--;var w=Oc.reOrderTeam(P),S=Nc({},e);return S[v]=w,w.name="untitled",S;case Bc.JF:var k=!e.showTypingChart;return Nc(Nc({},e),{},{showTypingChart:k});case Bc.Hr:console.log("inside SWITCH_TEAMS",t.payload);var T=Nc(Nc({},t.payload.enemeyTeam),{},{key:e.yourTeam.key});return Nc(Nc({},e),{},{yourTeam:T,enemyTeam:t.payload.yourTeam,previousTeamKeyF:e.previousTeamKeyE,previousTeamKeyE:e.previousTeamKeyF});case Bc.$4:var x=e.previousTeamKeyE;return Nc(Nc({},e),{},{yourTeam:t.payload.team,teamStatus:!0,previousTeamKeyE:x});case Bc.No:console.log("inside MAKE_SAVED_TEAM_ACTIVE",t.payload);var M=t.payload.team;return M.key=t.payload.key,Nc(Nc({},e),{},{yourTeam:M,teamStatus:!0});case Bc.Th:console.log("inside SELECT_ABILITY",t.payload);var D=Nc({},e.currentPokemon);D.activeAbility=t.payload.ability;var A=D.slot.mon,B=Nc({},e.yourTeam);return null!==D.slot.mon&&(B[A]=D),console.log(D.slot,A),console.log(B),Nc(Nc({},e),{},{currentPokemon:D,yourTeam:B});case Bc.o1:console.log("inside SAVE_ITEM_TO_MON"),console.log(t.payload);var O=Nc({},e.currentPokemon);return O.item.item=t.payload.item,O.item.description=t.payload.description,O.item.url=t.payload.url,Nc(Nc({},e),{},{currentPokemon:O});case Bc.Qo:console.log("inside UPDATE_ACTIVE_MOVE",t.payload);var C=Nc({},e.currentPokemon),F=t.payload.moveObj;return F||(F={name:null}),C.activeMove={moveId:t.payload.moveId,moveObj:F},Nc(Nc({},e),{},{currentPokemon:C});case Bc.GU:console.log("inside SELECT_MOVE_FROM_LIST",t.payload);var N=Nc({},e.currentPokemon);return N.moves[t.payload.moveId]=t.payload.moveObj,N.activeMove={moveId:t.payload.moveId,moveObj:t.payload.moveObj},console.log(N),Nc(Nc({},e),{},{currentPokemon:N});case Bc.ND:return console.log("inside UPDATE_PREVIOUS_TEAM_KEY",e.yourTeam.key),Nc(Nc({},e),{},{previousTeamKeyE:e.yourTeam.key});case Bc.G6:var E={size:0,key:e.yourTeam.key,mon1:null,mon2:null,mon3:null,mon4:null,mon5:null,mon6:null};return"yourTeam"===t.payload?(E.name="your team",Nc(Nc({},e),{},{yourTeam:E})):(E.name="enemy team",Nc(Nc({},e),{},{enemyTeam:E}));case Bc.TV:return console.log("inside UPDATE_NATURE",t.payload),Nc(Nc({},e),{},{currentPokemon:Nc(Nc({},e.currentPokemon),{},{nature:t.payload})});case Bc.oE:console.log("inside UPDATE_CALCULATED_STATS",t.payload);var G=Nc(Nc({},e.currentPokemon),{},{evs:{array:t.payload.evs},ivs:{array:t.payload.ivs},remainingEv:t.payload.remainingEv,calculatedStats:t.payload.calcs}),I=Nc({},e.yourTeam);return G.slot.mon&&(I[G.slot.mon]=G),Nc(Nc({},e),{},{currentPokemon:G,yourTeam:I});case Bc.s:return Nc(Nc({},e),{},{yourTeam:Nc(Nc({},e.yourTeam),{},{key:t.payload})});default:return e}},userFunctions:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Lc,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Bc.gC:var s;return console.log("inside toggle_main_div_state reducer ",t),s="main"===t.payload.string?"main inactive":"main",Hc(Hc({},e),{},{mainDivClassName:s});case Bc.Bk:console.log("inside CHANGE_USER_STATE ",t);var a={team_1:null};return t.payload.responseObj&&(a=t.payload.responseObj),console.log(a),Hc(Hc({},e),{},{isLoggedIn:!0,username:t.payload.username,savedTeams:a});case Bc.uS:console.log("inside SAVE_CURRENT_TEAM ",t.payload);var i=Hc({},e.savedTeams);if(console.log("saved teams before: ",i),i.team_1&&console.log(i.team_1.name),null===e.savedTeams.team_1)return i.team_1=t.payload.team.team,i.team_1.name=t.payload.team.name,i.team_1.key="team_1",Hc(Hc({},e),{},{savedTeams:i});for(var r=1;r<=Object.keys(e.savedTeams).length+1;r++){var o="team_"+r;if(i[o]&&(i[o].key=o),i.hasOwnProperty(o)||(i[o]=t.payload.team.team,i[o].key=o),null===e.savedTeams.team_1)break}return Hc(Hc({},e),{},{savedTeams:i});case Bc.Xf:console.log("inside REMOVE_SAVED_TEAM ");var n=Hc({},e.savedTeams);return delete n[t.payload.key],console.log(n),n=Oc.reOrderSavedTeams(n),console.log(n),Hc(Hc({},e),{},{savedTeams:n});case Bc.LZ:console.log("inside UPDATE_SAVED_TEAM ",t.payload.team.key);var l=Hc({},e.savedTeams);return console.log(l),l[t.payload.team.key]=t.payload.team,console.log(l),Hc(Hc({},e),{},{savedTeams:l});case Bc.ae:console.log("inside TOGGLE_LOGIN_LOADING ");var f=!e.loginLoading;return Hc(Hc({},e),{},{loginLoading:f});case Bc.wl:return console.log("inside REFRESH_AND_DECODE_SAVED_TEAMS "),Hc(Hc({},e),{},{savedTeams:t.payload.savedTeams});default:return e}},damageCalc:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Vc,s=arguments.length>1?arguments[1]:void 0;switch(s.type){case Bc.eI:console.log("inside ADD_MON_TO_CALC ",s);for(var a=s.payload.pokemonObj,i={name:a.pokemon,types:a.types,nature:(e=a.nature,e.charAt(0).toUpperCase()+e.slice(1)),abilities:a.abilities,activeAbility:qc(a.activeAbility.name),item:a.item.item?qc(a.item.item):"(none)",status:"Healthy",stats:{hp:a.stats.hp,atk:a.stats.attack,def:a.stats.defense,spa:a.stats.specialA,spd:a.stats.specialD,spe:a.stats.speed},calculatedStats:a.calculatedStats,evs:{hp:a.evs.array[0],atk:a.evs.array[1],def:a.evs.array[2],spa:a.evs.array[3],spd:a.evs.array[4],spe:a.evs.array[5]},boosts:jc({hp:0,atk:0,def:0,spa:0,spd:0},"spd",0),weakness:a.weakness,moves:{move_1:{name:null,type:null,basepower:null},move_2:{name:null,type:null,basepower:null},move_3:{name:null,type:null,basepower:null},move_4:{name:null,type:null,basepower:null}}},r=1;r<=4;r++){var o="move_"+r;a.moves[o].name&&(i.moves[o]={name:a.moves[o].name,type:a.moves[o].type,basepower:a.moves[o].basePower},i.moves[o].categoryUrl="https://play.pokemonshowdown.com/sprites/categories/".concat(a.moves[o].category,".png"))}return"friendly"===s.payload.team?Uc(Uc({},t),{},{pokemonCalcDataFriendly:i,analysisMenuStatus:!0}):Uc(Uc({},t),{},{pokemonCalcDataEnemy:i,analysisMenuStatus:!0});case Bc.WT:console.log("inside CHANGE_CALC_ATTRIBUTE ",s.payload);var n={};switch(n="friendly"===s.payload.team?Uc({},t.pokemonCalcDataFriendly):Uc({},t.pokemonCalcDataEnemy),s.payload.attributeName){case"nature":n.nature=s.payload.attribute;break;case"ability":n.activeAbility=s.payload.attribute;break;case"item":n.item=s.payload.attribute;break;case"status":n.status=s.payload.attribute;break;default:console.log("default case")}var l=Kc.calAllStats([31,31,31,31,31,31],$c(n.stats),$c(n.evs),100,n.nature);return n.calculatedStats=l,"friendly"===s.payload.team?Uc(Uc({},t),{},{pokemonCalcDataFriendly:n}):Uc(Uc({},t),{},{pokemonCalcDataEnemy:n});case Bc.uG:console.log("inside UPDATE_CALCULATED_STATS_CALC ",s.payload);var f={};f="friendly"===s.payload.team?Uc({},t.pokemonCalcDataFriendly):Uc({},t.pokemonCalcDataEnemy);var c=s.payload.evs;return f.evs={hp:c[0],atk:c[1],def:c[2],spa:c[3],spd:c[4],spe:c[5]},f.calculatedStats=s.payload.results,"friendly"===s.payload.team?Uc(Uc({},t),{},{pokemonCalcDataFriendly:f}):Uc(Uc({},t),{},{pokemonCalcDataEnemy:f});case Bc.U0:console.log("inside CHOOSE_MOVE_FOR_CALC ",s.payload);var u={};u="friendly"===s.payload.team?Uc({},t.pokemonCalcDataFriendly):Uc({},t.pokemonCalcDataEnemy);var p={};return p.name=s.payload.move,p.type=s.payload.type,p.basepower=s.payload.basepower,p.categoryUrl=s.payload.categoryUrl,u.moves[s.payload.moveId]=p,"friendly"===s.payload.team?Uc(Uc({},t),{},{pokemonCalcDataFriendly:u}):Uc(Uc({},t),{},{pokemonCalcDataEnemy:u});default:return t}}}),Jc=(0,Dc.MT)(Yc,(0,Ac.Uo)());(0,i.render)(s.createElement(H.zt,{store:Jc},s.createElement(R,null,s.createElement(Mc,null))),document.getElementById("app"))})()})();